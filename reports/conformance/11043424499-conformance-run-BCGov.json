{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8bf1d4c7-fe2b-46dc-8210-f3c76bbfe0de",
        "name": "Clear Cache",
        "item": [
          {
            "id": "72654c78-341f-4637-b39b-e3fc659164d2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15332f8f-277d-41d3-aa74-f9767691d5c2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f0634d4e-3952-431f-a32b-b2730c8e429b"
                }
              }
            ]
          },
          {
            "id": "3c82b5c3-50cc-487a-a077-c615e528def9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a643447b-63c6-4692-8dd3-3bda29248363",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1c6f9bf4-3db6-4269-b638-63d28b5cc5c6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "21fccf48-a433-43bc-975b-64160e85ebd8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "826725e2-6795-43e2-971d-c7b88517f567",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b62f1e7-0327-4697-9c0c-e13121630c9f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93ae2e40-e65b-4531-848c-141199efa762",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75eca8fe-f9ce-4107-956e-ab41a78f5a66"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9474352f-7cd0-4710-b60e-8c8edc528b15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8f2bf8a-5d9c-4b33-9e5a-5a337f3352b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d6e25db-655b-4ae2-a743-8961ab4fa30e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23a57aab-e8da-4c36-b2e1-21d7e130ba71"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ed8c889-9e9b-467c-990c-ffd3b320de64",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1289036c-35a9-40df-8ffe-6ad92db8a076"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99da686d-b658-4ac5-a0f8-2a12f23657af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ab5939b-ac0a-4661-a625-5127e8ef59f8"
            }
          }
        ]
      },
      {
        "id": "85b2c6d2-502b-4c17-8f97-c091e9d2e0cc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d78be57a-462a-48df-a4cf-3ddee587ab7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "680cdd51-82ff-42f9-be03-64c939dfdbde",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8abc1228-55c6-4a76-9944-80d8e362b23a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bcaec6-8a77-4a88-951f-b3b36e9dbcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e38d0cf-77aa-4ec4-9d29-fc173ec7c888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5e51ca-5c86-413d-93ae-8e084ec0627a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65654f8-ac8a-43d9-9f65-fa7195aa217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6383aa7a-1f4e-434c-bfa8-313c3924655e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9422fb41-26d8-4744-9563-a295ff423975",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43cbc12-eb8f-489b-8a3b-9b3afcb21e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f665314-9aff-480e-a0b9-1d4c822f9a07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e5c8673-5d4e-4f4d-a27a-64b2a1752c9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72bd82ce-0ec1-4a44-b978-4424b46f002f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711407ba-f708-46a6-972d-c65135931c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "345ca8b6-2f47-4d31-94d7-fb6970fa14ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8b36a2-e9e1-46be-9d92-6d0ba2dc437c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd18fccc-7a65-4875-a5a8-59855a515741"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6cea72ec-909b-4c13-b135-54429bd75159",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76a9e62f-ac80-48ad-8bb9-fbbe717c18ff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "260e3e4f-8fa0-43a6-b27a-bffff97f0a22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c731859f-6599-4ca9-966b-6a1efd69c53e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d418ab2-cb48-4b05-bb0d-3efff53ca50d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "228b3d3a-f899-413f-90b4-35adbdb3ee14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00f969e4-747d-493b-ab86-c544223ee63c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad183653-4d79-4c1b-850c-cec050873a59"
            }
          }
        ]
      },
      {
        "id": "a18f2585-ff22-41be-b168-c1b1a7dc39c7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0f147348-1c72-4c29-8d02-e472ef75a9ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b717aa7a-d71f-4c29-9b44-62c5ae863231",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e7ff2ce6-bfc7-425f-afff-853cd6e64202",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45b98c1-a3de-47e2-89d7-bd73cba72c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f6cacf-e8d2-4a95-9f1c-081353ed2c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec765e55-3454-4d4b-8853-9091d1f12d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4beaa935-a3fa-4d36-9b40-433596307f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f1a722-5239-4bac-a0ad-8e2b8050f892",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5662196-9f38-47e4-b878-cd5ba45361ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3d1d5f-5ecf-4dcd-bbec-db2c50dfae6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2b8b28-5ca2-47f1-bfe5-2c897768bf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c33a1ad-d31a-4c62-80b9-0b4e2e6ff19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103db66f-5151-426e-bd74-b2ff7829294d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffac6db-e02c-4dd1-9c13-7e7e0a374abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732872f5-3ee8-418e-b0a5-466c295aebb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f267d0f8-88c9-4233-867f-f4f14e863225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3941e673-4885-460b-8023-411b0c605442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebff84d-dfe6-4fc4-96d8-663b5fb1cf59",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8778229f-f6e2-482b-854c-7731fed9e550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a9e99e-c2ee-4e54-8813-51d701f54c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59061663-8194-4419-ac48-1434e304af2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f06e0ed4-3543-4202-b6db-602ce2b5ba46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60850c3-a1fd-4a31-ba10-0296e219e66d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348f7974-03a7-43f9-9945-de140013754b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb6252a-1f28-461d-914a-0ac6932374b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5a585b-b44f-41c0-aef7-cc55c7e850bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52a59067-6c05-4dda-9f80-f68baed0a793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb73c41-5ee6-4c61-afb9-df94f957915f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb09f26-ecc2-4527-99e0-8218ff0f6e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0ba295-d0c1-46b3-b09b-d47d93e39f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2005ed98-ac50-49b4-892f-f40fa81bedcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd7de51d-763f-4f86-bbf0-2f205be43650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4518f304-6b25-4c4a-a139-23b6fa28fb10",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b620d3a-5815-4dc4-93f5-35d965d4e103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5278d8f3-8dcb-4f5e-8c5e-b16d000e4076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efafa4a-32cd-4c41-bfbc-54b9596b953f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4776b866-ff35-4856-bbe2-8cc1eca9520d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381daa0a-c27c-4cf1-a371-67db45b676fa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fc7359-d059-4263-9b1b-858efb86dc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdfe48b-63cd-4aa7-a813-c6d05266abe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d131ae37-75fc-40bd-b8cb-a3b4c7274eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecdc2b44-2b98-43dd-b8b5-8071eb327a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eca24e-75e7-428e-addc-e81f4d1bd69a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaff806d-74a2-4e90-a9c7-6396a043e59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f653bde-8a63-4a88-915b-47b9f44605a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63f5d19-83f5-43d7-9304-357f6870e2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0893a92-2d99-43f5-b1b4-f6af9fefe5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc278285-82a6-421d-ae4d-229523aa718c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7065d9ec-22c0-4ac3-b06c-d20305d1cd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a75306d-05f5-4861-951b-074b76ee537f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73468af-48c5-4f8c-be33-7596509d502c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88a77d2e-d88b-479a-af9e-96a778eb7693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1aa167-22b4-4ecc-9b7a-734a531e679d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07e542d-48af-4b30-99c5-d74018e84d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5efa7d1-be70-4af0-b8e7-5486a1375e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6fe1d4-e6c2-4004-93a9-fcc077dbc495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29cd3428-8416-4e15-8cd7-a842c4a58cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176b118a-03e5-4055-b201-17915468617f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad6bfea-4b7a-4fdb-91f2-c4b1861c99dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8841c9-b9cf-4dcf-8968-f1c349e518ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe698a32-d8a0-46fc-a7d7-a8d8256db890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9249a36-e4db-4727-b374-a7b6af4cb0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd5ab6b-6730-40a6-9e13-d0d4fe83d505",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3b5d86-005e-4cd5-a121-031064771f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6aa2d1f-bf5a-4fc8-8399-a3e9f993c57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a7dca6-fec0-4b35-9c2c-a72a3197ac2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f536ab4-b1a8-41d3-acb8-bf2bb6b50a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9791896a-9a36-4540-907e-1a7764d0ed91",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b329743f-2ab2-427b-83af-55907ccb7643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951e621e-741c-41fe-be9a-07f24926722d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163f6a9c-258a-47bd-94d2-b97c5c5789a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "712947bc-b026-4a26-9a09-df41127c6c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72574253-0892-4368-94a4-c7c41d0a7165",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f338d719-c31b-49da-9a6a-bfdaae0cbb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e87b9b-c6db-4974-b428-08f6537e67e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e73d8f-952f-439d-a9aa-05ceb31d55a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb3f57e2-bc0e-47d9-8a61-474616477bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769f08f8-aa12-4cea-af2e-d96d00ce86c3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cad7c2-275f-48ea-b4f8-ba70ad245605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0422645-41eb-4c31-8122-d1da9a6fee27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82f0a51-693b-49f9-b587-466789a3d323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c662f0f8-15fb-4892-aee3-1188d9f76ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be2a0b6-ac62-4b4f-94a2-3cf5c2eaace4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5c4803-e780-4ab3-be06-b4b076bdaaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b537797-b36a-48d0-a04d-e43386305a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd29686d-122d-4348-b5ae-f8414cfdab5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5146a9d5-ba69-41d5-919f-f9b9cce9d0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaabb92-68e9-436f-b0b4-d38945724fa1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e89f2-babf-4b9c-8752-40eb753214d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a36739-cf33-4f91-af79-4ef54ebb2afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3451aa83-0904-472e-bb86-cd45e64f599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6214b1f7-fc71-45bb-a4d2-40344c0124dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd41e37a-0e82-4b32-a9e4-cfcfda03c550",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c6c08a-c007-4133-a748-7155ef1e3768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865315eb-44a2-4181-96a4-5e625059c8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f73b56-5e4b-420f-a65b-c87e9dc5d49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce70e154-50b7-47c2-a848-e09bb1edc70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79476d5-784a-4041-980f-ce123d1ed750",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfd8513-6461-4b26-9450-26fd27fa625b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef203b8-4b94-4325-8f0a-af717a2a49f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6eb363-7fbc-4dae-9eb8-a76dff368539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "623f735a-2eb7-4f75-9691-955ee55376c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051b6d32-9d26-4934-8bb9-b6d3ac929f04",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c67707b-0f11-473b-83fc-330cfd213122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa6fab9-302b-4304-80a4-94609e6b040c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df556a06-62bb-4d63-8728-3e1c1ca75a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbf2031-7ace-4cf1-a9fc-05b0ae0f03a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac35104-3219-4ea5-a0ae-270e2c31ecdb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8686e73f-2d61-49ad-b66d-5f5757d23426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c595d1-e1e8-4d79-a01d-461168b64534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cebc69b-5c65-41cc-b830-64a47286bc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36615818-25ca-4996-ac6f-3dddeb646a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d946214-c330-41bc-afcf-1d0796b10c56",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1589007b-5a81-478e-bb5b-dfed6845f595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b2c38e-4ea0-4583-8a0e-ae87bddcf9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96b4159-c62a-4e14-afc4-a4ded7012f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e69dbde-9c98-40a8-b3ed-75b1a95a7f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9f601c-0da1-4494-8dde-7871d5c71dda",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273dc2d1-1878-4471-b18f-dfa968423295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba18522a-1793-40e5-9c1b-9527c6944c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fd93db-12a8-46df-a9b1-a51eb55cfa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "67116a43-b8aa-418a-a315-4b57b336f4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36047489-55be-4d9c-81c1-c662be62fc41",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9332efee-7082-4499-a105-85447dfa0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d35da0-0ad7-49a8-be74-d4ef050ac186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8922d25a-0f77-4b60-95c4-ac49bf34ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f8d4d1-131e-43fb-aaaa-855cae7d0900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99035256-be8b-43ab-87e3-0ae9efc5b2ee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff74122-df29-402d-968b-2f9c7ed20e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5917e400-cab9-4c80-8a51-ca33dc3f12c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1e14f9-6008-459e-ac15-18436b1d956e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f49c2a83-bb3d-4f11-a5d7-7a19eb66e9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846d555f-8b33-4f22-8feb-802893f0d770",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e282ed-fa5b-48a8-b358-9ded0a7404ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed87d072-c319-4e07-b228-2e53f6f3a0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e7c6e2-974f-47dd-8ab6-096fc30316c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce57ec2-667d-461a-a48b-c6cbacbba419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e3f7ea-ba2c-44cd-9441-85033efdae96",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaf810c-7b95-4524-8f9d-48312e7a8cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f687a5c-52d3-4890-9405-cfc9ab0934ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f948a2c4-9ad0-466e-be72-ee30cc4e7d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb9a86e-e2c6-42bb-b8d2-3df9fac112e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4443318c-f76d-4a9c-b5a2-3ad075cb560f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d1deee-9de1-43c9-8e5e-ae927cccf80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6beb26c-d1cd-499e-8741-cd1c43dc2230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778c0c6b-3a8a-423c-af8a-c795cf2cce3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90dad1da-4e6b-4025-99a0-833394620604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5126a75b-001d-4886-b25d-f57fa6683b7e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30270950-44c3-4931-a295-c5bbf43e2197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919bec32-9e1b-45e7-aa10-13a9a7a75915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfe1a01-8f4c-4c37-a105-a0ff50e4aab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1836b953-690d-45d1-9972-22a5493fb903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129a4cd9-3b31-47b4-936e-b77b9da65d20",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0609848b-9c32-47f4-9cbe-ed1622371b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2adafe-889d-47ff-ba43-f22851c12d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54dc3e8-65df-4ec4-9220-eced95fde3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9967f4-6968-461f-a579-3971c10e9315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd432ed-4f9d-4986-9b00-f08ca9b2a3b0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92595558-59c5-4499-bfa3-b6d6b9df641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f0c89a-3d4c-4839-a7e0-053904aa9c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31520cd7-1950-41cf-be39-10b9f6a18ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35a3913-de97-44d9-84a6-715efff8a7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a9f5f4-c642-4ace-b001-3de4b0f0fe93",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ecb5cb-8ed9-495c-a619-8f28ce38e690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1abdb0-804f-4ed9-8b5a-82695f7b4276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7551d65a-4699-4bc9-9b14-8eb57bd1e009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c938b43c-3e92-4281-a58b-3e7f399f6963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a332f72-23b0-4195-966f-5fd804d9eb45",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78716831-df55-4509-b8e8-ceba4d912a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1581c9c-ca89-4ffe-8a22-5840907beb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4494c463-0964-427b-8b16-20ba8ffb135c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a90fd4ad-2a63-48b9-a717-947a42581502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef06781-4cf2-47a6-90c9-78b9d6f48d45",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602c42a7-ab54-4ec1-9687-bd0b47e5ac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ae7605-3be1-4c6a-8797-94e6a0ac8fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db13619-c8b8-4221-afe9-bcf7cda73d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1e376da4-a168-495c-8983-886da744c513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89464bf6-0a3f-4a4f-a22b-11dde5e94b4e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f19a03d-2b62-497b-8546-0a9873ee12ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc8cf180-a91f-4b44-ab34-e32157636f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9e3212-f43e-4519-a3f7-d65ebcec83af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1498023d-a9a9-4d02-9056-7d5fa8dabf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae704a00-856e-435f-a092-e9a543f0b1dc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3393234f-05c5-48b6-ac58-2a16b3a54c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d99557-19c1-459e-9559-0a739df6ac05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25c263b-2c28-4627-bec2-b3b0dfa58542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3663cee8-105d-4228-9554-e48925d3ec36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bce8e69-07eb-4e85-a9b0-258d11584926",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3cfc1a-030c-459d-b256-9a04275b11f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872afc14-145d-4e64-bbc0-dd8a3871a0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1ea145-5497-4af7-913e-f53ce79c72ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "561e2cd1-7fa5-4e18-8272-13687e4a4e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46d6ca3-ad9e-4d80-8102-e1eeacd34cf0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b60fdb-ea2e-4e9d-b43e-62dec2fbc420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073cf921-8e7a-4d7f-8f83-b910b217c1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94062efb-7b03-4469-938d-cde83c687361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac37ad9-a16a-4655-9ce6-524044fa5baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7168c164-ac57-4bd1-96a9-3d57298bdda9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58dc25f-73ab-45a0-a283-bdf565936936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4742b0-0781-4b7e-a8f4-4891f156afeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172c8ec4-a5fb-4224-a29b-942496076e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2e312d-adac-4fbe-90aa-faef1f0bc0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e93fee8-b3e3-4282-959c-37fb16944b40",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3395300b-d56e-462d-9147-9b3a691e88d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8153f16-9eb7-4b26-a704-9119180aee16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedb8765-44ed-4369-b70e-f8eda22f222e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc1165c-d3ef-49ad-896b-b73fa57f3393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e387b2f0-ca4a-4b25-963e-e5f91cc90ebc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8022d925-7f91-43a1-a079-f988f7f5d94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4578211e-99a3-4042-b68c-e21131c03dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838624e3-a1a3-4b74-ad77-344b0fd9ac09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a0b98b-48e6-4cd4-8f4b-3f4ffcee6fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861daa09-6bc8-48ad-983e-79809853100b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b040c46-3c1c-4901-bc92-a52eb4a65c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715dd02e-9058-4c67-8db9-0112c8e7ee64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4add17-0ebf-48c9-9f91-678522ed2cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73cb5469-cf95-4866-81df-f7fcd101fbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ebee4f-0093-4402-879a-77588b3f3386",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a2f285-0923-4809-8802-fbc807d7ce3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbad821-8387-45b0-be6f-d8bdb697d085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb720e6-be64-4c60-9598-19a3876727ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d69216-870b-4fc1-bc92-2502e218b103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222e322b-e9f8-4344-8355-9dfad0490531",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be23909b-493d-4453-a3f5-00ecd9df3578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24d4aa3-ba5f-4519-81f1-bf324500ba03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b63331-0096-43bf-bfb6-938a8d318c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32eca81f-04c5-4bb1-9028-8fedfb8d3f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907dfc77-e9e3-4a36-9380-11b0b243208f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d948a64-c8e6-4822-9d3b-7ed86ed6c007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ce1e62-7b8b-4850-a532-d66d2c7a0e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5accf611-5dc4-40fd-a6a8-405fbe4e1dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e96f706-0108-4b1d-aa9c-f6d4f7d6408a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b82bc83-4210-4f3c-b3b6-55610a2307b0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7bf537-55fd-48f8-8c8d-ddb06be1915e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f25fdaa-7791-40b6-8e7d-fe8d8884d141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feddbc51-c03c-4aee-b08c-2fa4d39efb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3e8a35-40b5-4bb6-8f34-bda9260bcbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7014aba0-2231-41a2-ab82-170a4b6e4ddf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35a6c93-4579-43de-a467-dac72759b5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9064444-4a56-4d57-8d76-97caad42af4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1b4d58-fa6e-4bc1-8de2-f660ec9762c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d8206e-d227-42e7-8650-8389466151f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3dc3fc-e60a-4f4b-8266-b11e94502d2e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d469c206-e67f-4c96-a894-a763c7707552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9393580a-9a67-4734-a357-e977a4bc8c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22de4fe0-29a4-4975-9383-1d8f7396076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1bc1d4-16b4-436d-baa2-d61193f78f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c503066-7677-4f1f-bb53-9a55d9d70fa9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e6ec95-283d-403a-ba5a-7ad1faa9ec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872511c3-646f-4f5b-99d0-b947f891f281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f088b4a-2737-4ce3-9145-bf8c66d23791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ced5dfcb-ff4f-447a-8543-3b1bafbc07fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eb4bd2-daac-483e-8d1f-154319fe0b00",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361d96b0-9fc8-496b-81a3-c5b61d9c1b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166e06e0-2c01-4946-87e9-d0f9504112dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b568d1a1-d3ea-463a-85a8-9d75afb444dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c75524d-a125-479e-99eb-d1ea5d757546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5303266d-3e24-43aa-a219-5b51015fcea8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd05456-5837-4b2b-bf0a-7ee5e531de3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f109dd4f-2ae9-4d29-acae-31bc26ee57b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb75bc5f-d12e-4b52-85b5-b8e84ae406c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9272c936-836f-493a-b120-7c2a7799a132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2df8bce-d0d4-4470-a565-547c56126f1d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4c4ac4-d0d2-4f94-a4cb-2bed7e459690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb9829d-e7bd-41bd-af65-d7482a7af8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8342d8a-fb44-4d3c-9d2a-2e09c2910252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba983b33-1393-424a-a2c8-22be8469f202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe84114-bd97-44b3-862f-ee3afc6f97e4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4a7283-4c72-42ef-a77c-cd466e47b79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a12d081-2dc0-4c34-a4c3-294a4d2ff8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52235890-8294-4cce-b785-2a3572af59ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59420e7c-6adc-44a2-baa7-857f02beacf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc3c749-82be-4898-acdc-990e4daede9e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bf4e10-bd82-4434-bc41-888e54ca1a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd9ca06-ad27-4984-8cf6-f9bc64d41769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cdaa38-35bc-4357-88f3-c3720aac0cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa6eb97-774a-4501-b6d5-fb66c25b891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124898a7-6d53-4f6f-9576-17517506574b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0bd967-fe11-40f5-8651-05312918ac0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a391d79c-5b47-4f35-b367-139030aadf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a6ebb0-f940-4eb1-a130-e5f692e6dbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "88e7714d-e438-4c69-a5b5-33677d9ce494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45305328-5144-49c9-8181-dab1ea4a2f1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfe1fa9-78c6-4091-8267-11b2ea978a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113a5404-ebb2-41f6-9a81-2a164a2f05f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768c0217-f22b-406d-961a-7c3b1812d5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf0fac9-f80d-4fea-b6ce-c6cff5f2d007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c4e53b-5de8-4edd-81d9-14ca26fb2c30",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecc4d89-c380-4ee6-a079-ec9cf75098eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9237eb8-4e59-42a9-b58b-3ef08fd0f7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb41181-dabe-4df2-9b2a-dbb7d7ce6b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f086b6ab-071f-4a00-901b-dbc15e12ac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8840d9-6a2f-4cf5-9356-d83549d34b16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dd1238-383b-4557-90be-7313fc31dc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37796380-044a-4487-98cb-f468a52d772b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f805b34-a2dd-4f56-93b9-3f8b3106ea6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a760a36b-8edb-414b-a7eb-d199605b7289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5f78b2-e997-4333-a514-9fbcdbe0664b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae652825-f69a-46b4-b8b6-c2b992485e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d134f7-9e78-4941-a12f-9a0a9444aac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b28f9f-07c4-4dab-9ff0-28b76fc12749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c990eb9c-f3e2-4532-b5d0-794cf1af3b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639c5289-f393-4329-8b27-392559fe39aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bcde2d-90cb-486a-ba6e-27c229a57f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a41fa13-9bed-4f7f-ae9c-38d905461ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bea6006-ae1f-408d-b565-c0a3a08700db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "915ea298-6175-4cf8-9ba5-912dba3a0c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21841a54-41b6-4efb-b10d-8e8eabe053ef",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ba25e3-2d6e-4eee-9ec5-f65599e74e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9a3242-da68-463a-9c4e-9dd2f4003186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d653518-a1ef-4b39-915b-159f656be74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "82bb7d5a-423e-4dfd-8d9f-284fbe676268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adf0507-1b0a-4ebe-8990-04cc8cc178fa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6e513c-b082-4fb3-b055-a5084fc1d7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39513b6a-310b-4339-88c4-8f56f21be80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b7111c-9ffe-436b-a3b2-94ffbde7f205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c36e4881-0cd5-481b-8b2d-4b7f4a8f763a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6192a7f6-01ed-4bca-beaf-7330ca104999",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374e0ede-916e-466a-994f-aaa2fa4c2e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49483c3d-9f75-4279-982b-b7715c1ef3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e0dcda-db66-45ca-a5ae-e10860985994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f96256-abc2-430c-8f98-30e219874054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0efae0-e73e-4279-a58d-7ed0347db16f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf48f9-f72a-4925-97ff-89c95fdf688f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7d9f4a-dac0-467d-b2d0-6dc8a2316d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91983d48-243f-455c-8b4c-61eae54b5bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4a3dd8-1769-4a5b-ace2-78e59fa53b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e5424d-ce6e-4355-85ab-ce0e41f20266",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1622a285-50f6-4ab5-bc82-1fb59aef3176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2d0b7a-2aae-4ff3-8ea5-31b7b5100970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acaf5f7-e3b3-4131-b403-2a88ea50582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08270c33-ba4f-4cdb-8795-0b3e7ad3d644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335148c0-798d-4bca-b5da-7e177c0ad5bf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35181d9b-2698-4360-bd0a-44fdb8de59ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a2c277-ee7b-4b68-b3a7-df57e832b726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10552e9d-1ac2-4230-bb5f-16c9b73836e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80b93b30-2888-4404-8f70-8b1e06f507c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c284e0c4-b5f9-4355-846e-39f9b86c31d5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abad4652-096e-48f3-83b3-c7ef74f8e4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cec488d-7300-48c1-91e5-401c54a7f722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c2b63c-4cde-4257-b6f1-0dbafd6c3073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec7e5dd-e0ac-4685-9055-ed9ac185244d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361770ad-5d46-4179-966f-6f72b4504e18",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456b1e71-06f9-405d-bfa2-cd950e406855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4566c2f2-99aa-402b-b81e-543ecea4fab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22124a9a-9dee-4809-b158-79528bcf67f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b73594-ebaf-4ebc-9878-e8c020787343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5543f8-4f57-473e-8382-a27f7fe0675a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c3baec-1401-498c-b465-6b2e5bf74982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230f7dd1-e8ef-451f-a30a-6e1008c7d4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f38087-8b58-4345-b282-59db6b9b0e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05321cd2-46a9-4bf5-98d8-627862e3ad21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6803a8c9-74ca-41cd-ae06-324dffd95a13",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b12c83-facd-4cfb-80f7-d06708ef586a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef73a11-20ea-406b-9e83-906b13f82890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37de0a6a-2bc3-4b95-9074-2f563034e5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5da4691-b7d7-4750-b4b4-f480596a020e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a0d18b-0dd3-4d01-9035-5f6795d636cf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c6bc61-d3ed-49e4-a141-513c47174900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71cc120-490c-4b15-a46c-cb1cc58c2fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d087cff-de24-4ae7-bdb1-4a5780038204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebb668c-0b99-43a3-aaea-feafac531cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5305ac-8876-40bc-9104-c8a19d3dc4cc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93c4d1d-8edf-4749-8b99-fae98e0aee8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4b73ed-e983-4716-ad35-2be5bf7b6782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ed19c0-4c00-404a-b1a1-55757bc53d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b77e631-077b-4a20-b666-10347ac86bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce22bcc7-6f47-42f7-9b7d-b775f50d6ac1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecc90a4-f5f2-4041-a074-29b95d33ff9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba1bac5-49fd-400f-bf29-1c2ea81f6b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e49a9f-8384-443d-bef8-032f3d8d9a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6252ef8-0d71-460c-b894-5c0e7681e75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26c5af5-ed0e-4654-be5f-34e122a0698d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccaf585-390f-44b6-8ee7-290ad816ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b39ddbe-1e2b-4206-ba95-17d85a43786e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd915ab1-ca67-433f-b86f-69d7cb35d009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a0c3db-5ca5-44f6-b091-a00f5250a116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b9108e-f19f-464b-87f1-254e7ab6d6ee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9846647d-e2de-4be6-b40f-05c7966f9e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f582ab-b7ac-44c8-9917-5be4fb12a292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed8047a-d208-4981-90fb-6bdeabb74454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3151e2-876f-43a8-a981-a18e2af39866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad19c06-0d11-4541-9024-056c99c3ffbd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66efda21-20d8-4c3e-9bfa-b9cdb52e81e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e29d68d-4a56-480f-92bd-a1b62f3d10f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7973612f-90b2-4b19-ad00-0d989f7b2b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "713fc90c-7b0d-492a-b70b-1e459f19a6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d70670-647a-46ab-b937-0118d13a3879",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92737f0-a0cc-4dea-9272-a6c5ecf9dab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c9b76f-0103-4ca5-bef4-dc4b32d2d8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8208985e-4102-4cf2-8e0c-27358049d9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "824e1510-f62d-4d4f-b006-588eed9c3457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e97b08-cb3e-41ad-9d40-7e569bbe48e6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5520b2-2f8f-472d-9bb6-145b1232599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5554828f-0974-4afd-8e6b-658e84b60082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0515ab3-4183-4180-85d6-6901656fb1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0db8e46c-a933-488d-a358-f628e16c50cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acea7956-2f60-4eb8-8b0c-be465a0c9525",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183039c3-03fb-4c45-9487-e74c8cfcc261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a42e0c-dad7-4efa-94d7-e9dd181cfe95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7563408-6fb3-4d98-8c25-693ae28a8bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd74cd39-6376-4529-8001-cb37aaacc1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b30b8e-e3ca-4c5f-af33-c195d06fcdac",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132b1c46-517a-4deb-94a0-82f7c3d7835d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72d93b6-122d-440b-8325-8ed76f8ef6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba49a769-e6c8-42df-b416-fb9cbce977f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b3bc47-d197-4d2d-840b-0d81d636950b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f1ba5a-b44b-4eb8-8af0-d04e32d587b1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5f5dd3-d4ec-4339-8c51-5fb0f326198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41842e51-9b08-4262-ac7a-9ff38d48138e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78a9ff3-0f0d-44d2-b22d-16a027e7334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab58eae1-b1b8-4f90-82a9-0dddac1b408f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536a3689-d732-445b-a638-d60d6e3e880c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9930575b-78a4-44f1-a582-482b5e40b748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f60269-1aeb-43e7-96fc-3c677db9fc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cf1bec-0042-4882-9608-d8db8f9a6499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c4c3cb-70d4-4a02-870d-4ea4cc02c62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0d66bd-f999-4d9c-912f-20cbf406e985",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dd0c75-a207-409c-bfc1-11e26350bd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321fbbe4-7d79-4399-964c-f36f84b2b9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4e3ea6-6fa5-48b7-b654-c02115e7d55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c417367a-90f9-450b-9c6d-0476f5a16ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4073fc4-c6c9-453e-8ddd-a4b8013aeb3e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e976695-ea1b-406b-8b56-5c7f7b75ab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b78404-ff32-4163-b912-9067116d26a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fe6b34-b86b-4e73-baf5-ea3ce4fcded8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cb3d23-78e3-4555-a82e-433abc8158bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6687d87-1ea6-4765-bca7-8d3040d5443d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ebec50-e3a9-4d80-8bef-28725de8525d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fe19bd-797b-4531-a7ba-efbc2c5dcdcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5e0290-01a4-47d1-8fe6-70c85f6337fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a150e7c2-0eb8-4090-bc3b-0ca9a2bde827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453adfa6-9d8e-4e0a-a4d8-da6d9853f3a8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b55d01-bf7b-4df0-bcad-7659fa113879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b634cf-8aeb-4402-8870-04de4f4468a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5190aac-2c80-4c2f-9560-5911119cc419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9be907-c2cd-4866-a089-25d3409bdc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79655eaf-b72d-421e-81d8-f635d2ca4c75",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0875a87b-182e-4a2c-8741-63e39ac39003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d82bb68-6bc4-404c-b53c-bbc7812471b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51473b79-31aa-46f0-990c-b5e1fd92af8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a86f2865-e175-4a83-92c7-b476ccb2e204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e945758-3a8b-44c5-a821-5c759b4b27ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1faa62-0289-43aa-a7b3-e39729b77731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d1287a-a907-4bb3-ae68-56ab2f752455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a28e3cc-b069-41c1-934a-4142509b232e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49b89db0-b38a-4176-8d55-fc4c25a7a4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d26799-5581-44e5-ac06-ca70dbe77f28",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7478229-5c71-4fe0-84b2-5eaef20be291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a9c06b-e004-4ce6-a22a-8c75464f5309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dd9af6-bab3-4632-a000-609825be7ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d57121-4533-412f-a1d3-6bbad2bc38f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036fbce6-89e1-43cf-a250-741789e2d35f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7684b3-e880-438b-a408-dde788b46e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4778af7-1992-4037-a434-ccee66710759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13ac43b-ad63-4f74-bf73-7ee2f05e1b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4789c29-ea32-42f4-b416-197d99259e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c184c6ac-19d8-48a5-89ef-d0ac000b5e79",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cac5a85-fc56-4c3f-b7a4-885f762795a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "005f0251-693d-4d52-b26c-8a7bf3a07f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f80e50-74e5-46fa-9c68-3dbbb74cb607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6bd8a3-1205-4426-afd4-b0efb0288bd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ae90ce3-d225-4a4a-8e7d-6e22993b02ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ef5f8db-a883-451b-b027-2a9bc3490503",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed3e607-8518-49d0-9c7a-9249c18999f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b8bc15a-09ee-42d2-a275-c7910e61aaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc31b3f2-61d1-4151-90b3-8f36c73575c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de0811ab-22ee-44cc-a14b-9ca06350182b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b39f0cd-e718-4dfe-acf0-da65f098c325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08bb1166-6d1a-4f64-b3e3-d75abc216103"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b1385f0-e660-4f44-9fea-c1dccfe1ed95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72eb71c7-d7e5-402e-8af2-8775859cc6de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f3b0c4d-9061-40db-a03b-6b55121d8534",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fbdc446-c6b6-46d2-98c0-bb4581c6b967"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0cbe7e8a-06cf-4ee6-b413-776b2310597b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e6eb5bf-9fb4-4e4e-ba7d-183a96840b3b"
                }
              }
            ]
          },
          {
            "id": "2882a33e-87a0-4beb-bce3-8221be3acfd5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8beefb78-a7a1-4fc7-8a8f-55c42e578611",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c396c3d4-1d13-42c1-9380-3e572829dbb3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678439c2-31cf-435a-95a0-cf53e0006baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ad434ae2-4de2-46e2-8f9d-7258f16371b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90948439-be48-4f32-84de-7c46314b12a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9b14b3-efa0-4963-a980-95798ce8f3e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "efc4e7d4-fbc5-438f-9216-7d10dd1daa1b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc321219-82eb-4db3-a6d9-ec98f2460fb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61d4bc33-62f9-4791-b1ce-4aeb079633ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a971f08-9e7c-4454-82a2-30531b5732e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84e9477a-4730-4356-9f88-7eb1d0da6517"
                    }
                  }
                ]
              },
              {
                "id": "2175e239-d8be-42a5-a2e8-d9abdc186f6d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c344e136-8e77-48b1-afc7-194ada634540",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "548fd3f8-a2c5-4c92-940c-7cf30cb61d1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fea85bc-cee9-47b6-b1fd-1cdab5129575",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "630e962c-f515-4940-b0d3-be9d80759e15"
                    }
                  }
                ]
              },
              {
                "id": "67658a29-6de4-41d5-9a42-6581499abb2b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "639f1e16-dc8f-4b14-92f0-06976ecf4ccf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d5d18d8-b809-4934-acee-563412073595"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3218e10f-439a-4587-a78a-1aa45a1069ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76454add-f48a-41a2-9388-87198dedc2f2"
                    }
                  }
                ]
              },
              {
                "id": "e8b2ec10-cfa4-44cd-b0a2-839e1b1f0305",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b2045a6-d244-460b-8837-5847ff5c848c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0d5fd30-3a77-4ebf-86e5-173463a1e721"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09292865-5d62-4f86-bbdd-3e1a02ac3afa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "45cd680e-68e9-46a9-adf8-cda7bc61d821"
                    }
                  }
                ]
              },
              {
                "id": "0d0cfff6-6913-4c2b-91c8-6d0ef2476414",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c604128d-ef19-4afa-ad0a-70ccc3202ad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57d88123-71cf-4d95-9878-f73c93511729"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16c5079c-5dbb-4426-b385-87a46607e4b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8e225115-0d96-44fb-a84f-2daeeb2a9f89"
                    }
                  }
                ]
              },
              {
                "id": "2c7fd773-18e8-4468-a726-84de0e4ff2b9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37546245-8179-4e71-a963-b1f0bf6e5873",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "949eb50a-1167-4fbf-a1ae-cdae08e12dcb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fb94f86-7f39-4b88-9fa1-0d127d28e1fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08348294-9e6d-4e44-bc9b-c8bd28df0f2c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "015395c6-0d2b-40a5-9015-45eb5fe60597",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fcc04fa-71aa-4d3d-91cd-8aa553311601"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50011d1f-a235-4a8f-a5ee-7d73c45db9bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac462466-75c7-4384-96ae-fca920819b4f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8963c16-c136-4480-9d93-8393bed1d4d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f715ac6-3702-4b44-869f-d3a2f43289c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f80c50f5-aa8b-48c0-871a-c38d966434c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4b6ebf6-f6ea-4fa4-9081-20f0dceb60cd"
            }
          }
        ]
      },
      {
        "id": "a8745d7c-23a5-4529-ab7a-f34201dde516",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9ef8d67a-66b9-453b-b95f-f649d7a8869c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21cae924-6b9c-48cf-95e6-c3c42b96a408",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aecdea09-703a-4548-848e-a8d0ec3e31a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0186d19-d018-4e73-8507-cef48fb20cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e06748-e812-41cb-8a83-29fffaa8f64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17453a99-5942-4ee7-baf6-e8f22106eee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6340d1c-dd33-4655-b67d-1176a0a2de47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308f7385-cf2a-4e71-b48a-5e9ef6245474",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b044c9-28cc-46e5-8319-43d7be298568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd58bab6-2e73-4bdb-b8fd-78fc55924746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5504286-8985-4d62-90be-002d59701a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c3cc71-56c2-467e-94d0-a2d2cd2a19e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d467f55b-e77a-43e0-a1c9-1d638bef7739",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7754ce-7f45-45d4-950f-446180b16de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c25133-899f-44bd-b7ee-78e856cd6045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cbb574-790f-4530-9d96-a70180b66020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "428c0ccd-68ad-4282-8825-1564f7c2b45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be47f02-3dcd-4865-9ab6-6e46accde061",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f9950f-d755-415e-be2e-504653261e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e20e8b-af0d-4933-827e-2b3b408c26a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e95ad88-47f4-4e0b-a1cc-cf738de30594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffc71a5-2e0b-4da2-b7a9-ccaa7b02bc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9a1e48-fbb8-4295-98d9-5fa5d48abbbd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa9a924-0118-4e12-98b8-8fa9f715f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f415d26-f88d-4f86-b1f2-0f853b0b2281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b0560-a948-44df-a3bf-25fbb0d2f0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df026d5-96d7-4892-bd5f-9f6aa518efcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f63b1c-5228-4c9a-9d5f-c6d95086e069",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd1475e-81a6-4bcc-8fde-f740503b43cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2fcb89-9be3-4043-b907-d5e0054064b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b5f46d-bc93-4a10-8ed4-a0636d8f0463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ddfe34-3d3f-49d1-b9e2-74a396c7c0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92980db2-01cc-49e8-ae9d-c40e6f60218d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d748368-9e9f-487d-9a69-63116af6a2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec9097a-ef22-4173-af3b-661c67782987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452c273d-7a57-4ab8-883e-a0f60c2d172a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "74763b77-c7f6-4441-8b4f-418e0a17298a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318d68ca-f166-4f86-a869-c5de0d0d3521",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9686aaa-079c-42e8-9cdc-0fce3593e6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602277a2-24b8-49d7-82d5-aeca5a863445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7ca20d-3006-407f-8385-4983c8e9927c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "318d950d-b226-449e-bcb1-b4f73da7a2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a07a29-95a0-4ceb-a593-4c8dae7aad9c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a62076-280c-42eb-9fa1-84ebf51261c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301b2c42-9685-4476-9c00-6932f1adbaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bae9ba2-3248-47ed-8935-b734edb57ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "023f3e90-77d3-4d6d-8d76-84b531ca3b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b25087-c675-4e4d-b839-a1126988458c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfcce55-d32c-4dd2-8a0f-4e3f5d7d8cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b58d53-ea02-4272-810b-74384e82b8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b6eca5-3f95-454f-b66d-dab0840377c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "307d5117-e26a-4a13-92c6-31f50ca24ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe9edc1-7c4d-4ccc-b76d-5f751c22f2fd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce00a4f0-2c70-47f6-bb29-f81f6933fd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab59e85-3039-4191-9a47-f72b3a5d1257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebcfc7b-0c36-42d8-aff2-a99aa9afc07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecd4b6b-c0ab-4809-806c-78023cac89d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffe8eb0-d2be-4b9b-accb-16314aaf86c7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b527abe-d3a3-4e6d-9528-b00d59bf782f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa34a882-8ca4-4564-a620-66497e8513c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefbc9b0-86ec-4a5a-9daa-cca4b1232927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32e7d441-2284-47f9-be62-73445961156b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11933ac0-2cf3-40ed-bf0a-43ee9c0c981b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2500e197-7f7a-4978-bc86-43bea3600280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bfa920-4d16-4e00-a16f-3da03a99176c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7f8d53-7330-42fb-b1bd-79c3ef3c5d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44b2240-7190-47d6-88c8-120bc3519761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475eb770-9b5d-4d16-a748-128e5fba6f36",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d68944-bdf5-4bbc-92b1-a072efa8415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f991d9-b694-48ae-8415-99961550aa6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd59faf-010a-453c-ac97-7702988a85f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "51a00e12-7ea4-4582-97c0-0486c7ad362b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979004ba-a17d-4d50-aec9-e234dd9b8a30",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480e9e06-4df4-4106-b93d-f2303190b7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956d5c14-9141-45e1-84b0-00f8218db969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34acae03-7774-413e-8dfb-99f3a0416267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8928447a-4e76-4f0e-a70b-04df9b95b07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70a1ad4-a68b-4f2a-9e9f-e9f8c1155b6c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0be6c9-c06e-48cd-91b5-8af4bd177bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad7bd39-53a9-4389-b793-0dd34a750daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641637af-050e-48dc-8a82-5ec3ad56ff41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "89564a73-64a2-409a-8af2-b7c2f72976a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849e5239-d92b-4e4d-84db-16362e2de357",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4855e0ac-2e12-42f1-8403-40d2f27c868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c394472-0a6b-4d7a-8306-f0574c315ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21347b94-46d0-4372-90aa-0070e3274512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4eecb8c-beef-4504-92ff-9536034316b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03502e4c-9a89-40c7-8025-8ded24aabd7f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b29aba-c524-4494-a58f-5bd098814e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5d0f2d-f67b-461f-a526-b3aba34d9a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b357b1-a78b-4c6f-af6d-4695d4bb2273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "311dfcf0-9ada-4453-a1b2-5f3119a997ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07474068-6895-482e-9d25-b20cba45fcf5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff2129b-53e3-4265-b409-851176d8a880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea09644-1bdc-4dcf-be8b-5c268cb3a142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0fdc78-29bf-4243-b54a-a24eb634271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18006775-8ea1-4ebb-9bb1-7db9674ed5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da600320-9b9e-4dc3-8774-4d2fa76514b4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fec1af-7348-41a7-b845-fbba1beacbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96313e7c-1209-4119-af62-c194e5c40c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ad2cd4-f9d5-4326-ac39-4903b80bb4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c3956d-1663-49c9-9642-c1601051157a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da913ec-1fdf-4d62-878b-57dd51502487",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fd31b2-68d9-4787-9122-d7c7cc8b93f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176c3689-446a-4c00-be29-7a0439867c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c108826-f87f-4a22-9a86-8c8355d44cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07a8106-0215-4ce1-9a19-ea1ebddefb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a67532-e190-45e9-8c6b-f6de0fd74d50",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ee360f-414d-459f-bde9-51f02c41c4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f56f4b5-009a-4e64-ace2-bc2e6d60b69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad16d7a2-f930-4781-b9af-cb9fb67aa9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66162183-2473-41bb-aa92-bd25ae35e703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed40df7-bb21-43d7-80ba-253933af5fd5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3ba43d-b0a8-4b66-a331-cc0369ed3d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174caa18-f7d8-4d77-8cf9-61f139a7ef07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eca2932-22bf-4bfe-a959-a0f7eee0e442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7167d1ea-8446-4c5c-aad3-69e5c2f2976a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed89ea13-b6b9-40ce-a400-2572f11ab7af",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14d9b0f-7af2-413d-b8aa-221aea3dfd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac443fd-198a-4c4b-a4e6-8a30e2574ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96fc492-9a17-4323-b306-0074f58f371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "978bddeb-54f3-412e-b223-2c9b3163bbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64064f43-1747-4ecf-8341-1fafb3c9fcbf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67bc7c4-173c-4172-875e-e14fa8553141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29b61e9-a1be-4bdc-8ea9-f27d627c2523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3183870e-cee9-4bb9-b464-2abf3ed90cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57765e42-33b5-4667-beff-82eecaa31a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f80485-e457-4612-b524-0ea10f1c0902",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f238d902-d290-4d50-9002-563ea260ca67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de6af20-3d05-4bc3-bd58-5da354d93bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b7ccf5-1764-4faf-aceb-b6d8b6ef0eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2ad763-604f-44cd-afa0-c347e96e5e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0e2252-518e-48e2-84d6-1a10275b014c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb1627d-e62d-4c59-addb-3f260eb5ffb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6399352-b735-4ccb-a8d7-fd04a502da87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99b37ac-8797-4167-8110-5e10416496a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "457587ca-2ab1-4ab0-aefe-7084a25f78f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37aeac5-7ba8-4e89-9020-063c368481af",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d68fed-0f2b-47de-acec-465316ed23a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fafc32a-dbfe-4de7-9aad-efff34633cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cc5edc-afe8-47bf-a9b7-c18799808618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6df479-1cc4-4fc7-a050-afaf90510298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9533a9-f8a9-4cbb-8911-aea1b1984f7b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc37586-4437-4a61-b7c4-12d405a19075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e75fe1d-b221-4251-89ce-2119c618c9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1386e8d-ddb9-4ffc-a02d-48483a962515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3d9191-5c67-4011-9676-6e6c569c136a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca7be05-2112-41ba-a6de-14225d9073b2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ca5d13-d28a-4d00-87e0-c5de4efe5ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6dd5b6-12eb-48f9-8288-1b4e0e463487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bf21bc-db4f-4363-8148-ba5ebc3e8989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ad9224-148b-4768-93e5-f81f50629e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdec53f-cd60-444b-a017-a14c7f231ee2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f704bdce-4299-43db-aba9-2ef0dc5c6e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d606b2-bc36-4657-ba08-3786dcc2ecdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d179173-4183-4c7c-8bba-1563a77f6f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbefb7bc-5677-4f59-8518-5f907916de4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ab4d2f-4649-4d26-bfe8-1430c58fe89f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481e69d1-bcf3-4ef6-8005-20c9815bc2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5745da6e-4a8d-4fa5-92a6-3cf8be30607e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e672cd39-aba5-46ab-bfa6-489bc3030996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f242193f-f809-4c13-9ad2-b49b37d27ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ecf274-ba7e-40aa-820b-6caab19c55f7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60f973d-e5fd-4cbe-aa44-1afb2efc6ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34aded61-3345-4fbb-8a17-0bec0a1e635e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1fb750-0829-4b1e-bfa0-872e2d9cbd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99828426-48db-474e-8973-853e42f8b855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11ea5fb-ce44-4238-b9f3-42d8551d8962",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e171ab6-07a2-4d5e-8370-f5e36f6c8504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52230e45-83af-4bd5-890f-48c49996afb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b39dbd-7e3c-4dc0-96cd-2eade7d7d64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb87aa3c-5ed3-4825-a4e5-d3a134ffcb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8773b36-3dcf-4b0a-81aa-d0026b934960",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5ddcbc-9eea-4f30-95aa-f42343b5e348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdeacfda-b018-4c92-8eff-6450fc5f5031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6317d21b-6684-4e48-a84b-ca56d06ae45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e799efa-9cd7-4a85-8916-e2951fdbbed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f4620-77af-47eb-ae94-a7d7175ee31a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6767ced1-449d-44de-af47-6bd7c6ead8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9034d0-3cec-47fe-9467-8783d55d1080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d6e82a-a171-4127-97d5-bee7fcd248af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7344a31f-bcbe-4f79-8726-61434e0a3fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5682ba-6e59-4ce8-858c-3b176853a847",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17948165-7dbb-4296-9cdf-5b9938b80fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd42ad5-0402-4a1c-ba8e-03caa2ac2cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827a23f7-8077-4c83-8cb0-9c3c235e12c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f54993e-0ed3-42e0-8e99-7ce018f67028"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58494b12-235d-4bce-a00c-61c0beaa3fc8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3eee7eb8-d285-4b4e-946e-ca1cc8bb41cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d6c7cb-121e-4442-83e3-88bcb1d0638f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "daddde8c-51c5-44b4-a46e-1becbf9b4898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878bfbd5-e769-4e78-aff9-179effd66580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be109a87-8e95-4bce-8e33-16876e0401a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e248e13b-de47-4d68-a9ea-02e7bf6adf71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afe5e4ce-f3e6-4c1b-a56a-eb0d9e11d191"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbd1f1dc-e693-4b1b-a976-33e59eabe30d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11e52332-059e-4946-a567-947fd7d1544a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "115138e5-9f6d-481a-b9e7-38f5571c5581",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "46df1388-ae84-49e2-b7af-a14f7ff78787"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cc3e85c-882f-4006-ba81-8fc2007ba842",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57cff2c5-150b-4d54-a6e0-d6aaa567bddd"
            }
          }
        ]
      },
      {
        "id": "8609f18d-9b57-4f2f-96be-d4d4244319ba",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "07d2bfda-6fc7-4a1c-ba54-70419bcf3cde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfba0752-d0f1-4f05-a8aa-049e5b8349e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f5c27f3-ee07-495f-a0eb-a61b05192c86",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57caf3e-6361-420a-a66a-8de57ec3464f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c24a241-5ea9-4bbf-abc4-5e05032d8147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75029386-c7a4-462a-beed-2573ef261251",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a23c96-fe42-4944-998d-db97dd09e9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93a55f9-a57a-4b89-b1a6-40f65ce0e46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70bdeb9-c70e-4cbc-a161-c7ed001645ce",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39382038-cf5b-4ce8-a78f-b9b0d3831280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b517f7-9003-4892-8865-986e37395c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d92a34-a819-4224-ad75-ddab367770ba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bb6ffe-3365-4948-a7b3-6dff936ed468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4eb622-e5d3-4483-b3db-e4097821f0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fa2cc5-00ed-495b-8874-2a214b26694e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2375b7-3ca5-4725-8626-db89e267d253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80464e19-968e-4001-844f-eb7d171e95ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e67ab58-3c8b-4dad-bd39-9d43d384a3d1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7632d77f-529d-47fa-a9b9-d867ba78a24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e815dfa0-c88c-4779-9555-dbbc5ce721fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcfdaf2-2fe6-4f4b-8c58-b2c5a9c79f7c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3a0161-dce1-4f96-bc81-0a2556d720d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92678390-47b3-4091-acad-da4596b7c5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8125a54a-93d6-42f7-98e9-b5557b6bd9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991b50ee-fceb-4742-b4d4-1a3883f528a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7b3e27-5ff0-4ff5-b9c6-b8b1703b38b3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aef1659-e3cd-4896-aa0e-9d7a50f66557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8493c0e2-dcda-43c9-bf2a-0a2caf78b19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f217828-9bfc-41de-ba9c-0bf3ef894d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191b1d56-230a-4cb2-aa64-5cc3acaa70e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78321d44-2bfb-4fd4-8f5b-86f6590367f9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337f21d6-d197-4919-a1d4-c15e0a77aeb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a7d638-f312-45db-aa4b-39724813efa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda00bb4-0542-46eb-a978-872886a3da4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fde3e5-c0c8-496a-a798-faed5114e601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996a0071-c62b-4cc2-a3da-33859fe60d76",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c29ed9-1d37-4c28-9bbc-929693e4dd7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0b5bcf-65e7-4e24-a5ec-fbe9f5abee55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9740fb41-8df9-4a65-aaa0-59eb20e90d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24526e5-4243-4d22-8b96-6774642d10d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb369b4-4aa4-45cc-82b0-5168f192677b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01135779-cd75-43a8-9d23-881c65ffe62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c04b805-9cf1-4747-9e26-8d1910ab08c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3031e2f0-54bc-473f-b50f-851dba6c978a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d20faea-a6e1-44af-a878-73fe048a2495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0d1cfd-9c59-4aed-9dda-f42a7f528b27",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cc5892-6353-4263-bef3-63ef75160049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20fc6bb-31c8-4fd4-8c5d-7dfd0ccfcab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da20edfe-cd83-4442-b7e5-538e66e6ec20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1898a75-9aef-4532-b560-e86ef94a6f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9ed37f-afad-4a91-a7e8-2be729ebabd6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1173f33c-cdbd-41f8-b15d-071047187619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "573e447c-223a-4ed2-945e-bca13f0c98e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf03501-95e8-48b9-a644-120efe2f9a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e249df77-7040-4a34-a98f-b9e99d5f00f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1258191b-cf3b-4e90-9369-acb057700609",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e55d608-23a3-41b5-a364-9ffb4988738c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f55d8d-894e-41a9-9b90-e60f2f08ee3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce9fe34-4908-4071-9bac-3fbc88e943e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d9cedb-874d-422e-9c6f-8d25a89232f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bc9415-599d-44f5-a44f-0c0a81088f97",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3d47ab-f16a-4f9b-b743-b19fca686f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0830f96-7798-440d-aa23-c6c344abb003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a42900-58b8-4a5f-a5e4-0bc01aa61469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0877eedd-3660-4fe1-ba66-cb6baaa2da97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5dd648-94cf-434d-a0b8-77de7dea8c5f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc64f67d-2145-426c-9579-bfe50a142823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc240bb-d0ce-49e6-8bfe-de22c40702e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec12d7ad-728b-4bd1-8704-b495c659305a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858fbac4-41e7-4006-8f40-dd0ebd960683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebddad08-f636-471f-94d4-2c3fa32360af",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93017595-c706-4529-bc44-08d27a8818cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63dc43f-a78c-4dca-b0b4-f19b83e92ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05a897e-3130-4c20-9a45-80735646ea43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b31b764-a967-4621-8404-dc1d9d0da89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e1b964-cfad-480c-95aa-a7d3328d59e5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6972346-a0b7-4c83-8715-c69a02f21e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dd4b56-dd87-4d89-9936-c39be7514f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a2254d-27f7-43ba-ba4a-4cd9e33ec3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7f7f92-c3b5-4b16-b619-5c2bb92cac29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef6961e-e6be-4bda-945a-f5aa37aca804",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216a836b-4e6f-497e-b941-81ab0d9d1ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9526c349-a16f-4f7e-ae92-5926315b0af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d74fd2-664f-4fff-9568-4f303082aced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53d47f7-719e-4da5-a0ed-fc2b3bc3eec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12248b20-5eb0-493e-9ae6-03dbd86d67ac",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5426c7-8e04-4add-a73c-d04f6b71034f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f46deb3-bfb6-4189-81df-634d96b78838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fd86be-b20d-4a31-9e7a-73f81b7bcd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83081248-80f5-4234-a18b-75fc5147f2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae7c066-e159-47cf-bfad-f07aa7ef9ea2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8468dd6a-446b-401b-91db-b3b8617187e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ee495e-4527-4f33-ab74-e153ac9a6b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa64bcd-c603-4ec8-b74a-91f8a5623641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1861cd5-456a-4294-9fc7-33a565100b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fdb68e-7923-4d66-8c38-8f7ca142dd37",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa18edd8-d627-4912-9fe8-158c546a29a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e64ebf-c865-4827-bfc7-b6dbc9ea84b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb152774-3fd1-46d2-a9c4-331c710f7eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8b5eba-ba9a-4fb4-9ead-f08883fe6577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c019317e-58bc-4a44-a349-7005b61ab1c8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524daa61-8a30-428d-be76-69d7cdb7dab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7fbbeb-b07d-4256-bce7-e527f3339e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398e45b6-0df5-4f8c-b087-b349aef221c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5400988-95de-41c2-90b2-50f70869d0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c00ec9c-5d3e-46c1-a1bf-d019977ee494",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1a09a7-b1f8-4338-993b-ed84f5e2e43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b4e173-0c34-426b-9d86-f9cc215b7c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45db34e-dcb0-4940-a833-46db69cbca97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0afb364-6d2d-4c05-9c4b-fc1805dde6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69777d6e-2eb8-4203-848d-fef7596c8fb4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68a6292-b465-46fa-945e-108d6a36bd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e659f02a-9336-41fc-82a7-a4d6968c5b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b999ec9e-d0aa-4460-b400-bcbd1d3e563c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14dabdbb-57ba-4b26-ab37-0e3f931d4225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaf72ed-7906-4ed9-b415-7b0237552596",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619d3972-d49b-43b7-8569-c42c0005dcac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0806db6c-7c16-4ea4-ba3d-3ba814b78c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2d6274-36b8-4efe-a6cc-f695d0a75125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68223a12-bb1c-40c7-85d8-ee8f78b1b3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717e0939-3d11-4125-bb22-5e773c8c7739",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa1052a-8098-49c9-b9e9-b68198e5df50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f58b31bd-9d93-41ec-ac10-69ea45c1f0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2f4e2c-6b1e-4f98-87e0-4653aa33305c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6f4118-c43a-47d7-a098-5d1aa96c8153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5731c9b-a7a4-4e3f-839b-6adb16a72753",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b360cd5-d726-46e7-9607-bed88ba81122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7acb045-15ef-41ac-9bf2-097a2c70eef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9f9124-d3c0-425c-934e-ac3004e4a1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ae22db-cf66-4231-95a7-2ae3b5faea27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3b61f1-a0cd-4e20-8c26-d7a05781b1e9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5579e61f-e21e-4d49-a8d3-d751043eed14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52910317-a4df-4c50-884c-b9e6787d3f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260a98d7-a3a4-425f-a2d8-371ecebfcddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f994435-c805-4436-a198-16fe0adff170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9d9a07-a14d-4fb1-9a36-b507dcb01844",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b03230-610e-4be7-8753-69458c3c8533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a015520-b50f-4fa2-9fc7-77072aea07d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c144f318-0441-42bf-b2f4-c027e10c8362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dd575c-9d52-4893-a9a6-32cca2cf0692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d741430d-ef49-4492-a237-924c01ab2760",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c4e6e3-3bb7-4d51-8218-8e74cdd6d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efcdbcde-0550-4bf6-b3ef-04870e96699f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87935ef-3397-4699-8810-6b7ba1e5a2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eacbd0d-b364-4e68-b822-209acea43336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55981969-7c35-41df-b6b7-b1be5a437619",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498296da-821c-42dd-aee7-11bbe7bb5192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70071e0-990f-4cc1-9a65-caafa378b40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3561d5d-9a89-401c-99b8-623c34ab9a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7467e23b-8257-4757-a537-5ef7dabe9d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac260f41-be19-4ae0-b267-93d661b5576c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e02269c-c33c-430d-b7a7-427333f2321a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd3cb30-a63e-4fd5-9597-f2c14e83a17a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839ec0db-ae53-4deb-a8d5-c7d41f423c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae023676-9661-4f81-8b52-ea5552090fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c910218-4569-471e-9fd2-f25e07ccfdec",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9eedbc-4369-4778-be56-2fae2dbed59b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc7ec6c-ed29-4120-9eee-c4b372d35d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c881c0-8f98-45ef-b37a-f093c0827ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe763f6-ab50-4fef-b423-709725ca7ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7987a83-2bcd-40fc-9cba-b849606bad56",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5d6591-d806-4f38-b870-eebbcf85b832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bf58b7-cabf-4528-9c52-1a613d9db6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1237a7ee-a6ed-4be1-8375-aaf3bb6d682d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44581546-959b-4b0a-b3da-bcd482092037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa0ffcf-26d8-4914-8e1d-d26fffa31339",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dd92c0-e87a-46d5-9e63-21d4d998d5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306253e9-f564-45f1-8c91-4c6b072c8daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083a1126-1036-4496-bae0-ab23a892f672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646ee4cb-1694-4473-b814-4ee7b557ada3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f258375-a32f-41a3-a7eb-ea0c77b4470d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29876d86-5d8e-4c45-81af-e619cc4e91cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315e482a-5f44-4f71-83b4-bd00ce345c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c5de01-b7fe-4c55-9941-3713c58ceb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed94f085-bfb0-4756-8796-ed47b1371eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a2d11b-aad4-4bcc-bd89-c7d44bd94e74",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8c91af-2ea5-4685-b13b-eadd3a2d8462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1555f66f-0384-4099-8d9e-890bf11a8e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1e0316-454f-425c-88cc-58590085d31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c2d8da-ebd4-4f0a-87e1-e9a4e069f851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26df7061-17b6-47c9-a324-9528c7eeecdd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3091f81-a0d7-4945-a474-332a776832b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20fdc52-d734-454d-9051-af9cc2dd24bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfb2ebe-0824-483a-a087-f1b270386c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8c296e-9cbc-407b-a528-e74145ce1950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973c18f6-532d-4503-9064-c6fb35722017",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627726c6-4b56-43bb-8cb6-16516eba2d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491c7506-0fbb-4927-9360-45896acd2c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a336127a-ba7a-42b3-8ef1-0722ec3d0faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574cf1b5-8dab-4428-a3e0-3c0869641c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168eae51-626e-41fb-8063-bdecf89b76b9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d396c411-fd47-4fb4-b260-130a1af68b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754b949e-5b50-4d6a-bdd6-0b6ba47ed9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d18a92-3f66-4ca4-a166-02183f788911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f154a86f-18e2-4eeb-82fa-7ccd31b8a5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c098543c-b754-4340-b26d-b338c6d6b67a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f375bb-43ef-47a5-aed4-5257be108985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f40ed8e-39c7-4de5-8e7c-2b98995e1e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d8d2a0-9cb2-4658-8cab-c536bc0b3890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11b483e-3893-45e4-a57b-36b9f93b6431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d559354-6cc4-4367-948f-b6148f1664e0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d304ec0-b0fb-4da6-a4de-9ab158614dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6886e49e-52fe-456f-828f-eff2d3f32fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b44c07-9a0c-4f81-8612-6f30b78fff55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b118be-89a6-4f62-8af8-dbaf4481c772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b56851d-da71-4628-be15-b238b3d8bb0c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d2752f-eea1-4248-8c6c-7c045f82a321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076a4939-2b89-4311-937b-e52bcef3ba3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed0cbcc-bc78-4eef-9a5b-7717ddc0cc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529b6d62-af3f-40e0-acec-ec6ffb727716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21358f56-f896-471f-9a2b-640a821dcb4d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e54529e-fe2b-4aa7-8463-963851bc983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9330e3dc-0314-4a1c-a177-9b3b99d9d4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a469bb-cb86-4f4b-b497-be8b2abd8108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ec46cb-7634-47d8-9a2b-fe6ca03a848a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133b81a5-056c-4cac-9462-a306f453e206",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd69c03-ac98-44c4-9e3c-14d116d81406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732ffa0d-6f3d-49fa-a20f-82891a1b5bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50676f53-0d3d-4584-b7fc-4004697e1a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e5233a-c960-4961-93ce-f1accdb3e558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a55633-7ab4-4bab-be48-17fc8de93272",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e74d0bc-4eac-4230-9ccc-939cd4cd2809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdeb3962-a40b-4f1b-b5e1-26b8b2cf917d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bc0575-6753-4492-88c4-28cadc440738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5344cc2-ac26-4717-b5eb-ffe32bd98048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbaccab-3dab-449a-a99d-c58e3e104cb2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23703c4d-c528-4da4-960e-632c83ee281c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cbd7d6-ac37-41ae-b1d1-c89803d62918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d5c4ea-e72a-4c40-b31a-4fb123a6c076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beea2798-282d-490b-9207-b36128804101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7acc881-8c24-44f9-a3b7-5459c7135199",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da72529-733a-4094-99d9-594f32269cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58842837-c1fc-4ef9-b27b-db82ebf48b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ebcd50-bb64-4866-8022-1efbd31cc11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7989e9a-05ec-47e5-8a42-41829b0d1ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe33a28-468c-4d6d-9cf6-d615dafb0dd8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceaa672-a29c-4322-b0f0-f156c91dfd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdf14ae-cfef-4eee-a2a2-55a1f3e92c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0777087d-52a0-46e8-a80f-f94a0024ff16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd299139-a2c3-4f52-8360-ea927c313fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6411db29-f7fa-41c8-80e9-86680f060e86",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644e189c-1e6e-4e67-8500-36d48eafbc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b17626f-128f-4446-92de-c41b2f618e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48a2c76-a0e1-4867-8828-223ddb62e150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdb200a-e2bd-4950-90ed-ff8ab6ce7e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be76a88d-0b74-446b-b660-be17a4f70fba",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c4b147-875d-406c-bc49-77db58a3233c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d59871-2eaf-485a-98a4-6c479f71d1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a948fc-c620-494e-bd4c-f76bc6f60396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b36b815-e1c4-42fe-ab99-04c53e32257d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488da4d3-4e06-4193-8b60-9b0638fe2ecc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0275c81-de58-4b50-a5e3-b5d2f7f603d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0104ea9c-3337-48d8-84c9-73efad765385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adc3e56-3114-4e27-a97f-b83cdee5e6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6f5ead-8704-46ed-a493-1495ecbe204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1bff08-effe-444b-83b0-9c36b36365f2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603faadb-0cfd-4033-97ab-a7d98decf8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950cdaa1-7927-45db-8324-ee5bdfb59f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5ad3c1-0ae5-4b9b-8a4c-7c6a49ae0cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bc9217-3ef2-4ba9-b04a-2a0d5e0cbcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fb9903-74fc-46e3-bccd-0010057608fd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baec016-1262-44f9-8846-ae576c688f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d962d4dd-6338-4074-b28b-5ddacd318c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d734980-ec0b-4395-8e78-0b37239d6405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdba0e4-bb19-4c2e-9da6-8fcada1c982e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20a140a-2d30-4b62-8d10-0d24bebbbdec",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e073d7db-51b4-4204-b547-a3788e730242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ade7346-3b33-4f4c-b727-be00727979fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151e58be-abe3-44ad-97dd-3228d267b807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a7ba3d-efe8-4fb2-964c-2d5a1e757958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aab8082-a21e-4ba3-9bf3-7388bc5663c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116d9341-e97d-47f9-b610-8b4f3819febc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f89702f-edd0-41ad-b1b4-6dc5913cc8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89730e97-5caf-4506-bc9d-5622770ec5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1cebe3-a8a3-4501-9acb-8e8859e5eb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65c22e4-b2ad-4b62-9efd-88877cf92b73",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029d719c-e7b2-41f1-a628-136efc79f2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5189c9b-46e6-49ec-8f9d-4e1d7726b7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c921b4c4-6919-4cce-aeb1-6860fdfed712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49036b7-4b41-4d6c-98c5-9ea9e18066a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836bd9d3-15e5-4341-afbd-0ef2c3d46244",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca0dc29-a4dd-45dd-bbe7-2de6539a7bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970f3bce-1ccd-4ba9-b6de-387ba3598805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d7aea8-278e-48a4-bead-44385a6d3e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359f08ba-b074-407e-a45e-dbb313163e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1213912-852c-4575-acca-cd9c29ec285f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e965a33-35d5-481f-a191-6eec99ccdddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0357c88a-d890-41af-b78d-4792cef2761b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99aca0c-ddd8-47da-800e-2e6dc18dc10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed026142-90e1-4ca7-9c53-2252156efcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975fbb21-7f33-4277-b8e5-82624963a90d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09608c2-3faf-4fc3-b944-246314709430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df32f195-ffe1-4656-8591-5ac1e5585ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7d7bea-dc36-4a78-9c5a-c91b0156b872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f831ac4c-a082-4e45-994d-fb9a223d2a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6914254-46e0-462b-9dec-02a4fe847489",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8884e746-66dd-44d4-a7b8-efd9826b375b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22a6b94-6ab8-4dd8-a8fd-d4d7c336195c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9018814e-5d8f-4e6a-a215-c022e188c9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7123ff90-cba0-4240-bc4d-8999cd63bc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d94579-082b-4f8f-b59c-38924ca96b35",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7f9206-1f02-4012-9b5c-0a6c9f3a6328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c189cf7-bcc0-4cd2-b333-3f33c440bd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec10bdf-91dd-478a-bfc6-d55d147e090b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f59e9ba-7b81-405c-a795-d84d7e2b435b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647d6906-e642-4fe5-9798-1c17be00a740",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689aa2f8-a13f-461f-963f-f8b19eb22ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f3fee99-7cca-454b-a6c7-d2f0f8556208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14c01eb-afa3-4461-bf44-eee6e2801b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82c0f6b-3ed9-48cc-9926-df16e910aa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e261edef-d596-4ae9-8e33-1e2929651892",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b4a6d4-08d5-4f1f-9ed6-f3c925e0e1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c242a36-3d58-423f-94e5-cf3e8bb0fcf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a940f6be-446a-4fc7-93d6-068882e6a2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5179569-d1f8-43af-8ea4-907a8f1385a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e49d62a-fafb-4736-b7b2-f67ae5035deb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff5ac6c-aae4-4d7f-b94d-0090c00deffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209dcf44-b476-4247-a8d1-5e5a87671e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a027a70d-d77c-49a5-bfe0-8ca292f6fd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dc5ec7-809b-4703-9921-18936e187bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83582c89-4bd2-4666-91eb-2240e0fbbfdc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c233c688-8c32-4a16-9c26-a0c561305298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d53326-0307-48df-b18f-a04440477c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fdf09c-7520-4784-a01d-5f9bcc7dfae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c835600-d97e-4336-9376-72763b44872f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7c9c2c-490e-470c-bbbf-6fa6f60d0a11",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5491c04-4773-439a-93c6-ed6be40c4783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ac1b32-469c-45e9-8799-ebf79f073527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d92616-3959-4510-939e-55150e7fd737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70305e67-667d-4893-93a7-3ee3184905be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f38672-e17a-4c27-a8f3-1444284ac608",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5740a6-d091-4ffd-bc01-2c24194fd8d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07aa668b-d457-4e0c-8746-ca0f6637f7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c06896-1cfd-4eb5-9f89-91a99ca48e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7020a865-d963-46c0-8965-3e684fc2824e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6de587-82d0-442c-a202-a4f5715bae44",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8594891d-3913-4650-a679-2d362410e036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a3c451-f7a8-4d94-9d4e-55b0b1218eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6c2632-c2e1-4a4c-8e9f-c6c39c28098b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c471646-0bdc-4319-a5f1-ee47b145a557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4905dab5-835c-46d5-bdd1-203d4a4a7186",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ece0104-e95e-427b-a6a3-9c2846307cd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7896f4-2e7c-4e17-9993-81348fb1c6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc8fb51-5b04-47ba-bbd9-65085b5f411c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69533147-5224-4bd6-b3ca-8ff62542d598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dca414d-91b8-49aa-95a4-a7738e3c7824",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34977187-f7bc-4f57-8a08-882b0ad97059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ad0a19-cc2f-44ea-b89d-48c22e9ea282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecacfa4-7315-49ea-9eee-77f49fd999e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6bf374-a5a4-4837-87c8-1deb94e1dc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b49af0b-7e11-4247-8ed1-4cf6a874c24b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f05f76-ce00-4262-a53d-47bad9dbd7a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b249c5-2c17-41f2-85f6-6fdf93b8213d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b14273-0073-438d-b83f-732185684a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b607465b-265d-4942-bbeb-fb0548e229d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9de5b6-c35e-49c6-854f-3916d170da30",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c46408a-75ba-494b-88d8-2497b3ba5f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3caac1ae-3f75-47fc-8caf-99102583d801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30894b83-fdb9-49cf-94aa-79a77ea695f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6018a2-95c2-45e9-84da-4988b0cb25c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a71f44-1895-4b95-929d-a9094d53b98e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ba73d7-cef9-4cfc-b461-4cd69104f5df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4f7d8d-50f5-4e46-ba7e-663dd19b5b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3143963-27e8-4cfd-8eda-7be5884b0c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcd57fb-97cd-4a0b-9145-0943ce78cd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b63c26-5244-4edf-a1b4-b3530611c3bd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a24846a-95da-4c92-8876-df492e53b3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c66fc7-d682-4c61-9c21-94cb74a4a643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156afaf7-1234-462d-becb-fe579b3ead0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05d8af7-0d1c-4715-a64a-e94332e3bc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54ee5cb-0ec4-4bf3-a182-287e8d189564",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c36058-f121-45d2-aa0a-e9e12614ff19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6f1526d-ffab-45cb-914d-c987d48409f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054bb5ee-f89c-4137-ab5f-d6aa638ffd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c0d931-4fdc-48a4-9f11-3075fd6a43c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7400cc4b-0bf1-4e2b-89c5-3978f9d9c9f2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f220d0a9-2883-4dc0-ac16-7c779243a686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdec5dbe-400c-4a8a-b50f-fa00ce91bd74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c589259-9e76-4ed7-af44-7776b764010f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e57d9c3-e93f-4416-a1ec-4229b6e51fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f657a266-d6af-4879-a3d6-e95e95cd6ca2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadfcaf3-8b18-4569-9bf3-7a41f833db92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956d14d1-b4f5-4085-aa3b-100b7f4e9387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594a6ea9-e540-40db-8585-4c12987396be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc46928-b3d9-47f8-8746-6e52cf893963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a5be96-97fc-435a-92c3-310a430afe52",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b8279-eb19-4fc7-8e80-2cad71ff8911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a1565e-f322-4069-8b5a-8d325edbf1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e240871a-de3f-4c06-b045-af0206e71048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55eff4f-2854-4207-9a45-6c9978dabfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc05f27-97d4-40e0-81f1-8dcee6c17811",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9c9388-cb37-45f0-8e35-9eb314ddcf4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8ebddd6-a98a-4faf-86af-86d9fdbd4fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91009913-a8df-42c6-b847-31381796e560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be98bc6f-417f-4669-90f2-306ad1a41c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea0e452-3b04-4d69-a325-7fe968d70106",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6923c70-a00b-4d67-a212-9632d7bee847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1710cd92-2f43-4023-b270-c6a833ef8278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4567ae-db99-4269-be88-78125956e661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03fdd23-e179-4b94-9a52-edd91fc6c868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f855e804-2772-4c52-8fa8-f4a4385b159c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157c40e0-2414-43cb-b903-c8a1ba15cf7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33b3a5c-fc8d-472a-a79a-613444a95d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f282e01-98c6-4fec-9078-75dd04fd5546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d69dbd0-fda5-423c-9a86-cf4763586b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2112af1a-a241-40ca-b9bd-b04a50264603",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b05e6bc-f6d1-4699-8e06-7d8c9838ae1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3e50fb-8269-4579-aacd-ea2664e1dbbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd8f8c5-b49a-4e47-ba6b-828790eb1639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec58b9d-1783-460f-8a44-48205c03d903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3578690c-2adc-493b-932b-9ebfa9344b8f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbc4364-7022-46bf-96ec-43d5e13c96e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08eec941-b53d-4d3f-a40b-8a7fd2b67e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e1d20a-8d07-46b0-8d7b-ca767afa8c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9a0abf-1fd8-40b6-9c8f-2a2093adca73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afe1815-2d29-4120-a3ba-cc7cd766c0e9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49c24ee-f8cb-494c-82d3-a8b069c1dee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c883b0b6-aef4-48ba-bfa3-d06ad657d267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "382ae841-7ba8-42df-b2db-3794c462a913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5f3187-b768-4b67-87e6-3fc006e0c131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dcfb97-6159-4c9c-94c2-d2a9608b8564",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23d2605-f2c6-43e1-ae0a-12b27b48b8e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db755fe0-f4f5-4a20-93d4-64b2df473022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286708f9-22f6-4978-b888-6c8cfeeb4906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f39cde-1a14-4132-b77a-4875a387bd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7189f313-bdd0-4a46-8802-3e698030295d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d7b5a5-314c-4b24-9488-171a880f56d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876cd159-35c7-4a78-8440-71038d22792a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf4c05d-f30b-4eba-9a27-58816b6b912c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b627b0-4f0e-4b85-8f7e-413dbe8bbe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cc18d9-bfff-43e4-b508-f8c6a2d21da4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465d32a0-f781-465d-a9f4-40ad0abfc9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7890129d-506b-42d1-acd3-a0fa9cffc52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c7e778-bd3a-46f8-8aa3-965c214fb224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ae9e86-47f2-4809-b196-d95e70b87671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a176e5-8702-4f2a-9df3-d99296b208ad",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9272b4ce-09fa-435b-83ba-49a42d49734b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da3ef368-b37d-4a09-9dd5-4b48c2fb183e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0f660d-2829-4c1b-8b0d-0b5846b704ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3972b3e-8ba5-409f-8d3d-a69ee22ac5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c677f1-4923-4d95-ba8e-e81034295b8b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed95d54a-4969-4787-977d-12d246dc3dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd94c79f-4cb9-4f7f-9521-bb821f4dad41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ac1112-bc1a-4f07-9ef0-58a5bc2c42ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e1a242-353c-400a-8d5f-d1f175a4da58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d3ad79-dd24-45bc-a27a-6ced655667ac",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1acc68-4ef6-4886-8f38-0aa95d8a30f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a24ee68-6784-4776-b96d-be6f31f5cdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706971b2-1e98-42d4-862d-ff3d84b00538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd902d1-7ffd-4a34-bbf1-3356f2327e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f9a654-7291-44b5-9ca6-1684ab004b46",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f31292-d2fc-4688-84d3-3963da03233a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635deedc-df34-4ec8-a17a-3fedfdef1d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bff2ca-711b-4e7f-a194-933521497938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ba639d-b74c-45c2-b7a8-a88d61186f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b593f0-4dd6-4808-88ba-b70ae84ae803",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7358301b-7b08-4cf3-bec7-1027c9648cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a5dcc6-ad42-4771-a6d6-a93e606962cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c02de87-f3de-46ae-a5db-03b22a46bfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f126c0c-65be-4c8b-a25e-5084746129d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508df784-bc62-46c5-a2c9-f1ed72103bfd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951a9aae-a506-48a0-a634-657b439f3277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f230426f-10e7-43de-95e4-dd85414d8139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fa8d64-ca6b-4b04-b60d-a56b720fdda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7962e3-4993-4bfd-ba42-13a7635d0b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcc941f-2b6b-4f49-b036-2fe9192d3cd0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de4385b-7902-4da4-95ce-1c557d586472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c5b040-eab9-483b-8463-0a1452604430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60270ff6-6b99-4c9e-9d61-1e2d58a1d858",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3649e59b-2d93-46b9-bd03-d1f24ba43475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3279c35f-9ceb-4369-8888-09ed85b691cf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfe5d6a-8d45-473f-9bad-e4a9a5ecb176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3020416-0314-4012-bb11-bd3aa1644ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73b530a-9e5d-40e9-bf69-6948e7f6eeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6178e1ad-bb77-4cd6-83e0-e5f6a420b12b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fa290dc-bb49-4290-9d37-5457df697ce2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbd317e3-78b2-45fd-9ea4-d32726c0729e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f6017ea-1145-4ea1-b83b-d1d39de7930e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "170e1367-2837-435d-b958-df0017c0db77"
                    }
                  }
                ]
              },
              {
                "id": "52b62794-da01-43a9-8823-f2d359c6a609",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ef09bc7-e07a-40b7-8e1d-cfff88f92432",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86787ec-68f9-4c28-b109-ebb06423eb8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4f021a45-0a9f-46fb-99f5-475b64b9934d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fe03bd-eafb-4ab1-a985-d9fd56440e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4c16862-4efe-44dd-8f88-c3d9a74685e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3768ed1e-6549-4263-8903-52a5d57564ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b93e30ac-494d-42b6-a1e8-b88a73175e44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2001262d-abdc-4cae-bde3-6755a8995e73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa58f59c-cdd5-4647-8471-c6861746735d"
                    }
                  }
                ]
              },
              {
                "id": "8073d7f5-c4ff-4970-93bd-41de2f4ab1b3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "88e2c951-f3ab-4b6c-a557-76700a022b15",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565ac799-836c-4a34-956a-5821cab2eab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4cc70b13-6ba8-41a6-a380-755128d341ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74797603-60f5-4a19-9074-b88feb7a3b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0622a901-fbcc-45bc-a667-f509cf70d238"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ea93059-0919-4f55-a653-83da126d12ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b031488-405d-4e6e-a699-ad44dee1fce5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0ff9bcf-018c-4a99-a3ea-83f7d1ba095a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3bc2efa5-f13f-4d4d-95ba-646fcd92f27f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e17a3631-12b2-4724-bf6d-e0d645623f40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "626ebc37-b5b9-429d-94dd-9eef67490928"
                    }
                  }
                ]
              },
              {
                "id": "3a67a978-cdb3-46dd-872a-cea471862734",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04077aea-ef4c-48e0-be05-79a65607f55d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f0c62070-57c9-4074-8c10-31b0001f8a76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "373a2449-3991-4435-bee9-8106fb86244c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18dccc42-b0d4-43e6-a4b3-7163930de36b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d56c225-43bf-4f97-96df-fb0c2bd729ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e1cc7ebd-40bd-4f4f-ac92-a30fc5aa666c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96283bd0-2f12-484d-bb44-eabaa617be8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3eca4c9e-810f-4102-9f8a-5e735e935a14"
            }
          }
        ]
      },
      {
        "id": "b9ed724d-d723-4f43-860a-792dfae0ae7c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b1a1a067-9c85-40a9-b5d4-85fd3fe3024d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fefe52dd-d174-42cd-bb5f-47739a18eb31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "007b44d3-2092-45e4-8af1-4e4669b7ab60",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a0fdf8-4948-47aa-8b93-e81ec7523494",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8973a78f-dc7c-41ea-aba9-df492eeddc3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bef9df-0b54-4655-b281-67ea7b239904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5cc0220-7c69-4893-a991-57fd0f87cb6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96e80944-b2fd-477e-b21f-74486e942841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d254bdb-467f-47dc-90be-ef2ee8950f9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07783869-7919-4756-a06d-06332533ac4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "954bd977-9f50-48fc-b11a-c3eaf9ba68da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23b45495-be45-44d2-bc43-e4b5ea1a1668",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f13e9d92-1c79-4b66-80a5-10ae3d74c3fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b150dce2-60b3-41d1-9ee3-fd03973b39f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57e6f488-45c9-4969-8e4c-f4a3594452bd"
            }
          }
        ]
      },
      {
        "id": "4830c01d-d689-48e5-bbca-8bf6b0d678d3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "35b339dc-8c4a-4b5d-ae44-c5dee4447617",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aea60058-304b-4e38-ad88-3d9bf44cbc3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e175111-1940-4fc5-9359-a5b172367244",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fbda9e-0abc-4a8e-98f9-78a8ec91d36e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbd4ee7f-5b5f-4777-a98e-f7cecea4cec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31720ee-5ce9-429f-a198-ec3756f378d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e143a87d-d37a-4d2c-a29e-d706105e05a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e80de61c-bc75-498e-bbb5-23a700983b9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3661e42-ebbc-4806-affa-3f1eb70a389f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a87cc68-aa24-4295-9cea-c05d48638aac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcc88e8f-7c21-48b1-8933-a69c3781141b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f721235c-19e8-4060-8c0a-189f1e874cf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "719bacee-0fe1-4860-9f2d-cc236ba42426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22fae511-19a1-47be-9048-bbea8e03d83a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99520d79-2d61-47b3-ad17-11f637b90988"
            }
          }
        ]
      },
      {
        "id": "8a372549-190e-4310-aa82-abda985c5b1d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "92cc1b8d-d361-49aa-9b43-6471a34e5c7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e49a43f-e2f9-4753-9fce-597290aca9e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ab3d6ec-08d8-49a6-bb21-342874b2f522",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af033cec-56b5-442b-ad73-3295ce11ed93",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aef0d578-c414-4cbb-8431-78550c2d953e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e8249b-5b4b-4cc3-a45d-9f0e185c1b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54d5cf38-6129-484d-b047-6e58f1dff79a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0c27475-0495-48f1-8ef5-8eb1e65c874b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23db6b52-394b-4aed-9411-7b84a236db5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dc9f48b-860f-4c63-860d-218f74971fe2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4c5175b-ad56-4054-a07f-c98023121b4b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb982169-6e90-4278-8603-798ac03493b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b401b673-1cd8-45c0-9e4e-e6f544098688"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c192c02e-2043-4254-a1c1-bcbec1ad93a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b28c267a-2585-4a74-81bf-a55d28ddd40a"
            }
          }
        ]
      },
      {
        "id": "3219f1f6-b88c-4197-ad10-3a0a5f9ddde4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc6d78e4-6d9e-4fd6-8c48-f1f9dce6178c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eefd63d-aeda-4de2-922d-6e15a27db51e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4e737512-3841-44eb-924a-c3c13d76b982",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a4afc2d-6481-462f-8dd8-aab42b20d201",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc9cfa49-4e9a-463c-b8fc-1aa7f636d161",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 712.686507936508,
      "responseMin": 7,
      "responseMax": 27827,
      "responseSd": 3866.2810174237193,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727311487762,
      "completed": 1727311675922
    },
    "executions": [
      {
        "id": "72654c78-341f-4637-b39b-e3fc659164d2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81a0cf90-a4b1-4be4-b28c-e3ed3207f29b",
          "httpRequestId": "9e9c2d26-64cb-4bf8-adb0-9906ddb5c937"
        },
        "item": {
          "id": "72654c78-341f-4637-b39b-e3fc659164d2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d7fae91c-01fc-4754-9b8b-4354b21ec0e6",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "3c82b5c3-50cc-487a-a077-c615e528def9",
        "cursor": {
          "ref": "548a5dcf-d947-46ab-9e17-e458443204ca",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "21f105e5-8a86-4b0c-829b-0376d70928ac"
        },
        "item": {
          "id": "3c82b5c3-50cc-487a-a077-c615e528def9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c205016f-a230-47d2-b6d0-58a182848458",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7b62f1e7-0327-4697-9c0c-e13121630c9f",
        "cursor": {
          "ref": "51ee84cd-88ca-4ea2-be6c-8fcec44366b2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1043b749-79d7-4af1-ba1f-5c037a49a44e"
        },
        "item": {
          "id": "7b62f1e7-0327-4697-9c0c-e13121630c9f",
          "name": "did_json"
        },
        "response": {
          "id": "9b12b288-5215-41e6-af04-149fe5006e0b",
          "status": "OK",
          "code": 200,
          "responseTime": 332,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abc1228-55c6-4a76-9944-80d8e362b23a",
        "cursor": {
          "ref": "890749d8-622f-4a36-b02f-413479443a1a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d56d8ff8-21be-4878-b883-efa7d881abf4"
        },
        "item": {
          "id": "8abc1228-55c6-4a76-9944-80d8e362b23a",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7008e21-295d-4190-95fe-a81c2e007300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2224,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abc1228-55c6-4a76-9944-80d8e362b23a",
        "cursor": {
          "ref": "890749d8-622f-4a36-b02f-413479443a1a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d56d8ff8-21be-4878-b883-efa7d881abf4"
        },
        "item": {
          "id": "8abc1228-55c6-4a76-9944-80d8e362b23a",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7008e21-295d-4190-95fe-a81c2e007300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2224,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5e51ca-5c86-413d-93ae-8e084ec0627a",
        "cursor": {
          "ref": "c7247df9-5bfa-4471-a3f0-bc75fcf3420f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "74c4cf26-be29-4439-ac56-5294a55e2ec2"
        },
        "item": {
          "id": "8a5e51ca-5c86-413d-93ae-8e084ec0627a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c2747602-ac0d-497d-880b-e0ef78886339",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2665,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9422fb41-26d8-4744-9563-a295ff423975",
        "cursor": {
          "ref": "0d4d7757-1014-408c-bc97-eb410826d673",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6169f947-74b5-43d5-9774-0371155b0780"
        },
        "item": {
          "id": "9422fb41-26d8-4744-9563-a295ff423975",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5b7d97b7-57a7-401b-94d2-63053fffcfc6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2366,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bd82ce-0ec1-4a44-b978-4424b46f002f",
        "cursor": {
          "ref": "ab3de85a-d969-4fb5-8e60-63d90a810785",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "552436df-6fe2-4154-97b5-ab3f43a5748d"
        },
        "item": {
          "id": "72bd82ce-0ec1-4a44-b978-4424b46f002f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9931f173-0abd-446a-86bb-e26b82b74ecd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a9e62f-ac80-48ad-8bb9-fbbe717c18ff",
        "cursor": {
          "ref": "f1d70371-e092-4c5b-a0b3-254860ce91e8",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1ae36bfd-4b3d-4b4e-8f26-263806cb8874"
        },
        "item": {
          "id": "76a9e62f-ac80-48ad-8bb9-fbbe717c18ff",
          "name": "identifiers"
        },
        "response": {
          "id": "45031c4d-68ca-4b04-974b-0fbdcb23ac62",
          "status": "OK",
          "code": 200,
          "responseTime": 2497,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ff2ce6-bfc7-425f-afff-853cd6e64202",
        "cursor": {
          "ref": "eb9fbba9-703f-4485-a16a-aa87a3d8da2c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c9a52fa2-05b0-4664-bbd7-a00274463a84"
        },
        "item": {
          "id": "e7ff2ce6-bfc7-425f-afff-853cd6e64202",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ca5bf81c-3da4-4e1d-b5ac-e2e405ae6e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f1a722-5239-4bac-a0ad-8e2b8050f892",
        "cursor": {
          "ref": "4c596d81-6f26-4511-9b6a-8120391f8f51",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "973dceec-b2b7-458d-ae56-b5cb1da66c10"
        },
        "item": {
          "id": "f5f1a722-5239-4bac-a0ad-8e2b8050f892",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "595c63b0-3453-4116-9633-60e905272750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103db66f-5151-426e-bd74-b2ff7829294d",
        "cursor": {
          "ref": "12206f0f-d0b9-4885-84f1-26f7f9689639",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c6f30b34-491c-449c-a422-42aaf6703545"
        },
        "item": {
          "id": "103db66f-5151-426e-bd74-b2ff7829294d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "05345a5c-b47d-445f-8c5c-bf1f3c44f12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebff84d-dfe6-4fc4-96d8-663b5fb1cf59",
        "cursor": {
          "ref": "b4fc6093-beed-4e3a-a8bf-2e276afe7ce3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f1f5dace-8e12-44a4-a972-c77481edaa1e"
        },
        "item": {
          "id": "5ebff84d-dfe6-4fc4-96d8-663b5fb1cf59",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "85095955-fa60-46dc-8df0-617bb94a1af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60850c3-a1fd-4a31-ba10-0296e219e66d",
        "cursor": {
          "ref": "0bd39e2a-5d97-42e0-b405-98e6f01876b6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b108bd53-bea9-460b-99aa-2aa46bf331f3"
        },
        "item": {
          "id": "a60850c3-a1fd-4a31-ba10-0296e219e66d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5549b7c5-40ec-4067-91fe-a290d97bb8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb73c41-5ee6-4c61-afb9-df94f957915f",
        "cursor": {
          "ref": "dd689d1e-4626-46b2-a503-a7108046ef59",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1f580f88-f862-4230-86a5-a7cf6eead31b"
        },
        "item": {
          "id": "dcb73c41-5ee6-4c61-afb9-df94f957915f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "198b2c3d-c3ae-4110-9b85-58e3391e314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4518f304-6b25-4c4a-a139-23b6fa28fb10",
        "cursor": {
          "ref": "238e3815-2c3d-48c6-a030-3af7fe26eb53",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "62f62915-84bc-4466-8baa-4cdd0d5dea44"
        },
        "item": {
          "id": "4518f304-6b25-4c4a-a139-23b6fa28fb10",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cb3696bf-6430-474d-8b7b-4a73119c96a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381daa0a-c27c-4cf1-a371-67db45b676fa",
        "cursor": {
          "ref": "8146bda6-9b8c-4276-a8fc-b34034d09e58",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "01caf831-6e21-449a-8cb4-f2589edb75ad"
        },
        "item": {
          "id": "381daa0a-c27c-4cf1-a371-67db45b676fa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "06d889be-6c4c-401a-834d-dd1b4e4f809c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eca24e-75e7-428e-addc-e81f4d1bd69a",
        "cursor": {
          "ref": "d4c3dcce-de74-467b-b6c8-34f2bb2e28d4",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "20a8a201-10f4-4a92-b96e-cad383385208"
        },
        "item": {
          "id": "49eca24e-75e7-428e-addc-e81f4d1bd69a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4d54f10c-087d-40c2-b485-7eee690a2e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc278285-82a6-421d-ae4d-229523aa718c",
        "cursor": {
          "ref": "2a829aa5-04c2-4f6e-aa2b-a435ee264904",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "68807bb0-c6b4-4d12-ac75-710ed9bc6644"
        },
        "item": {
          "id": "dc278285-82a6-421d-ae4d-229523aa718c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8d339dc4-558b-4172-88ed-c4e524b49204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1aa167-22b4-4ecc-9b7a-734a531e679d",
        "cursor": {
          "ref": "c6610127-3c4e-4ef6-97c6-ec266b870b20",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e5c72efe-27dd-4e03-b2e4-8d8c1b628acb"
        },
        "item": {
          "id": "cd1aa167-22b4-4ecc-9b7a-734a531e679d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0ce94360-9309-4b62-98c9-da37c9471dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176b118a-03e5-4055-b201-17915468617f",
        "cursor": {
          "ref": "2bcefe84-10e8-4cab-8909-2d553e024912",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "181c6304-1584-49a3-80df-29c7c4955ada"
        },
        "item": {
          "id": "176b118a-03e5-4055-b201-17915468617f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b474ac56-5935-488e-9cea-356b6dbf81e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd5ab6b-6730-40a6-9e13-d0d4fe83d505",
        "cursor": {
          "ref": "d16a30ce-d14c-49e2-982b-5f54ba78c51f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "57473c4c-be22-431d-bbce-9947b64e565d"
        },
        "item": {
          "id": "efd5ab6b-6730-40a6-9e13-d0d4fe83d505",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "440bb2bf-1803-40b3-826b-6175970e234c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9791896a-9a36-4540-907e-1a7764d0ed91",
        "cursor": {
          "ref": "c01a8f04-fef5-47cc-9ee4-eb629a90c45b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "28558f1c-2ccc-4e2e-8837-d6e90e593c25"
        },
        "item": {
          "id": "9791896a-9a36-4540-907e-1a7764d0ed91",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ad5b95c6-1536-4010-8a8f-bc3f7df72903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72574253-0892-4368-94a4-c7c41d0a7165",
        "cursor": {
          "ref": "03769590-5981-4969-a65a-cc10476e56d2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "00864aef-f176-48a4-97d1-6c47d77b90c1"
        },
        "item": {
          "id": "72574253-0892-4368-94a4-c7c41d0a7165",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "acc91b6b-2483-4b7a-9561-3b9dfca20a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769f08f8-aa12-4cea-af2e-d96d00ce86c3",
        "cursor": {
          "ref": "7d40ba59-d949-451e-90e9-5fe4b4165c15",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6132a876-5cc9-4d00-9623-37bb667a52bd"
        },
        "item": {
          "id": "769f08f8-aa12-4cea-af2e-d96d00ce86c3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8f8742d7-3abf-4bce-a50f-d2d439867e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be2a0b6-ac62-4b4f-94a2-3cf5c2eaace4",
        "cursor": {
          "ref": "0b5e1fb6-0690-4174-b416-c5b4203287cf",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c85113d1-cc97-44fa-bcf3-34d9751063a7"
        },
        "item": {
          "id": "0be2a0b6-ac62-4b4f-94a2-3cf5c2eaace4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7f465220-c843-4c83-bfb8-8677ad319270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaabb92-68e9-436f-b0b4-d38945724fa1",
        "cursor": {
          "ref": "a1d1294b-2355-48ee-b030-9f374fa6fced",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2071df66-4a9f-48ac-97f3-485707d94b52"
        },
        "item": {
          "id": "daaabb92-68e9-436f-b0b4-d38945724fa1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cccd3e28-2e25-4efe-a915-d2a234daae5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd41e37a-0e82-4b32-a9e4-cfcfda03c550",
        "cursor": {
          "ref": "9e955cf4-7ff1-4eb7-80fc-eba17dcf31a3",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0c4c7fc1-994a-42d0-96b5-16ae6a0885aa"
        },
        "item": {
          "id": "bd41e37a-0e82-4b32-a9e4-cfcfda03c550",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7ceab8c7-7663-43d4-8f95-4ca5eb9a5bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79476d5-784a-4041-980f-ce123d1ed750",
        "cursor": {
          "ref": "6c9fcfca-dcd8-4ae6-906d-20f8e809649b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9275b218-efc3-4530-b26a-050a82af3480"
        },
        "item": {
          "id": "a79476d5-784a-4041-980f-ce123d1ed750",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a0855421-9892-4691-9438-27ee196613c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051b6d32-9d26-4934-8bb9-b6d3ac929f04",
        "cursor": {
          "ref": "09131d34-79ed-4ef4-ab70-ad5014bc931f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "31204916-3dc2-45bb-a8f9-b8181e5da86a"
        },
        "item": {
          "id": "051b6d32-9d26-4934-8bb9-b6d3ac929f04",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7828387a-ee0f-40c5-baed-c9a3f3c31452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac35104-3219-4ea5-a0ae-270e2c31ecdb",
        "cursor": {
          "ref": "90f33d96-0587-4a25-abcb-f374fb267b13",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bb257db4-fa46-46ca-a388-bc28d9fbe194"
        },
        "item": {
          "id": "dac35104-3219-4ea5-a0ae-270e2c31ecdb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b5b5071f-69aa-464d-b78c-42211761b793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d946214-c330-41bc-afcf-1d0796b10c56",
        "cursor": {
          "ref": "49a39eec-1730-44a9-856b-65fcd77d418e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "02fdb67d-3a69-454c-b25b-6bb6b710314a"
        },
        "item": {
          "id": "9d946214-c330-41bc-afcf-1d0796b10c56",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "aff62e40-1697-45bd-9b80-b295b690839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9f601c-0da1-4494-8dde-7871d5c71dda",
        "cursor": {
          "ref": "c185edd3-6707-4cec-b1d2-7839b88560ac",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "773a21e3-9d85-4246-8400-7449e6876309"
        },
        "item": {
          "id": "da9f601c-0da1-4494-8dde-7871d5c71dda",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "01b5ef67-fff9-44fa-aa94-64407c0c3df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36047489-55be-4d9c-81c1-c662be62fc41",
        "cursor": {
          "ref": "93510ddb-4827-4f4a-89c3-4bf64de3f1e5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4184120b-1061-44db-bee6-f005075f5ed1"
        },
        "item": {
          "id": "36047489-55be-4d9c-81c1-c662be62fc41",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fce90ae5-9a90-422a-be23-e53d3c44d0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99035256-be8b-43ab-87e3-0ae9efc5b2ee",
        "cursor": {
          "ref": "22efe625-53df-42a3-8615-0063542595a5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f9933f4c-02b3-48c4-8b85-ae8984184f4f"
        },
        "item": {
          "id": "99035256-be8b-43ab-87e3-0ae9efc5b2ee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "999676eb-d5f3-44b0-b6ce-b0e422fc101f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846d555f-8b33-4f22-8feb-802893f0d770",
        "cursor": {
          "ref": "e110e0d0-2b83-4357-8809-0babaca76665",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d914ec74-d5a8-403f-811e-827dcc660344"
        },
        "item": {
          "id": "846d555f-8b33-4f22-8feb-802893f0d770",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3902e61a-321d-425d-bd01-b5ee2402564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e3f7ea-ba2c-44cd-9441-85033efdae96",
        "cursor": {
          "ref": "d075496d-622c-4fa5-9daa-c18733622c54",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d1193b6c-e55a-432f-ae7c-c590792fa5b5"
        },
        "item": {
          "id": "f4e3f7ea-ba2c-44cd-9441-85033efdae96",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b14c9212-946a-437c-9bec-1607d46a9daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4443318c-f76d-4a9c-b5a2-3ad075cb560f",
        "cursor": {
          "ref": "3e55c80a-a083-4cc7-bea0-ab9b244d47f9",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1fab3c98-fb94-4e29-ab05-97e574d11a91"
        },
        "item": {
          "id": "4443318c-f76d-4a9c-b5a2-3ad075cb560f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "89857926-6f4f-4859-9cc3-644cc7026926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5126a75b-001d-4886-b25d-f57fa6683b7e",
        "cursor": {
          "ref": "d058e711-f6d2-4d77-883a-59160393e743",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ad33c2f2-92ef-4cd9-97df-371696f8d47d"
        },
        "item": {
          "id": "5126a75b-001d-4886-b25d-f57fa6683b7e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "095436b2-dc2f-4027-9d2d-98fd08611bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129a4cd9-3b31-47b4-936e-b77b9da65d20",
        "cursor": {
          "ref": "6f380702-6593-46a9-aea3-8d0c24d877c3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8e96741f-5d6d-4cdd-9806-45f099e37249"
        },
        "item": {
          "id": "129a4cd9-3b31-47b4-936e-b77b9da65d20",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "602f482d-d366-4d48-91a8-33834aaf8213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd432ed-4f9d-4986-9b00-f08ca9b2a3b0",
        "cursor": {
          "ref": "b5a6e1b9-bf2d-4694-b830-fa9fcb2fba86",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7d1f0397-3a49-4748-aba1-b77da782568f"
        },
        "item": {
          "id": "6dd432ed-4f9d-4986-9b00-f08ca9b2a3b0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2c016096-4e84-4124-b5a3-e690f3a32927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a9f5f4-c642-4ace-b001-3de4b0f0fe93",
        "cursor": {
          "ref": "98bdec7c-42a9-4e0c-ae58-63a32961764a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "98a9e90f-5c61-4ab5-ac0b-1083772d261a"
        },
        "item": {
          "id": "01a9f5f4-c642-4ace-b001-3de4b0f0fe93",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2b6fd9c3-923c-4885-a7e5-73a6ca87cc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a332f72-23b0-4195-966f-5fd804d9eb45",
        "cursor": {
          "ref": "a4e40b79-cc2a-4820-a40a-db95bc7680f6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e7aa4df0-736f-4184-874a-e0a4810284cc"
        },
        "item": {
          "id": "1a332f72-23b0-4195-966f-5fd804d9eb45",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1c38759a-3b41-446e-875e-8cdad696f572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef06781-4cf2-47a6-90c9-78b9d6f48d45",
        "cursor": {
          "ref": "26e0c521-a24e-419d-a3cd-2d67d68d2ed2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0432b85f-6797-481f-9c41-bd5df95b447a"
        },
        "item": {
          "id": "3ef06781-4cf2-47a6-90c9-78b9d6f48d45",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "56c72689-35ea-420b-8849-015cac383381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89464bf6-0a3f-4a4f-a22b-11dde5e94b4e",
        "cursor": {
          "ref": "a097a37f-9fbd-488b-bae0-acb3e43abd85",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "65a22c99-bfdd-4241-b616-dd2d366c649b"
        },
        "item": {
          "id": "89464bf6-0a3f-4a4f-a22b-11dde5e94b4e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "75efe592-4355-462f-9d64-4e68b746bb5a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae704a00-856e-435f-a092-e9a543f0b1dc",
        "cursor": {
          "ref": "99fa949f-242a-4045-bea0-b82e26711a40",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d3b6b9a1-e73f-470a-8881-3da379e5d34c"
        },
        "item": {
          "id": "ae704a00-856e-435f-a092-e9a543f0b1dc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1a61f644-c285-4930-9adb-f0d3d4ffa441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bce8e69-07eb-4e85-a9b0-258d11584926",
        "cursor": {
          "ref": "9c1d7489-62cd-47a6-9f5e-caf1eef2bdb1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "24207a7c-8b9a-4b9f-ae69-3e77d4c5b364"
        },
        "item": {
          "id": "7bce8e69-07eb-4e85-a9b0-258d11584926",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ba6ba782-7e11-4164-85e3-6a07befcf8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46d6ca3-ad9e-4d80-8102-e1eeacd34cf0",
        "cursor": {
          "ref": "04796c42-a9fb-42ca-b944-949d456575a1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "05b44098-d927-40e5-9f81-5d8abaeae9d4"
        },
        "item": {
          "id": "a46d6ca3-ad9e-4d80-8102-e1eeacd34cf0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dd22219c-2480-415c-b151-5ad774a29ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7168c164-ac57-4bd1-96a9-3d57298bdda9",
        "cursor": {
          "ref": "9fefc896-a16e-49dc-8be9-286f35499176",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "822feb2b-b7bc-49d2-b7b7-88318b2cf1e5"
        },
        "item": {
          "id": "7168c164-ac57-4bd1-96a9-3d57298bdda9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "60e1260a-7e29-4d1f-a534-1ff6536b56ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e93fee8-b3e3-4282-959c-37fb16944b40",
        "cursor": {
          "ref": "522b79e9-14aa-48a4-b325-b348ebe1ff27",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0115efa5-d735-443b-9350-9dfae556d0f8"
        },
        "item": {
          "id": "0e93fee8-b3e3-4282-959c-37fb16944b40",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dad874a1-909b-4d36-8183-6549df23122c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e387b2f0-ca4a-4b25-963e-e5f91cc90ebc",
        "cursor": {
          "ref": "353217fc-d019-4c06-bbcc-bd761887e14d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9f03864f-1d1a-41f5-998b-66dc8feb2da2"
        },
        "item": {
          "id": "e387b2f0-ca4a-4b25-963e-e5f91cc90ebc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8c4a67d0-7ce3-4673-89ec-ecbc3d5ffa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861daa09-6bc8-48ad-983e-79809853100b",
        "cursor": {
          "ref": "bd95fa90-4fb5-49f0-a876-b8c48c62400e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "822eda6b-3d10-4c18-8cab-dd5b24f7edf2"
        },
        "item": {
          "id": "861daa09-6bc8-48ad-983e-79809853100b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "deca2e2c-3b6c-4471-93a0-6196ab79c89e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ebee4f-0093-4402-879a-77588b3f3386",
        "cursor": {
          "ref": "bec6053f-8f1f-440a-ac33-532150a8d4b1",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ac07ebc3-c001-4e92-beea-42f6ce8c49d3"
        },
        "item": {
          "id": "22ebee4f-0093-4402-879a-77588b3f3386",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "92aac26e-1bf0-457e-b21c-2b005d2d17b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222e322b-e9f8-4344-8355-9dfad0490531",
        "cursor": {
          "ref": "cc98e4bb-a44c-4c19-847b-aa26cc2650a7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1b4075ae-8e7b-4b0a-8412-885696f2cd98"
        },
        "item": {
          "id": "222e322b-e9f8-4344-8355-9dfad0490531",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "28819e53-3ae0-4a51-bc05-b31c391ed9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907dfc77-e9e3-4a36-9380-11b0b243208f",
        "cursor": {
          "ref": "b74aa95b-cfa2-402b-9dce-35c1753dab95",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fbfe0c12-8f10-46c3-9cf6-fda014ededbb"
        },
        "item": {
          "id": "907dfc77-e9e3-4a36-9380-11b0b243208f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "788dabb3-4e3d-4e05-97b4-2ab9de80237f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b82bc83-4210-4f3c-b3b6-55610a2307b0",
        "cursor": {
          "ref": "0809fd8c-7b4a-4a0a-ba92-66a9ee0d29d7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7d6f613b-4222-417f-8ae0-0cc8ede3646a"
        },
        "item": {
          "id": "6b82bc83-4210-4f3c-b3b6-55610a2307b0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3b689f1b-bd3b-4824-bb97-1d88462a83bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014aba0-2231-41a2-ab82-170a4b6e4ddf",
        "cursor": {
          "ref": "899f2989-4e74-417d-8242-7a650aac0ae3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d71f3d14-0a6e-4fb0-ba8f-ff4b41ba340c"
        },
        "item": {
          "id": "7014aba0-2231-41a2-ab82-170a4b6e4ddf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "815cc562-1875-48ba-b0bd-943f0ebb7de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3dc3fc-e60a-4f4b-8266-b11e94502d2e",
        "cursor": {
          "ref": "38262074-401e-4e8b-b554-28d8e731995b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "54b1d6bc-e885-4b46-a9bd-b8ed9c50cbb0"
        },
        "item": {
          "id": "3b3dc3fc-e60a-4f4b-8266-b11e94502d2e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "800a0552-099f-4e45-aed4-c44bae2f0fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c503066-7677-4f1f-bb53-9a55d9d70fa9",
        "cursor": {
          "ref": "e0b08b14-80e6-43a6-bc9c-6aff4825e9e1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d2981e17-4d4c-440f-ae36-79cb783934cb"
        },
        "item": {
          "id": "9c503066-7677-4f1f-bb53-9a55d9d70fa9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9f6e7ab4-a296-4385-b325-a6e6266d2f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eb4bd2-daac-483e-8d1f-154319fe0b00",
        "cursor": {
          "ref": "a2ff78f6-4eee-4a4a-8424-835022c51ba2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b65ffb44-6d19-4052-aae4-13578dbe3b5a"
        },
        "item": {
          "id": "18eb4bd2-daac-483e-8d1f-154319fe0b00",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "eebcd3a8-c11b-4fd9-b48f-6aeba476901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5303266d-3e24-43aa-a219-5b51015fcea8",
        "cursor": {
          "ref": "985b385b-836e-4ba8-950b-0e847da4defe",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7006add9-810a-4e5f-a8f4-f38bffdc3950"
        },
        "item": {
          "id": "5303266d-3e24-43aa-a219-5b51015fcea8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6e3aca77-59e9-4fd1-9912-e0bde31dd543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2df8bce-d0d4-4470-a565-547c56126f1d",
        "cursor": {
          "ref": "80e455fb-ff78-445c-9041-961f274ba5b2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "827d73ff-252e-4b1a-b5e6-1b3d1b8db6bb"
        },
        "item": {
          "id": "d2df8bce-d0d4-4470-a565-547c56126f1d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "85d78453-214f-4752-9b1e-8fb672e484c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe84114-bd97-44b3-862f-ee3afc6f97e4",
        "cursor": {
          "ref": "cbdedff5-2d8a-4fa9-9562-2ba5c905f1b3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4933ec26-810c-4e4f-bdd5-4baa70574631"
        },
        "item": {
          "id": "cfe84114-bd97-44b3-862f-ee3afc6f97e4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "406ac087-5249-47ac-b1ec-52c97025634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc3c749-82be-4898-acdc-990e4daede9e",
        "cursor": {
          "ref": "13c4311a-44aa-4d39-9a7a-91679e4e91eb",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f7b54fc6-021c-4f59-aa51-1c8b6c331602"
        },
        "item": {
          "id": "5dc3c749-82be-4898-acdc-990e4daede9e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c4dd123f-f2dc-4201-8364-9586b42edcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124898a7-6d53-4f6f-9576-17517506574b",
        "cursor": {
          "ref": "5d03a8d2-81f7-46cd-86c9-1fd2fdd0b2be",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce1520f8-9b14-4565-a0a3-a92a4bba308b"
        },
        "item": {
          "id": "124898a7-6d53-4f6f-9576-17517506574b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fda17d5f-5271-473d-adc9-5746ae35f42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45305328-5144-49c9-8181-dab1ea4a2f1b",
        "cursor": {
          "ref": "ec512048-e494-400b-b637-40372c695e74",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1f7d26eb-1848-4672-b8da-99c29c873e93"
        },
        "item": {
          "id": "45305328-5144-49c9-8181-dab1ea4a2f1b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5ba62081-e853-4e9a-a24b-8181b75b8545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c4e53b-5de8-4edd-81d9-14ca26fb2c30",
        "cursor": {
          "ref": "f3cfe370-a88d-421b-a20f-c53356b1beb1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a19bd17d-0a3c-43a2-a125-8af41ea738b5"
        },
        "item": {
          "id": "f6c4e53b-5de8-4edd-81d9-14ca26fb2c30",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3eb2b011-b720-49c9-80db-4901e26ad77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8840d9-6a2f-4cf5-9356-d83549d34b16",
        "cursor": {
          "ref": "06c55df9-7aa3-4284-bc6f-031fb4dc0a03",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6c9069f0-202e-421e-abb8-1a14ee4e89bc"
        },
        "item": {
          "id": "0a8840d9-6a2f-4cf5-9356-d83549d34b16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8dcea408-e454-4efe-bceb-cfc4ec50e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5f78b2-e997-4333-a514-9fbcdbe0664b",
        "cursor": {
          "ref": "c3b68b2a-bcad-4786-b378-a3f2d1f850c7",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8c47726f-2d2e-47e1-9076-c849930205d7"
        },
        "item": {
          "id": "7b5f78b2-e997-4333-a514-9fbcdbe0664b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e0c1c469-ca2c-4fe0-9c0b-a27e56711eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639c5289-f393-4329-8b27-392559fe39aa",
        "cursor": {
          "ref": "88b50cf1-cb2e-4418-8419-41defb2d8b53",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b077ff5f-e9bf-48f1-8690-351118f8c04a"
        },
        "item": {
          "id": "639c5289-f393-4329-8b27-392559fe39aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6562bb48-006c-43f5-85e3-694b589fd657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21841a54-41b6-4efb-b10d-8e8eabe053ef",
        "cursor": {
          "ref": "1e42c64b-131d-48cf-9ecf-d1a153390c8d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f86ba5a4-e130-4b21-a237-82f8cae110dd"
        },
        "item": {
          "id": "21841a54-41b6-4efb-b10d-8e8eabe053ef",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b74f10f0-431f-4440-9b8b-e1d9fa4ac633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adf0507-1b0a-4ebe-8990-04cc8cc178fa",
        "cursor": {
          "ref": "d71f1841-b3e5-48ec-aac3-e68947363ea4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ae50c155-351b-4955-b28d-0edfd40c9ce4"
        },
        "item": {
          "id": "6adf0507-1b0a-4ebe-8990-04cc8cc178fa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b2a3939a-43e2-43b9-b3e2-fde13398f618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6192a7f6-01ed-4bca-beaf-7330ca104999",
        "cursor": {
          "ref": "254e1e12-42d6-4ffe-9240-514091cd81f0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "10d21b7c-a82e-4be4-a539-eedd4a932fbb"
        },
        "item": {
          "id": "6192a7f6-01ed-4bca-beaf-7330ca104999",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b5539512-9680-45dc-ad98-2297838dfd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0efae0-e73e-4279-a58d-7ed0347db16f",
        "cursor": {
          "ref": "1553ff95-6f5e-4309-82bd-3187bd0ec65a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d1665b2f-77a8-4b95-8c83-8430ebd73cc0"
        },
        "item": {
          "id": "0e0efae0-e73e-4279-a58d-7ed0347db16f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3a7eef0c-8414-4a20-af96-0260ba9bf054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e5424d-ce6e-4355-85ab-ce0e41f20266",
        "cursor": {
          "ref": "97bdd41b-ee40-4b6b-9867-678ba2aab229",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f3c96143-dcd5-4fe4-9aab-11e43e80e288"
        },
        "item": {
          "id": "c6e5424d-ce6e-4355-85ab-ce0e41f20266",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a2170a79-ce01-4d56-bd5d-df273311a783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335148c0-798d-4bca-b5da-7e177c0ad5bf",
        "cursor": {
          "ref": "b27a1460-fdda-4e5a-9868-d616d8274067",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ea9bfe2d-2afd-41fe-be90-fd23250bde4f"
        },
        "item": {
          "id": "335148c0-798d-4bca-b5da-7e177c0ad5bf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e6ea66d4-8596-420b-a129-42ffe746ac6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c284e0c4-b5f9-4355-846e-39f9b86c31d5",
        "cursor": {
          "ref": "cc5cb23e-05a8-480c-a507-1071c4d43a46",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0a027498-23c1-473f-86da-2fe396c80404"
        },
        "item": {
          "id": "c284e0c4-b5f9-4355-846e-39f9b86c31d5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3a25b574-def8-46fd-b67a-b520e0ca32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361770ad-5d46-4179-966f-6f72b4504e18",
        "cursor": {
          "ref": "8929835c-ba03-4e3c-a9d9-180f894f85c5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ade986b8-eaee-4a04-8c5b-3559ede7c36a"
        },
        "item": {
          "id": "361770ad-5d46-4179-966f-6f72b4504e18",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8dbdc5c2-bde9-4be3-ae26-663726e917e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5543f8-4f57-473e-8382-a27f7fe0675a",
        "cursor": {
          "ref": "ceb54073-b5d4-4909-91ee-aa2d84817e6a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3cde3cdd-5ee0-4424-9334-cac8c1bc5456"
        },
        "item": {
          "id": "2b5543f8-4f57-473e-8382-a27f7fe0675a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f31102e3-ee86-4b95-ab43-8a836ae983ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6803a8c9-74ca-41cd-ae06-324dffd95a13",
        "cursor": {
          "ref": "89e1501f-d6a9-4fd7-844e-594bdbad5cf7",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2c60a463-a92a-480c-80c2-1c7105c7e1b6"
        },
        "item": {
          "id": "6803a8c9-74ca-41cd-ae06-324dffd95a13",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "adae3e40-1dab-4ffc-80e6-fc51fef3311a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a0d18b-0dd3-4d01-9035-5f6795d636cf",
        "cursor": {
          "ref": "2c1588be-7397-43f7-b7b7-606cc11684e3",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3ae49e3a-2a3e-4994-ac69-48fe1b26f390"
        },
        "item": {
          "id": "a5a0d18b-0dd3-4d01-9035-5f6795d636cf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2551bcdb-406d-44ea-94fa-a4abbf9f90c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5305ac-8876-40bc-9104-c8a19d3dc4cc",
        "cursor": {
          "ref": "0ab11a5a-8e55-4605-9e69-8d5d9f98f727",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad69cb40-62bb-4bc9-8fa9-bf2199d0a817"
        },
        "item": {
          "id": "1c5305ac-8876-40bc-9104-c8a19d3dc4cc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b512111b-d776-4b63-ad06-5392eed251d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce22bcc7-6f47-42f7-9b7d-b775f50d6ac1",
        "cursor": {
          "ref": "c1a64d92-ed9a-4741-bebc-944f48368550",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1e202a32-1ade-4e54-8fe5-fa1f60c87327"
        },
        "item": {
          "id": "ce22bcc7-6f47-42f7-9b7d-b775f50d6ac1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "34a9823d-41c1-44d9-abf5-b4f3a37d6cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26c5af5-ed0e-4654-be5f-34e122a0698d",
        "cursor": {
          "ref": "5fdf9310-1d97-43f7-93ac-c01958690614",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a675c76d-2b2d-47e8-b3bf-ec53f3911e14"
        },
        "item": {
          "id": "e26c5af5-ed0e-4654-be5f-34e122a0698d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7163ce5e-d4ba-4c22-ba07-634e0648f562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b9108e-f19f-464b-87f1-254e7ab6d6ee",
        "cursor": {
          "ref": "6725308e-ddac-4153-87b0-b1d5ce4908c1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3920dd47-d00f-410d-8124-ea054fc430b4"
        },
        "item": {
          "id": "83b9108e-f19f-464b-87f1-254e7ab6d6ee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ff87d257-3db5-4f1a-9071-a2694f53ac92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad19c06-0d11-4541-9024-056c99c3ffbd",
        "cursor": {
          "ref": "4bc3e687-0c16-464b-8606-4de2fdb436ba",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b8efc134-1af8-4d39-a9e3-3b9c3c6a7009"
        },
        "item": {
          "id": "0ad19c06-0d11-4541-9024-056c99c3ffbd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d76d6d16-50dd-43ba-a690-4e77f915c82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d70670-647a-46ab-b937-0118d13a3879",
        "cursor": {
          "ref": "ced0b7ee-9d81-4ee9-92d4-b29f34488ced",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a1a2b5b0-fd16-4452-9270-7bc7dc373f88"
        },
        "item": {
          "id": "08d70670-647a-46ab-b937-0118d13a3879",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7436ef14-2359-487a-b025-fecbbf4935ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e97b08-cb3e-41ad-9d40-7e569bbe48e6",
        "cursor": {
          "ref": "9d8d5f61-6d02-436d-b927-4ffd09155690",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f84e5930-9db4-4c08-a302-e589296135f5"
        },
        "item": {
          "id": "47e97b08-cb3e-41ad-9d40-7e569bbe48e6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "75a758b1-113d-4c88-9cb9-90a4fae2bb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acea7956-2f60-4eb8-8b0c-be465a0c9525",
        "cursor": {
          "ref": "5c04d7ef-17bf-424f-84b9-bd5fe28edda5",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f633f4f2-59bb-4386-b724-c3d2e0d37ae1"
        },
        "item": {
          "id": "acea7956-2f60-4eb8-8b0c-be465a0c9525",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "37e9a073-56ae-4830-9899-297eabfde570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b30b8e-e3ca-4c5f-af33-c195d06fcdac",
        "cursor": {
          "ref": "55abef9b-1ce3-4fc9-a3b5-18c6085f8538",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "49c76277-41ab-418f-9ef3-3c7bfb29f75c"
        },
        "item": {
          "id": "d5b30b8e-e3ca-4c5f-af33-c195d06fcdac",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5f67e234-1140-419d-94ac-ba0c224a9d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f1ba5a-b44b-4eb8-8af0-d04e32d587b1",
        "cursor": {
          "ref": "df70cd2a-660a-4e1f-a32f-0a5b00515649",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "802d3752-7f57-46c3-bd37-345b7ca9097a"
        },
        "item": {
          "id": "69f1ba5a-b44b-4eb8-8af0-d04e32d587b1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ada746df-49c5-4185-b781-43a00a20ee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536a3689-d732-445b-a638-d60d6e3e880c",
        "cursor": {
          "ref": "8ff857f0-2714-4ac5-bd34-40f5b95e48e2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d80d44f6-9ef2-400c-8f26-7abe06e46cbd"
        },
        "item": {
          "id": "536a3689-d732-445b-a638-d60d6e3e880c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4f98dc07-ab72-4f27-baf3-693f873ac04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0d66bd-f999-4d9c-912f-20cbf406e985",
        "cursor": {
          "ref": "59532894-50f3-4cff-9227-449f75aff380",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "445ccf52-9b31-4591-a02b-80ddc11d3852"
        },
        "item": {
          "id": "cd0d66bd-f999-4d9c-912f-20cbf406e985",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5e186bae-9512-45e6-a554-0c0deb847914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4073fc4-c6c9-453e-8ddd-a4b8013aeb3e",
        "cursor": {
          "ref": "3fb8a000-d545-41ad-a013-b05fcea3c308",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "01bba640-eecf-4fb6-91a1-ce09c197e33f"
        },
        "item": {
          "id": "f4073fc4-c6c9-453e-8ddd-a4b8013aeb3e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "caaa8f97-57d3-42a4-af3a-6217d260655d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6687d87-1ea6-4765-bca7-8d3040d5443d",
        "cursor": {
          "ref": "068890da-d262-481d-be19-e314c7193a09",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ddd1f354-f5a2-43c1-b301-8109abd8ed13"
        },
        "item": {
          "id": "a6687d87-1ea6-4765-bca7-8d3040d5443d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4ef4c2a4-2b48-4649-a858-6446ae6cf5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453adfa6-9d8e-4e0a-a4d8-da6d9853f3a8",
        "cursor": {
          "ref": "efc9d198-cba5-404b-af5d-4f2e08760ae5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "61bc7053-1298-4ddb-a96d-0c815ac0428d"
        },
        "item": {
          "id": "453adfa6-9d8e-4e0a-a4d8-da6d9853f3a8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b92c87d0-1440-4ddd-abd8-4cb42ca2fa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79655eaf-b72d-421e-81d8-f635d2ca4c75",
        "cursor": {
          "ref": "f184a637-da1e-4713-ada9-05dfeb09b930",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "32cbbdcd-2932-4621-b7e7-1512bb36fc1d"
        },
        "item": {
          "id": "79655eaf-b72d-421e-81d8-f635d2ca4c75",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5a95bf08-b4dc-4a73-a86f-14eb4590c92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e945758-3a8b-44c5-a821-5c759b4b27ea",
        "cursor": {
          "ref": "fb393910-a5ff-4d77-a977-8a9f1fcfb421",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1a122cc3-c1bc-40e9-ab8a-2084f767d3a0"
        },
        "item": {
          "id": "4e945758-3a8b-44c5-a821-5c759b4b27ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "65e11b30-7a11-4eef-9663-2197ba73c533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d26799-5581-44e5-ac06-ca70dbe77f28",
        "cursor": {
          "ref": "2ef4580c-52b2-4447-91f6-54e7eb842262",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1311e7fd-41ae-426e-8683-cbd42b61a30d"
        },
        "item": {
          "id": "80d26799-5581-44e5-ac06-ca70dbe77f28",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "01f1c540-257d-460a-83a4-220df56b3986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036fbce6-89e1-43cf-a250-741789e2d35f",
        "cursor": {
          "ref": "e6ed6c58-5119-4013-8883-86258af9a0b2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "554194df-4377-4863-8bee-150cb055c74c"
        },
        "item": {
          "id": "036fbce6-89e1-43cf-a250-741789e2d35f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "823450c9-34b0-47fd-8e0e-9fc535744b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c184c6ac-19d8-48a5-89ef-d0ac000b5e79",
        "cursor": {
          "ref": "caa414ae-a640-4930-9aa0-aa573de71f00",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e1b4e65f-4c01-43d5-a102-d0d9e171d982"
        },
        "item": {
          "id": "c184c6ac-19d8-48a5-89ef-d0ac000b5e79",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "478bc6fb-cfe0-4007-8e4f-6aba8affc0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef5f8db-a883-451b-b027-2a9bc3490503",
        "cursor": {
          "ref": "cddd6d46-31d2-4390-a370-077bea1aad1f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "207ed374-39d2-462a-b5c2-d7f7f3f4d846"
        },
        "item": {
          "id": "0ef5f8db-a883-451b-b027-2a9bc3490503",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "134a4f43-ee39-48d6-a0f4-bd718180254d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c396c3d4-1d13-42c1-9380-3e572829dbb3",
        "cursor": {
          "ref": "0665c896-8fc6-48b0-baf2-55208de70a5f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d7ae0127-7434-4aa0-9302-7d87a6ee21f4"
        },
        "item": {
          "id": "c396c3d4-1d13-42c1-9380-3e572829dbb3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "129a152d-9544-421d-a580-2ee78abfcd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "efc4e7d4-fbc5-438f-9216-7d10dd1daa1b",
        "cursor": {
          "ref": "8683c055-c06e-4590-a3da-5fa528116202",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5c51e668-d4d9-44b1-af39-bc84f256f297"
        },
        "item": {
          "id": "efc4e7d4-fbc5-438f-9216-7d10dd1daa1b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "32255d2f-c060-44cc-ad58-8885cd15e37b",
          "status": "Created",
          "code": 201,
          "responseTime": 27827,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2175e239-d8be-42a5-a2e8-d9abdc186f6d",
        "cursor": {
          "ref": "84b028dd-875c-4f49-86a6-3d386bc09087",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b8fe809e-b297-42c1-9ad3-c7ab2193a353"
        },
        "item": {
          "id": "2175e239-d8be-42a5-a2e8-d9abdc186f6d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5be239d7-b3f9-45e7-b787-959e4b94e894",
          "status": "Created",
          "code": 201,
          "responseTime": 26655,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67658a29-6de4-41d5-9a42-6581499abb2b",
        "cursor": {
          "ref": "7cc41818-bd70-4608-a818-f0a3d52ee41b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5f7a05c0-a468-43c3-b2c1-fd62e95fd14a"
        },
        "item": {
          "id": "67658a29-6de4-41d5-9a42-6581499abb2b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "36c44c24-4be9-41e6-b99c-1d9c8383e718",
          "status": "Created",
          "code": 201,
          "responseTime": 24096,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b2ec10-cfa4-44cd-b0a2-839e1b1f0305",
        "cursor": {
          "ref": "f186b589-6d69-4855-bfc7-f3fe4531b2e7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c9bbb321-4cb5-4b20-87d3-df0d18d44178"
        },
        "item": {
          "id": "e8b2ec10-cfa4-44cd-b0a2-839e1b1f0305",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e6f43035-6ae6-4328-b322-470047f6b04e",
          "status": "Created",
          "code": 201,
          "responseTime": 24455,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0cfff6-6913-4c2b-91c8-6d0ef2476414",
        "cursor": {
          "ref": "03e1df11-f9ba-4c00-b873-ed3d8e477b26",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c919c64a-6c1b-4d22-a955-8404373064fe"
        },
        "item": {
          "id": "0d0cfff6-6913-4c2b-91c8-6d0ef2476414",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "da2ddd81-8d52-49f9-93a3-ea580bad318d",
          "status": "Created",
          "code": 201,
          "responseTime": 24043,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-26T00:47:12Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-26T00:47:12Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2c7fd773-18e8-4468-a726-84de0e4ff2b9",
        "cursor": {
          "ref": "7b469050-ae0d-40d2-a6a7-39f2d37cb1e8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8dadb005-4940-4cc3-996a-7c260ce898c8"
        },
        "item": {
          "id": "2c7fd773-18e8-4468-a726-84de0e4ff2b9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cc488a3e-a6a4-49e3-9841-329a8a2c2376",
          "status": "Created",
          "code": 201,
          "responseTime": 24399,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecdea09-703a-4548-848e-a8d0ec3e31a3",
        "cursor": {
          "ref": "91cc88fe-fbb1-4d10-bd66-d52f62c72c16",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5dfa94fd-c327-4a0a-b030-75813a4f6ecc"
        },
        "item": {
          "id": "aecdea09-703a-4548-848e-a8d0ec3e31a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e63b2dc-a805-423a-9e6e-5da523e79c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308f7385-cf2a-4e71-b48a-5e9ef6245474",
        "cursor": {
          "ref": "5724c97d-c3d9-4f78-bbf7-2bf10ca95816",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "03c63447-5cbe-47d9-aeb2-9a9098f556cc"
        },
        "item": {
          "id": "308f7385-cf2a-4e71-b48a-5e9ef6245474",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e5ba3fc7-61ab-4efc-8b9d-93a33f52d902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d467f55b-e77a-43e0-a1c9-1d638bef7739",
        "cursor": {
          "ref": "a9bf7d1a-b098-4fee-a34b-52471eb480ca",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0a5c0819-b22c-41c0-b1d3-110455fe3cbe"
        },
        "item": {
          "id": "d467f55b-e77a-43e0-a1c9-1d638bef7739",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3c1857e8-3b35-4647-b5b8-16f97038c8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be47f02-3dcd-4865-9ab6-6e46accde061",
        "cursor": {
          "ref": "db76d3e6-6ea8-4367-8e68-b7382c52c492",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f566e997-6702-42ab-9e14-6a6088f325f1"
        },
        "item": {
          "id": "9be47f02-3dcd-4865-9ab6-6e46accde061",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb287fb7-dedd-464f-af3f-efd5fb841df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9a1e48-fbb8-4295-98d9-5fa5d48abbbd",
        "cursor": {
          "ref": "73aca2ee-7945-48ef-8f95-40f3f581716b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "328871bb-967f-4940-bc1f-890412554923"
        },
        "item": {
          "id": "2b9a1e48-fbb8-4295-98d9-5fa5d48abbbd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b40a2ab6-527b-4458-aa47-4a1dc9ae2c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f63b1c-5228-4c9a-9d5f-c6d95086e069",
        "cursor": {
          "ref": "f6c2a2e9-5a1d-42aa-b7a4-e233a496a5be",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0cbd9b9e-4d4f-486b-8d0f-2d8e349d28cf"
        },
        "item": {
          "id": "71f63b1c-5228-4c9a-9d5f-c6d95086e069",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "86c5e8ac-0ca9-48fb-aba6-f5a74eaa0dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92980db2-01cc-49e8-ae9d-c40e6f60218d",
        "cursor": {
          "ref": "00739eef-0337-49ce-a004-137c0e8e726e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b4dda55-e06c-400e-af48-6db846f4aaaa"
        },
        "item": {
          "id": "92980db2-01cc-49e8-ae9d-c40e6f60218d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "134253a7-4a6c-4786-9507-c1f51bec5265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318d68ca-f166-4f86-a869-c5de0d0d3521",
        "cursor": {
          "ref": "82afe140-5372-4067-b0a4-0bf23ea2b16a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "39b8d21b-5c58-4e2c-a623-c039930370fb"
        },
        "item": {
          "id": "318d68ca-f166-4f86-a869-c5de0d0d3521",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cd75747a-70b2-48c0-8b3f-0505f24c536e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a07a29-95a0-4ceb-a593-4c8dae7aad9c",
        "cursor": {
          "ref": "671ebbbb-4e09-434e-8e6e-462d9a08c7de",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3417d20f-5a78-4a29-b291-717e24eebaa9"
        },
        "item": {
          "id": "b5a07a29-95a0-4ceb-a593-4c8dae7aad9c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "554e7582-2ae7-4edb-9faa-6007d97b307a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b25087-c675-4e4d-b839-a1126988458c",
        "cursor": {
          "ref": "1805ab9b-a893-493e-9f41-6d8d1920fdd7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1ac278f9-d685-42b0-80eb-a3e09686740c"
        },
        "item": {
          "id": "71b25087-c675-4e4d-b839-a1126988458c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "15da3ce0-d631-4e76-b384-23c44b1cf935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe9edc1-7c4d-4ccc-b76d-5f751c22f2fd",
        "cursor": {
          "ref": "258832f5-9c21-4400-98ff-ee9ab5d9090d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "55d8e5e8-cf32-47c4-9b8d-561023196211"
        },
        "item": {
          "id": "0fe9edc1-7c4d-4ccc-b76d-5f751c22f2fd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "93f55b81-d91f-48d4-9b06-9374624d021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffe8eb0-d2be-4b9b-accb-16314aaf86c7",
        "cursor": {
          "ref": "2fdcaa22-14b7-4aef-b784-17d354b61a74",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "029c7db4-d8f7-4996-8cbb-09b6cfdd2e21"
        },
        "item": {
          "id": "cffe8eb0-d2be-4b9b-accb-16314aaf86c7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3d6fb2b-8f2b-4ceb-a5e6-283d27ba9118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11933ac0-2cf3-40ed-bf0a-43ee9c0c981b",
        "cursor": {
          "ref": "2a2ef6ae-f011-416c-a603-e838100af82c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "42428821-1137-434f-85d9-f240dc5180f9"
        },
        "item": {
          "id": "11933ac0-2cf3-40ed-bf0a-43ee9c0c981b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3d0652aa-2dc0-41da-ab26-f44d23298b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475eb770-9b5d-4d16-a748-128e5fba6f36",
        "cursor": {
          "ref": "0e245019-0b11-455d-b4fe-7902a3dba8c0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ea8b2b1c-08bf-492c-bf98-7e456c6e4db6"
        },
        "item": {
          "id": "475eb770-9b5d-4d16-a748-128e5fba6f36",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "16d19ecf-2229-479c-9f34-7ecccebe4d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979004ba-a17d-4d50-aec9-e234dd9b8a30",
        "cursor": {
          "ref": "e03181f2-bdd1-4b82-8126-8b77ba760c9d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "05b42119-c3e6-451a-bcf2-1c11e82e5cc5"
        },
        "item": {
          "id": "979004ba-a17d-4d50-aec9-e234dd9b8a30",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ab5343d9-8866-41bf-8210-fa19594a2843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70a1ad4-a68b-4f2a-9e9f-e9f8c1155b6c",
        "cursor": {
          "ref": "b1d8c931-dd6c-4f3e-8f93-f2faeeae30e0",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "be7408ec-40c8-48a8-a650-55a71a0a116a"
        },
        "item": {
          "id": "e70a1ad4-a68b-4f2a-9e9f-e9f8c1155b6c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d0a911a1-72ed-4c49-b97c-db58c61602c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849e5239-d92b-4e4d-84db-16362e2de357",
        "cursor": {
          "ref": "2f7b5f8b-d890-4e3d-aba8-b09a6215383e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e47bd00b-a9c8-43b5-8d92-bb24c53b0d2c"
        },
        "item": {
          "id": "849e5239-d92b-4e4d-84db-16362e2de357",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "341c01cf-5fa0-44a9-b937-b31921afe643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03502e4c-9a89-40c7-8025-8ded24aabd7f",
        "cursor": {
          "ref": "f6d713b4-40d1-4d39-857a-14189de7fa67",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2d1db24f-aa81-4b9e-9e79-e4dd1c14f776"
        },
        "item": {
          "id": "03502e4c-9a89-40c7-8025-8ded24aabd7f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d839249f-00c9-4115-87b3-3cb5f44e944a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07474068-6895-482e-9d25-b20cba45fcf5",
        "cursor": {
          "ref": "f777069a-f4bd-4bfd-b969-def41d0e2904",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6b37cd39-3746-4770-9ede-3e069e821a8c"
        },
        "item": {
          "id": "07474068-6895-482e-9d25-b20cba45fcf5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "37877ca8-fd90-4e82-9d49-e391aabeb631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da600320-9b9e-4dc3-8774-4d2fa76514b4",
        "cursor": {
          "ref": "b5cecfb3-4e45-45b9-8a00-4f8d75d08e73",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c3644b55-9d83-4821-ac99-016f3b6c6b71"
        },
        "item": {
          "id": "da600320-9b9e-4dc3-8774-4d2fa76514b4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5162f724-5485-4927-ae22-c066d17e63af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da913ec-1fdf-4d62-878b-57dd51502487",
        "cursor": {
          "ref": "f4c632b9-9e8a-4001-862b-eb9b0f07c6bd",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7a45b987-ba62-4e44-b9a1-d2b9ac592bbe"
        },
        "item": {
          "id": "7da913ec-1fdf-4d62-878b-57dd51502487",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d85fe75e-353e-437f-8eb6-fea5559437ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a67532-e190-45e9-8c6b-f6de0fd74d50",
        "cursor": {
          "ref": "04f26a41-05ae-4ea1-bafc-7fe49679318e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9f692c0a-ae02-4ae1-b601-1a4e9c7d09be"
        },
        "item": {
          "id": "e9a67532-e190-45e9-8c6b-f6de0fd74d50",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "45443649-6b66-406e-ac35-f7589b48a06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed40df7-bb21-43d7-80ba-253933af5fd5",
        "cursor": {
          "ref": "01e1e68b-b6e8-49ce-a0c0-25e2294005b6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8ed178fb-35ff-4e3d-ac9e-177a40651d76"
        },
        "item": {
          "id": "2ed40df7-bb21-43d7-80ba-253933af5fd5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "89da77de-0dc6-4ff6-bffa-65833155652f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed89ea13-b6b9-40ce-a400-2572f11ab7af",
        "cursor": {
          "ref": "cf31ec7f-7a77-4ab7-b682-b5e69d249cd5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ada198e4-6b85-454f-9f6e-1deea4edb455"
        },
        "item": {
          "id": "ed89ea13-b6b9-40ce-a400-2572f11ab7af",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "54ced3d4-ac5f-43a5-b818-2d4d2e4e7af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64064f43-1747-4ecf-8341-1fafb3c9fcbf",
        "cursor": {
          "ref": "74eb7a50-0d94-44f6-aeb3-4afdab8d5fb2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d644fe17-c443-4f3e-80f0-2e353d128114"
        },
        "item": {
          "id": "64064f43-1747-4ecf-8341-1fafb3c9fcbf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e89346cf-f689-4972-b4c2-81df0bf251a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f80485-e457-4612-b524-0ea10f1c0902",
        "cursor": {
          "ref": "c4b43cb3-3336-4d3a-8939-91a847a1f1fe",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7c2aae12-1741-494b-ae48-8bc80086f205"
        },
        "item": {
          "id": "54f80485-e457-4612-b524-0ea10f1c0902",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fca9353a-b0ba-46bd-8410-97e994b3ee35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0e2252-518e-48e2-84d6-1a10275b014c",
        "cursor": {
          "ref": "ccc0582e-d202-4f05-8b6c-188c75b26ea3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0824c62f-328c-448b-843e-8cd244bc30e4"
        },
        "item": {
          "id": "8a0e2252-518e-48e2-84d6-1a10275b014c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5f230814-8739-46ca-99d4-096d1381a64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37aeac5-7ba8-4e89-9020-063c368481af",
        "cursor": {
          "ref": "4721d2c4-45f5-4ee7-a857-80d0decf8371",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bdd38872-bb25-46bd-85b8-99df66fd7a2c"
        },
        "item": {
          "id": "b37aeac5-7ba8-4e89-9020-063c368481af",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8b36593a-de89-4c0d-8adc-cfb2a1c0ab07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9533a9-f8a9-4cbb-8911-aea1b1984f7b",
        "cursor": {
          "ref": "6d9b7425-3d5c-4f7d-959f-1b1a852d0c4c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a21177be-0091-4912-b6cf-559e7cf42e69"
        },
        "item": {
          "id": "9a9533a9-f8a9-4cbb-8911-aea1b1984f7b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "05cd3c67-a1d1-43df-8025-7eb72298cd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca7be05-2112-41ba-a6de-14225d9073b2",
        "cursor": {
          "ref": "a243ec8d-a077-4cae-8f5c-586aeec8b5c4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "672fdd8d-6a95-4e36-abef-71db17a72b08"
        },
        "item": {
          "id": "dca7be05-2112-41ba-a6de-14225d9073b2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f9178f54-04a0-4862-9015-dd9fff5526f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdec53f-cd60-444b-a017-a14c7f231ee2",
        "cursor": {
          "ref": "8d2af3a1-ed49-4478-8769-369a1a115439",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dd2a1289-9ab6-4601-9b42-8e6908c691bd"
        },
        "item": {
          "id": "5fdec53f-cd60-444b-a017-a14c7f231ee2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6f86cf91-fec4-4c48-bb35-ebaf7f37d2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ab4d2f-4649-4d26-bfe8-1430c58fe89f",
        "cursor": {
          "ref": "7697506f-0dc5-4fa9-8a70-03f1baee0bc1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "203a5970-cf76-4f23-a2e5-8aaee5d41bec"
        },
        "item": {
          "id": "80ab4d2f-4649-4d26-bfe8-1430c58fe89f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "292fd48c-6ca1-4625-a1fb-b5a4bc13a008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ecf274-ba7e-40aa-820b-6caab19c55f7",
        "cursor": {
          "ref": "9948a947-0e7a-418f-8031-e5ad4ec9f349",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "641b85d8-7788-4a64-84ba-859eb687eeef"
        },
        "item": {
          "id": "45ecf274-ba7e-40aa-820b-6caab19c55f7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d23387f6-3b11-43d1-929e-41f1b315f6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11ea5fb-ce44-4238-b9f3-42d8551d8962",
        "cursor": {
          "ref": "55188803-d168-43e6-8949-1f91c2d60ae8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "545dd089-63d6-4c32-98c4-8fe779decc9c"
        },
        "item": {
          "id": "a11ea5fb-ce44-4238-b9f3-42d8551d8962",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3b9c1bbb-965c-4505-87f4-0275ae3a3a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8773b36-3dcf-4b0a-81aa-d0026b934960",
        "cursor": {
          "ref": "103cb7f7-2c68-48a9-a387-8e44f8a96dfd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cac210b8-fbd3-403a-b3d0-5cc2deb4f7dc"
        },
        "item": {
          "id": "c8773b36-3dcf-4b0a-81aa-d0026b934960",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7c122b26-c672-4f7d-9dd2-b39ffdb5f0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f4620-77af-47eb-ae94-a7d7175ee31a",
        "cursor": {
          "ref": "a8645c2e-97f5-470b-b314-0e753f2d6f63",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dd792460-8a26-4ffb-a1b1-c9a001acedbe"
        },
        "item": {
          "id": "319f4620-77af-47eb-ae94-a7d7175ee31a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "714df59d-6a15-4d4f-a2ad-ba99b37e1d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5682ba-6e59-4ce8-858c-3b176853a847",
        "cursor": {
          "ref": "20657103-6976-4904-8bcd-f2adac81021f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fabae1a3-b245-46f7-9937-a2b4517b9238"
        },
        "item": {
          "id": "6d5682ba-6e59-4ce8-858c-3b176853a847",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "401a88fe-5115-4a87-b976-2b66e4e69fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eee7eb8-d285-4b4e-946e-ca1cc8bb41cc",
        "cursor": {
          "ref": "434c17cb-63d3-4917-9920-e9ecc3481c5a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c4e45204-aa54-4a86-8158-b307d9f074e7"
        },
        "item": {
          "id": "3eee7eb8-d285-4b4e-946e-ca1cc8bb41cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4dd8b6e6-57b8-4324-a307-48bc343c7b5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5c27f3-ee07-495f-a0eb-a61b05192c86",
        "cursor": {
          "ref": "8cdbd2f1-59c0-47a9-9b69-107af4267cbf",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b894f001-feaa-479b-85b6-907faac8a76a"
        },
        "item": {
          "id": "1f5c27f3-ee07-495f-a0eb-a61b05192c86",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cdd4fe0f-ee40-4a1f-b294-d9508cffb4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75029386-c7a4-462a-beed-2573ef261251",
        "cursor": {
          "ref": "b8ea2dfb-fc0a-4e09-8056-b9907a69a4fd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4f5bd86e-c362-46d5-8e28-40f063bc3d27"
        },
        "item": {
          "id": "75029386-c7a4-462a-beed-2573ef261251",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "15774646-00d0-451b-b8ad-0c33ce31d589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70bdeb9-c70e-4cbc-a161-c7ed001645ce",
        "cursor": {
          "ref": "953febf3-aa55-44cc-94e5-0e6d72034c4e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "af0a4a83-92b0-4f0c-8510-bb9801b6b80a"
        },
        "item": {
          "id": "b70bdeb9-c70e-4cbc-a161-c7ed001645ce",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4b7faef3-38ed-41dd-bc34-20b758368c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d92a34-a819-4224-ad75-ddab367770ba",
        "cursor": {
          "ref": "fd9ce67b-bbb6-4f98-b623-94e2d6ee9d88",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3a4f3e77-ebd8-4376-9d7d-f0a395d961f5"
        },
        "item": {
          "id": "18d92a34-a819-4224-ad75-ddab367770ba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "49492f17-cd1d-44b6-887b-b974d124e861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fa2cc5-00ed-495b-8874-2a214b26694e",
        "cursor": {
          "ref": "6dfe60eb-4b9b-4a64-b264-972eb2917d52",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b791d29b-e49a-49e9-990f-fb490adf5676"
        },
        "item": {
          "id": "c6fa2cc5-00ed-495b-8874-2a214b26694e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "68d7e708-7bf9-48dd-b60c-8722305fa495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e67ab58-3c8b-4dad-bd39-9d43d384a3d1",
        "cursor": {
          "ref": "05b15bb0-02a2-4210-82d5-189a2160c657",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d899fb4f-9b4f-4e08-9ec8-da774d5120c9"
        },
        "item": {
          "id": "2e67ab58-3c8b-4dad-bd39-9d43d384a3d1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f9c888d5-56d7-4c66-8c42-9c9a80277cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcfdaf2-2fe6-4f4b-8c58-b2c5a9c79f7c",
        "cursor": {
          "ref": "ea28b565-1808-4ba9-8fb1-6bc39fde587c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c3084b59-cbb8-41fd-a7df-f6117a111e55"
        },
        "item": {
          "id": "1dcfdaf2-2fe6-4f4b-8c58-b2c5a9c79f7c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "95f12dff-4fe4-438a-bdfe-1df4913d7127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7b3e27-5ff0-4ff5-b9c6-b8b1703b38b3",
        "cursor": {
          "ref": "8743e235-5ec2-4b70-be21-f64d5c995270",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "010be83d-72b5-4a8c-8a62-f1c636252061"
        },
        "item": {
          "id": "fd7b3e27-5ff0-4ff5-b9c6-b8b1703b38b3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "34a269f3-2be6-4b56-879e-830915eedcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78321d44-2bfb-4fd4-8f5b-86f6590367f9",
        "cursor": {
          "ref": "fc5958b9-06cf-4830-81f8-b092214e7858",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "80bf85be-606d-4276-961e-043286743af7"
        },
        "item": {
          "id": "78321d44-2bfb-4fd4-8f5b-86f6590367f9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a8f610e6-c096-4063-8b49-0d07039d4bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996a0071-c62b-4cc2-a3da-33859fe60d76",
        "cursor": {
          "ref": "7eb061d4-94f9-4902-bd2d-3bda7a1611da",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6050d8ac-3fe9-439e-a5c6-47348ded7c31"
        },
        "item": {
          "id": "996a0071-c62b-4cc2-a3da-33859fe60d76",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a0f3e22f-54c0-44f1-8520-d4bc3c02fb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb369b4-4aa4-45cc-82b0-5168f192677b",
        "cursor": {
          "ref": "9c595b52-c8e9-4a45-b499-7db74fbea45f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "35620c77-5653-41f0-be18-76221686ea1c"
        },
        "item": {
          "id": "dbb369b4-4aa4-45cc-82b0-5168f192677b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b85d012-0953-4110-9d37-2c1bdb048846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0d1cfd-9c59-4aed-9dda-f42a7f528b27",
        "cursor": {
          "ref": "1b6d9a7a-f492-406a-88a3-acccd8ae2107",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ae1a899f-1971-47f8-91bf-bd68a2987502"
        },
        "item": {
          "id": "ed0d1cfd-9c59-4aed-9dda-f42a7f528b27",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "72029eef-d4aa-403f-a192-6e08bd9df591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9ed37f-afad-4a91-a7e8-2be729ebabd6",
        "cursor": {
          "ref": "ef3f0165-8294-4556-bbd0-e9eeb8e5c1da",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d41dab2b-bacf-4e1c-ac11-f16e67fc62d7"
        },
        "item": {
          "id": "db9ed37f-afad-4a91-a7e8-2be729ebabd6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "25a998c9-a631-4734-8c0b-b91ad19202a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1258191b-cf3b-4e90-9369-acb057700609",
        "cursor": {
          "ref": "a2c4ed08-07be-4d4f-b76b-1e2113c157fc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1ad8caa2-1133-48ea-a4eb-30d5bebe772b"
        },
        "item": {
          "id": "1258191b-cf3b-4e90-9369-acb057700609",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "79068472-d3cc-48cf-afb1-fda9b7268b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bc9415-599d-44f5-a44f-0c0a81088f97",
        "cursor": {
          "ref": "67f020ec-43bc-4bac-b20b-1f63a8afa9e7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5d18aaee-aec7-4222-8a9c-24a83dc788fb"
        },
        "item": {
          "id": "03bc9415-599d-44f5-a44f-0c0a81088f97",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4b5a913f-ab33-46af-8793-d46b7ac15dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5dd648-94cf-434d-a0b8-77de7dea8c5f",
        "cursor": {
          "ref": "c2e698e0-3637-4bb2-8d32-c8ead75eeaad",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f8d08428-b6a8-4969-893d-0be9c3d0f0b1"
        },
        "item": {
          "id": "de5dd648-94cf-434d-a0b8-77de7dea8c5f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a443a30c-63fb-4a0d-a41e-c7295d99e2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebddad08-f636-471f-94d4-2c3fa32360af",
        "cursor": {
          "ref": "5cec50aa-6f6e-4632-96e5-88640fa568c9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2a3c7efd-ea6d-41e8-b3d8-d69091c6bdd9"
        },
        "item": {
          "id": "ebddad08-f636-471f-94d4-2c3fa32360af",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "14224713-1c7f-44c0-bc45-a22a314c2b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e1b964-cfad-480c-95aa-a7d3328d59e5",
        "cursor": {
          "ref": "cc65c8cb-9413-4287-bed2-668949494b16",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "684f2b5b-4dba-4c97-8a3f-4b7b1ffb76b1"
        },
        "item": {
          "id": "d4e1b964-cfad-480c-95aa-a7d3328d59e5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "10cd4f68-df1a-4c77-9b11-95e400db4d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef6961e-e6be-4bda-945a-f5aa37aca804",
        "cursor": {
          "ref": "7dc86363-a602-4cfd-9a13-117dc4e5d967",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0e85c4c0-0b92-4ec2-b454-085c05ae4e12"
        },
        "item": {
          "id": "bef6961e-e6be-4bda-945a-f5aa37aca804",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3a2fe6e7-852b-4467-8567-192ffe1f2a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12248b20-5eb0-493e-9ae6-03dbd86d67ac",
        "cursor": {
          "ref": "ab32e611-d1e7-49e5-9182-01371a3b58f4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0a19c694-61ab-4820-8bd2-041e9bfd3792"
        },
        "item": {
          "id": "12248b20-5eb0-493e-9ae6-03dbd86d67ac",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "70c0866c-568b-4313-92bd-9c6096b04a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae7c066-e159-47cf-bfad-f07aa7ef9ea2",
        "cursor": {
          "ref": "f627513c-9f8b-48ea-926d-f6d49f462189",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4e19d658-5c59-4bd4-9a5d-29b2b6955932"
        },
        "item": {
          "id": "8ae7c066-e159-47cf-bfad-f07aa7ef9ea2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8b701e54-ccab-4933-b40a-46c3cb139f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fdb68e-7923-4d66-8c38-8f7ca142dd37",
        "cursor": {
          "ref": "e728cccd-bc9b-41a6-96db-2306fcd7559d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "87c4c33d-2271-4ccf-9e54-95c7b4ef240c"
        },
        "item": {
          "id": "f9fdb68e-7923-4d66-8c38-8f7ca142dd37",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "72962b36-b203-4913-b069-75a11abe5837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c019317e-58bc-4a44-a349-7005b61ab1c8",
        "cursor": {
          "ref": "26734257-2a13-42a1-8772-a71e305722e0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "81a85961-146c-447e-941c-2942b5b9c9c4"
        },
        "item": {
          "id": "c019317e-58bc-4a44-a349-7005b61ab1c8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5b9207c0-2041-499c-98a0-86fceffab32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c00ec9c-5d3e-46c1-a1bf-d019977ee494",
        "cursor": {
          "ref": "e49af84b-f662-4095-ae17-385a03d1d363",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ec017608-23cd-4563-b2e5-2c31af912b57"
        },
        "item": {
          "id": "1c00ec9c-5d3e-46c1-a1bf-d019977ee494",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "08e68d33-ec26-48ae-8eab-afe2d8de1099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69777d6e-2eb8-4203-848d-fef7596c8fb4",
        "cursor": {
          "ref": "d838fbc2-f2a7-4c39-9a09-a86ed32e758f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e175c181-5fe9-4c03-b223-839bd374fda2"
        },
        "item": {
          "id": "69777d6e-2eb8-4203-848d-fef7596c8fb4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e7f47f02-1d6d-4d3d-867a-556c6b8f054e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaf72ed-7906-4ed9-b415-7b0237552596",
        "cursor": {
          "ref": "b036ae28-71d6-473c-abfb-bb4446a4f84a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "17714485-09d2-43da-b7a9-744f8ea991cb"
        },
        "item": {
          "id": "daaf72ed-7906-4ed9-b415-7b0237552596",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8f079220-e3e7-4972-9386-2bc7f57638b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717e0939-3d11-4125-bb22-5e773c8c7739",
        "cursor": {
          "ref": "9a466964-9784-4f08-9e95-2a38197ce767",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b09c3dc4-de52-4f4f-b6ad-e58e0c57eb1d"
        },
        "item": {
          "id": "717e0939-3d11-4125-bb22-5e773c8c7739",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2f285f4d-6727-4ad4-a86c-a347f1afd905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5731c9b-a7a4-4e3f-839b-6adb16a72753",
        "cursor": {
          "ref": "75909c7b-1178-407e-ac14-94b1d7a50949",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d82c0f8f-3fa1-4e54-a2eb-206feddbb420"
        },
        "item": {
          "id": "a5731c9b-a7a4-4e3f-839b-6adb16a72753",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6d66ab26-1faa-420a-bad1-587e3d7892a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3b61f1-a0cd-4e20-8c26-d7a05781b1e9",
        "cursor": {
          "ref": "cf75b10d-4d56-4875-80d5-17c8a28a0416",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ddf1e659-022f-49eb-b0e0-8b6ba520afdf"
        },
        "item": {
          "id": "5b3b61f1-a0cd-4e20-8c26-d7a05781b1e9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a53614ef-b573-441b-9722-7d88a285d0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9d9a07-a14d-4fb1-9a36-b507dcb01844",
        "cursor": {
          "ref": "9525075b-345b-4c10-8a47-dc0fb763ada3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2c42b1a9-c932-4002-9f42-460bcea58840"
        },
        "item": {
          "id": "9c9d9a07-a14d-4fb1-9a36-b507dcb01844",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d67aa521-73f2-45bf-8b6d-3a7a35838b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d741430d-ef49-4492-a237-924c01ab2760",
        "cursor": {
          "ref": "b2017130-b101-4888-9040-98c0db286d87",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d939cc4e-b1cb-4fa8-bc5c-91bfba286a8e"
        },
        "item": {
          "id": "d741430d-ef49-4492-a237-924c01ab2760",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "085e59b4-fe6a-4258-87cf-fb3f922649f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55981969-7c35-41df-b6b7-b1be5a437619",
        "cursor": {
          "ref": "15af08c9-3d53-4b32-baac-57fe6cffbfd5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f7903a76-75b5-4b2e-b691-350c1ec6628b"
        },
        "item": {
          "id": "55981969-7c35-41df-b6b7-b1be5a437619",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "157b5f24-0fab-4e1f-bfc2-5eab11812ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac260f41-be19-4ae0-b267-93d661b5576c",
        "cursor": {
          "ref": "c12b9ddf-906f-44d6-90ab-ab26eae453c5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2c40074a-0035-41e7-95bb-828e90855476"
        },
        "item": {
          "id": "ac260f41-be19-4ae0-b267-93d661b5576c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dc9bc493-6b60-4154-a1d4-3c4b6a2c9a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c910218-4569-471e-9fd2-f25e07ccfdec",
        "cursor": {
          "ref": "21d2d837-efb1-4bf3-83c0-5a085f117da5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7374c3b2-2958-4669-9981-fdc04c73d0eb"
        },
        "item": {
          "id": "7c910218-4569-471e-9fd2-f25e07ccfdec",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c57b18f2-4be6-477d-a037-8847b99c1772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7987a83-2bcd-40fc-9cba-b849606bad56",
        "cursor": {
          "ref": "36560fa6-e065-4db5-b542-42814b0aac52",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b24535c3-4a26-4ed1-b61a-a1a89c08f164"
        },
        "item": {
          "id": "b7987a83-2bcd-40fc-9cba-b849606bad56",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b93a3a14-e102-418a-9f57-a509093c96cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa0ffcf-26d8-4914-8e1d-d26fffa31339",
        "cursor": {
          "ref": "b4f18263-d177-4648-910d-1a9ed1ced70d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "87376f5d-16a5-4dbf-ac46-3ccb25db271a"
        },
        "item": {
          "id": "0fa0ffcf-26d8-4914-8e1d-d26fffa31339",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6f567fdf-9108-46be-940d-22aa8d774330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f258375-a32f-41a3-a7eb-ea0c77b4470d",
        "cursor": {
          "ref": "ea3c8fa5-0d86-4b86-a95a-2d903a67542c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8ffdcbac-7029-45d7-8dd1-fea1a334a21d"
        },
        "item": {
          "id": "7f258375-a32f-41a3-a7eb-ea0c77b4470d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a31f386e-3360-471b-ad26-4858050cd665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a2d11b-aad4-4bcc-bd89-c7d44bd94e74",
        "cursor": {
          "ref": "a3b7137e-234d-48a7-9fcc-7cc374d021db",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9c0d0c0c-40c8-4d45-850f-eecd80a54fe4"
        },
        "item": {
          "id": "17a2d11b-aad4-4bcc-bd89-c7d44bd94e74",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dc83f18a-861d-448b-9b0b-2482be87db76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26df7061-17b6-47c9-a324-9528c7eeecdd",
        "cursor": {
          "ref": "d12104b7-898b-4a85-8dfb-ca61caf6aa2a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f69892ea-e9ac-4bfb-a3aa-b27039829f60"
        },
        "item": {
          "id": "26df7061-17b6-47c9-a324-9528c7eeecdd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "796810b9-cc5c-44e6-b10a-6afdb17eaf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973c18f6-532d-4503-9064-c6fb35722017",
        "cursor": {
          "ref": "005f97b0-9a86-46ee-a311-fcb0f08b409a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e2340dca-c5a8-4876-a81c-7182439f1746"
        },
        "item": {
          "id": "973c18f6-532d-4503-9064-c6fb35722017",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e3271c7d-fc54-4d86-a9a5-102185fea244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168eae51-626e-41fb-8063-bdecf89b76b9",
        "cursor": {
          "ref": "2e323229-9542-4482-abd0-c1b72273da01",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a6b985c4-eac5-4d67-b1e8-4fbaca108992"
        },
        "item": {
          "id": "168eae51-626e-41fb-8063-bdecf89b76b9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c8af4eb7-4205-4292-8795-4717ecd14484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c098543c-b754-4340-b26d-b338c6d6b67a",
        "cursor": {
          "ref": "14aef196-e371-4362-903e-a346c5506ed7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e370eebc-b63e-4c5e-bf43-6b153e658865"
        },
        "item": {
          "id": "c098543c-b754-4340-b26d-b338c6d6b67a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "05b2121f-2d59-45b9-9efc-ffcca8df415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d559354-6cc4-4367-948f-b6148f1664e0",
        "cursor": {
          "ref": "68c7cf8a-fdcc-4a6c-b379-6965b0f5873f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "13d0f381-236f-4b89-adf2-22046451578e"
        },
        "item": {
          "id": "2d559354-6cc4-4367-948f-b6148f1664e0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "27e857cd-c1e1-4a74-9ee8-3b7c763165c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b56851d-da71-4628-be15-b238b3d8bb0c",
        "cursor": {
          "ref": "898a2615-1cb2-473c-8e74-425e5e935003",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1eaab686-c29f-4d34-a1d8-78ac84fdc0a1"
        },
        "item": {
          "id": "5b56851d-da71-4628-be15-b238b3d8bb0c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bd6e98b1-2405-41e3-a0dc-98a552b91b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21358f56-f896-471f-9a2b-640a821dcb4d",
        "cursor": {
          "ref": "60c7d4a9-988b-46ea-a23f-8bc25f67338a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b98a69cf-bc56-49a3-9b1b-94edb000ea42"
        },
        "item": {
          "id": "21358f56-f896-471f-9a2b-640a821dcb4d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7d0c4b83-ed29-4f4d-8456-23075998be71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133b81a5-056c-4cac-9462-a306f453e206",
        "cursor": {
          "ref": "c91b8184-4310-4923-8c39-3f19126dcd21",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "212fd631-9ed5-4396-a357-5531d655b2a9"
        },
        "item": {
          "id": "133b81a5-056c-4cac-9462-a306f453e206",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b491d18d-57df-46d2-9d57-a57256aabcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a55633-7ab4-4bab-be48-17fc8de93272",
        "cursor": {
          "ref": "89a641ea-6a1a-4b77-9235-261caefd0d81",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "68ad19ef-ceb8-4eea-b8ad-c55c2aef0bc8"
        },
        "item": {
          "id": "47a55633-7ab4-4bab-be48-17fc8de93272",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "40834a9a-c72b-4a19-8254-d3486db6c0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbaccab-3dab-449a-a99d-c58e3e104cb2",
        "cursor": {
          "ref": "85c6ccf5-5135-438b-9647-7914f951832f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "75ea9054-99b7-4c43-b007-4430f4723254"
        },
        "item": {
          "id": "2bbaccab-3dab-449a-a99d-c58e3e104cb2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "efac3043-7193-4651-9745-335a21dca84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7acc881-8c24-44f9-a3b7-5459c7135199",
        "cursor": {
          "ref": "9e0b219a-3289-4d9e-86c5-6fe366e350ab",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "672f4d9b-fd5a-4417-a805-a3fb1fc3690f"
        },
        "item": {
          "id": "d7acc881-8c24-44f9-a3b7-5459c7135199",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5cc52afe-32b5-4a13-a306-caa4d50a8d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe33a28-468c-4d6d-9cf6-d615dafb0dd8",
        "cursor": {
          "ref": "a7309aa8-ae4d-434c-8514-6e91befdcfc9",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7431d111-1bcb-4bff-8d5a-9f9b8d29585d"
        },
        "item": {
          "id": "0fe33a28-468c-4d6d-9cf6-d615dafb0dd8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "99cc862b-c89c-4647-b5b6-3735307c4b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6411db29-f7fa-41c8-80e9-86680f060e86",
        "cursor": {
          "ref": "9e446e5b-4e91-4dca-b8eb-a0ef7b64eb5e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5dc120ff-119c-478c-8114-f01bea0064ec"
        },
        "item": {
          "id": "6411db29-f7fa-41c8-80e9-86680f060e86",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4f77f162-4604-4aae-bdd8-8a5298d6c4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be76a88d-0b74-446b-b660-be17a4f70fba",
        "cursor": {
          "ref": "031f3360-e78b-40fe-81c3-13a8c5497695",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "efdaa9f6-0a3e-4bfc-b71a-3fee926bc629"
        },
        "item": {
          "id": "be76a88d-0b74-446b-b660-be17a4f70fba",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0c6ef34e-c693-41e1-8494-fd9456c645dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488da4d3-4e06-4193-8b60-9b0638fe2ecc",
        "cursor": {
          "ref": "dbb865a7-2a66-4e57-86d2-57c15e85a155",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "387500df-6543-4cf9-ae32-ea27bd8d7ed3"
        },
        "item": {
          "id": "488da4d3-4e06-4193-8b60-9b0638fe2ecc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ece5bdc3-d135-4bcd-8526-5cf2ca143191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1bff08-effe-444b-83b0-9c36b36365f2",
        "cursor": {
          "ref": "e1291d30-59cf-47bb-8800-eff5ed2befa0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "442196bf-0a86-4907-991f-315662a936be"
        },
        "item": {
          "id": "3b1bff08-effe-444b-83b0-9c36b36365f2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0af84c4c-b794-4036-aa06-1cf0b9f3282a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fb9903-74fc-46e3-bccd-0010057608fd",
        "cursor": {
          "ref": "bf9de8aa-13b6-41c6-b51b-0a7d235462be",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "95297155-b3d3-483a-b497-5b2a7caf2758"
        },
        "item": {
          "id": "42fb9903-74fc-46e3-bccd-0010057608fd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5015e0e2-c547-4362-8253-07bbd2708789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a140a-2d30-4b62-8d10-0d24bebbbdec",
        "cursor": {
          "ref": "1ec10616-b97b-4089-a1a8-690ad5a5a64e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "19ae4402-863c-4209-99b0-3773ba59a0d2"
        },
        "item": {
          "id": "c20a140a-2d30-4b62-8d10-0d24bebbbdec",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "487b556c-76f2-4452-a212-6fafbb6d6a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aab8082-a21e-4ba3-9bf3-7388bc5663c6",
        "cursor": {
          "ref": "9b81afa7-7ec6-4e3f-8475-6a221ec04b51",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bfd1f087-feae-44d7-b2e1-7a4051420ad2"
        },
        "item": {
          "id": "9aab8082-a21e-4ba3-9bf3-7388bc5663c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ab28029c-e3df-4290-8445-8a4d4c7e95aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65c22e4-b2ad-4b62-9efd-88877cf92b73",
        "cursor": {
          "ref": "b36b7bf7-8a24-48e0-a096-0e85ddcc4a47",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8b664da6-8468-42e4-9b5a-5a74b9d568e7"
        },
        "item": {
          "id": "f65c22e4-b2ad-4b62-9efd-88877cf92b73",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "de2566cb-b476-445a-9bc6-ff768d783e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836bd9d3-15e5-4341-afbd-0ef2c3d46244",
        "cursor": {
          "ref": "ce4c2a1d-670c-402d-aa3a-f9413ee6113c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2aa54b52-bd41-433d-aeaf-379e7fdd6798"
        },
        "item": {
          "id": "836bd9d3-15e5-4341-afbd-0ef2c3d46244",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b6cdb4cd-e787-44c9-8a9f-098597b92a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1213912-852c-4575-acca-cd9c29ec285f",
        "cursor": {
          "ref": "bdc2eb3c-068d-4226-8c03-f6c85ecbc7ae",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "944d336e-0cfe-4366-862c-72d8d40c675e"
        },
        "item": {
          "id": "d1213912-852c-4575-acca-cd9c29ec285f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "18bdb2f6-e074-430f-92e3-3dcb78a0e579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975fbb21-7f33-4277-b8e5-82624963a90d",
        "cursor": {
          "ref": "b078e9f3-880f-4324-8a76-e5fc883fc476",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e7a10064-212d-443a-919c-6411613fad73"
        },
        "item": {
          "id": "975fbb21-7f33-4277-b8e5-82624963a90d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "18f40b2e-13c3-4ad3-835f-94eef2303b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6914254-46e0-462b-9dec-02a4fe847489",
        "cursor": {
          "ref": "d66fe8a9-1504-4f8a-86e4-5aabe0d025cf",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0401fd1f-25a0-43cd-9f00-97f93109ac99"
        },
        "item": {
          "id": "e6914254-46e0-462b-9dec-02a4fe847489",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8988c31c-8aa7-4db8-b9fb-386220138425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d94579-082b-4f8f-b59c-38924ca96b35",
        "cursor": {
          "ref": "9b5c7821-dd6c-4fb1-937f-9d8bb455f069",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8b91cd8d-91e4-4d33-b4b0-ef17b690147e"
        },
        "item": {
          "id": "49d94579-082b-4f8f-b59c-38924ca96b35",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "75a74da3-ab54-49a8-a650-ed65ed8adc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647d6906-e642-4fe5-9798-1c17be00a740",
        "cursor": {
          "ref": "da086c64-031d-49fc-a2bc-c9f7e877edb4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e8fcb32-a9f6-4156-b7d0-10d8e1b11d9a"
        },
        "item": {
          "id": "647d6906-e642-4fe5-9798-1c17be00a740",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "52e40f5d-1b27-484a-967b-59ad73a8c5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e261edef-d596-4ae9-8e33-1e2929651892",
        "cursor": {
          "ref": "2db6ceb6-3475-4842-82d3-b8046ccf4ded",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "026de9ba-708c-4cbf-b698-a17eccb71549"
        },
        "item": {
          "id": "e261edef-d596-4ae9-8e33-1e2929651892",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bd3f18d7-dd8f-4993-a9ee-3807e4f92a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e49d62a-fafb-4736-b7b2-f67ae5035deb",
        "cursor": {
          "ref": "89ec3729-1ec2-4d81-a37a-d6d8fd38c428",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e0a83ece-29e9-4d0c-b870-58747085a88e"
        },
        "item": {
          "id": "7e49d62a-fafb-4736-b7b2-f67ae5035deb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6ffa79b7-16e7-4688-a64a-a99df9c0f0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83582c89-4bd2-4666-91eb-2240e0fbbfdc",
        "cursor": {
          "ref": "4b92cbd7-30e5-496d-b0ee-58003a3d3cfa",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "42910431-2214-4791-8060-78c0cbf83376"
        },
        "item": {
          "id": "83582c89-4bd2-4666-91eb-2240e0fbbfdc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "481f41b9-fe6c-4054-a1ad-5ba596cd439c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7c9c2c-490e-470c-bbbf-6fa6f60d0a11",
        "cursor": {
          "ref": "c8589a68-2a10-49a3-8691-cb6a231b5c36",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6330714c-113b-4886-b739-f0663175feda"
        },
        "item": {
          "id": "5d7c9c2c-490e-470c-bbbf-6fa6f60d0a11",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e5de6fe8-b4de-4502-93cf-6d57b38a33a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f38672-e17a-4c27-a8f3-1444284ac608",
        "cursor": {
          "ref": "54ff9cc5-161d-4fe0-9e42-4763d4b8e6be",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bab31825-2f94-43b9-bd23-65d6b62ff89e"
        },
        "item": {
          "id": "29f38672-e17a-4c27-a8f3-1444284ac608",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cf4850d7-cf88-4741-b61b-7d25bd55b17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6de587-82d0-442c-a202-a4f5715bae44",
        "cursor": {
          "ref": "b671d53c-d012-4222-812c-425efdb98c92",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d6ccefa5-3934-47d3-9f3d-66f2a7893b49"
        },
        "item": {
          "id": "3f6de587-82d0-442c-a202-a4f5715bae44",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "994f6fa9-2cff-4a6b-9485-78f69097aec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4905dab5-835c-46d5-bdd1-203d4a4a7186",
        "cursor": {
          "ref": "81742dda-2204-42e0-ae89-2ba94df2374d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e9d1ea61-334f-4243-bc0e-1a4ea8dd5407"
        },
        "item": {
          "id": "4905dab5-835c-46d5-bdd1-203d4a4a7186",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a595f1e1-1638-44ce-aa8c-f8c082a725c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dca414d-91b8-49aa-95a4-a7738e3c7824",
        "cursor": {
          "ref": "0109160d-7d05-4ae8-a167-acacb99accbe",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7af76bb3-d1a9-4c2e-8f8f-0d8aaf0e2155"
        },
        "item": {
          "id": "9dca414d-91b8-49aa-95a4-a7738e3c7824",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bc53f024-f411-4c9f-994b-e6c296cefa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b49af0b-7e11-4247-8ed1-4cf6a874c24b",
        "cursor": {
          "ref": "982a6b83-bf34-47c9-beff-3c89947998cb",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c5d41b85-884a-4a49-94a4-10c8c9280b42"
        },
        "item": {
          "id": "0b49af0b-7e11-4247-8ed1-4cf6a874c24b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ee6f07cd-a7a7-48f8-b168-0a98b54f8ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9de5b6-c35e-49c6-854f-3916d170da30",
        "cursor": {
          "ref": "e1d620bc-140e-4a3d-85e2-95b0500d4698",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8a490d2a-b93e-444f-8d9c-dd2b9f754dc5"
        },
        "item": {
          "id": "ba9de5b6-c35e-49c6-854f-3916d170da30",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "861fefc5-0eb8-4129-adc3-2f64935d51ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a71f44-1895-4b95-929d-a9094d53b98e",
        "cursor": {
          "ref": "7d02601b-a059-4c57-8797-2d4ac421ff5c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "19a15b17-ebfc-43cf-b8f8-b54b2040801b"
        },
        "item": {
          "id": "22a71f44-1895-4b95-929d-a9094d53b98e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "533a531a-fe87-4c92-9809-8851271a6a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b63c26-5244-4edf-a1b4-b3530611c3bd",
        "cursor": {
          "ref": "34eed968-ff82-42ce-a235-b15a698329d0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "545badab-48ce-41a2-874d-7dc8564de302"
        },
        "item": {
          "id": "e4b63c26-5244-4edf-a1b4-b3530611c3bd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "003c031e-a5c9-4aa6-a0d7-116c3c8f5b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54ee5cb-0ec4-4bf3-a182-287e8d189564",
        "cursor": {
          "ref": "7523fe8d-a286-433e-bc3e-75da5c193f50",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d395fb8c-2d22-48b1-bb30-88fc2ca669af"
        },
        "item": {
          "id": "e54ee5cb-0ec4-4bf3-a182-287e8d189564",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8d7a92b4-db9d-4b81-a73b-69fd07717595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7400cc4b-0bf1-4e2b-89c5-3978f9d9c9f2",
        "cursor": {
          "ref": "ea426be0-c289-4ddc-bacb-47f53d77655a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1e164a61-fba6-49de-b54b-8cf8c464e805"
        },
        "item": {
          "id": "7400cc4b-0bf1-4e2b-89c5-3978f9d9c9f2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ece113b5-b603-470c-84f2-6df8c1d6115d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f657a266-d6af-4879-a3d6-e95e95cd6ca2",
        "cursor": {
          "ref": "84d7cd8d-a40d-4c28-8785-a2c2de78bc61",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d9715f1d-780f-4d83-b5f6-e9a68ca9cab2"
        },
        "item": {
          "id": "f657a266-d6af-4879-a3d6-e95e95cd6ca2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8dffcd0e-d805-45e2-85b2-1f5310532bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a5be96-97fc-435a-92c3-310a430afe52",
        "cursor": {
          "ref": "feace019-b855-4f9e-b2d2-c8dbfd9555f1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "431823d9-b0f9-46c2-8d97-91c6e1ad165b"
        },
        "item": {
          "id": "d2a5be96-97fc-435a-92c3-310a430afe52",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ee7edc18-4dc1-4f33-b559-1c004eba0e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc05f27-97d4-40e0-81f1-8dcee6c17811",
        "cursor": {
          "ref": "dd995167-36c4-4de7-990a-27bdfccf3a37",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4919b0af-307b-476a-bb69-3bc00a0f0273"
        },
        "item": {
          "id": "6bc05f27-97d4-40e0-81f1-8dcee6c17811",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8bbb2eab-d301-4f07-b5d4-3cf3649496e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea0e452-3b04-4d69-a325-7fe968d70106",
        "cursor": {
          "ref": "45024f16-aca0-42d8-9de0-290a682d7729",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "aa263b94-7810-4e58-b885-114e8640bc40"
        },
        "item": {
          "id": "5ea0e452-3b04-4d69-a325-7fe968d70106",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "57408b6a-7532-491c-b251-52fab61985e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f855e804-2772-4c52-8fa8-f4a4385b159c",
        "cursor": {
          "ref": "3611de38-6b2b-44cd-972c-0278faae913c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fef6adf4-bccb-41a6-ab0b-0013a6da636f"
        },
        "item": {
          "id": "f855e804-2772-4c52-8fa8-f4a4385b159c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "51f166e0-2a58-4e85-be2e-3f29129e716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2112af1a-a241-40ca-b9bd-b04a50264603",
        "cursor": {
          "ref": "566b440b-ed7a-4a41-8076-5040b47599e7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "353e1c05-8027-419c-9d74-242ff95f4498"
        },
        "item": {
          "id": "2112af1a-a241-40ca-b9bd-b04a50264603",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f0b5432e-de30-4d57-b502-ee2aa318b64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3578690c-2adc-493b-932b-9ebfa9344b8f",
        "cursor": {
          "ref": "3806f787-337e-4471-b100-9a1fa0e6a5e1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ed202b5b-d094-4e4d-aedb-d462a8720479"
        },
        "item": {
          "id": "3578690c-2adc-493b-932b-9ebfa9344b8f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8017d985-ac6a-4b3a-b989-15a4d86e9742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afe1815-2d29-4120-a3ba-cc7cd766c0e9",
        "cursor": {
          "ref": "52691f08-b70f-4b85-9acc-cd10ae28dc40",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "be1e28c9-7853-43c4-8767-9bd297e2a0e0"
        },
        "item": {
          "id": "6afe1815-2d29-4120-a3ba-cc7cd766c0e9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "561c943e-cafc-4c56-a618-c859ef40d6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dcfb97-6159-4c9c-94c2-d2a9608b8564",
        "cursor": {
          "ref": "8a27c30c-ab23-492f-86db-c976544da337",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0e640187-f80e-404f-b5b2-cc2f62b7a296"
        },
        "item": {
          "id": "d3dcfb97-6159-4c9c-94c2-d2a9608b8564",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3a6e373b-13ca-4a4f-a8e0-706deee2c5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7189f313-bdd0-4a46-8802-3e698030295d",
        "cursor": {
          "ref": "9e51fd2d-2c24-4ee8-a842-1cd3f4290332",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a347ca0d-59af-408c-828c-d20417dd929d"
        },
        "item": {
          "id": "7189f313-bdd0-4a46-8802-3e698030295d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "599379f7-07c1-472f-a333-8e22ad168cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cc18d9-bfff-43e4-b508-f8c6a2d21da4",
        "cursor": {
          "ref": "83577077-8d52-431b-aa98-0155558c4d1b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6f07d1e5-21a1-428a-93f4-c77fdf8e371a"
        },
        "item": {
          "id": "55cc18d9-bfff-43e4-b508-f8c6a2d21da4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "42055d13-efa2-4b9a-8f74-60f511f4f0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a176e5-8702-4f2a-9df3-d99296b208ad",
        "cursor": {
          "ref": "b0c21300-732f-4d1e-a3ff-020c98778b0f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "22de82ad-136b-4d00-949f-29ece3e18a2c"
        },
        "item": {
          "id": "50a176e5-8702-4f2a-9df3-d99296b208ad",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ad1d2343-5cda-44fa-a165-f71df2c0b390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c677f1-4923-4d95-ba8e-e81034295b8b",
        "cursor": {
          "ref": "56c917ab-f4a2-470d-9d99-806b43394e11",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "671f3d6e-c7c3-4652-b078-527500fec27f"
        },
        "item": {
          "id": "e5c677f1-4923-4d95-ba8e-e81034295b8b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1db3a87c-b118-498b-aa6f-a7d7d35cec62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d3ad79-dd24-45bc-a27a-6ced655667ac",
        "cursor": {
          "ref": "1f19fe17-5e5d-4e3d-a346-8a29b8fa1357",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2cc02bdc-d107-43cd-b62e-699f4a17ae33"
        },
        "item": {
          "id": "b1d3ad79-dd24-45bc-a27a-6ced655667ac",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f6350bdb-9615-4907-8aeb-a3b74617c641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f9a654-7291-44b5-9ca6-1684ab004b46",
        "cursor": {
          "ref": "0179b91a-f5b9-496a-b0c4-48ef92e62806",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e96976a5-5dac-4c1a-9986-7726ed57e96b"
        },
        "item": {
          "id": "36f9a654-7291-44b5-9ca6-1684ab004b46",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "844cdc0e-fe91-4d20-907a-d0e07240ddbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b593f0-4dd6-4808-88ba-b70ae84ae803",
        "cursor": {
          "ref": "c6ef3dce-04b0-40d0-9155-38f9c7ed4d38",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f0e5ddcb-c1c8-4d34-861b-f459570e95b5"
        },
        "item": {
          "id": "d3b593f0-4dd6-4808-88ba-b70ae84ae803",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f54b23fc-0288-4bf1-90fa-a1989f9be665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508df784-bc62-46c5-a2c9-f1ed72103bfd",
        "cursor": {
          "ref": "64cc2f90-3a86-4ba5-97d6-f34b802434cd",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e1af1695-b5c1-4bdd-ab2a-6cda2cff552f"
        },
        "item": {
          "id": "508df784-bc62-46c5-a2c9-f1ed72103bfd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "739ccdd9-4e80-4752-9691-e397b741c53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcc941f-2b6b-4f49-b036-2fe9192d3cd0",
        "cursor": {
          "ref": "5e9b7adc-ffc8-4f0e-a616-a80b29ad00da",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "37264d4a-abfc-45a7-a1b5-f327e1fc553d"
        },
        "item": {
          "id": "9dcc941f-2b6b-4f49-b036-2fe9192d3cd0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2e5721fa-97f0-4583-97a7-3114376b07fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3279c35f-9ceb-4369-8888-09ed85b691cf",
        "cursor": {
          "ref": "06edfbee-b7bb-4020-9fdb-000977d9c6cd",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "440b8d45-55d3-45fd-b36f-104fb6bfb5d6"
        },
        "item": {
          "id": "3279c35f-9ceb-4369-8888-09ed85b691cf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b9918432-406a-44ce-b0af-44baf2608a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef09bc7-e07a-40b7-8e1d-cfff88f92432",
        "cursor": {
          "ref": "0e874d09-8e2f-44bf-ad4a-46ef1bf4b641",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b537361b-04d6-48bd-ae3d-51bdb97ce161"
        },
        "item": {
          "id": "5ef09bc7-e07a-40b7-8e1d-cfff88f92432",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "35358ca4-2194-496f-80dc-bac9b90e21ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e2c951-f3ab-4b6c-a557-76700a022b15",
        "cursor": {
          "ref": "88b7837e-96d2-44a7-bdcb-97983babc554",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a2be9d68-e492-4372-b2cb-aa6771c2e55b"
        },
        "item": {
          "id": "88e2c951-f3ab-4b6c-a557-76700a022b15",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3f630e68-855d-406d-9025-ef63f29d4fe3",
          "status": "OK",
          "code": 200,
          "responseTime": 2320,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b031488-405d-4e6e-a699-ad44dee1fce5",
        "cursor": {
          "ref": "d2732420-ce65-470a-815a-74407061a2a7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a38ff7d-055f-4551-8977-71c53831bd2f"
        },
        "item": {
          "id": "7b031488-405d-4e6e-a699-ad44dee1fce5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "69c8420f-4ae9-48b1-872d-0d05bf38b0c0",
          "status": "OK",
          "code": 200,
          "responseTime": 4198,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a67a978-cdb3-46dd-872a-cea471862734",
        "cursor": {
          "ref": "393da7f7-9ebb-436c-b7ed-705b8e5d6c75",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cb539df1-7ce2-4c1f-87d9-a2c568c6d852"
        },
        "item": {
          "id": "3a67a978-cdb3-46dd-872a-cea471862734",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7b71a9c0-3c97-4d51-afa4-d47304dfcea9",
          "status": "OK",
          "code": 200,
          "responseTime": 3279,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "007b44d3-2092-45e4-8af1-4e4669b7ab60",
        "cursor": {
          "ref": "6ebd3600-483a-4e80-bebb-f188a8e3eb55",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3c401c49-81bf-44e0-8a5d-87ff9d2d192e"
        },
        "item": {
          "id": "007b44d3-2092-45e4-8af1-4e4669b7ab60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cafe46b5-ae57-4c19-8b52-0028f646172e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007b44d3-2092-45e4-8af1-4e4669b7ab60",
        "cursor": {
          "ref": "6ebd3600-483a-4e80-bebb-f188a8e3eb55",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3c401c49-81bf-44e0-8a5d-87ff9d2d192e"
        },
        "item": {
          "id": "007b44d3-2092-45e4-8af1-4e4669b7ab60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cafe46b5-ae57-4c19-8b52-0028f646172e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e175111-1940-4fc5-9359-a5b172367244",
        "cursor": {
          "ref": "478c8ea8-991f-44c2-8bf3-d1581f26e0c0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "05342889-1865-4179-95b8-6ff23ecf4390"
        },
        "item": {
          "id": "3e175111-1940-4fc5-9359-a5b172367244",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "202bc900-9efe-4419-bfb8-b4b1591366c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3d6ec-08d8-49a6-bb21-342874b2f522",
        "cursor": {
          "ref": "8454824a-9c5b-4f55-81ff-8de428274d30",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d1ce321d-662a-4468-a499-24a31c56a6f6"
        },
        "item": {
          "id": "3ab3d6ec-08d8-49a6-bb21-342874b2f522",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "df1c698b-1b5e-410f-a1ae-ea79ab6b3041",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}