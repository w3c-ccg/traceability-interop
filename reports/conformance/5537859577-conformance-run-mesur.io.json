{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0af428bb-ef48-40b8-9616-43feb895c573",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1933922f-3b9c-42a1-aacf-9a31228473b3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "086b6fc6-5a2f-4575-aa27-d6954e8499b4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "61456a95-1882-4c77-8bab-5f39e86424da"
                }
              }
            ]
          },
          {
            "id": "de82ef08-692f-48c0-953a-5796f1ca481f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcb98bf5-e8c8-4e51-a140-b573fe3c92f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bf925491-e657-4ead-8c2e-8c29334f2587"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ea4b8b32-bf1b-4f4a-b519-484f2753e8ba",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dc3f8629-5a67-412f-acbf-99cff300b382",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab67c6b0-8863-4573-b912-d3ae14c5f02e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa9e5bf1-56e4-484a-8138-b7fb54365d0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3328e572-7f39-407b-ad66-1adc4ad6f157"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56be7f1d-4576-4880-9667-501554337c72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14db05c2-0d16-41b9-9b46-3f4cdf8c5a6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e4e5681-9bf9-4363-b208-d19d6b01cf60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb4f0a47-5e74-4ba4-8cd1-64aeaf8353ea"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47e50a6b-aaa8-4dc2-bd53-81bb420a7ec4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3037742b-ff85-4071-ba01-144e384d12bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e870e087-93c3-47f2-95fe-a2a69bd53ada",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4362dd6c-49b7-4934-a7d0-f647d46cfd78"
            }
          }
        ]
      },
      {
        "id": "8a22913d-8f67-47b2-a41c-cf80610885f8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6035b41e-d2e7-4e5b-b3ca-bee107c5f6c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b85247e5-bc6e-4b52-90d2-7b6db5c4deb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86e5075a-f2eb-4422-bb8e-d72ec0839a77",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1efa96b-3131-44bd-b9e6-88795c9c6d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ec3d9ce-773e-4c79-9377-07e7c2c62a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2886e357-5db1-43b6-9d4f-485d8b897d47",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2a0f93-9d71-44be-9b66-ce4dc1998525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "543f0641-e41c-48aa-b196-de1693957d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4d5996-6c83-4bb6-bc83-013b8dc54f45",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e134a577-9427-427d-8062-41c5bb40bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf48f835-9b2f-4069-9ba5-b9d551ab7127"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0b26a20-ee2b-44ca-9820-6de6de8c6a59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e9040fb-11b0-4245-a7bc-6d26cefd3899",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b9fcac-be67-4ece-b050-c400b266e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e131ab3e-03e1-4682-983d-6d5e9ca7a36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fcf32b-f909-465e-8e00-322b93917900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6b7099-e465-4c87-b1e9-0f3d588ec9fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "df66af1b-3af2-4eb3-8348-affc71ec73a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c11747d3-e2e2-4068-89c3-c14d852c52ee",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd7de34b-f780-43fd-a7d1-599cb9b749c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e6d3180b-7202-4c70-983b-266317a21622"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "203939dd-eeb5-4f0c-b058-0ef3e6d24910",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c7d651bd-7f6b-4953-a94d-2c2b98a038ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8b57f78-0d6d-4c27-8ced-e8f06ba12b81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e835f2e6-5fdb-49f0-bacb-2c8c054483e0"
            }
          }
        ]
      },
      {
        "id": "34983444-46b4-44ff-9e3a-6407374ed113",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ce1e5eeb-f152-4f82-9ed8-2c2fec150cde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7afabd49-9aeb-4530-8863-d686a66a7cae",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bca2b8c5-d3ba-4ec2-9464-b3ec2933689f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55103718-8714-4b9d-9ccf-aec447c08818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a43acc8-81cc-49d0-89f8-6b55af1e039f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c61aed8-c0b2-4208-beeb-d8dac14b6ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c116640-a926-41ab-9799-0b4bdb88204a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f254480b-fda5-4313-8d97-06f66c0df4d3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b26641-2dad-489e-b0f2-d879d890027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263790f5-8186-4b77-ba54-0123afc2459d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945928be-46c3-4a56-ad5e-050edf305d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a256714-2f93-48c8-a9aa-4215c424d61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b35719-bcc4-4b68-b604-9bc477b03e30",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a75523-295b-45b9-81ae-da8bdbf3ef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27054dd2-a77a-4505-9bfb-4e914ef9abd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99e082c-d1fd-40d6-ab62-316228bb7cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ac0ced7-1a53-484b-afd6-c2bf1066d993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fb0e32-2d50-49a7-881a-c9fc7ba81a3b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88482780-c583-4456-809a-97d1152418f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7567643c-7281-4e55-9ba4-09945cb76746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b84c459-0a10-4e37-8789-dc8571eb5953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06127115-d205-4fe4-ac88-54cb34b15d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cdcede-5888-42ed-8adb-bfc26990033e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b89efa6-c1b7-4ec3-8f09-088b06045468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f41998-85f3-4894-85cc-a6aea0fed8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d355723-256a-4c73-882e-8cf5edfc4d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ed14351-24a1-470e-b384-9ad7b98e3d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de50194-fa50-4c21-87f1-c9bf87ac306d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5accb5-c804-4495-8a9f-897c5893f223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900ef0ba-018d-4e79-a4a6-a1b8754be0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e104c89-0d34-4a98-b5a2-43acf4b723de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "358c22d2-516f-4047-96f5-40427cc2df55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45d587f-cd0e-4ac2-98ff-beb05facd072",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ca06f0-8655-412f-97fe-3f0ef8628b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da54e818-deb2-4db0-b5d3-bdc16ad9e2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e15a44-7aba-4b56-8b37-f9acd16b3d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a09e3802-b8af-479a-8bf7-337b1908eca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22725862-4bd6-4825-bd76-71cb1b1cf202",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce569720-4023-4118-993f-64661efbe1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eecc64c-9b26-4337-afda-6cfa7068299f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dd3a12-7419-494c-9336-f1993dbddc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d16a21-6eb3-4424-b4d8-6630ff58fd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4016e59-2e8f-437b-a717-b3e140310306",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f692f530-2b8f-4904-8d65-d30fc844c137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f987ddd-9f60-4f54-a248-2758eabae87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909dcf34-15dc-4516-9eff-f926bdab9e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7362b415-e9a0-4c50-88c3-702b2ebab9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bdfa17-f87e-4ac3-98e8-9ac592c7dfb7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c3171-3411-4caf-aae7-61def1754d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4f1487-786f-4a06-b6a0-3ffccdf05666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b2a82e-db35-4a56-93d9-b3275335f0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ae4056b-9994-4f26-aeda-5baa00414461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd53d2cc-a7e9-4388-aca0-c88ce77ad84a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a00fdba-8567-421a-a460-a91adefba105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b08f1e2-f545-4fcc-9dc8-6bd77ae677d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b69077-639b-4c19-b6ce-ff052e1ca96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed65b5ec-0f64-4ee0-9872-d31d3094b164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d92f9e-335d-4084-a92f-11db686df9b0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ab0490-c258-45a8-8415-f9c5cae85981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbffbd96-e746-4b8e-bee6-b2054ebb01ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02918cc7-3b93-4f8e-b71f-5d94cc477b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b371f44-7437-4438-848c-8aaacf2cf227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd4382b-2e91-48b5-992a-80cea7590410",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91cbf36-f523-4676-96d7-e8f33681c210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e28afaa-036a-4308-9591-73fdd2af547d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed0865a-4de9-44bb-b11c-1f5950944329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adb1979e-6aae-406e-aeb4-9cbecba653ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af98f5f-a75e-4f9e-af94-d67b209494d5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1d1f3b-e96d-4f39-88b6-b461ef7114a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405835aa-0763-4436-a196-0bc4482b79a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51da054-e1ab-4bcd-b267-ff63cb7008c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14e7ff2b-85ec-476e-a9e4-46b6211071f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdfd76d-5525-41d3-8241-cf5eb8d248ea",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af249e31-b431-455b-972b-0a07d5e9602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dbaad6-74cc-4628-820f-538a1defa196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61592b3-731e-44b0-9059-8069c1e2413e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a77b9401-f4eb-4d0e-86e8-eb6dcf47518a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009f31f2-3203-447c-b133-500fc52250d5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1125e0-fb5f-4744-adfc-9751b78da747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18948d4e-d5f3-4c68-a8e1-0007dfb0def0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b731a1af-ed15-45c1-9147-3cdc6a2db734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a15f0d5-8e68-43e0-bc5e-3d1ca2b22bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f428c986-3d96-4e3a-b36c-e6659b128396",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaefcf3-00cc-4e0c-839b-d979b127386b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da95116a-ae4f-46b5-9249-3bc4486cdb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff39425-90b8-49ed-8c84-f99c3744e11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5593fd6a-e45b-4af4-9190-6563559d16fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3956d82d-e59d-418b-9258-0aa5ed2cdf44",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0aab1cf-e9bb-4c09-972a-6a71957296e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d172ab-a6b1-494a-9dda-24097389b7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8402e1c6-8666-4745-a9e2-fddf96201202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5139d2f-b531-4dc2-ad55-c664204feb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f11ba8e-6cad-41d8-a2c3-75b37088f02a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8032e4-1af2-470d-b64a-eaee19f6ed75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9cad9f-6141-40e1-9a21-88a858de8fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2cebf0-bbb8-4ef3-8ddf-4e701b8f4667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75157e71-fead-4691-8f86-1224b766e379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436ae248-a1f6-44b2-ad37-2c95acf447c0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278f48e6-b4a7-42c4-9b6a-8c54884f327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233edbb0-545a-488e-aafd-9a4f5fd5283a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c8591c-02a9-4cf4-86f5-6fbebd2fb482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2533b67f-0220-4820-bb67-6e8f63c3039d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bd315a-1efa-4e8d-a5b5-eeae0203fdbf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d32ff0b-ca32-483f-bf27-011489f87a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa77453d-fafc-41cc-a7c5-fc23437225eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99d1bc3-de5d-4d2c-b01c-db19ffb3d429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e86c3a-fd1d-49e0-9f85-b737ef60cdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e519610-a4c8-4188-aa1a-de46a559c371",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff3a40a-a984-4be7-be66-3fd527e74e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4735ecaa-405f-4419-be2a-159cdd35879a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c9a53c-c9b6-449a-92a7-b75d8b37f857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2f0dbd-5678-4f65-a849-37567d7daf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86782ab4-b4f3-4dff-931a-30ccbffa8652",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517565a5-7169-4743-8b70-b758f90a134b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7d1c81-94fe-4a06-bcb2-9265d33625b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1568edfc-799f-46af-8217-da3a658ac8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05eadb44-6a47-4a67-af1e-3586546066ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700425de-c70f-40ac-9752-15d6b1d07f4b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2aaf54-4b02-4dfd-a3d6-0f9a3a42da25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd8e09d-cfb7-475d-a75e-abffc8f7c7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88fe177-901f-437b-88c1-b426e6cf8b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "571fbcdb-8135-47ef-9511-acb2d633e64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b7d703-9afc-4623-a287-426b1d51f8d5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cb204e-5c9a-4ada-9d3f-2992d5705824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0967fde-8993-4937-a4b1-336dd80f2d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6dfd93-07c4-4f51-b0c8-6b22b2be06a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f0f768-6002-4af5-a289-be730aa0d6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbac45d-a17e-4705-ad7d-4a104eeeda25",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4bfc9e-8b44-455f-97ba-fb0168676140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c874df0b-4140-4454-a36c-c9ceb258c8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d203b279-b4fe-42f3-ada8-74926899fd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "746e95ac-00f2-4389-a97b-ff4a5585473a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e1c6f4-8b65-4b4a-9dc9-431334b84fc5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6803108f-3e31-47b7-892f-cda09a077d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddf7950-cc68-479d-a2ef-02a85ce7a50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6817766-0569-4536-a6ec-0eabfafa1c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "536dd0f9-d7e1-483b-9a5e-78c6812b87ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76766e1-fd7e-4699-9f92-043fea09a7ba",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f2dcf8-9ed9-49eb-bb55-301aac4566c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fea86c-573a-4073-9a1a-914a22e3fe0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9776e934-cb27-4ccb-aadf-ffed08ef65da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f0e2f2-ed94-4a37-a782-63bec279deff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498513b8-72b2-4986-858c-1c02fa2810bf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2f08d9-ba91-40ab-8f73-8eb744acf3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d446186-0324-4610-8d22-6dea25dbe273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d741507e-86aa-4c22-99c3-ca68832e3a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b84d00-b816-4f48-b148-199f59fc2446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed8a26c-b6fa-43c0-8ef3-04844bd3da51",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8996ae-babd-4e06-9bb8-0f8599919b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54a63fa-f5ff-4d7a-89cf-a7e8e3216922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16bcdfc-b66b-45c8-8ad5-4280e69b65ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e85126d-d2f5-4f27-b4f1-a16b8653f44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaf97ad-5a1a-4994-9b68-61808749957b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e41310-0f0b-42c6-a6b2-39531436c813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fff206c-2421-4662-8035-e696602a59d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c414a01-c936-4415-9ed4-d2645d20d74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf77e7e-16e1-4e52-b6b3-430631c9494e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25565dbc-f852-42b6-b632-ffb497fd299e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf99d03-d1be-4dec-92e4-4ec6e6f2bff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97078824-e632-4632-bd4b-111efe30e8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af643546-9d82-4684-9281-a389da276928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62a14d64-8bed-4360-9bb3-b69896dcc17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b08b8b-9224-45b7-bbf5-5eab58d885d0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bc687f-5050-4a35-a5b0-cf4b1136e262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9bb081-4b20-4fb5-b79b-cec69529c325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c41775-792f-4a5a-9768-ddc7db60f43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e4ac31-9f61-4ab9-a4aa-44bd5791857a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3116a8-a2c8-4bd8-8ec8-be18ee4523da",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cb5885-bdf8-449c-b929-02284c448789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ca7069-e8ab-458d-b065-6a47aa2d60c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01caf184-e454-4e96-9be3-9297fe799510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db11a7c-8cea-4ac2-934c-cb2c9dba6c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7834ca6-9806-4769-8886-e515ebe021da",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa120d3-f45f-4206-bc6c-ffe4bdf3ca77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990c1db9-9caf-4cd4-816c-02559da12f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f871e39-48ed-46ee-82be-dc8c9e4fb0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3d83b1-a734-4c8e-ba63-95646a2c9553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba12218d-e587-43ab-a9a4-dd2f64317b77",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67912aaa-5817-4982-8ac3-71642fe18966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30f1c35e-df44-4fa4-87e4-394b077b1042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8aabbca-f38a-478a-a0de-eaab0fb90ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f428e5-d030-47c3-9eec-9f56ed3c2895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2760207-5609-4d76-8e01-0a65f6eb945f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75840d00-eee1-417d-9eca-230df1865066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431bbd6e-9eb1-4077-a34c-ac49c7351159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f8e828-300d-4c4a-9d3e-c635e6e32648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2045b9f-4d4a-4e1f-9ff5-8b54cd8458d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b2ca5b-f9e8-4d35-a37e-a0ff106d2832",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02e2449-6e0d-4a34-9c52-b919c3fffdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b68c894-ac98-4509-b898-1c41b2d43544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9ede69-9827-496b-8e29-d190937a6ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41a4254e-dfaa-480e-82c3-9c35c71ebf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aed864-2de6-4ca7-b77d-446636c19457",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afd4843-f7e7-433f-998c-584bfef3a644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a6335f-e47a-45a2-a021-44708de49515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a09fcf-d792-4414-8e26-759c0101c853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfd293c-717e-4c57-9315-7269335e6fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76695306-90b3-48ed-88e5-8c5b70eca94c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84ff1f9-fad6-4716-8233-c9de313fa8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ceb074-7951-455a-a8a8-3a9ca18ac164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507fb65f-e3fc-4f7a-83c4-ff095a44e920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b77b4c1-96bb-4530-9d46-f180c57c4211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c81e1e1-3131-4ef3-83b4-174cb053ac4f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab54792-13d7-4e36-930c-d53156d23c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571d4fdf-42a1-4cef-b72a-715047fce7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fbcf24-1026-4bac-9ac5-09864566fa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "12e45055-b4e3-40e1-95fd-f9ecb1ef1fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b42cac-538f-4de8-8017-5201af15089f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b81a49-911f-48bd-b895-162b601bf18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da331684-81c3-484d-acee-cf2d461cfc6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f66728-bcd6-47a0-8515-c659da04a32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1772094e-eac4-45ba-8ded-c08c3bc4d37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97a276a-7bcd-4fc9-977e-be6d49d3d2d0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739d45ee-8e42-439d-9742-bb87a541881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfae763-54ac-4a81-9a27-98bf64c31f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c82252-2bde-4556-80fa-3d71be5782f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e82c92-8532-41da-ab99-e1825dc99758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b2feb7-32f5-4105-a097-e168a6e62e1d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba68b405-bac3-46bd-aa2c-40896387f3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df4fef2-306a-445a-adce-edc0001f329c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664644cc-0e71-4989-bf21-413e75195f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d3a701-6651-481c-9078-355bbbc2f7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ecc98e-5954-47cf-93e1-df3aefd8f2d6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de926946-3ead-4cd2-8f0b-2a0c9ced2857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cae797-6448-40a6-810e-b554af087d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b6d87c-e336-4558-9369-bcac27e5affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fddf1aa6-b3d7-47e0-b349-e5bfafe9b8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adadd42-41c3-46d8-920e-f7c67d4f25fe",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3843bebd-b1ed-4db5-a6ce-aeae6311dbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c347076-be20-40d4-8387-41b30255fea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159bc920-e312-4a37-8bdb-7f0deaceecf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30415171-029c-4331-8011-e2663f1c751a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9945050e-d630-49ce-a776-c5ab33364fa8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a006d435-0182-4998-94a6-4c25a4ce8ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae95296e-fc22-4505-a764-94cdbf1052f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c5e762-587d-4991-a7f1-eb2a66a41ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6be39f-2279-431b-8a98-3f2b05ea6672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22922570-453b-43e6-8104-fb2af757d9f8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc6bf58-9215-4b0f-baf7-f0f176b7993b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554fae38-e373-450d-82ad-f6901e0f7613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8a2371-1b90-49a8-93a7-fa71636223df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26cf5add-1b0e-42cc-bd6b-66e35a47d820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4250b99-063b-42b7-9b77-f8e297a2ca67",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4cd8cb-b286-4f53-9775-9f3526ba2c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf1a917-a3e8-46cb-8770-908ae056614e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb9ffe1-6985-4a25-b88e-6d33591ef335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48255b7-fffd-4d5d-9457-386423334beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab4aea1-a498-4e00-b16c-f9edf597fb84",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ace170-849c-4d7c-a035-d17e0b80f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a276b1-9b86-4f69-a8f6-1e01d9092337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5b47f2-78b7-401c-93cc-4fad735cd338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2aa0be-51e0-4e9c-ad7e-5542b757ced4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322dfc09-85c1-4126-b701-deb248b3d692",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421c2506-b6d2-4914-aead-38bc6bfc47d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1cd316-e922-4f73-a5a8-83a0ca715e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e781fe4-2c11-41f2-8966-9eddbfd4be31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "64501254-8505-4529-9909-517527aa0222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1277d7-51a7-42bc-bb39-7a2aed0d9cbe",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f5b8d9-a930-49f7-b677-6e8e988937de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3e24fc-c949-4910-b451-f3aa408f19db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbca9b46-c7d2-4f43-bde8-da8c63ed447f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d42d316-aa4e-48a6-b78d-36c7f3f72f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660a4b24-b15b-48fb-aee2-46b0c63867f3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471ba479-220d-4b83-a68a-82a95cb74cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e263e238-ea91-402f-aede-7318a0756947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8ff12b-13b1-464c-8a30-f030ae1a2860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3303de93-7a2e-41a6-aeaa-57cb078f7077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5245498c-458d-4bd3-b4e2-142fbedde794",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1c69ee-a5d3-445d-8436-15e0e4f00617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edd1492-eece-4d61-b3d7-ffdbf437e23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c84ea4f-17fb-4d32-9928-f3d16e56bb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb73374-9a8f-41ce-83a6-24af7c9bd838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8197af77-9a97-402f-94fc-06df49629651",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da78e9a4-90c0-42cb-a7db-5c75a640f2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d6fd6a-f8b0-4a4a-abeb-011589ccd2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa71c2e-46ff-49b4-a15a-188253e69c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5f3129-5015-4248-a098-d997a75d2966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d480da25-0f0a-4ec3-9090-95c1719e4df4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3ee241-0c46-4631-87a4-300b1239eee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a1839a-f7b2-4508-aeda-1d677e8657c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c709e7-39e4-4133-b412-097aec0ad9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "602c1da0-9c46-4515-9dff-2eaf031c7071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e17436-214a-4fcf-aa59-c4bf81b0aec6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575971e9-027d-4dfd-9da2-ecadbd65a1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d15cb65-5fb9-48b5-8dba-409ac4cc8be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8de590-d18d-4922-9251-6139dcf75efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "245a3e5d-e418-4919-88d6-cd4e33371768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2d1588-5856-411b-8205-ac95a255424f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba016167-98c6-4c99-b1ce-d85f40794a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5fd6c8-c6cf-4c52-91ad-26da0234dd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6872157-2bec-4773-bb82-be2647018a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73809c20-7f8d-4be9-9485-3c2f21a0424a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0b048f-1474-4213-8c58-b6f065d34cc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cafd5a-5c3c-4eda-a866-6b3e326149fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c758bf-f477-4bc5-a146-c44714c7f8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c88a11-2c36-450b-b7aa-e766be4adbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3940a703-af38-41f5-9dcd-c67913b93eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e80e3df-6d74-45ac-b0d3-84b8c8ec6b0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e5d7a9-f956-4456-9a99-96f2b94a0dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5111ab2f-1aa3-4702-ae0b-6ecec3f7ec9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dacd8d9-5c63-42ad-82eb-62bee1a814f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7257d87c-2054-4bad-9b72-81b2e7c7577b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2999d5-c4a2-44e8-98ac-e4e51c27d440",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d73642f-d44b-4625-968b-294581d93a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4319acc0-a870-4980-9afb-4af494d62a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90db6c6-e9a3-4a0f-8e68-bd1aef6e54d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbd6311-b781-4b7c-9a1c-423ccaab789d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da2be05-7b40-44ea-92aa-d87cce82f63d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7403bc-7f96-4cc0-a947-e35c0f810cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc036aa5-2866-4b15-8c05-f318c2e62389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3749c41a-3819-4f7b-8bb3-033c22631ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4712c0-19fa-4860-9e2c-68c5097305fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34927ba5-78d1-443d-b974-622593c9a288",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d001bbe0-31e1-4510-9bb0-4085a3908a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b327af8-2036-44a2-9768-ab29ad301b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cc87fb-10e3-4c2a-94d0-7a9ecc551221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cc4dfe-931a-4520-b209-4d1066601175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c332d6a-78e1-4cf9-a3cf-d08a600e2f96",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe0f56a-5c05-4f80-9c70-4908ce121c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbc1893-7252-4fde-bf87-aedcb3834fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1a6bec-72dd-4cc3-8020-24f90aac90ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea40cdce-526a-4aa8-a137-27d0216dcacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22c8371-98cd-4e6d-a9a3-5ccfa4ffbf6a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c7a6d3-91eb-4e16-9061-a78d7e73ac0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee995c0-4c97-4139-87fb-15c9d5631532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa935bf3-9c13-4ba2-bc60-2fc0890d0b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecaa412-0847-4fe7-8d81-2cf886bf286a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04514c7-88d4-4eb9-82b2-605eb05d4319",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10737c3-b1e2-4110-a2e9-28fe01569b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c54730-2b0a-4f50-910b-bd42ace035d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d577e8-877d-4e60-882d-c289fc3db375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "319a798c-5e79-4d7d-aeae-2e6194415cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd432c4-00cc-47b4-8742-efe72b621fb2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c98c2-1a8c-41c6-84f8-b5bdffb04059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce178f81-26ce-4925-b210-22d15ddd2b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4271232d-16f5-4fbd-82a6-34f4241b1ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf26d661-dbe1-4a8d-8fb9-15b10cf75404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d599ed-8f7b-40c9-82e7-01f974d5bcf9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040a1e83-03c4-4d4d-b46f-3631adae198c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0838a8-b7ab-4cde-8630-e5ff08c3f40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291a6c01-3946-40f4-9afe-7efed788528a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d5b1f7-cde2-48df-bf80-e95087735cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebbd2a9-05a3-4fba-b06f-27a4f3ae15e6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc14d46-a0d4-49b6-af77-ad14b4de8e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc379ee4-a33a-4433-81ff-548f6e293ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf55ffb-d402-4081-9e22-4f964815b715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7873d40c-e6fe-452e-9ecc-2a29025febdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47167ab2-ac60-4163-b425-96826e63d5ca",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19253bf6-bcbf-4d11-9679-3ccc14ae0561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8f26b1-6604-4a8f-8f12-82369c4dc94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a271cd20-2291-4add-8971-8138ca2b3b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b44e70-1a4f-4175-9317-ab250592044a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ec827f-5d15-4ce9-8ad3-9c4ac4e38301",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134d426d-5276-4996-ad52-1d964ef3de96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dd22da-3943-435b-8657-231761f51009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0dffdf-b15b-4400-b247-d5ba07e3e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3d35bf-049c-41d9-aa6d-69341bc650fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d266c9-3a59-4a48-9e55-a3fcca4092db",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde1f4b6-545e-48e9-9015-e5f562c034c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9aa1b44-9295-43e6-b9a7-fbc80f041f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a16823f-95b5-4324-ba40-1f280dae3892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e3ac7b-09bb-4ff5-bd36-2e19694e14b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617fe271-109e-4a05-af52-6fdf4dc33fd6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c2c858-29dd-4043-986c-ab6d41e8b291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9638994-05c9-4807-8222-2b236a72d973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5286cf-7033-4d61-87ba-a501b9f86ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6a661a-555b-4b12-ad41-3f94258b6564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7817c4ba-7f70-4c88-9c18-a017cd2c88cd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062f2c6d-8c9b-432e-8de9-86f4db8ca253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e52e82-cf41-4dd0-8529-9714b3eeea2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ff6ac2-6aee-4935-b655-9e4e47583096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d12f4ea-75ba-4849-a77e-fa4df90b65fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c646fd2f-3cfb-464b-bda9-069e592bf9c4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6743062f-0214-4054-bb12-51d2f4dba7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925e7678-1353-4caa-836a-366191b6b0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a218d851-fc3d-4c5e-9a2b-145780f551bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7317ac20-74f8-40d7-9705-773ea6e773f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b490044a-f1ee-4957-bf80-b4a30032185c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2bd5a0-568f-4f97-bcbe-92760abb2be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d04cb8c-e7b1-4bbe-9bf8-32f54641eba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef264c4-af45-4790-af67-6b4559bf6346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d51dd76-35e9-496e-8838-65dca1598a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a9d8e4-65b5-4ecf-9487-db05ce9e9383",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76342724-6efc-471a-8749-34e8cebf8243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9a8cab-dc87-46de-821a-6529dd73ef0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c2eb39-eb0d-434c-8b46-dff44558e87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "080204f2-2f97-4fd1-9926-d47fd6251d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b17362-874c-46db-bc8a-cca842a3d85c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7626b7-1c90-44ce-9edd-4c2a0a413dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48c677b-ba55-4f4e-821c-08f13207f7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8033b6d-14ca-4b17-a40d-47dae8601181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bce58f6-229f-4024-b6b4-e369276500ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89db6a0-850d-4802-9313-89bc5461c67e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a054fe-90b4-4581-8069-eaac77f6fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba998f9f-a427-42cd-949f-2d1b700fde8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b56b4ff-bec8-420c-98f8-cf3d40e3e0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "528bb0c4-0c86-4b8c-8266-061f848bd6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a5f4b9-49c9-4f86-87ee-f9ae3aa48bd4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0df3c95-6e20-483f-ab5a-a15ff98c1494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa1ca4e-6130-43b2-b02d-9cae67bb365c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67ab6c8-1e75-489a-980d-3ceae0d647d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7bd6da-7d65-40e6-afaa-15ca7ba509d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d92d2fe-4772-4ef8-922b-e81857b4558b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af04bf2-a1ca-404f-901d-98fadfb1a5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514af23f-fccc-4333-ae50-16a02fc956ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697cd200-daf9-455e-bc23-95441893f79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fa2e70-2b28-40e9-834b-21e8fb223d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79181db-a6cf-4324-8dc2-aa902ea16e64",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f051d89b-5ab3-44cd-9b0c-ff43be74f0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4a2c2e-7204-47db-8547-2506110e5bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a261ccba-c1bf-48c2-8f97-e9919baa571c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd89813b-fe42-4d9a-94c0-3301d78bc642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa8d1e6-3874-4202-9085-0a91fe3c4360",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a31175-4518-43a3-96f5-98e7007cd3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9d8c50-26e6-4421-bedb-7589b5c46df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a309d9-2de4-4865-9d97-84630f93c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "021dba1e-9d3a-4194-af50-c66da3763281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eb96b9-f35b-4a6c-b0b9-fdfeeeafe278",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2434e7d7-35dd-4fe9-9d94-26384c889953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12c8664-6d3f-49f1-b995-e8dd51149624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba5594a-4c03-4d26-a831-e078f630dc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18871a1d-744f-4f2c-a555-d26578d2a061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7246da-2a31-4450-8ebd-4f0e278dea94",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddd38fb-f19d-4c63-af76-0bbe0af3cd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74603a95-3849-4ca2-b25c-88c7b9ea79e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfb678a-6f25-47a8-9cc8-cf9fa0cb0bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbdb10d-e51e-463e-a7fa-20c61066b4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc661080-f97f-4277-9181-36e7762c0c2b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7636a2-9e41-411c-b260-11ae0afe7b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7949d8b9-68b0-4afe-ab20-3aa385aabcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7354de-0e45-4281-b3b2-29d43491aae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0ac441-8933-45df-b099-4edc0c1cc8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a1a7e4-9515-46b2-ba43-b2d7e5bf0d3e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d569d30-e768-484b-a763-3b3664e66c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e73546c-3ecd-4c6a-90e1-7e4dee2d17b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddeb80b2-4d72-4569-b174-787ae6796fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c51615-0042-41b9-a8e1-358c8df94e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca229f79-c53c-4b07-b138-4b29a21d2c19",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2f2d57-d486-4d1f-992f-fa274796881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c644c43-19da-470f-91f3-7d452552edf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ededf6-0b8f-49b0-afe5-61b689fc6d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "791da167-6db8-4efa-ac9b-1a8b46e964ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d16e9d7-9770-485b-b23c-7fa10979951d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c3b327-e646-4dda-9ad4-1ba5435186f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68135206-4c48-49c5-aaf4-9f475e7bb8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be97b1d7-f748-4462-9edd-336bfde15587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7737178-9488-4da6-9fff-c8b13680982a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b0016f-578a-47b5-bd5e-a5a83c7cbaf6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a10e115-10ce-4e69-ade4-fbf975de7730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbada0cb-a458-4795-8b27-87936a93f22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd97ffc-dff3-4615-b08b-14f96a295696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b564c91-d6ee-4e1b-ab9a-53086a54eca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7631cefc-45e6-4f71-ae2b-6e1579bb300a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8979e27-fd37-4811-a7f9-04e08fbe1f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7494995d-8966-4f77-bc49-d3d9503a431a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661fd6f7-deb6-484d-967d-fa223116871d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "672f1304-840a-4b24-a07a-cc4baee985b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1feb3a-0b15-41cf-9bcd-1548293b0ac1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a57ac06-862b-4058-aefc-a90b90038b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "155148f3-d412-411b-970f-a1ce902894af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a39be72-1fc0-4e89-82c8-85a4c4d737b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f48bf5e3-500c-475a-b15e-5e4651ce3a87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e273ac7c-7149-4c69-af4c-31843f4655d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de41d86b-7806-4cda-9548-eca0f3a050a5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b79635-eefc-4f80-b51b-1c217c0a9994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd463f31-2b38-4d05-a4fa-882805b32b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74e59be-b996-4499-90c9-06cdb6b1d2b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1da45fd-b905-4fac-badf-6bcb237954c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f290f66e-e0d7-48b8-b665-34e958c3beb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fbca26f-56e0-4f08-8ab0-7534b812d1ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3de9b7a5-5951-44b4-bd2d-c3c7c686bdd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91af3135-60c8-4966-91cc-421223e61f42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55b141f7-cff9-4114-a053-896394d9b205",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84898745-6651-402c-b6fd-630bfb91f611"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a56ba400-1a68-4d2b-a1a8-c316bca3b2d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3d78fa1-08b6-4a86-bb01-354bee4aa46b"
                }
              }
            ]
          },
          {
            "id": "ef56c306-902e-47eb-b0c8-2edfe1cca8f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b44808c-e2cd-4bf9-bba9-85839e1731b8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "185d9f9b-33a9-4a6b-a45c-e2f664b80fa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33063967-7e19-4294-a9f8-3e6a586d1382"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a45c36aa-1007-4fa4-b189-087c374e34c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "297fe60d-7999-4b5d-be41-7c9b2530b83a"
                    }
                  }
                ]
              },
              {
                "id": "16119edc-52b5-4774-86cc-2f83a48e4e57",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ff45290-440a-4474-a2c4-fb2dc7cb75a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b1daee4-5f72-49db-86d8-77496f49eb5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0084ae6c-e1e1-4d0b-b059-02e2836b7e84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdf7a702-0356-4c15-912f-b6fb70951b4b"
                    }
                  }
                ]
              },
              {
                "id": "787a29de-0b16-4041-955c-0b6295258660",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bf810f9-fe01-4cc9-8817-0a01aaadd164",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0d35c85-c970-441b-b057-172a82b41fa6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ba999b8-ed8e-4044-9e5d-fa61165f3a76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55255107-13fc-4df8-816a-d858840ea9b8"
                    }
                  }
                ]
              },
              {
                "id": "82350622-3050-43ba-845c-11a91f34b4a5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "114d9e45-8c9b-4a05-a2af-10152e92bd56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2c4f5a7-aeae-4624-ad27-662e0ed2b03b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a1a5251-17a3-436a-995a-b8a65108797b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "acc88c59-c5fd-492f-8d20-4b20955e62f9"
                    }
                  }
                ]
              },
              {
                "id": "7ee6014e-5ef3-40bd-a041-4c31f4d028e2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea5cbd4d-043c-4fca-88cd-8e2ebd03c52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f59bb4a-7ba2-47bf-8c77-a733fbcf07ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7f2a68f-a6ac-44ab-8eba-f55c8ee5589c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "06958256-bfc8-44ec-b6dd-3e668eab1634"
                    }
                  }
                ]
              },
              {
                "id": "eeb799c9-0228-4850-ac7e-e706351ed048",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5390c60e-6d01-4110-9ec5-f98373842d35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3466d2b5-2810-4ffc-a4e5-90135b3bcf48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73fff098-81ee-4838-ad57-511e003358d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dabbba54-bd38-4fb3-a7f5-0fb44012f98c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08032b01-be62-477a-a3ce-0f01334ef4fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9beb86a8-3d1d-4549-9fb8-9523e3443ca1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd8e5ca3-97ea-4b7b-93eb-e4e9506f54a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99ec02ec-c096-4d0d-8fdd-11916e09ca14"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d746edd-6ab9-4eaa-902f-d61da2ab39ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6a1eed0e-8a8e-4b13-b29c-fa3c4663b80d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cac1471-b9f1-42cd-81f6-98327c6f9897",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec7cbb6f-2a6f-43fc-bd1c-eb88795376dc"
            }
          }
        ]
      },
      {
        "id": "0e931dab-aee9-49d3-995d-d75035c08a85",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0fbaf450-f415-458c-bc79-63f673faf21b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "437e6ba4-7d6f-46f0-b8cd-450be92b12a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "431db467-9bad-43de-90cd-cef6ecc956ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdc7475-093a-4fc1-a6f0-c1be77eefc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f6bb63-13b5-4d83-9ed6-8221df23a2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c319ba6-d0bb-4a24-a9a4-d94ef52cb69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "291bedf3-6eba-499a-82e0-66ffabb44056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66516455-1907-4e07-8a28-a596b6851b8b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb6a92c-ee42-47b3-8462-97fa9098abe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039eaa41-7d5e-4d46-af41-fb47cd2ca209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d265f1-865e-474e-ab6f-494f923e92d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f6ec1d-1dd1-4d7f-aec5-8b5b3c66296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542335b9-528a-4e7f-b182-2ad9d4558bbf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca7c584-cc96-4b46-a9f8-ad0d60e804cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dcecc1-ced7-43e2-b9f7-34e418c3afa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0482a13-ba5c-46e1-bfc5-2dcf6e2d2bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b406cbe9-0926-4f55-ba1f-15f2048a11b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f581b10c-9b02-415b-b71c-870478b8bbc9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ded85d-3848-4a7a-a725-35e019e6d2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5778ddfa-d64a-469b-8cbe-ac0e66b096ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5861823-9620-437a-9f0c-226f2392a67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c3c64c-efc7-4426-a443-d4af1072242c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a1a209-f01c-488e-8ca1-9b2a387eb782",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19e5bc9-7808-4d48-b031-2b11d64ccb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f28528a-9a0a-4209-97b0-8dd18049b3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec8477-0dc3-4f9c-ae07-2a34939d6765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a15d76-df80-484d-8df9-cc1a0670beff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c9970b-c072-4916-a6b4-dc29902bc88b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64cdfcc-205f-49fa-8c36-16950b83cb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d534f1ff-d33c-4a32-a3b9-262b04b8402a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719a1925-8783-4fef-adc7-53030d5788e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d5d191-f9af-4f7b-8c29-5cac455b99eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6257a205-045b-4ca2-8b81-32cfb8c20760",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d39a282-cd58-470c-8d33-6005bf94819d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac266893-05cd-433a-acf0-c9e731b731e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed04820f-86aa-4f8c-b6dc-c031792ef86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e92c1a8-229a-45c3-a47e-0ea88e379c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb81d0f-46c2-4157-a070-c44e53a77378",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcffe03d-1f71-4d88-ace2-95d3498b3bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d64ff1b-ac3e-49ad-b5c5-56ba10fea829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9dd408-8b05-49db-8b2b-cf18b253cc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0cc155-0e86-495c-8063-86a520a88217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a84870-2d30-4947-8db8-e97a961f2735",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f8a51d-b767-4bc2-aed6-0fb865a30064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbb8bc5-509c-4390-abc6-54fa31e3cc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46604ad6-37b6-43c7-83c3-8365ce2db128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a209d4ec-b490-4ea4-ad92-117a5795ff57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16e0276-efcc-44f8-bfc6-385e0a9636fd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de7c3cc-571a-4cf1-8a27-43cb2af2130e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab877fb-21b5-482b-9cb3-8ad25d4f8c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545738ba-7b73-4b1c-8f35-f2ff0d572259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "153573e9-1c1e-4343-ba5e-f64bd1031618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1f5f73-17ad-4649-9392-8256a4fa07f5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a186f41b-30d0-49aa-994e-815de35cfb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86033563-2523-479a-a095-91494d8576db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fca8808-b062-4e4b-9076-e7dc43fed779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5c278d-218d-4d26-a13d-aa9bd381c143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed2c913-fc82-4272-bcf1-2be591d931d8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff9ba99-5ad3-423d-99d5-a82e54495c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81b86eb-5bed-4cea-8610-187651244ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9358a84e-2b7b-4d69-bd4e-3aab56125ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9009f043-c38e-40f5-bf25-65bcbe0d7d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ed6474-2aee-4949-8462-f5c0d172c319",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a5b015-8f97-481f-8afb-4a53b3f7937c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727a30ad-f694-4c05-a625-f44917c38024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acebbf7-92bc-4b25-9bbb-30f49187828b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5a11dc-6e69-4f3d-8fdf-c9352670d0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d71431-c3be-45aa-a70b-df79a2e6c5f2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b2863-0999-4ac1-84a7-e1124bbc1f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37015c3a-06a9-46ad-9fd1-d9f203c48b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dc8963-233f-498f-bfeb-aab0383fe85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "48717366-0be1-4913-81be-f20d58b7c03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63beadd-47e3-4b75-b2f9-1a2d1f4f57c5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39570734-db5e-45b0-bc50-5ded3a7ff0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5249c9-13bf-46b1-a906-7389fcf08398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8024598d-b78f-4e84-92b2-6b77311e60ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffd208f-e954-47da-a45e-f67f37d79f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c58310d-a709-4118-a0fe-2d54d3be4063",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeddf4d-01ad-4e3f-9dee-04b611dd245f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5928cad4-c236-41ad-947b-989f2ed49bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22f611e-5398-4ddb-8561-2a6ab76fb841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d73a2375-5748-44ef-8cac-db7e91a9aab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487eae8a-c9a1-4971-8c15-83d237407bd8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571f2d03-7a93-433c-a300-aa58b414475e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befad952-11ad-4725-8fd4-db33ecb56ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6c02ec-dbc9-401a-8636-a7e797b06328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "932a16ad-d2d7-4e8a-9ef0-ddc4dff25087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c175d4c-2fe8-4bb0-94d2-6b0184ecc8bf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c5583-bf3d-4e07-99db-c4ebf4b9254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b679ede7-f36a-4904-833b-31161e9f2c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a91afc-f7b3-443f-86ee-465f86d329b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00470d31-2a36-4496-8806-2431654b5871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30102ec1-23bd-4ab4-bb1e-638f9d78a65d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ece98e6-4be9-4bc4-99c5-b118115f0256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9664a6-80b4-42a6-bb0b-efc6f7c50602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce29426-0a6b-406a-abb5-10c956c751cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "003717ba-c186-4ae2-b5c1-47918c111cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ad460d-dd5b-4493-952a-a3b773b0ad18",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a28bc4-acb9-40c6-b92a-0581d51a0037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c030f7d6-a7c6-4bc5-b81a-2bbc522bf95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073590c8-5539-4e15-8b27-224e08f99d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "466204d8-8cdb-43eb-9bb7-14d90746d32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2a939c-7a27-42e8-934f-2dc29c224508",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3674b89d-0507-4ab9-a06f-060c954ea00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49602829-9508-40aa-9827-f2a70c34416d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905da9ae-7da9-4e07-96ae-c62597ad1ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "516c189b-bfea-43f6-890f-372747abc052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbefe0c-ae2c-4461-8fb5-820cb6e69272",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e05223-0139-4e66-920e-19ac9e965b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f20185-fa2f-4d15-b10e-f64fa01f1780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25449cb0-411a-4237-bb93-a1aa042319b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "670eeba0-3882-4d93-a9e5-472c63383877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4311739c-4a32-4b55-a7ee-972bea6f3249",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8d2da7-b098-4678-a411-05132e39a8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0495be-f244-4c80-ad15-6b448e03310c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c3ffd5-7c47-4459-a626-27456eb28b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9090a7-8657-49fe-b159-e9eeeb027915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4711dba8-6b04-4c7b-860e-c4fe8ce806dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a53fcd0-abc9-4a09-96bd-636a63d32df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caba1227-2be1-47ec-891c-d2475640e07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8717e956-7bc5-4b32-846a-31a188102e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "866aca3a-e7ac-470b-8671-e5f6af15a7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3181bdd-c96f-4e63-be30-42466c94b31d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c10ebfa-2e90-4e8b-8808-3a98d6550ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3432dbb2-dcf6-4074-8662-cf147f1d23f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15347157-3f94-41f0-baf5-fc552f39f06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873ced48-064c-4ebf-a43a-eddfec83dc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19cfafc-bceb-438b-a6c6-11aacb453233",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e744a4-9cc5-4835-bc3b-8e170faffa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48a8987-78ba-4e5e-91a9-9bc3c9013536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224df5d0-bbf7-437a-a454-c9e90f6577c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48d289f-1969-4e53-981e-f9660627e031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d261cde-7ebe-48d4-a690-5bf7c74d6cf7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdbf8f3-e280-4286-bc78-eba8c9aa04e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cfbb1a-bd61-4bff-88d2-25e1ecc6a91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a383a4cb-d3b2-4e35-aea0-7f07b0b00e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4953973b-463e-416a-82fe-0bf1141aa00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26ceb02-ff47-4a71-9679-eb14c7e98305",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170dc8ce-fe83-43da-a67b-6ff636d2b8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53683b3d-fbfe-49a4-8e88-7877c33bcb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c664368-3b64-4ed8-9150-21f5ea58897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20df5f51-fee7-4ede-8d56-55a3a3fb1cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edafcb04-4ac5-4fed-8c9c-2753f3fdf1c9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc5971b-9614-4179-8e2f-ea9ef0f29542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e027f91e-3989-4f99-9c86-a14c2a7e2496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cded3d1-89b9-4d02-a4bb-3ba268254390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fa879c-44d9-4729-a5aa-f2db55cefcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34016cb8-58d0-4566-99e0-fd32c555b372",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4613aec-a8af-478b-9443-960d1460bb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01807456-372f-4896-82e8-47a5d0ed18c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bb187d-e849-41f3-876e-90bef5981602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c902ec4e-00fc-44f1-ae13-018a36c56946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e783f949-bd10-4cb0-958e-163fef1d8b13",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3625aa0c-1636-49af-8c4a-ee716c443f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e95c4a-67d2-4ee4-9f19-4aa06daa2bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7a0ae1-3cb2-4e70-be04-7e61b83585d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e562bbc-1de0-44c2-93fe-c3686b871718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e05e0aa-ff2b-496c-bcf4-1a03144c4471",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ada858-2a8b-4edc-bb62-d3d5fb0723cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b076aff-c044-4c8b-817f-9b09d31753c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e594ccb-c210-4d4b-83db-3835e63ef12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "304a8102-f626-47f3-9153-c855aea02e29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e905438-69f7-4863-88d2-0e2357324587",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f7a93d0-b6fc-4c02-ac63-a171861e8c29",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e9ea99-4cd0-48ea-9b2b-f369a886e436",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d607b18b-ec1f-4e81-9e34-94e2250a02eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6300c1a0-d037-463d-b288-322bfb53224e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84a5be85-6f5b-46c3-bce6-f5022f7eaa1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "928e932c-76f4-43a4-8703-4a2d6be64e2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ac87347-d948-407b-a148-a807e744d967"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92aa80b8-1d9a-4067-9575-b9e99dc33433",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "041919bb-6462-4d7e-824c-4afd0e5e5ef5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9670f3a-f5a8-4dcc-9510-3f4c0e73df67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a5dab64a-8c2f-4c46-af39-9e15ec757333"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95e5b12d-b002-443d-818f-f996f84eba58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83f71aa5-02ea-4850-ac40-8a733b8966dc"
            }
          }
        ]
      },
      {
        "id": "1bb72da7-24b6-4d9a-af5f-05976ed45459",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9ba71a8d-b388-4588-bb48-2e8f0e8aeab4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5673465-0eaa-4219-a1b0-8ed2e71d7ac2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb829fd4-78b9-41f0-a20f-187a62619146",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46f41cf-284b-4139-9cf9-e2912039d722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa12f972-9d69-4725-a38e-e5a3c15a1297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b8929c-2fec-4f0e-9cb2-6e78a37d9553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "07232b68-904c-4b5d-b9b5-c67476bb3666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b547e7-1a12-44e7-bb51-4429efaacf31",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a7d0ae-fd00-41a9-864b-0333847a511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210f4d5b-f97f-4e34-8aba-3bddcfbaf4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897fdff4-2210-4e57-ae97-9a0ac377cf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5cbdce-41a6-4545-a036-ba32fbe195cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6acd09-2cf5-44b3-b4be-a5cf72a3c85c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2b129f-59c0-4f07-b9aa-c7d0a7c2e443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893999b5-c577-411e-a457-6611902d3cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7425fbb5-b71e-43d3-9104-8593250c6bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0820b0b0-c7eb-4d51-b553-5f6ae140bc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d9671f-8484-4cfa-887e-2d456552d200",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e519fca-de20-4939-b6cd-ba49d79f7625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ff4634-2887-481a-b521-303f5558e27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e767a761-1862-47bf-9e7b-91828aa60664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc25eef-8c03-410d-9db8-b067d488190f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c14df8-7eef-43b4-a67d-a1b9aa270efc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b040016-2300-42e5-ac3e-7016004eac6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e6678e-aae4-439d-ad1d-8b3a6fc75523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87281ab5-ae78-422b-9797-40a1b13ffe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e19a0346-6316-4f48-ba3b-694dbee33db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0acb1fa-bacb-4630-94c9-eeebefca1be9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02639b9c-e5ec-4a23-8ec7-1a46fbbf2e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f7f459-0cf6-415a-becf-610d5e3a8ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b39325a-af17-46f8-ae3d-606d52c2d36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e11ed6f-3330-475f-8cc1-dbc317cbb83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e92b0db-9e45-449e-b1f7-fa23fcb01b2f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a24c06c-2e38-470d-8379-d4cf6fce07ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e96075-48c7-4cbe-ae6d-9ed25e4adbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7b2066-c33c-484e-aeda-787cfe34f314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c39818-6f4f-48a8-ac18-c540c92f167e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f8496-e447-40a9-9889-7d68df212054",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9389b955-79d4-4797-b140-10b34605dd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf48418-845e-4d2d-98ee-5851b61ba1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15340ba7-62c1-421e-9a63-b0ccb6989dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09e63924-62bb-47ea-b892-71fe7c73e1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23294eef-3ee6-4982-a913-39576552e486",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4839419-8749-4cde-bb1c-ceab330598f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4a9738-04a5-44ea-ae2e-992253740dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e78cfbb-9442-42dc-8642-45bb5c6a1952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af3fd14-4069-4784-9cbc-0c17bcce0245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f71c83-24c7-4827-a042-3ee9a4dbc1f0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1864538e-5622-44e5-8391-bf0ce6c4ef6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2da80f3-9b3f-43a9-9a96-2bc897d241c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c94d73-f869-4b55-bb52-7edc8a1cdaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc9d293-e3bb-44df-9f04-cef9bf0e7771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0924bf-26c3-4c05-bec4-c24ae8ccefb8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1038184e-4936-4e63-b2a0-cfa19200e41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9f9d55-bb4f-4d19-bf06-817be8c12fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6e370d-c7e4-43ff-82cb-34357b7c8be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "486b3a98-cb18-4d81-9f47-d8579e44eba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c829e6c-778a-4d59-bcc1-2b2e7970ee8a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07440a01-2689-4770-aecd-dea65c251991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2c97c2-c4a0-45f0-a40f-0624c47115c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86bf54b-f685-4919-adb1-7c3f471a2666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55ec8abc-2033-4b91-9ebc-8272d1ef0314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf95e89-fbb4-42c5-8822-b6c2bfc60c0e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4342c7e3-8b02-4ba1-ad97-13f0399799fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5586fad-fffa-42d0-8f94-ab705e0c4b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d99c81-c44a-416f-9bae-a014e419c64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "459e505c-d267-42c7-976a-cf24915ad9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4974e2a-0639-4876-9008-6c9f0b7daa28",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9565a9b0-fbe1-4f27-925c-edc2b8184172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84622ef-c3e0-4558-80c1-6c459e6b0805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba6833f-4f8d-4332-8a44-a7268fb15104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "757c3a5f-1647-4ecb-a120-29320d05fbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74d486c-509f-4eee-a01f-1567e881cbe2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2175b5-96a0-43ba-93f1-ba78ae9ab34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5e558f-67ec-4340-9254-407d47700fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e10e98-5e62-4803-8f84-41479a9f9264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ba2c8b-92e4-4d2b-8779-050a3065d24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca52a53a-e504-4c36-ae6e-32aba23bae81",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e16590-905f-4320-b4e8-54a159eefbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5517b11-7af8-4029-beae-830b2d2e988a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc750086-38d0-4207-b29e-d177702b5756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4582541-388c-4c7c-997d-8e8c1e9242ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d30270-6986-4b04-b05c-ac08cf15bb90",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03f589c-88ce-44e6-9e2f-f98d89080b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bde502-2091-4953-9e5a-72c1ab1a3bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7974c7-83ee-4382-a1c2-58a6912e6103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "da068687-73df-42d2-9d78-16af2ba6dfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64af6d90-60fa-40d1-bb28-9d493afb3f29",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccde106f-f772-4876-8557-311239c14a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333eed3b-1f2d-4ee6-8322-bb79969e5588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302a67ac-979b-4f3d-9b44-867dac8f1536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "881ed828-0f27-4d5f-a705-4cb948a336ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8a3905-76cf-40d1-8475-ff6841e19358",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d682849-6e70-43db-a343-444a4e8cf76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc285e4-3643-4de8-a097-417aa136e016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee861182-8d3d-4f7a-8c3a-9980a39617a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afde9577-5a06-406e-b188-e2871c3d5b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bf8fa7-eb88-4920-8892-3bfeabe5d669",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1383c3e3-6d51-4459-8d9b-8110171a1b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bde5cbe-560f-41b5-b586-7a89d88ca5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d360c97c-c904-40cd-8a03-9aac97937020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce096b6-3487-47cd-baee-7406880aa754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9079421-9d6b-4913-bd08-1892b387a194",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7977f-0128-412f-842e-07e5fc8d37a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fc90c0-e33e-42c7-a819-5a4369b1603c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7c7d64-d845-4b21-ace8-df7cabd39173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc302b4-237e-44d9-8ac3-05d4562c355f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be2498d-3b9a-49fa-ba1e-31a61baecd02",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517dbc43-57b3-4efc-be02-cbc0b86f993e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edad212f-5c32-448e-a118-edf9272d8a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3ae7b4-a91a-4f53-9994-77d45d68af5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06818f87-59d3-4e6c-9865-451cee45caf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731dfa91-954a-4124-bb2d-89f05e46ba14",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73455404-67ee-4985-aa46-b9a3c55d634e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d80457-44dd-4948-b042-3202f4e89c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d4613e-033f-4392-9ec6-e071d8c815c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db21524-2c6c-481d-bb7a-59e83ce619cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e74e7f8-8a1d-425d-ab5c-6d32a6724cc8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d826cb5c-f201-4b20-9b7f-5a21c42dee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a39e7a7-f9a0-4236-a601-c167f36ec13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70871abe-7983-482a-877e-dbd0ec7cac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff8d222-41e1-434b-9776-17bbfe3a0554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59627096-d13e-4bc9-965f-fd9aa9cbbd11",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9e3533-9ba2-49f9-972b-bf3bcdb7bc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995acd8e-86e1-4465-a94a-a4adb1451dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fd6bb4-e50a-4f98-8708-b842b6ff373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25e6177-6296-4372-8b95-1043d25f5df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac933bb-f8f4-42d6-83ba-85e9c8812fa9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce02c7d-1bd9-4174-8bb1-1bfad6cb613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c98bf2-d400-4439-8d3c-6622d836bbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becd715a-84cd-49ca-b2b7-15237d373a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b4d91e-04f9-4168-a95a-83367ef93d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2df849-2e91-4b6f-9a8c-9616e9624f44",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1002c36a-6aa0-43ee-86ea-0a63ae7515cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c47f44-f846-4501-8f1e-7cf9fdff889d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d045da9-4736-48b0-87b5-6de16b51d4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e20923a-a247-4f02-b5d5-ccdb34151c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818e53e0-8452-428a-bb44-57432e026df3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d43321a-760b-4508-a103-439ef5291bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cf8658-d5ef-4fa9-84c2-784448ac6db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a26483-e6bd-4f06-b5cb-1e86b89039cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5347307c-4b0e-4817-abc0-bef56014837f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ca1252-db40-4617-9976-d2d63495fb53",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1c7025-06e0-4c25-847f-2f5fb319a603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bb54d2-886e-46a8-b97d-c70232bb85a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84af93e6-a40e-4319-9a4c-a803e522afec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04e47696-b76e-42fb-9313-8c3d9978f6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8a0712-f9d0-4fac-8217-d9f1d08d1296",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed36ed85-054b-4764-a2e2-c1c6c27d452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e8fb9b-f100-4880-af7c-bc0b6beccba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12de8d13-2440-4fb6-975a-d9c6d85b5b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b875f0-bb72-42fa-bc75-e8711c4adde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe3f00e-2957-427c-8636-cbf6dc34c23d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93ecf1b-b2ed-4110-a5d7-70b06a97d86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6947313b-3ef9-40b7-91de-719e8663937e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96dfc23-a9ba-48f8-a422-dc92c49b729a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed12f233-4021-4194-9260-9b99150a85bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5b459f-5f6c-42fd-95d7-627621696cdd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b4b53c-614a-4b7f-abb5-662ef0ba4e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159bd254-2e7d-4fb4-b652-d2eff56cfdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c6db86-3f90-42cd-a6d8-827f99dc7055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2536e39f-c32d-4e45-8443-f915f684e9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3700f127-f6d6-4bae-b310-5f8b726e2daf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6e7956-ecb4-4dfb-b3d2-eaaaa1e1e748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ce3af1-66da-4401-93a5-a77fa360a912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb22f77c-d9cf-4e32-8dfb-3a56b429c113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0c583a-654d-423e-8a32-ef4b4ee4ddd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7671137-ec5f-4d04-b39a-c2b4e6dda7a3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc0f1ab-0a48-4c10-b67f-8553166084db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2717d078-8f9a-4107-a67a-1aae472c2248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b16002-5469-4b48-bce1-6fb4dc167cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8dd10a2-b688-4de4-a1dc-bd0d5faaaa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798efe6f-6ecc-4eb9-a776-9a279757a54c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5403461-1c66-49c8-a6d5-f9adecfd823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555d08ca-1e46-4569-9fa9-df05690842f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87142da5-3c81-495e-8272-63ed5d8620e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e93f65cd-31df-443d-a4e2-bb3397646e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bd53e8-afbc-454f-abc1-5097f9aed0df",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1490f246-e370-4680-9a1c-1bdba35fd2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c6e3e5-7b58-4977-9475-987b98f8f24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5402f277-01ec-4e60-b54a-11e2a02609ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0745c0bd-18b1-4ec2-b67c-fefe39846125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4a48fb-ecd3-4a17-a917-8c94cc4e9a66",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3e6fc7-4ef6-436d-98e6-1344a5c184b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840c967d-ac33-4c3b-b694-b577c1e14e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c454c9b4-aed8-468c-b473-4827666ddc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "829e42b4-6afa-4faf-9c91-d175473c5913"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71a93dd3-cf2e-4606-b008-59c8283ffbde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9817f1d0-1eb5-4a81-a7f0-bd0fbb69bf0b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083d9671-868a-48f5-b152-d2fdfb2c5d76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "878f73e7-6728-42ed-8961-25f666900a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d600f0f9-81ee-477b-9cf9-381413ba086b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "741626c6-e076-49a4-98b8-6b634652cb4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f3f2d80-9f88-403b-9709-efca4cca9d29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e68bdfe-fe55-4a11-a295-2e3eac963988"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc980cc4-5290-4132-8b2b-de1758525ac6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10247581-d5cd-4b4f-b889-4531f0c6c2fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c38f761-65ad-4c47-b080-9aaabd4fcb7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a340b509-f7aa-4dff-a363-c5a65317fb7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca2ed473-ddcd-4ecd-afa8-aff2f5bcbab7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5213834-c14a-45de-bb0a-f49e6b822446"
            }
          }
        ]
      },
      {
        "id": "a6ea4199-4277-4bef-9efc-fb4131f5cfd9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "83d63e78-2dbc-4f7d-83da-fb3554d6dde1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22aa7af0-972e-4337-a952-4f5f55058228",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "727bd236-02ed-4adc-baa2-3a071a813a62",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429b1d37-698d-4428-bc73-19d0d4b42b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2726933-1b40-4e69-b751-1170749243e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d4794d-1de6-4624-9e7d-a7990b1732ca",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37229293-b6b7-4192-bb19-bb7c00c4c361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c7aea4-bbaa-4a9c-8b62-8205b6352870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c559ad-32e2-4720-be61-90c6baffdbe0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e82f5a-745e-4ffd-8ca6-4ca8b0c9ea3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6344176-2848-44ba-8116-5e6db4a5da2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730a5378-996d-4978-83ac-c36db9c44197",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c40d893-9d51-4efa-8ce7-551685a87c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e10191a-7aa1-4403-88a9-a3e66aaf3d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c296863-ea0e-4bb1-8dd4-645a90ea2cdd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3535b0-6f18-4d2f-be9f-4c4751af0f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac3992e-44aa-49a2-a56c-d5c427c73359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe36888b-8d0b-4b0c-b598-ca402f10b6a3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d759ced9-b856-464d-b072-2c7259418dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a503bb4d-7c46-4235-8f35-0fe0784f36c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef4ac6a-ecea-474e-8a23-16bfdb976ab7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47de4a40-963a-477d-b257-58f021215bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13105861-ddd8-4203-a08f-85de17c3f3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e693291-fb3e-443e-9449-00de8cce7643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622ee965-5488-4738-8dca-a4f534cf6d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2279e4-33ea-4877-b155-dcdb643607e9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc9796f-01b5-4066-acd8-e21490ad5847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b227c7-2621-4968-b3e9-7d300eb588f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909cff94-69f8-4a2b-bb03-8404cab38a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc827a3-45f4-4fc4-966a-20eeaf467aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98234cc0-3261-4d8c-96f0-55acca79d2ce",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd92ddbe-2957-4b95-a3f0-85591dc21433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d103532-c823-4e2f-9354-5fe1cf233f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2608d5-3bf7-493c-bc9e-9ef68b47ea18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9248d7a-cfbd-428f-acb6-911d7e90222f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161e7da7-129a-42ca-a590-cb7b488840a2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5104971f-150e-4b9d-97eb-defa11eb82a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eac6cd7-9cdf-4fa9-9cf7-16a4fd9923ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f47dfcb-8ed5-43a3-ac3a-06a55d165791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4dfab6-a39a-478f-bd4d-6bf7f1b6c004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdf72bf-b744-43ed-895a-48f09658eaa3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3f87de-85dc-4fea-adc6-b773077a336f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab86dff4-958c-46f8-8c6b-a53b1375f5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d08bdce-0449-47d7-b207-3dc54ad78fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b926e432-c6c3-4f08-b386-b567d9c8ef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c455e5-d57a-49f3-88f9-5bb30300f733",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8ecd5e-dea8-403f-9853-a8e7c8f65242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f47a38d-e042-4785-9d15-b245e2834e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e5c8e7-b04a-4ec3-85dc-b8801bc7fcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf11aadc-d7e1-459f-8fc2-c07f31429d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549e2c50-c1c9-481e-a61a-a16d626cdd4d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589d99b2-1ff8-4828-b5f3-3eee0b1c5f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c2eb49-e4e1-4a33-aeb7-ab206eb6ba58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be71f98-bf0a-4d14-8f99-a1a3b5bdc077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f38d941-a66f-46b2-907e-c82b50619ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6818d9-53ef-47c2-8057-19090b72372f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c26a87-6612-4012-8742-a5aa1b7869a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2633848c-7af9-40fc-97cd-e804e9d48e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009a5e0f-334d-4526-8929-8d7c6c118320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3f8fac-34ba-435d-976b-53c1f1425156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c86eb5-91b8-4c5f-ac49-982e57479d1f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced3e985-3de2-4ae3-9659-5b09663fa20a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffcf00a5-33f0-4783-a342-457137fbc336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63349f43-e986-45ff-a500-1bd315a7203a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddbe6df-d1c2-4a41-85d8-cbe701e66a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d22145-ac7b-4c26-8798-eb29bfc0ab5f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a2ae9e-1f67-40a3-8eb4-2369bd73aea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "067458c4-d722-4877-8b8e-91d5a6559400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db684f2e-e81e-440c-938d-23613682e02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4f15dd-c1ef-4d17-8c21-5c0b3e804d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ee6392-196f-4a99-8d06-bc81394f82ce",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1966928f-b585-4ae4-bc14-0febfe6e20b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1544db-a035-4816-a6b6-58b3bf296558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f2f37b-5ae4-410e-bf06-74dac0c46c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01eea2b-f367-466a-8239-17dd64215e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3513b162-2e93-4182-bcc8-034788c6dffc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10130c22-dd92-4f9b-a267-e090ab208ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87ab7ad-af07-4257-a7e7-00681ee45030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fa16b0-ec51-434c-9222-b61f9d7cdeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4410ea38-9ffa-4599-bea9-3b5af253d2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda429a0-67dc-4e01-8c39-a9b639165af2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406c4c01-0dc8-4add-a913-92faf157723b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f258287-2657-4b31-ada1-a8dc42acb0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4e009e-2890-4f45-8d0b-d1591b8b762e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be1be60-1aa7-4fe7-a639-08ad8822ca47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc7cbdd-a95e-4a16-8f34-fdd4825185e0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ce55ab-c607-493a-a3c9-799dab35943a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dfae39-1fc6-4c9c-a285-15fb76a5ba68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268b6b7f-d640-4e63-8110-6b6bccd03177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0a7eb8-d406-4c8b-92b3-8567754e0a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55979034-6db0-454e-8432-6adfc7b400d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f71bd2b-da3f-4e07-b0cb-1eac4269d2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1256ac-9f9f-4d55-8d3b-b95e99acef79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e53d27-4c7e-4925-9df3-2606529881e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a8f4d6-2c3b-4ee6-a160-10ad2b4e4393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972ee58b-1f0c-49a0-81d0-18d7c189b5be",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefb6f5c-5ec5-46a7-b415-15fec3cd6a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4191f24d-350f-4214-8abc-04aee0fd58fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eb6b91-cf70-45f0-9a12-46175165719c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32a0de8-2b91-4c1f-b6f9-d4890cf55c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170f4fb8-aaa8-44c2-80b7-987c3ee91d51",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d9aa58-34f6-45da-8b7b-3c1fb72b4aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dcdc85-49c2-4146-adb7-4d13a80b9510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3969a981-da0d-484e-94f5-e88280747802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83889bba-ebbb-49ec-9484-450f97c37a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e571a2-844c-4c8b-a5ab-892300e7c180",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1b8711-ef80-4d4f-b245-a66d34623fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931d342f-c036-4b01-a828-9f796eea66fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd994755-cdca-42a5-a9b6-51f559d2c129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46aad3cc-f75d-4437-a7e3-2c9adba0e323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbc377b-81f0-41bd-9d40-24590b92403e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093dfe9e-0192-4b3d-b14f-9cbde1b72ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b566c001-78f1-4a1f-8e27-469689110082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd48930-a554-488c-915a-4576da727120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de20e65-e331-4f07-8100-11e4a42c1c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b6b274-80ee-46d4-aca5-382db58e95a4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36243a7a-c3a4-4f65-8742-cd4704c4690e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebd4c25-095a-4bb5-a00b-71e6410d085c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da02832-ee71-450b-ba72-b37f891376e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6114b69c-ec43-4752-9f54-e01c2e66719e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1909acc-6df8-4f44-9570-2d975d6cc7bb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d02295-2af5-46c0-82ea-d4d2993a093b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b88f11-2abb-4fd2-9764-194dd50486d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d947931-9320-4881-b920-e0ba67f5f503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4ef04a-867a-4403-9f35-1c5210062bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa608199-8597-479d-bce3-c9ff774c89cf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd0a09d-00cd-4fc5-aac7-dc085d83323e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687281a2-153b-4087-98e8-1e5ec6e933db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d8b3e1-ccdf-44d1-9f72-b2c63869ab47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42e9c69-b211-4d98-8d91-3de2bd39ab7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91298e25-c2c9-497d-8716-143f597514d8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7ca26d-00b5-4da5-b384-e31a9dd1b646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccaeeb8c-02de-4e7b-a290-0fa7ba45f26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6cc46c-9011-465b-bdd5-6554a0aa6082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b27805-ee51-4770-a3b5-a580719d15b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76038017-528e-4835-9032-0d7b4b627a1e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffa39ca-8ae1-4047-812d-e09abbf17c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f846f05-ea71-4265-b6bb-546e21fb803e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba9f574-166a-4f4a-9883-ef1018c1a49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5234c0-239c-41e6-a40e-1aa59e73b687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6073b26-5256-454a-8359-ed5998a263f0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ff367b-c314-4bc3-a24f-840ce37452cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3ef6ce-f328-4e2f-9a19-0303387049f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70c2a3c-aa07-462b-b151-dd1664752609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8285062b-5b0a-4e85-b9a8-7f85b0cd3b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfb66d7-231d-45d6-880a-4b7101ba1403",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2f4aba-0c73-421a-8d35-97a22beefd11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0a2bdb1-3dbd-4f12-81db-401c408a5420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d2c55e-6a6a-4a94-b17d-1b031aeff61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdeb978-df95-4662-884e-c51619d1274d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c3fadc-6b5b-4a58-a5e5-fbd942ebcb51",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29e4f46-b02f-4a04-b994-259205b7c8de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1710b1e3-7c63-43da-b964-c5c9a4dba939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52deb2c4-e097-4a49-a591-f4099bc03d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246e39af-4415-4994-b9da-723b57e0d72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d4597a-a5f6-4404-b49a-9023a4249f52",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d617aa3c-b628-4bd9-991e-570e66b0a46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ca11bc-6d00-4acc-9028-56b40739755f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9938d6-c99c-4178-a797-c77cd1da706f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb15ebe-5ad8-4e6b-90df-1d959d66e262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c5e44b-cd5a-45c0-9b25-fe167c6eb897",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30f7d48-e5e4-47c2-b25f-ab0db7ab7625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c83d9d-9b5f-4a5a-a1ed-df35ce3aca6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17f0089-4f03-4175-a0ca-934c79423cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d128d7-aa4a-46f3-a1d9-a3d22ea95ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdf3e21-eb68-4e41-8f0e-3288567648c2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bb1141-559c-4e51-8cc7-6e4b5d1e76ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c010067b-f7ac-4a28-a7c3-90a347f0a50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7476b3e-e8e7-48fc-8984-02da6b98cdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7b7ad1-03de-48cf-9345-dd6f57a2e154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e31f40-abe6-47b5-892a-cf301bd0a368",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8748da02-6542-47d3-8980-10c0e97af1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04872484-d608-4261-835d-be02df76acda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b63a683-6924-42b3-89f0-5055064c98c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132810cb-2701-490e-b3a6-a10e30a06944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f474b2ac-863e-444f-b4dc-e54826613897",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db98f244-74e9-4649-953a-b6e0ae8cc719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dea224-54a7-4011-b79b-6f5b08a6d8b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecefb08-38ea-4386-8886-e1000b8a9df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a0bdee-d4bd-40b3-8a3a-effe6d5844df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6848a67-9a62-4775-b701-5094b6768e70",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da5a294-14aa-47d9-8fb0-589a971f87d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7e0d55-6c49-4251-bc5e-01de83782c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cdfa07-a3e5-4d60-b5b7-ac2ce7c17529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e997e7-5ab8-4379-a23e-6327435e023e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c976c2-a0f0-4fa9-b062-049490506f68",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a33720b-4678-4179-98c6-4b7590d8236f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb95c39-50a4-4404-b9d3-49715a9fc62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d037d39-8c98-4ffa-b347-befdd608c772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216284af-43f0-4bfc-9b70-ae5f879498d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b844d4-d7d7-4a3e-89d9-9e63e75adc4c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1ad44c-316a-4f21-acb0-600df4b1b2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de09bc73-2a2b-4ec7-8a49-26c104132628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca13b2a-89c8-4660-9d32-0414774eb4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3137fa-69aa-4e92-a788-7c96159bd5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb567497-5b82-4722-9bfb-5ebad9d68fb5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389a2628-44ec-446d-9dab-2b573086618b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af152866-a4b2-43d4-b001-079c54b3c658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cfdaa5-5c81-46d6-9fef-4c1d45ba98fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52fee98-1602-4fbe-96cb-52ca47ccca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32355a0-6981-432f-adb6-7d24ebfd1dfc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658530c8-d0da-4b5d-8b94-9b26ff053160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be753cb0-5ad7-4397-8456-c9e29ef79db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8a0202-41dc-4582-a3d1-27c551b28d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1809fbd-7ea4-4b70-9ebb-b88719b2d86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec1568e-4e04-4ee1-a12d-7ef3b8cef9a2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b633953-0841-49e0-9a67-9690c5d4eef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e629b2-116c-4da7-aed6-57673a087691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e541f395-cd29-4f8b-a599-1d5699f978d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff2cd27-b7fb-4c6c-85f9-739361df20bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3092f3eb-977b-462a-aa76-5a6417678f14",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412a02bf-1223-4111-b2ab-4cf54200595d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc39eff-fe25-4565-b48e-04280217dfa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e81b545-7bfc-41d9-9b51-fe263a126b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42a0c24-6414-4623-8c39-172a5cd6086c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31055c9f-4bcd-4fe3-a3b2-086633a867fe",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e79ed2-441f-4cb8-a5d2-937a0ff8a2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ecddac-3845-421d-b64c-2e436311e7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7ff986-225b-40ec-84fb-701c5fcc91dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0520e486-89c9-4bbe-bfd6-c9eb960bfe98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061427dd-6ada-43c7-b3c3-293661306402",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0487ce-7164-47ef-8801-5ef080d36098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09afeaa-a9fd-4773-9b98-ec06008c97a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abe90c8-63ce-4ecd-a72b-f1e90b4bb49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42696a8f-9efc-47f9-9244-718f8804923a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f51083-2fa4-4e46-aabb-57a31d3ba435",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e68251-1acb-4b98-ba78-4c6d4903fe53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20cd57d-a9d7-420b-8d27-04d802081394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c9fd10-2342-42d5-8045-8d88bafc1206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7da6c3-b11d-4bb4-8bcf-edb1fa55b302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73578ea3-4eed-4252-bff2-504da14fff7d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96d40f1-bf7a-4d8c-809b-55d025363d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b03fd7-7f49-40a5-b34b-73c6e67a34de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9829fc8-1e7b-4f84-a1b7-f311140325f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d14dc78-7701-4122-9fec-67a51eab1fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1b88b3-8b7a-4b2a-87cd-b86602c8362f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5104b5c4-a4ca-48fe-bf58-1f2ca52d04c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772bee97-e4d0-4239-bb5f-97725e90eb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b085ccd-8eee-4bf5-bcc8-65c0b3be43e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2208194b-56a5-4d9d-8346-ff768046d335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2ed25f-eb10-4067-8b07-0433a7334dea",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21b67d5-3409-48bf-a269-bfc658b44b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6025548e-a29e-46f1-862f-423bf692d803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3a7fb5-fb26-48ef-b259-1ce63c92bd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9061bad2-c0f4-4f6b-8df8-ed70b3a58017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60906730-d490-4120-9b56-6609003a6069",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a297800e-bcbb-4bd9-91b5-5d8d5d97784c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829d7db6-a32b-48ff-bcea-96088ed5f4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26fb8bf-affe-4f5b-80f9-0b76d79ea953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448f8e3c-1aaf-40b8-a057-c3313eed25fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adccabd-1172-412b-b242-9509f7970f9e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c5836e-8da2-4a7d-915e-407bf0abd7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c1db10-8b6f-472b-b499-c394d03787b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f339c37e-e91c-4578-8de2-8b409178764b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8d568a-4455-4e4a-9d16-ef553011f9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7850c1af-817d-48bc-a9c3-73ae53e387d9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937c8a27-cd6e-469f-ab1c-c467a3f77c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec827a6-5b61-4746-b902-e88e52131eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81152df1-8f5c-48ec-8153-f619019e0913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2675955a-9149-409c-8203-183e877606f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58612f9c-d3f4-4677-8c47-2307b933acbd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01ccf03-5d27-4bc3-9466-1226baa81498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a8bf1e-f68b-48e8-b00e-eb7530028713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f50194-8ca6-4f45-8f92-8bedc8973c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9664df0a-95d2-4da6-b142-e3000559eabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32281d35-428b-4d6a-9f59-08d5be707d25",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af12b320-2408-442c-a670-b8522ad635ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f98903f-90be-4927-982e-88e1063670c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db23e495-5a89-412f-b5ff-4bc669427999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb86f24a-c83d-4c64-abfb-dd97c28aceb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ce7f78-318b-4f3c-87ec-89649b9e3d6a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ededa7-46a2-49f2-9ca0-a6051f9700a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eeae82f-6c26-405a-84e0-a22c2e9a690c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de44a768-44ac-4006-a134-3b097f09b3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02203c6c-8196-4974-a63f-63e2dd7159fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87105cff-8969-47b0-85f2-6d61db5f619d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2424b2e8-c92b-4e80-9bf7-d1de8b9be903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c587da4-e835-4b92-9d2c-8a9f5c71c1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6236897-28fe-4258-af8d-39b8d0c64ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75ebca6-07ae-49a3-ac74-1c5764763a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a13ef1-6b4e-4ace-88dc-1056b48d7a29",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba071b00-a45f-4863-a358-411ef9992519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8632d5aa-a157-4fcf-a82b-741f7dff2ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2bce0a-6228-4ab4-874a-a4a52f8f9a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df91dc56-256d-417d-994f-2144d47473f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff14f40a-dbdd-4227-bdff-276b26596d4c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3ef525-fc74-40c8-b535-852a4c75d47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afb655a-a44e-478b-a3e0-c2f2860b1b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f553b5-8316-47ad-b487-3e20218c4acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b237b5-56b1-40f8-8617-9780bd740025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ac25a7-9f0d-4f60-8ac9-28eb359dbfd7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cb9761-1f10-4854-864d-da10517fa17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e0917c-f559-4e01-8d45-fa6b004be7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94bb902-8184-4cf9-9ea3-89466a1bc47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d28187-011e-4158-8364-1bbb2c1cacf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be29dcea-5f03-403a-a1c2-cbfb901cdc66",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a6dd59-90bd-4d64-a740-0cec593062c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b52cd1-7360-4741-9cec-c6fabe0279f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca2b687-238e-403a-8231-b9dc77de4292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c67a64-deb2-4027-a6f9-974e91b10f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52b8ef8-7111-4057-93e5-256e5ec7352a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555f7056-7eb3-4779-b1ec-430cfead996e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d481ec3-630b-45a8-906a-ae4cc9f2d354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059d229f-7241-455c-a691-d07753c46921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d09ea3-7790-4bee-8a8c-3e12ab0cfee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ea0da8-eb00-4f72-945f-d0c34e1828ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263f0763-3e00-4873-b99e-4902466818f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c2a1b15-0104-40a5-bebc-bdead8758aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea94010d-5193-445e-afc8-e8f40c5a35a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf3deed-925f-45c5-b598-c008b1bad2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d44332-6ec8-4034-9ada-22715d7a7f8d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3071b51-f24b-4777-a26d-5c23bb80e439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18005e73-5b93-4ebb-97c3-e79fa85b7210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e4da24-3578-443c-adaf-571ded6dee6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bad8b0-45ae-48b4-9226-b975aceef4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fee240-3dcb-48e1-a402-31b24fc7da3c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4e44b1-589e-4469-b0d7-c1907e5b0225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d6619b-f60d-4c03-b82c-9c92f0ba66a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681d88cd-4725-43c6-bb2f-d3b65119c1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085c754f-47d4-41b2-a677-639bdcac355a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7037c7-5c60-4146-9dce-f78137002741",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74acf700-a0c4-46b0-8d52-2627b9263efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e143c98-fddb-4adf-8796-9a67141ae217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891dd24f-865f-417d-8b06-66ae095e4b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9772ff-d559-40e6-b856-6a96faf5a580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c8e935-2208-4399-bd15-74e0b9f35543",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c4394d-9100-4116-8ed0-bd23e25ee302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dbab613-9786-4f64-993a-fdb2c904429f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c937a2a-f81a-4f05-aefe-a6f3aff152cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d7881b-56ca-460d-bfb2-9cf02b5ed634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5cda8d-c4c2-4c75-a95e-f7938eb0b36c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78d8a04-011d-499b-b2ef-8d628a75b94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c965309a-0c6d-4c83-adc2-8cad9ea761f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15313b98-0f23-4951-8fca-17b415e28745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f1f71f-9381-4ce6-8038-718c6c5d8d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b157a1ee-e0e6-422c-b7fd-7c48fad50152",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879fee88-e264-4e62-900b-4854324db36e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c6e571-8a0a-402d-975a-4bbfee3bd09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91641f7e-89f1-4ac6-bdb2-d997d5c13faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73c3724-715c-4f93-b47f-0661a0b0b621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc540c8-98a9-4444-942b-11c723208431",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f44d1c-bee1-45e0-8add-ec2698724275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1118f96-5ad7-442e-8d33-b70bd72ce7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3184cbb2-485d-4dbe-aefb-647a4496a850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f651002-8f4d-4f5a-9a3a-56d4c36bc7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e936877a-44c2-49c9-8eda-b367bee87293",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31c39ef-e3b1-4108-9cef-23cfe9831feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83ed7e1-2403-4c8a-9aee-c14a7d31cd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f3faf9-edf5-4770-8e00-14d271ab57ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f246afa-2653-4ed8-9b60-9dec454978b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e9097-3222-49b1-8657-e1d1cdc23ea0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25b01eb-fdd0-4a51-b600-608f2b0a42f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dfdede3-a76b-453c-a082-414db4c2318c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba2608b-5879-471c-a6c8-17bba750ec66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d752eac9-3682-49f9-a5bc-98b1310b2516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9302e052-d712-4b38-8731-632c50216047",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15a7ef7-1f20-4f02-b035-8a3260de759d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39311f1c-69b7-4798-9865-512089bd181c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd479b77-4158-4e4a-b960-85acd72559c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7a28bb-2e0f-4a8e-8f68-ccb02a21637d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec30b31-246d-4839-b24b-bba96f34dc2f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d264a96d-86f6-451e-9db7-92fb45957722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5875f85-9316-4a0d-a0b5-e7323d1104b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e341d5f8-7a45-4c1a-a0e6-fa4ce49ae901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3716688c-9a3a-4b19-8765-392e2bd200fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cfb5e8-eb6c-49a4-8069-89818cc3b8f1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d634afa9-4008-46a2-a944-ac219b4181d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c64b8a-6f19-4ebf-8033-9b9483b5c1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e1e426-de3e-4e3a-ad3f-d6af2afa3a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83b3be8-47cc-46e2-86fd-05af185c7154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b514c2-c802-48df-a8d7-5d3aa16d18fa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33d46b7-1bf2-4307-881b-acb691654945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "997a0952-59e0-47a4-8852-f16c62deee4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18eb3a0a-16bf-4333-97df-d969214a2bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80a6ec1-ccdb-4c2c-a2c4-c192e026dcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac5c34a-6f51-4fb7-a4d8-dd950e5c390c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cddf0a8-b28e-4c0a-bf87-cdcd13936cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b4c712-8b21-403c-9ac5-d4af2810201b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9059cdd3-8fc0-4c7f-9547-3ca935731135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d30019-b386-413c-80be-652a14a8f93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cbd472-4e49-4cc1-bc1e-788cdbdad9a7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339e10c8-aeb1-4910-883f-7cb6c2423abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f332c642-879e-4b62-acd2-acbdfe5f94dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8103ecdc-4f37-47bc-ab00-d6e3fd2a10d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30c6179-a533-4641-934c-2b64e6b44dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa293ec-ce32-4e89-b84c-154ee0786a18",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d31102d-b17c-4ab3-8d78-2693187edd39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac0f281-3092-41f3-a947-47556e70b56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b6255e-e4eb-4340-929f-f65a8209c494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae57caf4-7303-449d-aebf-11486a296b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd3e078-6799-4ca8-8f69-d640165d81c9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53c8ef6-e7fd-4834-921d-432072383437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d2ead07-54b9-43c6-b12f-1986229614f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e3635d-bdd3-4af2-87d7-293c5d5f3e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a2367d-a503-49b4-a320-7f9def92265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e999bb0b-5e28-44b5-924d-a88a9adfb6b0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac60ef4-ae08-45c4-b82b-509f3dfd6a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bcb82e6-50ea-44f2-8e26-07a1f7bbdeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edf3075-97ed-4646-bceb-22fe20e21086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e28e76-a883-4fca-921a-db888b3ad6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603e2fe2-c481-4d6e-b6af-435fb153fd27",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af8c2bb-bb3f-4a63-9d9a-826475722845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c2a72f-df7e-4d7f-91cd-5e0a762dce5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b94cac-7564-42f7-99ad-114c29b2b573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7621da7-495f-4b79-b08f-481b948b8d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8345a24c-0037-4ae9-8e7a-e3911b550c6d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642d4ece-538c-4279-b480-fb7a281b5fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc2bceb-843c-4016-bdcc-69fc54a13677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6973ab80-9b2e-4c58-b4d4-044e7e565ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db293068-8aab-4379-8ec7-a74402796a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6136e30c-214e-49a8-aa8a-828bb80df84a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a13f082-dfea-48dd-9540-b5dde16e48df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032362b0-723e-41e7-bb26-fb2874acf6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8089a0a5-a594-4cc5-91a6-ad06626f5cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdaee23-9a9f-4378-b8f1-b92d75f6b8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fd024b-e06e-4000-a314-37d638e5cf24",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625e4a72-b378-4743-a205-8855edd5c242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b25422a7-6a65-465e-99f3-55eb5f54a7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394d7828-261e-4183-9b3c-2e4b3783dc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1be4813-3766-4558-9930-b7a069f6ea50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dd766e-9d8e-4755-8fb9-ab33f539f524",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7dc007-f501-4456-bc3f-5b74880ed537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf1ad9cc-921c-4a27-9878-4c46a01e409c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0b792b-1b65-455e-b53e-fad651c529ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3235d1e2-4495-4a14-a15c-cb20063ca032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd37921-c6f5-47f2-978f-bd4c8ffd742c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241fb305-6d74-4fa8-934d-d911cbe528b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0629f6-99e5-45e9-93c0-444dde771567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88b5ba0-0c96-4872-9542-d6aaf6c7512f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a13a18-6478-49e9-bee7-58f079650af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48daee5d-8570-48cb-bd20-f14d7149b658",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8580c33b-3b01-4a66-ae9b-4429448caef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f0ba15-441d-41bd-8e34-f79f20cc7697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1f2b37-7815-41c2-9684-68aab7759c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3070ebf1-73fc-412e-9ffa-5a4176674bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cb196b-70da-4c27-b172-1e029dc12890",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3792f6a4-2223-4682-ad81-7fc5ff9c2c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c345247-df96-4362-9b78-e1c24cf5ad01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca0dd06-eece-4bba-8b92-53d774ffd634",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cf7716-ba9c-443d-ae25-ac8a53e3f451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731be20c-3d66-4fca-b182-b965656d35e6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824340cc-42e8-462d-9338-d2d38532eafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8477ff78-a4ce-414d-aa6e-1aabe73d4223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447a58db-f92a-492f-be85-d58ace6a1a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a032c485-256f-4ba5-9920-8d056f368dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aac527-cfa8-483e-9f44-22e2b511f782",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f432e-b40e-447e-875e-1be0a80926fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d52746-4abf-4337-8783-d88a98abc052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2476fa95-9055-442c-8ded-225d0bb63daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e02318f-7a70-4fb2-aedf-ee333b889ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f449597e-1141-4fab-9063-012c9f1bfa24",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd672d0-12df-4dc2-b049-e52f9e39f256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f30c040f-9a6c-4dcf-87ae-ce7844e1fb00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd231e-b926-4ddc-9e5a-9816ebc9a991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc752f54-8f4e-4acc-adc2-15b0bcd4a046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2629bfa7-248e-4bc2-ad07-df4be5d9f47a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba4d336-3450-42d6-a772-e1d45874b98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bdd94b9-2463-49a4-a400-91a881efd8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cadfbfe-fe5b-4e86-8b1d-d79b823e2f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e899426-cbd1-4c59-af7e-d025e09e8611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6948223-fcd7-4e68-a155-03a2e59e3ce2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aafc3b4-986d-4e5c-9767-a5a8ff7f8f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23b2e1b-874b-44be-a699-6b42b4574301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c915a65-dbde-41a6-a2fc-8120d4bbad69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e11fd9-71e4-4a8e-b057-66d6e566bad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e643ae-be26-4ad7-a3d0-600d66f3aa15",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6ba34f-a421-42d2-8426-7605f8560134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4749eb97-31dc-41af-bd9f-e0d51764124f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285f5fd7-6397-439a-9b65-a20a861b22fc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cd67e0-4b85-4997-ad7b-760badd82ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b587fec9-3c3b-4d7d-a53d-fbe282a6235f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2948455-0a6d-4f4e-85b5-3d93e6fff392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cedb45a-d760-4ff7-85d0-ca035f341e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f05fdb3-03cf-4ebb-8f9f-969fc064f613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b656f682-40b7-43ce-affd-c50a22ea37cb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61f26220-fea8-4cd4-bf33-d8d480ba5866",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58085d6c-57f4-45d7-bff0-d52a51b192d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a43974d4-13a2-44c4-bbb1-7b6249074e9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71d446ab-0057-4eb7-9e74-a5646255728b"
                    }
                  }
                ]
              },
              {
                "id": "54b3a9b6-b823-42a4-8167-b25dc906c29a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa6d9c58-a792-4681-9c98-99c83c7e3ce3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939907f2-c8f9-4f4c-9607-cd7e47b76e42",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1e13287b-25b3-4bbe-854f-27647e26489a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97c9fec-fb7f-4ca3-8ba2-490f2171677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8847eafd-8931-4a82-8880-1da5c9ea1d1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29b63f15-484e-4cfe-b260-c12e38db8456",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00f3353a-5189-49fd-b801-d9ce5b73079e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e20b5729-ca6c-40e0-8a72-1dd124fd65bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47dcf49d-abdc-4596-b9ef-56590f07f295"
                    }
                  }
                ]
              },
              {
                "id": "02c31175-3e80-488a-8694-25911b0e27d5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5cf29ca9-9346-44cc-9b39-d8fb1793db97",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb27204-14b1-43f4-8f87-0b87acbc6305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "51c81921-43fa-4cfe-a197-23c812b41675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5491ab34-b3b1-4a9a-808d-adc0cb3f8a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a95c48c-5f98-4d9d-a115-c95278c8f8eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "93f8d746-be4f-42f8-b7d0-a4e687dfa822",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef3c4352-600c-4935-9305-b79339d541e6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41974adf-8bb0-41a4-9448-b6e944e9559c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c328b098-6564-4cfc-a5fa-144b6790a05e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf113667-15ee-4d59-988b-d8288963b879",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2a5bf43-bc55-4910-9f89-a0b4e4dc1a70"
                    }
                  }
                ]
              },
              {
                "id": "8443888e-4e30-46a6-b1bb-9d4dcc329cb7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97bc78e0-e168-4604-8390-ab602125eb07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c7e6314e-c27f-4345-a3bd-4fb055791d86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9c36b01-59c5-42ef-83bd-04d561e81aaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc06745d-2496-4481-af71-364addeec2b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "586e3746-aa98-4fa9-a024-338b9e811bb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fa5fbd85-8890-4c37-84f4-5066038eee14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "588d279c-2e52-4658-ae64-e4f96dcf62f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3e4aa93-aba6-46d0-a330-c741d628ca39"
            }
          }
        ]
      },
      {
        "id": "5f07fdbb-dfef-4a10-8ffd-ad4f102cdd17",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "109ccccc-35a6-474a-a7fd-ad012df2a58d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78fc0702-054a-45e4-8e90-c4eb60c0818a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f4bd67e-28e0-44bc-9c43-b47f323b3ee8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358ab9b1-237f-4377-a3fb-89bb1fd07059",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "68e12c10-123f-4e59-8872-5d90eeb77ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ce4db4-4f90-48ca-94fe-31c96978a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbff737b-19f3-423d-8aa0-0e855002ae11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1744a599-e0c3-4a9b-b2b6-73ff99b68952",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f44d7e3-e42e-4e15-8f37-c1328f0ed4f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2bf0e9a-a2cd-46e2-81d6-2ef8bc4050af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cf00ff7-2d18-48df-aa77-35641f181219"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ff6aa01-737b-4f7a-93e5-9d66563ae38a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b2399898-7145-4bdf-b68b-62204763deee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e25b2e6-d039-4a95-aa95-7398a4f86d71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7901802-dbb6-4e9b-b733-ac811e2c6def"
            }
          }
        ]
      },
      {
        "id": "f38568b8-305a-4a1f-8c1f-2d27fbf1bd42",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d4b61d86-7ade-4da8-aadd-70a8722c3005",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ace84a5-6f1e-4f07-8aae-db4fca615b16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1167219-b6e4-4b2f-b34c-f1cdd6e2f237",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751b40a5-6732-46c6-919e-f23754856dcb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0b88b05-92b1-4772-80d3-f8f69e155b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ae88f3-f774-4d8d-91cd-f4d8cefe1cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "406e18f5-33bb-4aa6-bcd0-85d1ff9ebee7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ee4310c-7d06-44a4-aa89-7408225a0097",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aee91090-225b-47fe-b642-5efc573e04aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7179a43c-98ce-4dda-8d82-5a96c444202b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9879bbe5-009b-424f-aa71-5ab0a548991e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a350ae49-c57e-4e94-b669-d48d8a5d0eea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d0da29e5-d1e8-4af4-ba44-28ade5ab5f8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6afed06c-f118-4634-98a9-6e32dd7ab78d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a298f050-b711-4649-a9cf-ef3097fa07de"
            }
          }
        ]
      },
      {
        "id": "c4d9e6ce-c3f0-4f4f-9cf1-6fae0301da3a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d814853b-e73c-41e8-8cfa-45ac996d7b12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5b2a7e7-6ec5-410b-b8c7-9240ca5edd28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bea21e85-6013-4054-a64a-37ef88097b45",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e453b4c-fc2f-43b0-99d3-cb083417b54f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21421e42-dc07-4be1-a8b9-8901a7739f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442376f6-bea6-4362-a63a-4f645e706ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c80d14f-8db2-441b-83d7-f9927b8a3edc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3808233e-5a49-4525-a0b1-b138736b9d3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "956b0f0f-f8bf-4372-9ea7-391de6204afe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a39a6991-2888-4f4f-9006-4e1b970355cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "685a4493-c2cb-4f67-83b1-e1b8347f3215"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c18a6cd-520a-4516-8816-6c1994bd9ec1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e427bb5-e5fb-4b77-ab39-42a3c37f4924"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8552405-1daa-43fe-a8eb-5c31ecd0ebbd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21b3d5c5-156c-478c-8443-984b0c95ccdc"
            }
          }
        ]
      },
      {
        "id": "c5f33cd1-725c-43e8-b968-ad00410e5610",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c74d63a-065c-48dd-938c-1c1f0211e810",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "631c1a24-baf0-4d9d-a1fb-f2e08f72d8bb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4e2405f3-c883-4c71-9017-de869e1945f3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc1481c5-84f7-4514-b12e-8279183d27a2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c0966db-28b3-4a6a-9886-046eefda16e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 55.390845070422536,
      "responseMin": 21,
      "responseMax": 374,
      "responseSd": 28.644470510644016,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689209300671,
      "completed": 1689209327738
    },
    "executions": [
      {
        "id": "1933922f-3b9c-42a1-aacf-9a31228473b3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7469123f-f6ed-496b-a55e-9bbf88065c78",
          "httpRequestId": "f998a245-e07c-40d2-b884-0cc5e4f41a62"
        },
        "item": {
          "id": "1933922f-3b9c-42a1-aacf-9a31228473b3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1dc70d6e-05cb-4464-9d75-93700ea16552",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "de82ef08-692f-48c0-953a-5796f1ca481f",
        "cursor": {
          "ref": "c72d702d-acf5-43fe-9958-721abc0eca88",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5acd9fc2-5cf0-4814-b2ee-b0d1bb47e730"
        },
        "item": {
          "id": "de82ef08-692f-48c0-953a-5796f1ca481f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "813dac75-2da1-47e2-a4ce-d13eac9e34e7",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "ab67c6b0-8863-4573-b912-d3ae14c5f02e",
        "cursor": {
          "ref": "9d93b0d1-d981-4172-90f0-c80dba0bd143",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5e7cfa83-c608-4bf4-9528-9fd10941299b"
        },
        "item": {
          "id": "ab67c6b0-8863-4573-b912-d3ae14c5f02e",
          "name": "did_json"
        },
        "response": {
          "id": "67675204-6b24-4f13-84c9-c1099f978bab",
          "status": "OK",
          "code": 200,
          "responseTime": 374,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e5075a-f2eb-4422-bb8e-d72ec0839a77",
        "cursor": {
          "ref": "6bd06584-c040-47e8-b723-3cf4d8f73ace",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cccfc69b-c448-4d0c-8622-832c55364f34"
        },
        "item": {
          "id": "86e5075a-f2eb-4422-bb8e-d72ec0839a77",
          "name": "did:invalid"
        },
        "response": {
          "id": "ac4cb151-1c72-4f6c-ae79-686349ee35af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e5075a-f2eb-4422-bb8e-d72ec0839a77",
        "cursor": {
          "ref": "6bd06584-c040-47e8-b723-3cf4d8f73ace",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cccfc69b-c448-4d0c-8622-832c55364f34"
        },
        "item": {
          "id": "86e5075a-f2eb-4422-bb8e-d72ec0839a77",
          "name": "did:invalid"
        },
        "response": {
          "id": "ac4cb151-1c72-4f6c-ae79-686349ee35af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2886e357-5db1-43b6-9d4f-485d8b897d47",
        "cursor": {
          "ref": "97127cd1-dbab-4013-9c69-d41c5bd6658c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d21ca389-871f-4d1b-a5c6-dc23f33ae449"
        },
        "item": {
          "id": "2886e357-5db1-43b6-9d4f-485d8b897d47",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fec61919-191c-4ae9-b8e0-d03ec28d3472",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4d5996-6c83-4bb6-bc83-013b8dc54f45",
        "cursor": {
          "ref": "cc640e2a-af46-468f-a56b-30e119481567",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c72aa68b-52a5-41d5-b9d8-b2824d6d4150"
        },
        "item": {
          "id": "da4d5996-6c83-4bb6-bc83-013b8dc54f45",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bcd3b8c7-cbea-417b-82b8-95393647fb12",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9040fb-11b0-4245-a7bc-6d26cefd3899",
        "cursor": {
          "ref": "f7eb3040-b8ca-4f77-8f71-86f08ba0f229",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "132478ce-d952-45df-a882-2b55eaf8f124"
        },
        "item": {
          "id": "9e9040fb-11b0-4245-a7bc-6d26cefd3899",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "143d68e8-6ea3-4d0f-93e8-17e98f4a5d25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11747d3-e2e2-4068-89c3-c14d852c52ee",
        "cursor": {
          "ref": "ce259c8d-b269-44e0-9dc8-d4849d11f819",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5e66cc38-1968-496d-8909-b7419bb9f107"
        },
        "item": {
          "id": "c11747d3-e2e2-4068-89c3-c14d852c52ee",
          "name": "identifiers"
        },
        "response": {
          "id": "bbaeca59-cb38-46cf-a1a3-f05fd003dc41",
          "status": "OK",
          "code": 200,
          "responseTime": 204,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca2b8c5-d3ba-4ec2-9464-b3ec2933689f",
        "cursor": {
          "ref": "e3288e49-f1a5-47bf-ab8f-202b5f5d8fe8",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ab3bd328-58b9-4853-a1ba-b93cb5ea9b3c"
        },
        "item": {
          "id": "bca2b8c5-d3ba-4ec2-9464-b3ec2933689f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6e4ce49d-ebef-4102-ba9c-a2040b53c214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f254480b-fda5-4313-8d97-06f66c0df4d3",
        "cursor": {
          "ref": "40e988ca-c0fd-4bc9-8b06-544ff8643b71",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "62ca516f-165d-4086-8668-aaadd0914876"
        },
        "item": {
          "id": "f254480b-fda5-4313-8d97-06f66c0df4d3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c4ece680-ed9d-4bb4-91ca-2205ec03db92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b35719-bcc4-4b68-b604-9bc477b03e30",
        "cursor": {
          "ref": "60d3e5fa-df78-4e8d-b494-b97731b529d3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0ef0213c-7227-4747-aaf5-cc91b5ae4f0b"
        },
        "item": {
          "id": "14b35719-bcc4-4b68-b604-9bc477b03e30",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "502d8e25-1d2d-4935-89e3-78772d7ff724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fb0e32-2d50-49a7-881a-c9fc7ba81a3b",
        "cursor": {
          "ref": "07ad8568-26fc-4f0a-bf62-429499188fcc",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3217a885-f42e-43fd-bef8-68c0cbd7357c"
        },
        "item": {
          "id": "a9fb0e32-2d50-49a7-881a-c9fc7ba81a3b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b0f0f1b1-9c5a-493a-9891-c5c1c39c4e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cdcede-5888-42ed-8adb-bfc26990033e",
        "cursor": {
          "ref": "d6af9be1-aa4a-4985-81f3-03748efb5a19",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dcfbd630-8be4-4381-bc64-3f3ca468f07d"
        },
        "item": {
          "id": "e7cdcede-5888-42ed-8adb-bfc26990033e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dff9af52-95dd-4fdc-8f3d-d7dcb23231f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de50194-fa50-4c21-87f1-c9bf87ac306d",
        "cursor": {
          "ref": "0d675d01-610f-416e-b090-36756cf767ca",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "35e1628d-5ad5-4e05-ac09-6bd99be0604c"
        },
        "item": {
          "id": "2de50194-fa50-4c21-87f1-c9bf87ac306d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b98692f4-4709-4096-9f09-3f7616c88015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45d587f-cd0e-4ac2-98ff-beb05facd072",
        "cursor": {
          "ref": "3f793405-ed46-405a-9dea-b85db2e31978",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e2ae18b0-2fe5-44e8-a348-3c97927582cc"
        },
        "item": {
          "id": "b45d587f-cd0e-4ac2-98ff-beb05facd072",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "66f83cd9-089c-4a8e-bd1b-e545fc2c0411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22725862-4bd6-4825-bd76-71cb1b1cf202",
        "cursor": {
          "ref": "d067ab92-89a7-48ae-9e51-9a6a5e48352f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eb505f1f-83b5-461f-a864-ca919a18c917"
        },
        "item": {
          "id": "22725862-4bd6-4825-bd76-71cb1b1cf202",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0f3e192f-8573-4dd8-ad61-3c4867d6a3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4016e59-2e8f-437b-a717-b3e140310306",
        "cursor": {
          "ref": "3584dbbe-197e-423f-bf05-8060e1644e16",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1faa69b7-1e79-4186-a9d4-dccbd9c57b31"
        },
        "item": {
          "id": "f4016e59-2e8f-437b-a717-b3e140310306",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b91ef042-b889-4dc9-b90f-14f4d522baae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bdfa17-f87e-4ac3-98e8-9ac592c7dfb7",
        "cursor": {
          "ref": "7aa3d7bd-41cb-484c-914a-a9bce6fb4b80",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "29ff24d2-2b27-4ad1-aa8b-2215121b70cd"
        },
        "item": {
          "id": "04bdfa17-f87e-4ac3-98e8-9ac592c7dfb7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1b5f3ed0-a35b-4ebc-a532-54eefbf6bd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd53d2cc-a7e9-4388-aca0-c88ce77ad84a",
        "cursor": {
          "ref": "7447dbfa-d47f-4528-9b9d-4a86b8016ce7",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a2a62fc7-efb9-49bd-986a-b70ac7cc6493"
        },
        "item": {
          "id": "cd53d2cc-a7e9-4388-aca0-c88ce77ad84a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b78381e3-9cb8-42d0-998f-9327063d13b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d92f9e-335d-4084-a92f-11db686df9b0",
        "cursor": {
          "ref": "47fa665b-bde7-4c98-b2c3-dff6b7c0c2e9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "96d35409-9c6c-48ee-b3a7-2cb51b6c8871"
        },
        "item": {
          "id": "c2d92f9e-335d-4084-a92f-11db686df9b0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1b34ec42-52c3-4506-b64d-84ff99adf484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd4382b-2e91-48b5-992a-80cea7590410",
        "cursor": {
          "ref": "e4a14aa8-14df-4c98-bc8c-02e094f7f5b8",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9bc3a2f6-c817-41d3-932a-624425340f36"
        },
        "item": {
          "id": "5fd4382b-2e91-48b5-992a-80cea7590410",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "45ebd521-6aec-4a99-a604-2807cb4310ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af98f5f-a75e-4f9e-af94-d67b209494d5",
        "cursor": {
          "ref": "19c5321d-7ddf-45ae-91ab-4c399b5ec34e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b7d5053e-77b0-4706-a68a-580e7d7dd8ad"
        },
        "item": {
          "id": "8af98f5f-a75e-4f9e-af94-d67b209494d5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "37e8b32e-c205-49e7-aa26-de5d850faa0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdfd76d-5525-41d3-8241-cf5eb8d248ea",
        "cursor": {
          "ref": "005ba4c9-1ab4-45cc-9b28-73a76bf4b172",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f89f36be-b67d-4d0d-bc7b-1e6eec91ad71"
        },
        "item": {
          "id": "ccdfd76d-5525-41d3-8241-cf5eb8d248ea",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cf43a92e-811b-4190-a30b-6021e28a1003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009f31f2-3203-447c-b133-500fc52250d5",
        "cursor": {
          "ref": "6f319bda-ed99-474c-ad8f-5f2b842064bc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cd233956-a980-4cc2-a841-8c9778a76de0"
        },
        "item": {
          "id": "009f31f2-3203-447c-b133-500fc52250d5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "76b8520c-0c99-460f-91f0-e3be75789d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f428c986-3d96-4e3a-b36c-e6659b128396",
        "cursor": {
          "ref": "74ab9549-503d-4a93-9837-7f40618420c7",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6953e05a-7af6-4e65-a5fa-d4fbd8887f34"
        },
        "item": {
          "id": "f428c986-3d96-4e3a-b36c-e6659b128396",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "74dbe2cf-42b3-4d13-a8c2-ebd0a29da510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3956d82d-e59d-418b-9258-0aa5ed2cdf44",
        "cursor": {
          "ref": "819139c2-b295-4dcc-a022-407cb115e7ca",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "93757d9f-09e7-48c4-a6bf-11dc2ccccf48"
        },
        "item": {
          "id": "3956d82d-e59d-418b-9258-0aa5ed2cdf44",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a0c652c6-3025-46bc-aa4d-2d9f51c6f95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f11ba8e-6cad-41d8-a2c3-75b37088f02a",
        "cursor": {
          "ref": "0e0b71c8-8d62-459e-932f-d38384ac5af4",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c1e4a142-414d-4993-b2a5-95511817fd65"
        },
        "item": {
          "id": "5f11ba8e-6cad-41d8-a2c3-75b37088f02a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "27af6792-9b41-465c-901e-d7a178440f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ae248-a1f6-44b2-ad37-2c95acf447c0",
        "cursor": {
          "ref": "ec28ebca-ecc3-4fc5-8a23-245de0a36536",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3ce3e2ee-8c36-4e03-9a4e-65664bae445f"
        },
        "item": {
          "id": "436ae248-a1f6-44b2-ad37-2c95acf447c0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "775f6214-e33d-4568-966c-03909c1640f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bd315a-1efa-4e8d-a5b5-eeae0203fdbf",
        "cursor": {
          "ref": "cbdc65af-367e-4779-9e21-d15295c1e6ad",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4d0dc7d7-1f2a-494b-8bf1-0daf45d39554"
        },
        "item": {
          "id": "c3bd315a-1efa-4e8d-a5b5-eeae0203fdbf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ac9237e5-c1b0-4a2d-8ec5-b401be89a944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e519610-a4c8-4188-aa1a-de46a559c371",
        "cursor": {
          "ref": "a8821981-8345-4372-8d0e-79dff2c4fb96",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "78b0c692-33c6-41dc-86a9-3f8296de2567"
        },
        "item": {
          "id": "9e519610-a4c8-4188-aa1a-de46a559c371",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "59fac493-1f04-4333-ad75-e12b07e837af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86782ab4-b4f3-4dff-931a-30ccbffa8652",
        "cursor": {
          "ref": "440e1409-eb6d-4f23-8d21-33293c967885",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ffe313f7-1e18-4492-9627-84990e4317a9"
        },
        "item": {
          "id": "86782ab4-b4f3-4dff-931a-30ccbffa8652",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a1ce0298-5d1f-4f3f-8a19-faf5dfb44d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700425de-c70f-40ac-9752-15d6b1d07f4b",
        "cursor": {
          "ref": "154a178c-670d-4021-8386-4b8f8a527f5a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c7bdf080-abdc-4de9-a655-d60da7b3be1d"
        },
        "item": {
          "id": "700425de-c70f-40ac-9752-15d6b1d07f4b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7bea2097-38df-424f-b179-de02de1326a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b7d703-9afc-4623-a287-426b1d51f8d5",
        "cursor": {
          "ref": "004fec79-81b7-4468-ae9d-82208a758373",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b53317d5-a0fd-4323-bf59-1360a4e2b566"
        },
        "item": {
          "id": "a4b7d703-9afc-4623-a287-426b1d51f8d5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "93bc38ee-9bff-44bb-88b7-2e0e94c7e5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbac45d-a17e-4705-ad7d-4a104eeeda25",
        "cursor": {
          "ref": "2afbef68-b102-40e8-a6cc-83869ef6937f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "96cc2302-f829-439d-a12b-1e1ee68287f6"
        },
        "item": {
          "id": "ffbac45d-a17e-4705-ad7d-4a104eeeda25",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "94ad6e65-cf5f-4b95-b155-3e9929bfa054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e1c6f4-8b65-4b4a-9dc9-431334b84fc5",
        "cursor": {
          "ref": "60684847-2479-46b8-b30d-fa33008f71b1",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e1a856be-7fc2-47e6-98ba-6a55b3376c05"
        },
        "item": {
          "id": "72e1c6f4-8b65-4b4a-9dc9-431334b84fc5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b9851602-dcd2-467d-b99b-3fc826874292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76766e1-fd7e-4699-9f92-043fea09a7ba",
        "cursor": {
          "ref": "91baea41-2a63-413a-b80f-5008a051db6a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2670dc02-0a8a-4b92-90c7-130a6785014e"
        },
        "item": {
          "id": "b76766e1-fd7e-4699-9f92-043fea09a7ba",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "edfcc345-dc6f-4251-81d3-9e3be3ed71ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498513b8-72b2-4986-858c-1c02fa2810bf",
        "cursor": {
          "ref": "d817312e-a885-4e88-9f9d-4dc6991233a7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "88a7d0d3-609f-4eec-b430-06d2e23354f2"
        },
        "item": {
          "id": "498513b8-72b2-4986-858c-1c02fa2810bf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b6d56dcd-0d72-4409-bb5f-261c0a547927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed8a26c-b6fa-43c0-8ef3-04844bd3da51",
        "cursor": {
          "ref": "f359bfc8-1b25-4990-9dc7-edaafe9e65a5",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b2f74b2e-94f7-4250-8639-7370316f0b3d"
        },
        "item": {
          "id": "fed8a26c-b6fa-43c0-8ef3-04844bd3da51",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "067e3ec4-e06f-43aa-945f-cac28e65ddb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaf97ad-5a1a-4994-9b68-61808749957b",
        "cursor": {
          "ref": "29b38165-6512-4aaf-ad95-ff9e279ae976",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "60c17daf-482e-4cc3-acc8-a310c78dfd08"
        },
        "item": {
          "id": "3aaf97ad-5a1a-4994-9b68-61808749957b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e0e73da3-3089-4d6c-97ed-537da12513fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25565dbc-f852-42b6-b632-ffb497fd299e",
        "cursor": {
          "ref": "6b7aa1cf-97ae-4b56-9ba9-fe1c2a2a6019",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0ee9378c-d160-413d-adc1-6145d1dbaed8"
        },
        "item": {
          "id": "25565dbc-f852-42b6-b632-ffb497fd299e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "85c06a66-efa7-4d87-8b20-a09981bb9a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b08b8b-9224-45b7-bbf5-5eab58d885d0",
        "cursor": {
          "ref": "ce1649f5-4165-4195-a98c-1b5a7915b68d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "33d6c9e8-dae2-48e1-b764-e54e51845d93"
        },
        "item": {
          "id": "33b08b8b-9224-45b7-bbf5-5eab58d885d0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "aa7e3e64-7c2b-4464-af1a-2ff742ae3373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3116a8-a2c8-4bd8-8ec8-be18ee4523da",
        "cursor": {
          "ref": "ab2c4871-c409-467f-8739-66a0fbc4b3d6",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5a54afd5-d00b-4d46-bf48-06121d004aa3"
        },
        "item": {
          "id": "8a3116a8-a2c8-4bd8-8ec8-be18ee4523da",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "85a4e0f4-0031-40a6-be5b-b2e50675e09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7834ca6-9806-4769-8886-e515ebe021da",
        "cursor": {
          "ref": "b97cf19d-995e-4ba5-94d0-43d3121d0358",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "04e12640-a934-4d49-b805-fea2bf36fbdc"
        },
        "item": {
          "id": "f7834ca6-9806-4769-8886-e515ebe021da",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2f6c8c74-ab0f-4ea4-8595-b0d05dae5783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba12218d-e587-43ab-a9a4-dd2f64317b77",
        "cursor": {
          "ref": "ce2ebbcc-9a5a-4254-ac59-4a5b294030da",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2f2db947-cb35-41e7-9543-582f2ca5c808"
        },
        "item": {
          "id": "ba12218d-e587-43ab-a9a4-dd2f64317b77",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c87fcf74-4428-4d58-82c8-f7a433b052bb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2760207-5609-4d76-8e01-0a65f6eb945f",
        "cursor": {
          "ref": "1f3631cf-2bce-4087-bbf4-84bbc2c967af",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "afa0b731-0625-4200-93b1-c7d264463ba9"
        },
        "item": {
          "id": "c2760207-5609-4d76-8e01-0a65f6eb945f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "492877cd-eec5-472d-bfd9-30db95f465b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b2ca5b-f9e8-4d35-a37e-a0ff106d2832",
        "cursor": {
          "ref": "736be6b8-e7af-43ec-a57d-5a5595f39a8b",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "04ae7b97-0470-4583-94a1-565b2ee68350"
        },
        "item": {
          "id": "f2b2ca5b-f9e8-4d35-a37e-a0ff106d2832",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1bd30183-2e6a-48ae-b5d9-cf013b07079c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aed864-2de6-4ca7-b77d-446636c19457",
        "cursor": {
          "ref": "8f183f08-e2ce-43ff-a498-ee0306188b2a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1d3c073b-67d0-4b7d-8e9a-e7080310b54d"
        },
        "item": {
          "id": "d0aed864-2de6-4ca7-b77d-446636c19457",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c60ba5ef-1f48-4ca3-aa9f-f225b984fb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76695306-90b3-48ed-88e5-8c5b70eca94c",
        "cursor": {
          "ref": "6fb8b72f-a8a6-4a03-ae3c-6583c650aaff",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e75f4c16-3e40-4850-96df-8d8c3ca94452"
        },
        "item": {
          "id": "76695306-90b3-48ed-88e5-8c5b70eca94c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "784a9d94-dd29-4ecc-98ab-0d3dd9b37daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c81e1e1-3131-4ef3-83b4-174cb053ac4f",
        "cursor": {
          "ref": "d5bf4eda-7365-4b69-be4e-a02e265770dc",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7b7f2b45-0963-4168-b894-47655c372509"
        },
        "item": {
          "id": "9c81e1e1-3131-4ef3-83b4-174cb053ac4f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4a530204-409e-4ce2-a5b5-1147c0de386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b42cac-538f-4de8-8017-5201af15089f",
        "cursor": {
          "ref": "7a230f8c-bb40-409a-8617-a9848ecd325f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3cb3ed76-2c48-43a9-9255-6347f98da628"
        },
        "item": {
          "id": "97b42cac-538f-4de8-8017-5201af15089f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b5ad120b-9ab1-43c7-945c-68069aa7a969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97a276a-7bcd-4fc9-977e-be6d49d3d2d0",
        "cursor": {
          "ref": "633ab26a-c833-4af9-b879-3dcef26621e0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f3e69ea5-fe7c-454a-a08f-3e1d6703b29b"
        },
        "item": {
          "id": "a97a276a-7bcd-4fc9-977e-be6d49d3d2d0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ef40e533-070e-43aa-a3ae-f9124aa86fe4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b2feb7-32f5-4105-a097-e168a6e62e1d",
        "cursor": {
          "ref": "d9ba0e84-f1e2-4a81-9d69-8a30b072ba62",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "97670014-d0c3-4cf4-bc91-9b57b97f2899"
        },
        "item": {
          "id": "76b2feb7-32f5-4105-a097-e168a6e62e1d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d12163ef-e72a-4658-a193-7fb66c6f3436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ecc98e-5954-47cf-93e1-df3aefd8f2d6",
        "cursor": {
          "ref": "4263ffbd-1272-471c-87c7-69c8a3edb779",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "318ec5ce-1848-41f3-b3dd-ae5cf5b54f5e"
        },
        "item": {
          "id": "40ecc98e-5954-47cf-93e1-df3aefd8f2d6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3211a4b5-9eef-40b0-8330-c29c229a4d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adadd42-41c3-46d8-920e-f7c67d4f25fe",
        "cursor": {
          "ref": "5cfae710-2181-43ab-95f5-170aeff8d171",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "54bccdd0-e007-479d-9c91-8a4589930a78"
        },
        "item": {
          "id": "8adadd42-41c3-46d8-920e-f7c67d4f25fe",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4f554b60-7af5-4865-9272-4e02f88926b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9945050e-d630-49ce-a776-c5ab33364fa8",
        "cursor": {
          "ref": "44b057b6-421d-42e8-bab6-2d8da70d776f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "70d6d964-3f64-4b88-98b3-cc95dd90fef1"
        },
        "item": {
          "id": "9945050e-d630-49ce-a776-c5ab33364fa8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "35e03ee1-2c74-45ed-a8c4-1400a9039c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22922570-453b-43e6-8104-fb2af757d9f8",
        "cursor": {
          "ref": "fbbf93fe-a259-4af1-a57a-dfdcae5e7f2a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b2a8826b-07d5-4e98-9074-fd249f7f3258"
        },
        "item": {
          "id": "22922570-453b-43e6-8104-fb2af757d9f8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f5d326a2-6e80-4452-bdb8-1f484f732f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4250b99-063b-42b7-9b77-f8e297a2ca67",
        "cursor": {
          "ref": "e1a47a39-49a0-4bec-9400-4599464f1b21",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9cabc563-8db6-408e-ab88-e2d920cf6879"
        },
        "item": {
          "id": "c4250b99-063b-42b7-9b77-f8e297a2ca67",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ff0c987b-a890-4bf1-aa0b-6972487fc6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab4aea1-a498-4e00-b16c-f9edf597fb84",
        "cursor": {
          "ref": "1c652881-2782-4ffc-a996-d58a99c4cd76",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "947bdff9-d671-4f5e-bbba-c41fab9e2530"
        },
        "item": {
          "id": "fab4aea1-a498-4e00-b16c-f9edf597fb84",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "032e149e-8aa6-4c93-bdca-5eaca6a267cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322dfc09-85c1-4126-b701-deb248b3d692",
        "cursor": {
          "ref": "74e362ba-7db2-454d-af4a-cc0deace9123",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "73a0f3cf-3e49-4de4-8a4e-996998f77806"
        },
        "item": {
          "id": "322dfc09-85c1-4126-b701-deb248b3d692",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e0baaa4d-fd2b-4c61-b881-e1fa850fa885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1277d7-51a7-42bc-bb39-7a2aed0d9cbe",
        "cursor": {
          "ref": "cdb80284-152c-463d-8570-19e34ada7d63",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5800c96e-5089-478e-a4ef-110cf07f7b60"
        },
        "item": {
          "id": "ac1277d7-51a7-42bc-bb39-7a2aed0d9cbe",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c3228716-a79d-47fe-aeb7-b1e4f65a4158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660a4b24-b15b-48fb-aee2-46b0c63867f3",
        "cursor": {
          "ref": "dc083507-5210-4be7-85b7-d4869d25455e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "03ba18a4-40a9-46b8-ae5d-d96e98dd703c"
        },
        "item": {
          "id": "660a4b24-b15b-48fb-aee2-46b0c63867f3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "debe6ee6-4921-4a7f-9232-cbc5b4ab3384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5245498c-458d-4bd3-b4e2-142fbedde794",
        "cursor": {
          "ref": "cf148ef3-8266-492a-9494-03eb66f9caf9",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "96a407c8-233e-4abf-ad29-914b76c80a84"
        },
        "item": {
          "id": "5245498c-458d-4bd3-b4e2-142fbedde794",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b12bc713-5da2-4a66-b1ac-a81b3fe0ea52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8197af77-9a97-402f-94fc-06df49629651",
        "cursor": {
          "ref": "a268fdab-0843-4ddf-9fde-867a721c6671",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6bdbe743-92c0-40d2-84c7-46495d288365"
        },
        "item": {
          "id": "8197af77-9a97-402f-94fc-06df49629651",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aa078e28-dcaf-4125-983b-f58f638455cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d480da25-0f0a-4ec3-9090-95c1719e4df4",
        "cursor": {
          "ref": "11b3e55c-43a2-4644-ac69-d3aa71c718e9",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "580eaa2c-1a59-40c1-8c99-92e669cc94e4"
        },
        "item": {
          "id": "d480da25-0f0a-4ec3-9090-95c1719e4df4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5a866abf-1327-4b13-869a-31a1318aafbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e17436-214a-4fcf-aa59-c4bf81b0aec6",
        "cursor": {
          "ref": "88e956ba-6d75-418e-a286-2b82f89c0837",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b4bbf844-adb7-4c59-92b0-88e53943c20a"
        },
        "item": {
          "id": "34e17436-214a-4fcf-aa59-c4bf81b0aec6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4ed36302-8a31-44df-91b6-d3da268f962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2d1588-5856-411b-8205-ac95a255424f",
        "cursor": {
          "ref": "8a35f0b6-9601-4383-947b-2f9be44b818d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "55d2b665-b93d-4b4b-8660-d6ff4705f9cd"
        },
        "item": {
          "id": "8a2d1588-5856-411b-8205-ac95a255424f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "523de09a-e358-406d-8e05-490b18fbe776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0b048f-1474-4213-8c58-b6f065d34cc3",
        "cursor": {
          "ref": "36dca343-ef07-46d3-9b7e-fb1c0624bf53",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a4ec747d-c1fb-45ca-9108-6f77c962ae25"
        },
        "item": {
          "id": "ad0b048f-1474-4213-8c58-b6f065d34cc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "90ebc6f7-c501-4252-81f6-a34d5b1f75a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e80e3df-6d74-45ac-b0d3-84b8c8ec6b0d",
        "cursor": {
          "ref": "f94a542f-81f3-4169-a89a-69eeb02ffd32",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ef0958e7-d41d-4ecb-9321-2e36ba7ff7f6"
        },
        "item": {
          "id": "3e80e3df-6d74-45ac-b0d3-84b8c8ec6b0d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "41c42b27-1d11-45c1-880f-ad21514f621b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2999d5-c4a2-44e8-98ac-e4e51c27d440",
        "cursor": {
          "ref": "e4fff6cf-2c56-40db-84c1-b284fbb0803f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1de2e4f0-7434-4f79-b357-4e7ff787a69d"
        },
        "item": {
          "id": "cc2999d5-c4a2-44e8-98ac-e4e51c27d440",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f015277d-d626-424c-883c-9815f73fc601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da2be05-7b40-44ea-92aa-d87cce82f63d",
        "cursor": {
          "ref": "92dcd624-1215-4dd5-8cf5-6a2e9e1587d8",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "df4f08f2-5179-4490-9bd7-e7fa72350333"
        },
        "item": {
          "id": "5da2be05-7b40-44ea-92aa-d87cce82f63d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "015218b5-578c-40ed-940d-7f4d9c842791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34927ba5-78d1-443d-b974-622593c9a288",
        "cursor": {
          "ref": "cf5d49c3-c50f-4c75-9c41-aa5d167e3395",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6dc02f0d-fcd7-48fb-b73c-2cc785115ea3"
        },
        "item": {
          "id": "34927ba5-78d1-443d-b974-622593c9a288",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b6a9d50a-b9ce-4b75-9ec5-a8bea3f7abcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c332d6a-78e1-4cf9-a3cf-d08a600e2f96",
        "cursor": {
          "ref": "f3130537-461b-4e54-b1be-5277319512ec",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c1e99f9c-9d42-433c-87cd-5495be4b171e"
        },
        "item": {
          "id": "9c332d6a-78e1-4cf9-a3cf-d08a600e2f96",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "265ffc19-c586-4164-9640-ba95052cd88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22c8371-98cd-4e6d-a9a3-5ccfa4ffbf6a",
        "cursor": {
          "ref": "0e7452bf-ca20-4138-845b-12d1a178aef9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5943f1f5-e6d9-41f2-8573-1a7e8589181d"
        },
        "item": {
          "id": "d22c8371-98cd-4e6d-a9a3-5ccfa4ffbf6a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b6613478-12f0-490a-b06d-8a32740acbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04514c7-88d4-4eb9-82b2-605eb05d4319",
        "cursor": {
          "ref": "3a3417e5-fbcb-4e66-9fb7-67b76f8f1b7a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6e9f7c42-a75b-47e3-9ff5-32b70d6c0b01"
        },
        "item": {
          "id": "d04514c7-88d4-4eb9-82b2-605eb05d4319",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "509a148f-a227-409f-b438-35f5ce1a5776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd432c4-00cc-47b4-8742-efe72b621fb2",
        "cursor": {
          "ref": "224798a0-a6a6-40c7-b219-fe522aca5bba",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "50be407b-5325-4d5d-bdcf-842e1a65dd73"
        },
        "item": {
          "id": "cbd432c4-00cc-47b4-8742-efe72b621fb2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ae3b8df0-e4fe-499d-b098-bb1e8723a130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d599ed-8f7b-40c9-82e7-01f974d5bcf9",
        "cursor": {
          "ref": "94724969-a4c9-49c8-a620-0cac608afff2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c7b23051-d950-46b8-b65f-9d00c541c29e"
        },
        "item": {
          "id": "38d599ed-8f7b-40c9-82e7-01f974d5bcf9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "01f61e27-1f01-44d2-a652-cad0a634d1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebbd2a9-05a3-4fba-b06f-27a4f3ae15e6",
        "cursor": {
          "ref": "d942e280-0335-4f6e-a839-e20bb5ea97db",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c37b0095-74b6-416b-9da6-54b93427da7c"
        },
        "item": {
          "id": "4ebbd2a9-05a3-4fba-b06f-27a4f3ae15e6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "01e4f15f-76cb-45a9-b717-f6174e343c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47167ab2-ac60-4163-b425-96826e63d5ca",
        "cursor": {
          "ref": "a7681811-71d4-44e4-99be-7c246c6df951",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "af67b557-f5a9-4ed3-b929-962581dfe3ba"
        },
        "item": {
          "id": "47167ab2-ac60-4163-b425-96826e63d5ca",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4d3799b7-d939-47a5-9256-c15196ed0bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ec827f-5d15-4ce9-8ad3-9c4ac4e38301",
        "cursor": {
          "ref": "06e48361-2208-4832-9f5a-12f9fef4bedf",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "94a26d94-565e-4b84-96c3-c13af20d6b7a"
        },
        "item": {
          "id": "57ec827f-5d15-4ce9-8ad3-9c4ac4e38301",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e7202791-cf04-401d-b0ce-d0fa93bbcbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d266c9-3a59-4a48-9e55-a3fcca4092db",
        "cursor": {
          "ref": "36960963-98b4-4254-af65-76cceccf80e7",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "07d3dfa5-ac48-4b45-9c3d-f6174fa9ee6a"
        },
        "item": {
          "id": "39d266c9-3a59-4a48-9e55-a3fcca4092db",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bb5c6f71-5d00-49b0-89b2-e05e81d03b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617fe271-109e-4a05-af52-6fdf4dc33fd6",
        "cursor": {
          "ref": "6dfa85e3-343d-4d90-852b-7d1d0c2701d6",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "983a1d5c-8dc2-4491-986e-dc4999baad8a"
        },
        "item": {
          "id": "617fe271-109e-4a05-af52-6fdf4dc33fd6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d4e16c79-4f70-4457-8467-c6148989d880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7817c4ba-7f70-4c88-9c18-a017cd2c88cd",
        "cursor": {
          "ref": "508ded2b-0550-4557-8849-d3865a9f1993",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ea7fc65e-09e6-49aa-a493-ff2f6d9c91ab"
        },
        "item": {
          "id": "7817c4ba-7f70-4c88-9c18-a017cd2c88cd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a5aee8de-9a89-4b3a-afe6-925aa188b20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c646fd2f-3cfb-464b-bda9-069e592bf9c4",
        "cursor": {
          "ref": "52f4c853-375b-494e-8971-4172f9b993ea",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9f78c346-31fc-4bdb-9ea2-a0b632aa5645"
        },
        "item": {
          "id": "c646fd2f-3cfb-464b-bda9-069e592bf9c4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c4cfb71c-127b-4c80-b5fd-21951e6a0ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b490044a-f1ee-4957-bf80-b4a30032185c",
        "cursor": {
          "ref": "d6ad2219-f2ff-4a38-9285-d245e1a561aa",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7d288a70-b9e7-45e1-a243-2caca31e7c3b"
        },
        "item": {
          "id": "b490044a-f1ee-4957-bf80-b4a30032185c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b1dc72e7-8a88-46da-b4e1-58d050ad1f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a9d8e4-65b5-4ecf-9487-db05ce9e9383",
        "cursor": {
          "ref": "1496573f-02c5-4750-a82f-28e2ae279d81",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0b8ef63b-aea3-4b32-b0c2-54a0aba9212f"
        },
        "item": {
          "id": "03a9d8e4-65b5-4ecf-9487-db05ce9e9383",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e7b900af-7618-48f0-8e7e-d9d41abcfa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b17362-874c-46db-bc8a-cca842a3d85c",
        "cursor": {
          "ref": "f4f83ce3-b6e1-4092-a68c-4a64f004c13c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b9531003-e200-48bc-9ac2-b9480968a35a"
        },
        "item": {
          "id": "98b17362-874c-46db-bc8a-cca842a3d85c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0d211ab0-84ca-4d48-bf76-7928aba916b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89db6a0-850d-4802-9313-89bc5461c67e",
        "cursor": {
          "ref": "120aab17-8c9c-493d-86e3-47025e9cc8ec",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f960a067-914c-4310-9b9a-d1df91f947ae"
        },
        "item": {
          "id": "d89db6a0-850d-4802-9313-89bc5461c67e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "480bbbc9-97d1-4ed2-b01e-e62f9442607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a5f4b9-49c9-4f86-87ee-f9ae3aa48bd4",
        "cursor": {
          "ref": "a92d4e76-9ff8-486f-be44-e98f2e49a6cb",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bc5cd47c-f057-4594-acc5-fb1f187a3b79"
        },
        "item": {
          "id": "38a5f4b9-49c9-4f86-87ee-f9ae3aa48bd4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b7aa3cdd-8d24-4e22-8657-eac82c9503fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d92d2fe-4772-4ef8-922b-e81857b4558b",
        "cursor": {
          "ref": "0bb42e37-4b1b-49a4-b0e5-f5d1c9c9e0ac",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "396eb27e-a8dc-4525-932d-0ffe3e21ba23"
        },
        "item": {
          "id": "7d92d2fe-4772-4ef8-922b-e81857b4558b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e456c101-0e73-45fb-9508-888841d579c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79181db-a6cf-4324-8dc2-aa902ea16e64",
        "cursor": {
          "ref": "756e65be-fc30-4437-a6e0-e77392091ad5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5c0813cf-bfbe-4caf-8996-77fbdb238d2b"
        },
        "item": {
          "id": "d79181db-a6cf-4324-8dc2-aa902ea16e64",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9c1117a6-f365-456c-8ba6-c92ca560ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa8d1e6-3874-4202-9085-0a91fe3c4360",
        "cursor": {
          "ref": "74ca119d-7cd1-44c5-bca0-bde73b797e1c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "920fe5bb-0269-4d43-ac5e-9b4e3324fb43"
        },
        "item": {
          "id": "dfa8d1e6-3874-4202-9085-0a91fe3c4360",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d4f024d7-97f7-476c-933c-d4c4add689d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eb96b9-f35b-4a6c-b0b9-fdfeeeafe278",
        "cursor": {
          "ref": "4364a3e2-d0a4-4af4-9ee9-a992b60ac50d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f6595dbb-e31d-428d-9444-454448d7e7b3"
        },
        "item": {
          "id": "20eb96b9-f35b-4a6c-b0b9-fdfeeeafe278",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1d0fa14c-554d-4883-b98d-bf10b040fac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7246da-2a31-4450-8ebd-4f0e278dea94",
        "cursor": {
          "ref": "37787cfa-fad1-4cc4-a949-a6fc10a58be9",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a29596cc-ccf5-40e9-b565-310a062be7a0"
        },
        "item": {
          "id": "ca7246da-2a31-4450-8ebd-4f0e278dea94",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6434e44f-93d0-4d64-b3e5-8b298189e386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc661080-f97f-4277-9181-36e7762c0c2b",
        "cursor": {
          "ref": "2b780f4a-3b54-431a-975c-733e1ffc8d10",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "596ca8b8-80cc-40d8-8b47-8768bcc831bf"
        },
        "item": {
          "id": "dc661080-f97f-4277-9181-36e7762c0c2b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bbb06281-3f22-4703-b474-b153f66b0f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a1a7e4-9515-46b2-ba43-b2d7e5bf0d3e",
        "cursor": {
          "ref": "e5a90821-3ad7-4482-8c8a-e40f7e2c66b8",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6afd191e-e9f5-4118-b216-0c3834405d44"
        },
        "item": {
          "id": "a6a1a7e4-9515-46b2-ba43-b2d7e5bf0d3e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ce1f3d8f-9dd2-440f-ab7c-764066f08646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca229f79-c53c-4b07-b138-4b29a21d2c19",
        "cursor": {
          "ref": "f0b5ea9e-f288-4416-a60d-52b722c0c3fe",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6a697167-3aa0-4077-aeb7-ff9127a3ea95"
        },
        "item": {
          "id": "ca229f79-c53c-4b07-b138-4b29a21d2c19",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0f9e61fe-d8b0-46de-b611-3671eace1b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d16e9d7-9770-485b-b23c-7fa10979951d",
        "cursor": {
          "ref": "0c5330c8-7f6b-4233-9ac1-046b63b029b4",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d271b80f-2096-44af-99ac-7eb24ae4ab9f"
        },
        "item": {
          "id": "1d16e9d7-9770-485b-b23c-7fa10979951d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dbf49e31-d23e-4d6e-a21c-8ca3923811e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b0016f-578a-47b5-bd5e-a5a83c7cbaf6",
        "cursor": {
          "ref": "b0f4c0c4-50b5-4cfb-abca-384150e15486",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6beef49c-e4c5-4333-97aa-cdd61e18fc19"
        },
        "item": {
          "id": "74b0016f-578a-47b5-bd5e-a5a83c7cbaf6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "95131577-36e6-4e40-a276-b6a14a7c6597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7631cefc-45e6-4f71-ae2b-6e1579bb300a",
        "cursor": {
          "ref": "5d766c5b-c773-44c1-b4dd-5fe233ca9c79",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4120b221-4c48-48f1-8b8b-e4c7e60105c5"
        },
        "item": {
          "id": "7631cefc-45e6-4f71-ae2b-6e1579bb300a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1e50bbdc-e2e8-48eb-8564-a8d1a9c83926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1feb3a-0b15-41cf-9bcd-1548293b0ac1",
        "cursor": {
          "ref": "eef35675-6569-475b-b38e-b61ac9f2a950",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dd5bcb3f-fc99-40cc-9f07-542253461abe"
        },
        "item": {
          "id": "7a1feb3a-0b15-41cf-9bcd-1548293b0ac1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a23e1177-c463-4248-b7e3-284b6cfdc0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de41d86b-7806-4cda-9548-eca0f3a050a5",
        "cursor": {
          "ref": "b28e1fc6-4d98-411e-8ef4-35d8b478faad",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "16416401-39c4-4432-b387-b13c7c8e3c05"
        },
        "item": {
          "id": "de41d86b-7806-4cda-9548-eca0f3a050a5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "01a31cf4-932e-4a0c-93b5-2e4b42371cc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b44808c-e2cd-4bf9-bba9-85839e1731b8",
        "cursor": {
          "ref": "8dda0036-9c34-449e-8411-0392c29db13f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0a5a6e63-330d-47f1-8f7a-13960c77f938"
        },
        "item": {
          "id": "2b44808c-e2cd-4bf9-bba9-85839e1731b8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6d50730c-6fc5-4fd4-973f-250eed2fd95c",
          "status": "Created",
          "code": 201,
          "responseTime": 72,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "16119edc-52b5-4774-86cc-2f83a48e4e57",
        "cursor": {
          "ref": "5a253aa6-5918-420e-bcd5-dfc264326e8f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f7adb211-ef84-4750-a6aa-57b34d6b2018"
        },
        "item": {
          "id": "16119edc-52b5-4774-86cc-2f83a48e4e57",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bf923766-ad3f-4bd4-9abf-864e2437f0d7",
          "status": "Created",
          "code": 201,
          "responseTime": 208,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "787a29de-0b16-4041-955c-0b6295258660",
        "cursor": {
          "ref": "42c60c69-5841-4a50-9d39-795c6572b74f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0058d2c7-56f3-43cb-89d0-fb737a0bc28b"
        },
        "item": {
          "id": "787a29de-0b16-4041-955c-0b6295258660",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ad14a3ad-3183-4a59-aeb1-bc47c049b02e",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "82350622-3050-43ba-845c-11a91f34b4a5",
        "cursor": {
          "ref": "1a007f2f-e766-48d5-9b58-96666686580a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "039ef2da-5ecb-4b53-86d0-4be36db74bf6"
        },
        "item": {
          "id": "82350622-3050-43ba-845c-11a91f34b4a5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8dbc49e5-356f-489c-8b7f-3aa29a3d037a",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee6014e-5ef3-40bd-a041-4c31f4d028e2",
        "cursor": {
          "ref": "6683306d-09c7-40f1-a902-a3f0e9519b5b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2b2f5128-f1da-4783-a4ba-ae9f9caa5b51"
        },
        "item": {
          "id": "7ee6014e-5ef3-40bd-a041-4c31f4d028e2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "28a415c1-3c95-4f7a-b5bd-be4f35a13db5",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb799c9-0228-4850-ac7e-e706351ed048",
        "cursor": {
          "ref": "9883bb5a-421e-4072-8669-e29cad203908",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c7610f06-f430-4ba6-91ac-c2091bfdc8ef"
        },
        "item": {
          "id": "eeb799c9-0228-4850-ac7e-e706351ed048",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fb435cb8-a8dc-4d8b-80e9-e36fc9aba602",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431db467-9bad-43de-90cd-cef6ecc956ae",
        "cursor": {
          "ref": "06b826b0-2314-4a68-8fbc-71aeba66ab8d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c80397d7-fa2f-4bb3-a62b-7f58d3e34ae4"
        },
        "item": {
          "id": "431db467-9bad-43de-90cd-cef6ecc956ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d57735d-682f-4a63-a0e0-0c5d147809c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66516455-1907-4e07-8a28-a596b6851b8b",
        "cursor": {
          "ref": "4024658e-27ab-46d1-a8e1-7e22ce28417c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a4001e94-543c-4c56-9e49-02969ec4465f"
        },
        "item": {
          "id": "66516455-1907-4e07-8a28-a596b6851b8b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d2817a38-eace-4b00-9937-7a0789b1f32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542335b9-528a-4e7f-b182-2ad9d4558bbf",
        "cursor": {
          "ref": "5da9fd39-4e8f-48da-9fd6-71223be782fa",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa5a88fb-463f-46b3-a50a-e2f8ef23c734"
        },
        "item": {
          "id": "542335b9-528a-4e7f-b182-2ad9d4558bbf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b5e8e8c3-9993-44ec-89fd-2657c7c653bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f581b10c-9b02-415b-b71c-870478b8bbc9",
        "cursor": {
          "ref": "4e1c33e4-7014-42cd-94f8-3760952c13b6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "60875cfb-6164-4dd7-b1fe-19c98fe82e75"
        },
        "item": {
          "id": "f581b10c-9b02-415b-b71c-870478b8bbc9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d515921-212c-4226-9be8-9457ea27ecfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a1a209-f01c-488e-8ca1-9b2a387eb782",
        "cursor": {
          "ref": "dcafeee8-5b9f-409a-85cb-f5686439d7e5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2492bfee-3421-4407-abee-40c7e0bf3cc8"
        },
        "item": {
          "id": "54a1a209-f01c-488e-8ca1-9b2a387eb782",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "692e4318-d41b-485c-a352-726b128692cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c9970b-c072-4916-a6b4-dc29902bc88b",
        "cursor": {
          "ref": "a3ce273b-49e0-4a5b-8eb7-032d43be364a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0af4d405-26e0-4329-9cd0-ddb6f2410cfe"
        },
        "item": {
          "id": "99c9970b-c072-4916-a6b4-dc29902bc88b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "efc2cf37-d28d-4936-af6a-2a68d0f6334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6257a205-045b-4ca2-8b81-32cfb8c20760",
        "cursor": {
          "ref": "93be073a-21c9-435e-af32-3ec428e9f0a4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ef4de17b-3c0d-4167-9de9-2a36d0206868"
        },
        "item": {
          "id": "6257a205-045b-4ca2-8b81-32cfb8c20760",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "528528d6-245d-483b-9bd3-c457f6e88b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb81d0f-46c2-4157-a070-c44e53a77378",
        "cursor": {
          "ref": "232354d7-370b-45cc-a9cc-d03bf5318561",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ef75d098-4569-4039-855f-f6898daa8520"
        },
        "item": {
          "id": "2bb81d0f-46c2-4157-a070-c44e53a77378",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eec0242c-9d7b-499e-ac8d-7b2df2c0ddc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a84870-2d30-4947-8db8-e97a961f2735",
        "cursor": {
          "ref": "a16c3905-0dad-40ea-8c4e-6e5190827d01",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cf76b583-70c8-47cc-8849-dd1f9d72c9eb"
        },
        "item": {
          "id": "86a84870-2d30-4947-8db8-e97a961f2735",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e27ce52d-6ca6-49c7-9150-f1f4ef5aed44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16e0276-efcc-44f8-bfc6-385e0a9636fd",
        "cursor": {
          "ref": "c08bae2b-fb1d-4d04-bf59-4ccb266ebfce",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "84d57309-a772-4e9d-9a8c-1d5a979b358c"
        },
        "item": {
          "id": "e16e0276-efcc-44f8-bfc6-385e0a9636fd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "30c9becf-142d-4e70-9ada-2f138973549a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1f5f73-17ad-4649-9392-8256a4fa07f5",
        "cursor": {
          "ref": "b6cf6f41-6847-45a1-83ee-66e9693f04bc",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1f819f59-3c47-431d-8dc4-5a2ae7b5326e"
        },
        "item": {
          "id": "9a1f5f73-17ad-4649-9392-8256a4fa07f5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "906506a4-2012-49d5-ad6c-34aafb64b1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2c913-fc82-4272-bcf1-2be591d931d8",
        "cursor": {
          "ref": "f24de7f0-c51d-43b6-8c45-0ad0dd1b639e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c2a3d842-7da1-4fe5-96d9-04bb863d10f2"
        },
        "item": {
          "id": "5ed2c913-fc82-4272-bcf1-2be591d931d8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6e6964bd-eb67-496b-90f2-c942fb37e591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ed6474-2aee-4949-8462-f5c0d172c319",
        "cursor": {
          "ref": "f85e1ec5-d483-44a9-9dd1-b883ca09cf5d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0a9f915b-9451-4e9b-9277-e77f9a05da5a"
        },
        "item": {
          "id": "d6ed6474-2aee-4949-8462-f5c0d172c319",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9bcd74ec-f6aa-4a42-92ab-02e01b3b44e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d71431-c3be-45aa-a70b-df79a2e6c5f2",
        "cursor": {
          "ref": "c561a7d3-f2f9-4fee-ac29-3fe68be2b213",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c5c5d97d-23af-4c9b-9620-dd6f3e7bf7ba"
        },
        "item": {
          "id": "04d71431-c3be-45aa-a70b-df79a2e6c5f2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c3954747-c8c3-49d3-8d87-976c34474388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63beadd-47e3-4b75-b2f9-1a2d1f4f57c5",
        "cursor": {
          "ref": "83c9e21d-1ff0-42f5-8c5b-3905284e7cc9",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6e067f38-e28d-4eef-840a-60ba67841adc"
        },
        "item": {
          "id": "f63beadd-47e3-4b75-b2f9-1a2d1f4f57c5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "452ef3bd-6e12-4e77-8309-6d0280388337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c58310d-a709-4118-a0fe-2d54d3be4063",
        "cursor": {
          "ref": "8ad3fa00-0d7d-470a-85bd-90cf9c1a9591",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f26257e3-0d4f-4a34-9771-5e2967eb4c88"
        },
        "item": {
          "id": "2c58310d-a709-4118-a0fe-2d54d3be4063",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1f535e2b-aaed-468d-bf81-5ae344192eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487eae8a-c9a1-4971-8c15-83d237407bd8",
        "cursor": {
          "ref": "4584ab35-72a0-4fef-aafd-8f02877f43ad",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6274095b-015b-4e38-b214-cd62b04835aa"
        },
        "item": {
          "id": "487eae8a-c9a1-4971-8c15-83d237407bd8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39d9cba9-1173-416e-8c3d-91a649dc4ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c175d4c-2fe8-4bb0-94d2-6b0184ecc8bf",
        "cursor": {
          "ref": "e4999740-17c7-46fd-9e9e-a477fc0fa48d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7b328880-9fb9-4e1c-81a2-59aee1db9669"
        },
        "item": {
          "id": "3c175d4c-2fe8-4bb0-94d2-6b0184ecc8bf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "611330fa-484b-4228-b66c-a6bc015b70c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30102ec1-23bd-4ab4-bb1e-638f9d78a65d",
        "cursor": {
          "ref": "f1b18e71-2f49-4792-8d0a-f8b6291b6618",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5f39d129-de50-4f83-86b9-45b33808cc20"
        },
        "item": {
          "id": "30102ec1-23bd-4ab4-bb1e-638f9d78a65d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1ea09a20-7682-4962-bf3a-752d8c10252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ad460d-dd5b-4493-952a-a3b773b0ad18",
        "cursor": {
          "ref": "b363703d-be29-4d9c-8ebf-e7dcb343bed1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7aeacdd2-dbd1-4a7c-be11-321c469fa491"
        },
        "item": {
          "id": "12ad460d-dd5b-4493-952a-a3b773b0ad18",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a154e3f7-fb2b-4390-b7d6-b7e9e5f02eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2a939c-7a27-42e8-934f-2dc29c224508",
        "cursor": {
          "ref": "64d60c59-225b-4a72-be1c-355f8c04052b",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "caf8ef8e-b109-4a30-9c6b-0660cfb883e3"
        },
        "item": {
          "id": "9c2a939c-7a27-42e8-934f-2dc29c224508",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b6d2a68a-3337-49c0-a7fa-486512734fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbefe0c-ae2c-4461-8fb5-820cb6e69272",
        "cursor": {
          "ref": "a5f69453-fb45-4e2c-b509-c1a508863392",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bd7e9ab1-f4f1-4263-ba61-0b03647fa67b"
        },
        "item": {
          "id": "bbbefe0c-ae2c-4461-8fb5-820cb6e69272",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f752d970-faf1-4cc4-a0a1-fbb166e08399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4311739c-4a32-4b55-a7ee-972bea6f3249",
        "cursor": {
          "ref": "f0d52067-4103-4015-a367-a9cc24433d96",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "50123171-0c20-46d1-aedc-1ade4b505875"
        },
        "item": {
          "id": "4311739c-4a32-4b55-a7ee-972bea6f3249",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "37e76c86-7d6b-47c4-aa72-e28c8eaecaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4711dba8-6b04-4c7b-860e-c4fe8ce806dd",
        "cursor": {
          "ref": "c61812b1-b026-41ed-97b3-45605a55e699",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "039bbf55-92bd-41ff-a8d8-e1a8220bde8d"
        },
        "item": {
          "id": "4711dba8-6b04-4c7b-860e-c4fe8ce806dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "62f99999-e919-46c2-bf9d-8b1da2a415a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3181bdd-c96f-4e63-be30-42466c94b31d",
        "cursor": {
          "ref": "605386c2-51db-4abe-8fdf-e29e0503bd39",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a76ba8a0-5c9d-4399-85f9-bc3378a689f0"
        },
        "item": {
          "id": "b3181bdd-c96f-4e63-be30-42466c94b31d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "711f20a3-6d9e-4844-ba6a-90252d339157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19cfafc-bceb-438b-a6c6-11aacb453233",
        "cursor": {
          "ref": "ab1613d0-60da-46d4-86da-3121876ca547",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6ffc2b14-60cd-4c2b-ad85-4d32f145b104"
        },
        "item": {
          "id": "c19cfafc-bceb-438b-a6c6-11aacb453233",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "84380ad9-9fbf-421d-b2b4-a9d68251c4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d261cde-7ebe-48d4-a690-5bf7c74d6cf7",
        "cursor": {
          "ref": "557d1b28-c995-4e81-8a21-cd9d438de49e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "250507f3-5885-4ffc-a2d6-af36b366c83a"
        },
        "item": {
          "id": "9d261cde-7ebe-48d4-a690-5bf7c74d6cf7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ece7d0a1-3a55-47af-8599-a304bf023abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26ceb02-ff47-4a71-9679-eb14c7e98305",
        "cursor": {
          "ref": "b8cbc7bd-c8a3-476e-b3f8-99dba120ccc6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cafe31fc-15cb-4684-90f7-2049d8f5376e"
        },
        "item": {
          "id": "c26ceb02-ff47-4a71-9679-eb14c7e98305",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7d00a05f-7749-4b8d-bc7e-70dba1ac7964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edafcb04-4ac5-4fed-8c9c-2753f3fdf1c9",
        "cursor": {
          "ref": "6e81e278-362a-45c9-af4e-48518e804351",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e245fb06-8c8c-465a-b3fd-cd4efb62636d"
        },
        "item": {
          "id": "edafcb04-4ac5-4fed-8c9c-2753f3fdf1c9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57509ecd-74b9-4aae-8ce6-d24e1277f2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34016cb8-58d0-4566-99e0-fd32c555b372",
        "cursor": {
          "ref": "092b98ea-9c44-404d-a017-dc95bf804ecd",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9f40d2b2-76b8-4a3b-8338-1178fc751b20"
        },
        "item": {
          "id": "34016cb8-58d0-4566-99e0-fd32c555b372",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c966ba24-5c13-4331-850e-c5f6542feaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e783f949-bd10-4cb0-958e-163fef1d8b13",
        "cursor": {
          "ref": "faf4ee7b-b210-4793-b468-cc5fc2398ea4",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7f9e2e36-ada3-4a85-9ad5-833a03dde783"
        },
        "item": {
          "id": "e783f949-bd10-4cb0-958e-163fef1d8b13",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "85657054-3671-40d1-a14b-89ef274bc591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e05e0aa-ff2b-496c-bcf4-1a03144c4471",
        "cursor": {
          "ref": "4746d647-a15b-4ad5-9e32-87cdf043aeab",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "da20e2d4-a1de-494f-ac8f-96aa5068a01b"
        },
        "item": {
          "id": "0e05e0aa-ff2b-496c-bcf4-1a03144c4471",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "92ecb845-2b9f-4d8f-a7fc-3701371e1919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7a93d0-b6fc-4c02-ac63-a171861e8c29",
        "cursor": {
          "ref": "e4f3afc5-d08a-4520-8154-a8b99d5dd178",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8cda4faf-0e46-483f-bb1f-4f37c7ffbcb1"
        },
        "item": {
          "id": "2f7a93d0-b6fc-4c02-ac63-a171861e8c29",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4d6c9ab3-1186-4b72-a8c1-86e1901c446e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb829fd4-78b9-41f0-a20f-187a62619146",
        "cursor": {
          "ref": "2bbbb1c1-2a34-4ba7-833b-5a5d2315c0b6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a168b669-59bb-4402-9cfd-554676ee8272"
        },
        "item": {
          "id": "eb829fd4-78b9-41f0-a20f-187a62619146",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94e7a5de-e587-48bc-913f-caa33551ec7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b547e7-1a12-44e7-bb51-4429efaacf31",
        "cursor": {
          "ref": "9f6961c8-1967-4395-8e73-8faa6364fa57",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e68f0c40-100e-42e8-817b-dd0cfd90dacd"
        },
        "item": {
          "id": "73b547e7-1a12-44e7-bb51-4429efaacf31",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a511c4ab-646c-4a6c-a722-4b0b763e28ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6acd09-2cf5-44b3-b4be-a5cf72a3c85c",
        "cursor": {
          "ref": "25612dd5-714d-43dd-9b33-ab12a0fcb61c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "12ff2dbe-8044-4731-b3b2-31593c844ae1"
        },
        "item": {
          "id": "1a6acd09-2cf5-44b3-b4be-a5cf72a3c85c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "47c33090-ad24-4cd9-9cb9-320cdb723f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d9671f-8484-4cfa-887e-2d456552d200",
        "cursor": {
          "ref": "c412832f-89d7-472b-9653-45169ec666f2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a9118ca6-203a-4789-9388-67ede09f5663"
        },
        "item": {
          "id": "97d9671f-8484-4cfa-887e-2d456552d200",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2ed9a28a-1209-4634-865b-0fdc983af7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c14df8-7eef-43b4-a67d-a1b9aa270efc",
        "cursor": {
          "ref": "2f1c4d84-2376-465c-89ab-b177ff4a65f6",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ef9b5c70-03ed-4074-abf2-128caf2e4101"
        },
        "item": {
          "id": "f6c14df8-7eef-43b4-a67d-a1b9aa270efc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "422bf60c-366f-49f3-a134-dd13f7ebcb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0acb1fa-bacb-4630-94c9-eeebefca1be9",
        "cursor": {
          "ref": "bd6b0b4a-698a-42a1-8fec-af070e3d73d9",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "050b3c82-c871-49dc-8b5d-ae39895c504b"
        },
        "item": {
          "id": "d0acb1fa-bacb-4630-94c9-eeebefca1be9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c29ab2cc-d3af-4636-a102-c5eb6455994b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e92b0db-9e45-449e-b1f7-fa23fcb01b2f",
        "cursor": {
          "ref": "87c18a45-f4a4-42ba-a2dd-ae5bc467b441",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6aec84e6-5b12-4cc2-937e-29c0a8b1bea3"
        },
        "item": {
          "id": "3e92b0db-9e45-449e-b1f7-fa23fcb01b2f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dbad004b-7673-4fcf-be5e-dd8f9b56065a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f8496-e447-40a9-9889-7d68df212054",
        "cursor": {
          "ref": "a0c0c667-5668-4a24-b925-560fc8ee475b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "47ce0d8d-09be-477b-91f6-39c2e98b10b4"
        },
        "item": {
          "id": "319f8496-e447-40a9-9889-7d68df212054",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "86a709b9-a016-470a-8fa7-fb09e7d52433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23294eef-3ee6-4982-a913-39576552e486",
        "cursor": {
          "ref": "cef4c1e4-880a-4f04-b752-400c107ad181",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bec46247-e0d9-4c66-8586-ddf1b4d04d33"
        },
        "item": {
          "id": "23294eef-3ee6-4982-a913-39576552e486",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b77f735c-1e48-4b41-adf7-f4a01a021330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f71c83-24c7-4827-a042-3ee9a4dbc1f0",
        "cursor": {
          "ref": "1271505e-f647-45d1-a75d-bc52e2e059e2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f290531e-14b1-4e27-a0e9-58bc629a6405"
        },
        "item": {
          "id": "a7f71c83-24c7-4827-a042-3ee9a4dbc1f0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d16e52a1-bb4c-4c5c-83d4-ccbb946636fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0924bf-26c3-4c05-bec4-c24ae8ccefb8",
        "cursor": {
          "ref": "b62fd4b9-53ef-4895-9139-b4650d246f27",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9d5cf079-a144-44fa-8716-b086c8e6e1f2"
        },
        "item": {
          "id": "df0924bf-26c3-4c05-bec4-c24ae8ccefb8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ea5b8dfd-dfd4-4bff-8ce6-19cc18c6b9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c829e6c-778a-4d59-bcc1-2b2e7970ee8a",
        "cursor": {
          "ref": "fdeb1d6d-91cd-4646-8d15-46c7cbfdd3a4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b4d6aa4d-afaa-4779-9370-ef0c0c3b16af"
        },
        "item": {
          "id": "2c829e6c-778a-4d59-bcc1-2b2e7970ee8a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "368b0bf3-b3ec-4970-826b-72f9f0742e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf95e89-fbb4-42c5-8822-b6c2bfc60c0e",
        "cursor": {
          "ref": "fc341217-fe35-44a4-aa66-f2b7a7874fab",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "589fa685-da83-4d4a-bede-59e4313b7581"
        },
        "item": {
          "id": "9bf95e89-fbb4-42c5-8822-b6c2bfc60c0e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "238a6732-9df3-411d-ab1c-9ba6d78a58ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4974e2a-0639-4876-9008-6c9f0b7daa28",
        "cursor": {
          "ref": "29adbf9c-6b9f-459d-8bfc-d73a3d0d194e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6752f684-baf6-4c7f-a558-095521bc7c14"
        },
        "item": {
          "id": "e4974e2a-0639-4876-9008-6c9f0b7daa28",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "926056df-62bb-45b7-b3a9-c47b0fc812ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74d486c-509f-4eee-a01f-1567e881cbe2",
        "cursor": {
          "ref": "94803fcc-4046-4ee2-8bf7-888bddd2d96c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "02466fb5-cca0-4ccc-a5e2-a8e6e0516d75"
        },
        "item": {
          "id": "f74d486c-509f-4eee-a01f-1567e881cbe2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cc58e1ab-f35e-47cb-89d9-95d64ab460ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca52a53a-e504-4c36-ae6e-32aba23bae81",
        "cursor": {
          "ref": "1cc2c096-f9e5-4a18-97ef-13ab4b6dd62f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e038d389-ca1a-47b9-96af-c0f21f9efd81"
        },
        "item": {
          "id": "ca52a53a-e504-4c36-ae6e-32aba23bae81",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b6fb54d5-ebb3-4309-b449-560cc2dc2da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d30270-6986-4b04-b05c-ac08cf15bb90",
        "cursor": {
          "ref": "352abd75-d325-434e-98de-3ef779a515f3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9bd95dc2-0254-4974-a775-4b4026d6dc95"
        },
        "item": {
          "id": "02d30270-6986-4b04-b05c-ac08cf15bb90",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "96fb7151-b426-4b27-8b51-676416215491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64af6d90-60fa-40d1-bb28-9d493afb3f29",
        "cursor": {
          "ref": "e75e6bfc-7a7c-4f83-9c67-6500959fa56c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c8139139-cccd-4c10-91d4-e416a41e46c5"
        },
        "item": {
          "id": "64af6d90-60fa-40d1-bb28-9d493afb3f29",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0d8a38b1-dce0-4a7c-8bac-c5014247bf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8a3905-76cf-40d1-8475-ff6841e19358",
        "cursor": {
          "ref": "8ae12fa2-e1a3-40ee-9ea3-4a0ce3ddbafb",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "28000603-d0e2-4275-bd74-901a6f0ff4d1"
        },
        "item": {
          "id": "ae8a3905-76cf-40d1-8475-ff6841e19358",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f32afec5-3fa5-4f96-9515-eba08b9a5a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bf8fa7-eb88-4920-8892-3bfeabe5d669",
        "cursor": {
          "ref": "b870bf7d-6fa9-4f93-863a-9e9eda331a2b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d58b0778-a34d-4e1e-bc89-a5b8d16e0fc9"
        },
        "item": {
          "id": "d3bf8fa7-eb88-4920-8892-3bfeabe5d669",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c0397e4d-11e1-4747-8e69-9d018a64808a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9079421-9d6b-4913-bd08-1892b387a194",
        "cursor": {
          "ref": "6cde5ca2-73b5-450d-bd67-598e769e7c4a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c9fd6cda-3312-4302-a943-f3ebe69d6320"
        },
        "item": {
          "id": "f9079421-9d6b-4913-bd08-1892b387a194",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ea6af47d-4db6-46b4-8abb-8d421b49d0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be2498d-3b9a-49fa-ba1e-31a61baecd02",
        "cursor": {
          "ref": "d50fc2df-29cd-47e8-bf50-7c8c8f31eaea",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "403c2ee0-617d-4183-8f7c-e5803170ba6d"
        },
        "item": {
          "id": "8be2498d-3b9a-49fa-ba1e-31a61baecd02",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad940aa8-9ec4-4090-aa1d-819214104cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731dfa91-954a-4124-bb2d-89f05e46ba14",
        "cursor": {
          "ref": "bcfc8936-2bab-4186-a9bd-c7b665fbba29",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4d2574fc-531d-416d-9014-0c1151658c58"
        },
        "item": {
          "id": "731dfa91-954a-4124-bb2d-89f05e46ba14",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "70eb207d-b0e8-4b25-9e8a-a19a892bc88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e74e7f8-8a1d-425d-ab5c-6d32a6724cc8",
        "cursor": {
          "ref": "596b0616-6e32-4b8f-99fd-153e706e99d0",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0512ee38-f2c6-43ee-8955-bb8c36c37b15"
        },
        "item": {
          "id": "4e74e7f8-8a1d-425d-ab5c-6d32a6724cc8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec175493-fe68-4d33-a0d3-1eafc7888b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59627096-d13e-4bc9-965f-fd9aa9cbbd11",
        "cursor": {
          "ref": "799aeee7-99f0-42e0-a8ec-173c8df32636",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6cbeaa78-5604-4e49-899b-61c4f12de901"
        },
        "item": {
          "id": "59627096-d13e-4bc9-965f-fd9aa9cbbd11",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8342c94e-45bf-443a-ab79-c4391fe0b15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac933bb-f8f4-42d6-83ba-85e9c8812fa9",
        "cursor": {
          "ref": "5699ace8-fb44-4f4d-86a8-015d4df65d73",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "748f79e4-5421-4513-9ef6-fd3bd9d890c7"
        },
        "item": {
          "id": "8ac933bb-f8f4-42d6-83ba-85e9c8812fa9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ceb0bd1f-1bad-45a7-8599-d7bd7b15bccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2df849-2e91-4b6f-9a8c-9616e9624f44",
        "cursor": {
          "ref": "3980a02d-3a8f-4658-a642-f429810cd75a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f07c62a3-c12c-4ffe-b194-c2d526238a63"
        },
        "item": {
          "id": "be2df849-2e91-4b6f-9a8c-9616e9624f44",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7dd82c0e-6bfb-4cac-ae74-2fed00d552ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818e53e0-8452-428a-bb44-57432e026df3",
        "cursor": {
          "ref": "c107fcd7-5eb0-4ae0-aba3-38ff944afe3c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3165537c-1d07-4d2e-a226-3cd2e2de462a"
        },
        "item": {
          "id": "818e53e0-8452-428a-bb44-57432e026df3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f75a7193-f4a0-49be-8691-de5fd184a724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ca1252-db40-4617-9976-d2d63495fb53",
        "cursor": {
          "ref": "8d915892-6dca-4377-96ba-f4d76768f86c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d63d3778-5392-48b5-80a7-bac7b873d5ac"
        },
        "item": {
          "id": "69ca1252-db40-4617-9976-d2d63495fb53",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d5c7df98-cce9-4580-a75e-8510c04cdfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8a0712-f9d0-4fac-8217-d9f1d08d1296",
        "cursor": {
          "ref": "f09c08a5-02d0-489c-81d7-d354e69ae7da",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "82cfa338-d554-4205-9bd7-13330f25f169"
        },
        "item": {
          "id": "ae8a0712-f9d0-4fac-8217-d9f1d08d1296",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "433da08d-f63d-4570-be07-d0db7e2d0929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe3f00e-2957-427c-8636-cbf6dc34c23d",
        "cursor": {
          "ref": "e8bcd03e-2de1-4d37-b957-66a9520cdba1",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "06b0aecf-0653-446d-9123-a830797b1e4e"
        },
        "item": {
          "id": "3fe3f00e-2957-427c-8636-cbf6dc34c23d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f8137181-5eea-41de-9c25-327d024a4af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5b459f-5f6c-42fd-95d7-627621696cdd",
        "cursor": {
          "ref": "b498a32f-3cf3-47c8-8cb8-94da0322c67e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe6ae205-f051-4593-9ada-9e8c132bdc2d"
        },
        "item": {
          "id": "dc5b459f-5f6c-42fd-95d7-627621696cdd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b63422ed-addb-4994-8368-b3aa6a4744ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3700f127-f6d6-4bae-b310-5f8b726e2daf",
        "cursor": {
          "ref": "931c8fb0-3aec-4d7c-be56-eb435a0a5677",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "45504c7a-8f7e-4eb8-9e02-a7395f4afdc9"
        },
        "item": {
          "id": "3700f127-f6d6-4bae-b310-5f8b726e2daf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "01504956-27d4-4125-bb15-a1ab85e8e2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7671137-ec5f-4d04-b39a-c2b4e6dda7a3",
        "cursor": {
          "ref": "1ba93f76-3414-4a79-a0cf-fccf99666fb5",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a916f680-722e-4e91-8ac2-da80ff535e76"
        },
        "item": {
          "id": "c7671137-ec5f-4d04-b39a-c2b4e6dda7a3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "06dd8334-14a7-4002-9e86-43e4de29d3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798efe6f-6ecc-4eb9-a776-9a279757a54c",
        "cursor": {
          "ref": "79c8cc9c-8563-46c0-8283-a64af43b1d1b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dd44978b-a969-4ad3-ad8d-f892b04a1e55"
        },
        "item": {
          "id": "798efe6f-6ecc-4eb9-a776-9a279757a54c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "73fbb382-5f4e-4944-ac24-562fe1cb3413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bd53e8-afbc-454f-abc1-5097f9aed0df",
        "cursor": {
          "ref": "be26110c-7065-42d9-90ad-c0d617a16f5b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "48d6f8c3-9d7a-481e-b5a2-4898fb0e70be"
        },
        "item": {
          "id": "77bd53e8-afbc-454f-abc1-5097f9aed0df",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b89b2fa8-0b50-4899-abe2-79f864df05a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4a48fb-ecd3-4a17-a917-8c94cc4e9a66",
        "cursor": {
          "ref": "622b18d0-2205-4189-8601-5f045ab22364",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e945b5a8-c5ab-465d-baf4-7d6fcfe53260"
        },
        "item": {
          "id": "2b4a48fb-ecd3-4a17-a917-8c94cc4e9a66",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "30787f16-58a7-410e-9d92-60d0cf27e268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9817f1d0-1eb5-4a81-a7f0-bd0fbb69bf0b",
        "cursor": {
          "ref": "4751d63c-4dbf-4dd8-944e-1e156071689c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "53e8591c-82f4-4773-a8f8-d3322c108b95"
        },
        "item": {
          "id": "9817f1d0-1eb5-4a81-a7f0-bd0fbb69bf0b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "78083452-f6f9-49df-8714-268e219ce9f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727bd236-02ed-4adc-baa2-3a071a813a62",
        "cursor": {
          "ref": "416d89b9-7d44-4589-8027-916c9143c0f6",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "abdbe87f-c9cd-4f56-846d-8aa930e363e4"
        },
        "item": {
          "id": "727bd236-02ed-4adc-baa2-3a071a813a62",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6a049543-614f-4114-9f5a-45d58fa076e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d4794d-1de6-4624-9e7d-a7990b1732ca",
        "cursor": {
          "ref": "4f02182d-ac00-4cc5-a5e6-3d7277b6fde7",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7b8f331d-a41c-432a-8c89-e29d44f5c907"
        },
        "item": {
          "id": "a8d4794d-1de6-4624-9e7d-a7990b1732ca",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7101a4ac-0608-4311-9908-e96dfb8106d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c559ad-32e2-4720-be61-90c6baffdbe0",
        "cursor": {
          "ref": "993ebf77-8a05-482c-8388-ea64a8ccde0d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8f769a0-5a01-46f1-bc82-843f44c8519e"
        },
        "item": {
          "id": "41c559ad-32e2-4720-be61-90c6baffdbe0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ed0b0540-a1cd-4c93-88af-21c2e00d8d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730a5378-996d-4978-83ac-c36db9c44197",
        "cursor": {
          "ref": "d54972df-9ed9-4c76-a94a-85ccc3d1db37",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "08f4a95e-868f-474b-a591-a910bfd881b0"
        },
        "item": {
          "id": "730a5378-996d-4978-83ac-c36db9c44197",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "85463e1a-f8ea-4ea3-bac4-558e6c7438b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c296863-ea0e-4bb1-8dd4-645a90ea2cdd",
        "cursor": {
          "ref": "44c4ce25-43a5-46cc-9847-c345ec53740f",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bac0a42b-9c80-4040-9c7f-20def349f8ad"
        },
        "item": {
          "id": "1c296863-ea0e-4bb1-8dd4-645a90ea2cdd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2dea9e03-76c1-4875-9bf4-07555e9b92c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe36888b-8d0b-4b0c-b598-ca402f10b6a3",
        "cursor": {
          "ref": "1a009985-a74b-4188-b1a1-b5c5db51a150",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "401d0c05-b726-435c-b979-9cbba800da01"
        },
        "item": {
          "id": "fe36888b-8d0b-4b0c-b598-ca402f10b6a3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1a0e3545-33c6-44a7-89df-08b73721e784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef4ac6a-ecea-474e-8a23-16bfdb976ab7",
        "cursor": {
          "ref": "48f9e6c9-a5dc-498b-84d5-de360bb16a97",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d8635c04-7c6f-4817-83b1-08f65c2dcb9f"
        },
        "item": {
          "id": "fef4ac6a-ecea-474e-8a23-16bfdb976ab7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "05401680-167a-4948-8018-13f3d9b5feae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2279e4-33ea-4877-b155-dcdb643607e9",
        "cursor": {
          "ref": "29917eca-f5b0-4832-b12f-ddfce4fbb5a1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1ac27840-7006-4b69-b6b8-e4dc9c823bba"
        },
        "item": {
          "id": "4a2279e4-33ea-4877-b155-dcdb643607e9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "963c11ce-ccfd-4f1b-a7e9-17951b6c2b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98234cc0-3261-4d8c-96f0-55acca79d2ce",
        "cursor": {
          "ref": "798ee48c-860e-4d16-8320-269113fca198",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8126ea9b-abd8-46ad-a98c-3a7be751ed94"
        },
        "item": {
          "id": "98234cc0-3261-4d8c-96f0-55acca79d2ce",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aa420071-584c-47db-b2ab-81517214d320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161e7da7-129a-42ca-a590-cb7b488840a2",
        "cursor": {
          "ref": "d92bf482-06e3-4e6d-af6f-eebda10cd78d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7f7ddbb1-8e4a-4bcd-a9e9-27270e40940b"
        },
        "item": {
          "id": "161e7da7-129a-42ca-a590-cb7b488840a2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dce0da11-dd4d-4f02-91a6-4293cee631b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdf72bf-b744-43ed-895a-48f09658eaa3",
        "cursor": {
          "ref": "d6ae73ad-7b67-4518-b97c-8c9a00e3139b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f7574f78-9573-492e-9b74-eafdf9c0b7bc"
        },
        "item": {
          "id": "9fdf72bf-b744-43ed-895a-48f09658eaa3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2312265c-1088-46f8-b97c-59d420272606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c455e5-d57a-49f3-88f9-5bb30300f733",
        "cursor": {
          "ref": "aa6795d0-59a5-4ee1-bdea-9c6c0672f560",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "041a7fba-b4b9-4912-91b6-b29874cc7954"
        },
        "item": {
          "id": "96c455e5-d57a-49f3-88f9-5bb30300f733",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "52ec7470-c000-4101-b2b3-cca70f747eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549e2c50-c1c9-481e-a61a-a16d626cdd4d",
        "cursor": {
          "ref": "0d8e9dde-190c-4f11-8b91-7d3c5eef9927",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a42104bf-2a94-4712-ad5e-4329342947e3"
        },
        "item": {
          "id": "549e2c50-c1c9-481e-a61a-a16d626cdd4d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8cf26f86-1ac8-4aee-b036-24d6ef741394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6818d9-53ef-47c2-8057-19090b72372f",
        "cursor": {
          "ref": "a53b8bdf-0285-47b8-8df8-bf241fd63c1d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "df051b3b-1451-423a-8f5c-211ac37fdc8d"
        },
        "item": {
          "id": "ac6818d9-53ef-47c2-8057-19090b72372f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bbd80632-b0ce-4d3d-b3e5-59c23de9823d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c86eb5-91b8-4c5f-ac49-982e57479d1f",
        "cursor": {
          "ref": "60d22944-2ee6-4150-bcaa-e7f5a097240d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bb855dd6-dc8d-44d0-9d65-6991b3f58e7e"
        },
        "item": {
          "id": "68c86eb5-91b8-4c5f-ac49-982e57479d1f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "002ffdf0-f9ff-4ae2-b9bf-194bca6456fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d22145-ac7b-4c26-8798-eb29bfc0ab5f",
        "cursor": {
          "ref": "8394a1ba-989a-41d0-a799-6c1624c5e9a8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4adb6840-332f-40cf-9633-c27d37894dff"
        },
        "item": {
          "id": "32d22145-ac7b-4c26-8798-eb29bfc0ab5f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "607ce0d1-d395-43ec-80da-33a34a03d543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ee6392-196f-4a99-8d06-bc81394f82ce",
        "cursor": {
          "ref": "f88075e8-8bdc-4ff6-adfa-6eab097a91f0",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "77835b17-e326-41e0-a2d5-2d68e453ea41"
        },
        "item": {
          "id": "f4ee6392-196f-4a99-8d06-bc81394f82ce",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c7be41ae-678b-47ca-a9c9-e581a4975ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3513b162-2e93-4182-bcc8-034788c6dffc",
        "cursor": {
          "ref": "cca24b43-3734-4baf-af99-da649c3f4296",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "36b7a994-4f20-4920-b590-b5e023c81877"
        },
        "item": {
          "id": "3513b162-2e93-4182-bcc8-034788c6dffc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dde2d01d-af1e-4061-bce1-9a2dbc09ecc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda429a0-67dc-4e01-8c39-a9b639165af2",
        "cursor": {
          "ref": "c54a10a3-c62f-45b6-9e1a-e2cbf4022a33",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "490a1160-d447-48d4-98e7-00bc8b88ec36"
        },
        "item": {
          "id": "fda429a0-67dc-4e01-8c39-a9b639165af2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c28b31e6-58d5-42f2-b0e4-ef0a6dee4801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc7cbdd-a95e-4a16-8f34-fdd4825185e0",
        "cursor": {
          "ref": "59831336-f7cf-4533-acd8-2d8cc13b5a5c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "08cc9dd7-741b-4a12-89ab-1d9e3a7d78de"
        },
        "item": {
          "id": "9cc7cbdd-a95e-4a16-8f34-fdd4825185e0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ac6c013b-2a32-4a21-9337-08f97ee1c45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55979034-6db0-454e-8432-6adfc7b400d2",
        "cursor": {
          "ref": "1569347b-9e0f-4ace-8d28-31a27236b6e5",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b3986471-3cdc-4734-a8b7-253c124f8922"
        },
        "item": {
          "id": "55979034-6db0-454e-8432-6adfc7b400d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "53af1011-cd4c-4276-867f-a7f9c4c2e511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972ee58b-1f0c-49a0-81d0-18d7c189b5be",
        "cursor": {
          "ref": "771925aa-e50e-40a8-9e59-768b2f2c45aa",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "129f74dd-9a35-4c34-bf76-f68f2ee51916"
        },
        "item": {
          "id": "972ee58b-1f0c-49a0-81d0-18d7c189b5be",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fc1aa85e-2852-4627-bc95-530b082f475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170f4fb8-aaa8-44c2-80b7-987c3ee91d51",
        "cursor": {
          "ref": "206e95bd-4710-4a5f-90a9-f6febb3f36ee",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a3356250-7101-4e29-9672-c4b516df922c"
        },
        "item": {
          "id": "170f4fb8-aaa8-44c2-80b7-987c3ee91d51",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2d85bf78-f9c2-4e8e-8b7b-4c947ee8ed4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e571a2-844c-4c8b-a5ab-892300e7c180",
        "cursor": {
          "ref": "4bed73af-1192-4b7e-a3a4-0ebef2a87a8f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7d4b199b-3740-4ab9-bb7b-8258298b4831"
        },
        "item": {
          "id": "c6e571a2-844c-4c8b-a5ab-892300e7c180",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b439084f-d3b2-4670-9fde-eadbb6ddbcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbc377b-81f0-41bd-9d40-24590b92403e",
        "cursor": {
          "ref": "0ce83a9d-c5af-4647-a4a8-897511ab23f9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b86d89cd-562c-4bca-a7dc-22611a374ccf"
        },
        "item": {
          "id": "abbc377b-81f0-41bd-9d40-24590b92403e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3751805b-ebeb-4173-9c47-b01563c5e828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b6b274-80ee-46d4-aca5-382db58e95a4",
        "cursor": {
          "ref": "1f3e1e2e-e267-4c9a-84b3-de549151fad5",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "adf6d1bd-cbd9-40e9-b706-1884ba55c2f0"
        },
        "item": {
          "id": "71b6b274-80ee-46d4-aca5-382db58e95a4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "919b46f7-0ec1-4f94-a966-53723feecc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1909acc-6df8-4f44-9570-2d975d6cc7bb",
        "cursor": {
          "ref": "8c255090-3718-4b67-af24-0662668e8025",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "03960604-04ac-4b07-bdc9-74b541aec359"
        },
        "item": {
          "id": "a1909acc-6df8-4f44-9570-2d975d6cc7bb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2b8caf2f-fe4b-475d-95f1-444f653f3033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa608199-8597-479d-bce3-c9ff774c89cf",
        "cursor": {
          "ref": "06aae6be-8d35-4a43-9a51-0cb964ad1c85",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a659e2d1-773c-4981-a1af-711ba42b2952"
        },
        "item": {
          "id": "aa608199-8597-479d-bce3-c9ff774c89cf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "559d4130-e9bb-4e1f-89b6-24541508e79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91298e25-c2c9-497d-8716-143f597514d8",
        "cursor": {
          "ref": "23f4263b-e2e8-4031-851d-0c0e9d0ed0d6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f65ebc2-3500-43b7-979e-291ce316223d"
        },
        "item": {
          "id": "91298e25-c2c9-497d-8716-143f597514d8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1a5ed366-51cf-418a-8c66-03a98ef6d37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76038017-528e-4835-9032-0d7b4b627a1e",
        "cursor": {
          "ref": "6fc809bb-35b8-4641-bbdc-c964b81f904d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9e97a567-c5d4-4136-88a1-aca1f88a488b"
        },
        "item": {
          "id": "76038017-528e-4835-9032-0d7b4b627a1e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7c365ace-0115-457a-b9e7-9125111c51a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6073b26-5256-454a-8359-ed5998a263f0",
        "cursor": {
          "ref": "dd553edd-4f98-4660-9059-da51ddf8082d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6e448866-f4c5-48f7-b318-4d435a46902c"
        },
        "item": {
          "id": "e6073b26-5256-454a-8359-ed5998a263f0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "02bf71ba-2a7d-4284-a228-90483898b42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfb66d7-231d-45d6-880a-4b7101ba1403",
        "cursor": {
          "ref": "eefd3363-2006-4d4f-8495-c8eb60e6e436",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3f8e4284-3371-46ed-bee3-8a9c31102824"
        },
        "item": {
          "id": "ccfb66d7-231d-45d6-880a-4b7101ba1403",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2f2cce5d-af17-4453-ab6f-08dc30cf674b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c3fadc-6b5b-4a58-a5e5-fbd942ebcb51",
        "cursor": {
          "ref": "6270f04e-9539-472c-aeec-0f755a430fa1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1fdf26e4-57e1-4b07-a520-00b9d651f93d"
        },
        "item": {
          "id": "90c3fadc-6b5b-4a58-a5e5-fbd942ebcb51",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "272fe4bd-5ec2-4f7c-bbd0-7693c805ce88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d4597a-a5f6-4404-b49a-9023a4249f52",
        "cursor": {
          "ref": "fafdcfff-621e-4f0d-b89e-4d07093d059b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dd4da379-1c4f-4dce-9a4d-751d878644d0"
        },
        "item": {
          "id": "b1d4597a-a5f6-4404-b49a-9023a4249f52",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "763330cf-b77f-4e51-8e4d-97aeab9b5ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c5e44b-cd5a-45c0-9b25-fe167c6eb897",
        "cursor": {
          "ref": "f4c04165-ee1c-40a2-9673-c7d4d272263a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e665432f-ddf4-4149-a2c3-c026652f76c2"
        },
        "item": {
          "id": "16c5e44b-cd5a-45c0-9b25-fe167c6eb897",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "227d6f6c-4991-4ab1-98aa-43c6e6c1eca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdf3e21-eb68-4e41-8f0e-3288567648c2",
        "cursor": {
          "ref": "9da224ac-5018-42a2-8b73-0ff9aa2a70ce",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "41267b99-e8f6-48f0-a318-7b16a8ef5220"
        },
        "item": {
          "id": "7cdf3e21-eb68-4e41-8f0e-3288567648c2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5d2471b6-0a9b-42dd-adcc-f21362a8eaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e31f40-abe6-47b5-892a-cf301bd0a368",
        "cursor": {
          "ref": "783cdde0-fc16-438b-bbc7-0a1e59d02be6",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8264a149-1e89-4b5e-b88e-8e07d6c713f3"
        },
        "item": {
          "id": "94e31f40-abe6-47b5-892a-cf301bd0a368",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "60ea6284-3f43-4054-a2f3-0ca5f28bb619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f474b2ac-863e-444f-b4dc-e54826613897",
        "cursor": {
          "ref": "9c85622a-9c14-4da5-bbc5-aff71e4031b5",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "25c5b7ad-c338-414b-a4e6-61f46c23e78b"
        },
        "item": {
          "id": "f474b2ac-863e-444f-b4dc-e54826613897",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "36205342-432a-4701-b3f3-4c6b88688aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6848a67-9a62-4775-b701-5094b6768e70",
        "cursor": {
          "ref": "1442d69e-9ada-415e-9972-ac091f705acb",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "80567916-1dea-46a5-9168-530af9b41511"
        },
        "item": {
          "id": "f6848a67-9a62-4775-b701-5094b6768e70",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e0c25557-339c-4a44-ac1b-607abf3509fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c976c2-a0f0-4fa9-b062-049490506f68",
        "cursor": {
          "ref": "40269cfe-e87d-4ab8-9b4f-690cb2248460",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b32eff7b-176c-4148-924d-fc0579a19c48"
        },
        "item": {
          "id": "48c976c2-a0f0-4fa9-b062-049490506f68",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "65216d9c-c72b-43e3-a159-3c1633d10b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b844d4-d7d7-4a3e-89d9-9e63e75adc4c",
        "cursor": {
          "ref": "030b0ef9-8f8b-48d7-8f1c-e8c7af0d064d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7ecb8ae7-8957-4897-991d-8d06094b7623"
        },
        "item": {
          "id": "22b844d4-d7d7-4a3e-89d9-9e63e75adc4c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "58ba62c0-daf6-4b6a-a506-a7b79aa043f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb567497-5b82-4722-9bfb-5ebad9d68fb5",
        "cursor": {
          "ref": "3b8accc9-6209-4db3-b8da-262bf210b33f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "123f4f06-e565-496e-a94f-b8ad810fc635"
        },
        "item": {
          "id": "fb567497-5b82-4722-9bfb-5ebad9d68fb5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "17f58fdd-b241-46f9-b9a4-e70073ba7834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32355a0-6981-432f-adb6-7d24ebfd1dfc",
        "cursor": {
          "ref": "c2d2d8b7-b70e-490f-bb79-0e969e56e585",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0861f63e-056a-411d-8e42-ff0fa5844184"
        },
        "item": {
          "id": "f32355a0-6981-432f-adb6-7d24ebfd1dfc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e00085c5-0021-4250-a298-282f7442597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec1568e-4e04-4ee1-a12d-7ef3b8cef9a2",
        "cursor": {
          "ref": "3bf0b8fe-5d4d-4d3c-888f-f6093456fb12",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f56ca33d-85af-408c-aa82-7f6149d737ad"
        },
        "item": {
          "id": "4ec1568e-4e04-4ee1-a12d-7ef3b8cef9a2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3bdf79aa-d01e-4c3a-a294-2bc406579345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3092f3eb-977b-462a-aa76-5a6417678f14",
        "cursor": {
          "ref": "de4c8504-8911-47be-bfe5-5d8a22775bb8",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "56f16ff4-6bee-44f0-8e43-04f37efefe68"
        },
        "item": {
          "id": "3092f3eb-977b-462a-aa76-5a6417678f14",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "732d98bb-62f0-4c02-80dd-e18c88e012bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31055c9f-4bcd-4fe3-a3b2-086633a867fe",
        "cursor": {
          "ref": "01c2038e-5c69-45db-9b7d-291da9078aad",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "874eac62-c075-43cf-b61c-bef01999f48f"
        },
        "item": {
          "id": "31055c9f-4bcd-4fe3-a3b2-086633a867fe",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a1222a81-dd00-4797-9fd3-255cfeca95d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061427dd-6ada-43c7-b3c3-293661306402",
        "cursor": {
          "ref": "32c51d61-c966-44ff-b2c3-b390a872f501",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c1dba52e-8944-403a-abaa-85ce2c5f6575"
        },
        "item": {
          "id": "061427dd-6ada-43c7-b3c3-293661306402",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "68123586-31a8-4c56-9d27-70ca152b6e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f51083-2fa4-4e46-aabb-57a31d3ba435",
        "cursor": {
          "ref": "f550a0b7-d9c2-47db-baed-cfd3ced10b69",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "96c47a37-3b3c-4329-9983-1e0a07ae00cc"
        },
        "item": {
          "id": "21f51083-2fa4-4e46-aabb-57a31d3ba435",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "88c7706e-9254-4c8c-bf7a-96e695adf997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73578ea3-4eed-4252-bff2-504da14fff7d",
        "cursor": {
          "ref": "a3948855-6af7-4ae6-895f-45c7c0761329",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "905417a2-52d9-4db7-8473-e0e8439c911f"
        },
        "item": {
          "id": "73578ea3-4eed-4252-bff2-504da14fff7d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ede99d36-83d8-4b78-9b98-22958d5acfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1b88b3-8b7a-4b2a-87cd-b86602c8362f",
        "cursor": {
          "ref": "1b85ea8b-071a-4f39-b143-8d1d1f068a1c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5dbd3edd-bd9c-46d2-802b-de30f5bdbefd"
        },
        "item": {
          "id": "7d1b88b3-8b7a-4b2a-87cd-b86602c8362f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "42bc25ca-e1b9-4116-aa92-ce71f4d01773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2ed25f-eb10-4067-8b07-0433a7334dea",
        "cursor": {
          "ref": "6363d439-9a6b-4668-88a9-dbbf49169373",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7b8d00e8-57fa-4092-8317-327aee13b741"
        },
        "item": {
          "id": "bf2ed25f-eb10-4067-8b07-0433a7334dea",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "eb7d2ab7-155c-40ba-9f3f-dfcafe67c929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60906730-d490-4120-9b56-6609003a6069",
        "cursor": {
          "ref": "22576ac4-dae9-48d2-88d7-a756a37b6755",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b9642664-8ecd-411c-903e-2058a4e2b823"
        },
        "item": {
          "id": "60906730-d490-4120-9b56-6609003a6069",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1963ceb9-8a36-4ff3-aea6-2b2c01dfc150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adccabd-1172-412b-b242-9509f7970f9e",
        "cursor": {
          "ref": "fb199e03-6764-4874-b4c7-bbf2c3d0ff36",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0ca75df0-4c5d-476b-8f33-18aa0fb4a10c"
        },
        "item": {
          "id": "9adccabd-1172-412b-b242-9509f7970f9e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "92722cd9-3bff-40c0-a2a5-8386a793453a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7850c1af-817d-48bc-a9c3-73ae53e387d9",
        "cursor": {
          "ref": "931ce282-9d07-47d4-bb32-5bb68930ec47",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "97659b59-8123-41b6-b14c-321d3d8de618"
        },
        "item": {
          "id": "7850c1af-817d-48bc-a9c3-73ae53e387d9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "eacf34fd-ced6-42ac-9d5b-d034741c9b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58612f9c-d3f4-4677-8c47-2307b933acbd",
        "cursor": {
          "ref": "d9dd2398-b120-4dc2-a264-59ccff2ed122",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4083d8d1-7ecf-4dfd-9df8-b3c9dc4a0f75"
        },
        "item": {
          "id": "58612f9c-d3f4-4677-8c47-2307b933acbd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e56c5991-d6ea-4995-9383-1cd17801c143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32281d35-428b-4d6a-9f59-08d5be707d25",
        "cursor": {
          "ref": "ffd524f5-956d-475d-87fe-ddc2e37949e6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e859162a-7d19-4e50-ae22-35429ba80794"
        },
        "item": {
          "id": "32281d35-428b-4d6a-9f59-08d5be707d25",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee090fd1-4b77-4f1b-a22d-8cc64b2a5925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ce7f78-318b-4f3c-87ec-89649b9e3d6a",
        "cursor": {
          "ref": "9eceea2e-8787-4c20-b2f9-2db23bfd9670",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1d92ca94-9dd0-40f1-8737-4c78d276dca2"
        },
        "item": {
          "id": "58ce7f78-318b-4f3c-87ec-89649b9e3d6a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e2e20ca6-8fa2-4153-9a79-2e7915427ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87105cff-8969-47b0-85f2-6d61db5f619d",
        "cursor": {
          "ref": "181cc29c-bb3a-4651-af39-d44204c9d2ee",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cd7e80ad-6138-41c5-9bf3-9be7274266da"
        },
        "item": {
          "id": "87105cff-8969-47b0-85f2-6d61db5f619d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f9d7c2cf-62fd-4049-af77-84c2a64adc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a13ef1-6b4e-4ace-88dc-1056b48d7a29",
        "cursor": {
          "ref": "282fb79e-31ad-4082-8fb3-ce9b530ec871",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f942ace7-812c-4fef-91a4-47cfa4226f02"
        },
        "item": {
          "id": "80a13ef1-6b4e-4ace-88dc-1056b48d7a29",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c851758b-4058-4315-82d2-6ea29662e296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff14f40a-dbdd-4227-bdff-276b26596d4c",
        "cursor": {
          "ref": "b3a4dfc0-78de-4b89-8b03-6ae7e5b8b6c7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "23a9d16d-da06-43f9-8498-c90ffeb20f77"
        },
        "item": {
          "id": "ff14f40a-dbdd-4227-bdff-276b26596d4c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f40c28ca-64a6-45ae-89e4-757c141c0ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ac25a7-9f0d-4f60-8ac9-28eb359dbfd7",
        "cursor": {
          "ref": "3542b503-1041-45a9-a293-79a7869db4c8",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "aaf30644-344e-4c92-82c7-18a084f41abd"
        },
        "item": {
          "id": "42ac25a7-9f0d-4f60-8ac9-28eb359dbfd7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a5ef5aa3-33cd-45ce-ae2c-c9b979c944cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be29dcea-5f03-403a-a1c2-cbfb901cdc66",
        "cursor": {
          "ref": "01105c5c-303f-48d1-a608-298643e20f3b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "563e5f7f-0563-4dc7-a0fa-3e5bed75a980"
        },
        "item": {
          "id": "be29dcea-5f03-403a-a1c2-cbfb901cdc66",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ea55ce6a-59b6-494e-a74c-c1e230537ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52b8ef8-7111-4057-93e5-256e5ec7352a",
        "cursor": {
          "ref": "45e26d26-93ff-4363-aa6f-f70e783bd978",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "25728c9c-c286-4b1f-b0ac-286e1bee32cd"
        },
        "item": {
          "id": "a52b8ef8-7111-4057-93e5-256e5ec7352a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "14f192b6-ee90-42f1-8aeb-7c5d2c384c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ea0da8-eb00-4f72-945f-d0c34e1828ea",
        "cursor": {
          "ref": "de3578c5-057b-4395-a51a-330a0bfd4516",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2321c8f2-6cf1-4b6f-a4ff-b7e17dee8410"
        },
        "item": {
          "id": "70ea0da8-eb00-4f72-945f-d0c34e1828ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "29a9ab7e-5cd0-43ab-ae6c-9e9cc81d831a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d44332-6ec8-4034-9ada-22715d7a7f8d",
        "cursor": {
          "ref": "c63cc254-5d92-48e0-8b67-f11f01365bec",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4ee4fcef-ecfe-4775-83c3-a6f6dd7b65ac"
        },
        "item": {
          "id": "b7d44332-6ec8-4034-9ada-22715d7a7f8d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a5a2d017-5900-44fe-9f57-51fba54af2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fee240-3dcb-48e1-a402-31b24fc7da3c",
        "cursor": {
          "ref": "08f9d699-88cb-4487-ab3b-7d9599d52080",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c1bd2f5b-9392-4e5f-9923-93100fc1868d"
        },
        "item": {
          "id": "77fee240-3dcb-48e1-a402-31b24fc7da3c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4cbb0f74-4b47-4b03-ad35-46f8d8c0e06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7037c7-5c60-4146-9dce-f78137002741",
        "cursor": {
          "ref": "c3f0af8c-c9da-4efd-99aa-97415837038b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a51be08d-89f2-4f2b-8aec-24cd64b4cfe0"
        },
        "item": {
          "id": "8b7037c7-5c60-4146-9dce-f78137002741",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a16d7984-3e9d-4ad5-a40a-585b0dd12d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8e935-2208-4399-bd15-74e0b9f35543",
        "cursor": {
          "ref": "489b5b35-d68c-4566-bebd-8e682ab569a8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c5efac9a-9658-467b-a7fe-913ba918a5fd"
        },
        "item": {
          "id": "66c8e935-2208-4399-bd15-74e0b9f35543",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "24702643-492e-48d9-804b-a46ba2365c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5cda8d-c4c2-4c75-a95e-f7938eb0b36c",
        "cursor": {
          "ref": "84a34e13-cd00-4b4d-9f02-13d4bd18c32f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4cb60665-f89c-48c6-a3c6-8388fbde4b75"
        },
        "item": {
          "id": "ea5cda8d-c4c2-4c75-a95e-f7938eb0b36c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bec27028-12cd-4d1d-a74e-d3231bd4d6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b157a1ee-e0e6-422c-b7fd-7c48fad50152",
        "cursor": {
          "ref": "4babbf5d-378c-4e63-83b0-06fc7b9aa5e6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9134a987-fd0b-44bf-beed-69259400c5fe"
        },
        "item": {
          "id": "b157a1ee-e0e6-422c-b7fd-7c48fad50152",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b339e00d-bc95-44be-8335-4d7b273eab80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc540c8-98a9-4444-942b-11c723208431",
        "cursor": {
          "ref": "7f30fffd-0778-44df-8390-978af9fe16bd",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b744364a-bca5-4aed-91c8-602b6c5ea8ce"
        },
        "item": {
          "id": "9cc540c8-98a9-4444-942b-11c723208431",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "97abd7e0-93b7-42b0-8d7d-5bb5c8eeb358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e936877a-44c2-49c9-8eda-b367bee87293",
        "cursor": {
          "ref": "4a4ca92c-7fcb-4829-8bb0-042090399e6a",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "93439cf6-4146-4131-b6b7-a7280e6a077a"
        },
        "item": {
          "id": "e936877a-44c2-49c9-8eda-b367bee87293",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "096beb01-c926-48b1-a88e-db77ef3933ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e9097-3222-49b1-8657-e1d1cdc23ea0",
        "cursor": {
          "ref": "cb2d58dc-c8f4-4128-9a08-606538b9e18d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3a19bdba-a8ef-48ae-9349-faaa1ac2f871"
        },
        "item": {
          "id": "0c8e9097-3222-49b1-8657-e1d1cdc23ea0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "003852d4-fdab-4305-9a3c-1ce65f473184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9302e052-d712-4b38-8731-632c50216047",
        "cursor": {
          "ref": "ec64e517-058f-4c66-9002-1c25ba68d50f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a11e8298-12c4-4a81-8767-1c07716c963b"
        },
        "item": {
          "id": "9302e052-d712-4b38-8731-632c50216047",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7ccb82f6-cb20-42aa-826b-fedfd00f00fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec30b31-246d-4839-b24b-bba96f34dc2f",
        "cursor": {
          "ref": "0a27f192-46ea-48b1-a30d-f93282b13fbc",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "71671ad7-f99e-49aa-aed2-9881bd6cd572"
        },
        "item": {
          "id": "dec30b31-246d-4839-b24b-bba96f34dc2f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c6034d33-ba68-41a9-86cc-df8403ac9cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cfb5e8-eb6c-49a4-8069-89818cc3b8f1",
        "cursor": {
          "ref": "f15560b8-9472-48a2-b242-a56c00ce81fa",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "31626454-acd7-4fac-baac-71e5b69e793c"
        },
        "item": {
          "id": "d7cfb5e8-eb6c-49a4-8069-89818cc3b8f1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "08af535a-fd0c-4f2b-81f4-4892c062d429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b514c2-c802-48df-a8d7-5d3aa16d18fa",
        "cursor": {
          "ref": "c4ce4174-18ef-4957-9764-5779dbcd1115",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7ee33bfb-af49-44ab-a215-56b1ca7d1b33"
        },
        "item": {
          "id": "73b514c2-c802-48df-a8d7-5d3aa16d18fa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "72d77363-f81d-4326-b177-5fd3b91f89e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac5c34a-6f51-4fb7-a4d8-dd950e5c390c",
        "cursor": {
          "ref": "4f3c56f8-402b-483b-9bd8-0dcb1ca0963c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "00e260ad-895f-4c5a-b0b8-343c7378ff05"
        },
        "item": {
          "id": "aac5c34a-6f51-4fb7-a4d8-dd950e5c390c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c54ed6ab-b7ed-4af9-9ce6-8b5a4d0c35b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cbd472-4e49-4cc1-bc1e-788cdbdad9a7",
        "cursor": {
          "ref": "685db5bf-6548-4631-9ee0-07ab7f26c37e",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "486e1325-8ba6-48a5-8f0c-632abe19b303"
        },
        "item": {
          "id": "e6cbd472-4e49-4cc1-bc1e-788cdbdad9a7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4de8bd86-a21d-4601-8982-4bebeeb3dca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa293ec-ce32-4e89-b84c-154ee0786a18",
        "cursor": {
          "ref": "b71c6348-66b8-46f7-aacd-18919b9830bb",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "db84783c-dd2a-4e59-acac-e60ce865e51e"
        },
        "item": {
          "id": "4fa293ec-ce32-4e89-b84c-154ee0786a18",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a6bd9e93-db4e-4170-8955-62fbe35f1e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd3e078-6799-4ca8-8f69-d640165d81c9",
        "cursor": {
          "ref": "c7221e44-21cd-4632-89c3-ff9ca8b6ba64",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a8e75170-1998-4f1d-9122-406f06e20871"
        },
        "item": {
          "id": "0dd3e078-6799-4ca8-8f69-d640165d81c9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "33f33373-e1c6-459e-a68f-161e24bd5b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e999bb0b-5e28-44b5-924d-a88a9adfb6b0",
        "cursor": {
          "ref": "67123eeb-0a6b-48f4-827a-0561a4565705",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e3b6f613-43a1-4d14-8222-c363d8f05935"
        },
        "item": {
          "id": "e999bb0b-5e28-44b5-924d-a88a9adfb6b0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d1d488a4-6543-4447-b4d0-f00e2eca7ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603e2fe2-c481-4d6e-b6af-435fb153fd27",
        "cursor": {
          "ref": "1f6f593d-ab75-4e9f-b2a0-b5d2ea608771",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bbf40499-3d39-4489-b5aa-e7489c46f79e"
        },
        "item": {
          "id": "603e2fe2-c481-4d6e-b6af-435fb153fd27",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "49720861-80b2-4345-8a76-9211366eb487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8345a24c-0037-4ae9-8e7a-e3911b550c6d",
        "cursor": {
          "ref": "82c659a5-e67e-4514-bbcb-6d2f7127b365",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8c938c40-af43-40ae-9370-d6ff07a8cdce"
        },
        "item": {
          "id": "8345a24c-0037-4ae9-8e7a-e3911b550c6d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7c2cf5c1-d987-45e2-8bdb-ac2319de4a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6136e30c-214e-49a8-aa8a-828bb80df84a",
        "cursor": {
          "ref": "90b60897-0b32-487c-b65d-deabbf0afeb0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "546138c5-fb28-48eb-a13e-a573848c8428"
        },
        "item": {
          "id": "6136e30c-214e-49a8-aa8a-828bb80df84a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7a6a95a4-0981-41e5-89d5-b1eb0eaa62be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fd024b-e06e-4000-a314-37d638e5cf24",
        "cursor": {
          "ref": "2cfb6b27-fb77-4ec0-ab53-e1aef5b6c5a7",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e22977af-1dde-4bb6-9eaa-9caeb172ced8"
        },
        "item": {
          "id": "01fd024b-e06e-4000-a314-37d638e5cf24",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "aa40d8bc-2b70-47aa-bd29-e865b9d96251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dd766e-9d8e-4755-8fb9-ab33f539f524",
        "cursor": {
          "ref": "a8f83f23-2daf-4025-8e6e-d4f07fa68f25",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "85687186-21ed-4fd2-96e5-e605f7baad14"
        },
        "item": {
          "id": "a9dd766e-9d8e-4755-8fb9-ab33f539f524",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b6134d23-5984-4db2-99a8-80a0a78b70b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd37921-c6f5-47f2-978f-bd4c8ffd742c",
        "cursor": {
          "ref": "d1d6a892-a336-433c-bda2-b07caa8ccd39",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "294a2e3e-b177-49fb-9728-fadfff417a16"
        },
        "item": {
          "id": "ffd37921-c6f5-47f2-978f-bd4c8ffd742c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "769e7113-db4c-4808-9eef-a4e1f3bd582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48daee5d-8570-48cb-bd20-f14d7149b658",
        "cursor": {
          "ref": "b144bac3-d8e7-4790-b02a-dc17f38ed051",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3569875f-d845-4a06-ba5e-17359c3c1fa2"
        },
        "item": {
          "id": "48daee5d-8570-48cb-bd20-f14d7149b658",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "94156097-736f-4728-ba01-06fbfb86b0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cb196b-70da-4c27-b172-1e029dc12890",
        "cursor": {
          "ref": "9adc9ab8-5704-43b7-9fe9-f96d81065bc2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3a527e37-32a7-434e-9ab1-7e93ee786ea9"
        },
        "item": {
          "id": "40cb196b-70da-4c27-b172-1e029dc12890",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c1b5e89a-200d-405c-ab6c-cf72b2ba8233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731be20c-3d66-4fca-b182-b965656d35e6",
        "cursor": {
          "ref": "3be09f1f-0c08-4859-8f5b-e324ba6aadcb",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ab349bb9-4dec-4884-b970-18bc93380d84"
        },
        "item": {
          "id": "731be20c-3d66-4fca-b182-b965656d35e6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4a9ffa87-5c36-420a-8716-ca79fd661747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aac527-cfa8-483e-9f44-22e2b511f782",
        "cursor": {
          "ref": "f65a9674-a400-4e9d-b0a7-a076bbee2367",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9460543a-ea35-485e-93cd-6e3ea10a3e4c"
        },
        "item": {
          "id": "40aac527-cfa8-483e-9f44-22e2b511f782",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "37863dd7-2f95-4085-86ce-4ba880bc8e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f449597e-1141-4fab-9063-012c9f1bfa24",
        "cursor": {
          "ref": "217fb778-84f1-4b58-9f2f-b18c3310b138",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8ef51399-8489-4bfb-999e-6a017cbfb3f2"
        },
        "item": {
          "id": "f449597e-1141-4fab-9063-012c9f1bfa24",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e9d39daf-d5af-479b-b083-d1cfc4ff8eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2629bfa7-248e-4bc2-ad07-df4be5d9f47a",
        "cursor": {
          "ref": "7fcd1833-fb0b-47ca-bc5c-a0c0c9412753",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a40a2c8f-1b35-4ea7-9233-931975f33dba"
        },
        "item": {
          "id": "2629bfa7-248e-4bc2-ad07-df4be5d9f47a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d609fa48-1593-46a4-bf22-2791efab44c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6948223-fcd7-4e68-a155-03a2e59e3ce2",
        "cursor": {
          "ref": "bb9d803f-eb59-4602-a619-3641d0f3f242",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "835ff001-b576-44a0-9e81-b955a201d7d3"
        },
        "item": {
          "id": "d6948223-fcd7-4e68-a155-03a2e59e3ce2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4a7fd4b1-b7d1-483a-8e5a-da6ceff1e6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e643ae-be26-4ad7-a3d0-600d66f3aa15",
        "cursor": {
          "ref": "9d1bc0d6-6828-4ebc-a377-1929aa3e471a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8e6c4be5-6f69-42ba-93ef-f0eeb15c40b5"
        },
        "item": {
          "id": "84e643ae-be26-4ad7-a3d0-600d66f3aa15",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2cbbe323-83a3-4528-b78b-23a3a8ecb423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b587fec9-3c3b-4d7d-a53d-fbe282a6235f",
        "cursor": {
          "ref": "f0256d74-bb25-4e07-9818-d1a3dd17b283",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f470adba-f269-4ba5-bd92-914bef66937b"
        },
        "item": {
          "id": "b587fec9-3c3b-4d7d-a53d-fbe282a6235f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aa227d3a-7031-47ae-9f64-2c4c13c8996a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6d9c58-a792-4681-9c98-99c83c7e3ce3",
        "cursor": {
          "ref": "5ac1b91d-6a24-4496-ac02-6b5a4eba952c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fe3562e4-e72a-46b2-b847-6b79b213fac9"
        },
        "item": {
          "id": "fa6d9c58-a792-4681-9c98-99c83c7e3ce3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "55ffbad1-b720-4e3a-9b45-3731633a44d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf29ca9-9346-44cc-9b39-d8fb1793db97",
        "cursor": {
          "ref": "301c751c-be94-416e-8fa0-e3f66722f96a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "64e9437e-e316-4758-b4dc-b6c47693c3b0"
        },
        "item": {
          "id": "5cf29ca9-9346-44cc-9b39-d8fb1793db97",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "02272b59-fae5-46d9-be58-8fa225bb8f12",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3c4352-600c-4935-9305-b79339d541e6",
        "cursor": {
          "ref": "44fa73b0-7109-4d50-a273-14b304225f11",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "78fdf485-c12c-49d6-8210-e9e4c74de389"
        },
        "item": {
          "id": "ef3c4352-600c-4935-9305-b79339d541e6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5ea17706-8f91-458e-8a8b-f6747b53999d",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8443888e-4e30-46a6-b1bb-9d4dcc329cb7",
        "cursor": {
          "ref": "860c200d-3a0c-4538-916b-928e1eac6243",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "742f4748-dfb6-4149-a10a-2f7e47760165"
        },
        "item": {
          "id": "8443888e-4e30-46a6-b1bb-9d4dcc329cb7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3274e20f-bf97-4b33-92ca-1d56696f4870",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4bd67e-28e0-44bc-9c43-b47f323b3ee8",
        "cursor": {
          "ref": "2e5c3187-0284-49ce-ac26-bbcc35273f85",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5c8dfc92-fd67-44c6-94f5-a21ee0b5d8c6"
        },
        "item": {
          "id": "3f4bd67e-28e0-44bc-9c43-b47f323b3ee8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6d32e6e6-3b06-4481-9050-b1a9d17d4cd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4bd67e-28e0-44bc-9c43-b47f323b3ee8",
        "cursor": {
          "ref": "2e5c3187-0284-49ce-ac26-bbcc35273f85",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5c8dfc92-fd67-44c6-94f5-a21ee0b5d8c6"
        },
        "item": {
          "id": "3f4bd67e-28e0-44bc-9c43-b47f323b3ee8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6d32e6e6-3b06-4481-9050-b1a9d17d4cd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1167219-b6e4-4b2f-b34c-f1cdd6e2f237",
        "cursor": {
          "ref": "190c0bf3-6274-4f4e-9998-caae4fa9cec7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0ba6f3a3-6efe-4189-bda2-56c868b8ad10"
        },
        "item": {
          "id": "d1167219-b6e4-4b2f-b34c-f1cdd6e2f237",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "910a368b-0574-4acc-a025-3ecef18d0b30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea21e85-6013-4054-a64a-37ef88097b45",
        "cursor": {
          "ref": "f570bd65-2a2a-4544-9101-9715180d8f1f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a49e9693-7d40-474d-a381-d205a5c06e86"
        },
        "item": {
          "id": "bea21e85-6013-4054-a64a-37ef88097b45",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cdf4bbf0-8212-403e-be03-47f91f385046",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}