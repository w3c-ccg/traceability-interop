{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7a84dc84-1b2a-490c-a8b5-b5a675048ddf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "757f39d9-7c24-4ffd-ac71-0f544ab56319",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1521f85-4e5c-4293-9947-00e9b45d0983",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5acb49b-4cf3-4034-9bca-9f7224c881b1"
                }
              }
            ]
          },
          {
            "id": "a25e41a2-d8c2-4dcd-a25c-9dadfe815a9b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d430dcc-c782-476f-8164-3ea1401e8457",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e85b15e-0086-45e7-bbad-c050e206afb2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e24d082f-51c4-4224-800f-32b03dbf93e1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9bc4cc4d-7e8b-4bfc-a83c-7448a5b70a27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "430a6163-a1e6-4ae3-8bd9-4720ea13cba2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26dcc9a8-530d-4041-80e2-64d9951682ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa4ec502-bdb7-4328-848a-0bdd954bd4b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74115712-dbd6-4902-a773-0a9b6c83b41b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "411123d4-c140-4693-9532-6c3de2a2be6f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c393209c-f2ab-4721-8046-bca3be3b3ce2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07f58b90-c2d2-4107-932c-bf851dcf6ba4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c89d4c66-aca2-42bb-90a9-c520ccc44b99",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c2c4cafe-7df4-4c98-82ec-7c9a767d1b3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88935ed4-a86d-4c2f-9f89-3a747e9383d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18ce0b1e-3754-40dc-85bb-51619aec97d0"
            }
          }
        ]
      },
      {
        "id": "050d2a9e-4d29-4e16-afa8-f870972eaeb2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "201d81c2-0501-469d-962b-a9f7e2a61aeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4c4754a-2910-4d4f-98ab-761259effc3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd1c4c9f-3be1-4be1-8411-7efa44cbe88c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e69f73-dba1-45a4-aa8c-81d754f35c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa0ac47d-fbf6-48e5-a0e7-4b23374a975b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb671fc7-6fe3-4d36-972d-80e531989032",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81802f94-31f6-4bfd-91db-a4e35b29feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1925dd9-3645-466e-bb30-d579991df670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aec6f24-bfa9-4b9d-95d2-38ef3e57cd0e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4c72d9-8464-41b1-8229-108b570ee49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45a14825-2135-42fb-bbc5-9952775eb60c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16a92893-b550-4741-8f89-ef1ad6818864",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e216603f-b700-4e78-9bb0-8ba07aa47c92",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4baffd-9739-4f01-bbf0-6f296845115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdbec484-9780-4f6b-9406-0b6f6262dfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c2c25d-5883-4a16-823d-06cc7ebe7127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b4deee-f507-4a87-a1c9-0a7a983eb6b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e7ad6d1a-064c-4a3a-8406-dde07e4e4fad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db2e016a-076c-46c2-ac2f-086190ecb3c9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "678dc4fe-a3a3-4b79-96a8-7042ee203e6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4603c45d-29ff-4d11-82d7-49c5e671257f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88b757db-d3ce-4b01-bfa9-55bb00f38f76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "451ad03c-1224-48bb-9634-0cef3ada6c39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7ee2e83-e9c6-4a15-b5d4-982f43276e37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b7625a2-136e-4519-9433-2d9b82eb60fc"
            }
          }
        ]
      },
      {
        "id": "67baf636-8def-40d6-bcc5-2b8d71d5e7bd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d050702e-ec90-4bdb-bfa0-b2138d58a623",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a54de78-fc54-4345-8bd7-467138b19bd9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e5a3eea6-99e5-4de7-b972-39a8b0b8b6ef",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cfbe78-6862-4aeb-b2cb-9bc0c7fbccd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd36859b-3c81-499f-aecb-7afb37abde80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53032b4b-8016-4f04-bf23-f505182cdc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a1612c9-04df-4831-9398-84b0144e3e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c768bd6-6948-493d-9702-bf0a0d74a84e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4818365a-99b5-4d6d-94d1-6b183a507f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3d0aa7-e226-45ce-b817-cc556f3052bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a376cac-430c-4791-b8f3-cf67246b3547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a4b22b0-de28-4b18-8b82-c9ac4edbbb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25e691f-7f53-40be-8f9c-d1c56f36829b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501ec94c-d38f-426f-8ea3-0c197d2cd93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291f2885-4813-4481-9a1a-346e786b6acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbeb2ab-f378-499c-b888-7bef86dab14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b264de13-e14c-4cde-a504-4a91bee05aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a53aec-8bce-4d4e-9fe5-cd12b905cfcf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d66ba4-be45-481d-b5ad-096459e5a446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5f9b5e-52f1-4c84-82f2-3a1950eab9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eacd1a0-afb5-460a-82b1-69b42a2cccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fb63fee-8932-4f7b-8d2f-51689b0274fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1812b294-5874-433f-b492-a5ebfbe1df1d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6470804d-a9bd-4917-b380-d8cb46e06114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef25ec53-4f54-483c-82af-77a2c850e1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3ee9a2-dd90-40c5-900e-11aef1cc21a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cfd985f-c3c3-4f73-b060-3d8e7644fb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec65b940-db7f-480c-91cc-3ee69b83e61f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604f2633-d958-4931-a96e-2b23d6c651de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d531a03-fbde-42ca-ad6c-a8ad8f312e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71631e3-dfea-4463-b94e-bdb3779b33e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40800977-b76f-4c89-b680-30d1faba7f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb6c7a2-0dfc-422e-a0e8-c49be8051f32",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ccb59c-3763-4b88-9f5c-d6077acbb38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2be885-0184-4ac0-ad01-11a718d9c755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b5d8eb-cfa9-4349-9fee-409932eca5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44220dd0-662d-438a-9df6-993761fa01b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc864dd5-91da-45c8-a2fd-df3558bad17e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c37c31f-ebe3-4387-90c9-ae28838d0895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15ba9fc-d354-460a-b0c4-4cd3800980de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff657af-9546-43b2-ae1c-a1bae63a097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f6e1b04-1d8e-4ca2-9990-493b41bf2e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245451b4-3cc0-4e75-b337-55083876a596",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c984d5c-fb16-4aeb-a9cf-77fb7a781c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb5f58a-e12a-4005-82e3-a85933748544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51d5da9-5f7e-4dcd-9484-93eac7c3dcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "313b555e-0d15-4d49-8b1c-ae4258c5c215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81255782-d611-4309-b033-e390a9d973dd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccf21e8-146a-4bc1-8f1d-de76db3b1afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a66a7c-4d37-4b03-8211-0dac770c6174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05349f86-ed75-4c33-ae30-797d35ebdda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba4ec91a-fbdb-4133-966f-52c678cb5ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a5ef6d-a499-4d44-b915-a6f0406d6503",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af869e4f-bfc2-49ea-9f7c-531526c1cfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcaad56-e9c5-473c-9952-8248f6a40247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97f264f-5808-4ed2-bc41-0784544a9c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d251037a-0370-436e-a750-4914b9383a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecd9f61-0bca-4302-a045-7ed97f941868",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec6065c-e8c0-45b8-9a96-4ad1d5e48bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cceef6-7c10-4829-bf75-b90d3d67cef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca804e9-7c21-4565-9d49-2afc25f3859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "352b2523-d111-44af-ad34-2f64942f5d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9253fd-7741-4f10-9f18-a2011d57e16e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b21b34d-2647-4fc8-9ccd-7f80831ce7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f534876-dda2-44bc-821c-8ae25fba1242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f62054c-4e9a-41d3-a90b-3f3b9ae812ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd7405b-2cb5-40c3-9e74-869aeca8875f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6cfaa7-a6f5-4517-83bf-bdeca5eeff09",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd245ef-b681-4539-9012-8239dba15d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315d31d5-3a44-4e42-b2ec-a4376376d95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b3d992-b7b8-40d8-b314-e6e5588923af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "011642e4-7fc2-4f7c-a8ec-26d9da033eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2fdb7b-309d-46cb-bcd8-f0eb7b828351",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d861bc29-cb35-4ee6-898b-41b1c4450b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cb7e81-e635-4333-8a1e-56ce16ff1f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5267186e-4923-486f-92a3-efbe7b912609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e690318-f03d-43a0-aa4e-5c27d179eb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95ffa0a-710d-4519-b7df-9e0c8114b9cc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38753927-d59d-434e-bbb6-f302735b2e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab0d36c-9b27-4d8d-aa9a-330be8e380b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f7d7cd-4dd2-46dd-a24e-c97745877e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a404c0b1-adb0-4054-b759-43f2e6703fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849c7407-1bd3-4cf0-b847-85cef3566176",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cd9ec1-f998-4083-a7c3-3524996a65cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7448725-6581-4acd-a334-5c7534a6d7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8e7264-6c12-499c-981e-7b72f9b491c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fe23442-4a14-4cb0-b6ce-a23475c41d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdc1e61-0a1a-45e2-ba63-bc0b3ee23377",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727eee4d-121e-4cfd-b1f2-5f938a5507db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b4da4e-f973-4777-8c82-532acc8cf5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021f1a50-c2d5-4c7e-9294-f6f73441e2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da607ba-c7dc-4542-a647-403030c42f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0445213e-25eb-4b91-8af8-61191d08a732",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96574fd6-1a6f-4478-a429-0efef759b682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f595cdd4-057d-47e9-a493-38a7f45bf085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4205ae-6443-4979-847f-14190898abe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24369374-659f-4f17-b47d-2507619d4e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a9faed-83f6-4a7f-9a4d-314dcaa02bf7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21500b28-65cf-43db-83f0-3d68cba35922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e904195e-35a3-4cd8-8c63-be7cd713d029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c18a2c5-11a6-411e-ac14-101e3653a6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d254f90-2de6-4f89-b408-99719495eaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ff4626-18bf-4c6c-8c83-18127c083ecb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b7cc84-95d1-45c8-ae82-d4a0a8653e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82884e24-3820-4f4d-ae4e-2e997dedfb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d570bef-c9b5-43a5-a76d-fb16645469f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed8737a-adbb-4579-9a75-801d30cc1ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5455cd0d-bb09-4a6e-a89f-65fe09168d0c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f2d5c4-3a27-4712-95d1-536d24903bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d922be5e-73e1-4b9a-9e3d-023be59df8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3bf580-121e-4544-a215-4eede8ee1b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53006db8-8802-4a5a-8834-9d31959abc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f23bb7a-63f3-455a-bb34-8100c8157772",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0726d586-6b90-4d91-8536-37f071683d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7c28e6-84de-454b-a964-1bc214501aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08b1429-47d4-4897-b8cf-06e8113eb27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4909df25-e3c2-4314-9607-4ce80923ee18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278293a7-9982-40e8-9449-6828e2a76fe6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267e6008-525a-44a3-91ee-d4a9e6996758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b6050f-0302-4d82-baed-ecb5508c6032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc62d535-6cef-40a7-9fd8-cf2499aea2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "11bdba80-873b-4b15-ad4f-37110d2c63b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d73292-55f2-4c46-a8df-4ecf735e3c6d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa88397-001e-46eb-b9ad-cf112cad0d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc56bac6-eb96-4a00-92a5-bb0817877412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e66ba1-2faf-454e-894c-9391f462dbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20d3099-1570-4777-bd60-8d52d9e01638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad36ad1-7020-4e6a-b3bd-e1bf6ce2acfb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd9b0da-0cfb-49ae-bf77-f44b29f3e9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b9a6b7-5885-47d6-8b72-2d473b4c1e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2984fba9-8f70-424a-bdcb-1dde26a5535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e79d0a-e6ec-4cdd-a0da-3ccf7628d1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f383a277-687f-4b8e-bc85-aff941592bd8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3efe83-3a8d-4fa0-a890-a2ba2fa46e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b761835c-2e4c-44b8-9e23-88f7247a9c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a04e895-ea9f-4421-a824-9bb9ecb8e161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b230dd9-eb87-4f77-b8bf-f401b4cff6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec37277-4f87-43bc-bc11-1e6705e551e8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11467052-7b7b-4796-9d8d-d3a9c667cc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e305199-b9e4-4219-84d0-f48bda175894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30398545-5cbd-4469-a52a-a06b4f3e9c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7a69ef-9482-4fdc-a8e4-5cb6bede39d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72feb9bd-0656-48bf-8457-db41b11a61fc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5b849c-0003-48e0-904f-e6efb55052fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce1e79f-ab10-472a-8b32-4dbc0e28a5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4133129-19ff-4640-9c45-39c2ec0e2f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0837c0a0-ad96-4ea6-8bd4-0354f950a49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b6d923-cc12-437e-93a2-f4d2ec0294a3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6b3429-d193-4b80-9ade-78db3a6bdcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199bb45e-60c4-4838-a8ba-7b5de677876d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4b149d-b906-4fe0-a351-86fb3b9dbf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "970a9902-8701-4fe8-8e1d-3b29a3dc1fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf96ea8-5789-47d6-80e2-d0804eb0257a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b2de12-dd9c-4616-b418-5ad34b7f3361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5a8383-1dd9-477c-a795-d2bfe5a282c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24cdbef-eb90-492c-9c5a-637fa245f717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51478cd1-60f9-4a48-a213-cc9cbf53ca5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e195551-b648-4c41-b1ad-125d69d2ae12",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bed17ad-a68c-4a0d-ad87-eae80023bb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2443b398-9b3f-4d6a-bdc5-c04b022f2b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6434c17d-70b8-4b85-875a-f51921403da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "886c4b02-cbad-426e-9498-35456d747dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1c9f29-bd46-49d3-9979-3f9e07e945c9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e56b12d-c615-4af0-bece-ec44d35a5b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc533fe-e804-4d96-8289-a96c3d201c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efda1b09-337c-486e-8e1f-daa043f07aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7cad82-6176-4663-9024-2aae811a487c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde8a7c1-f912-49a6-a87f-5c8b03ca2738",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622b60bc-2a60-4eb7-92b5-5f39b56f1dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16b9f7c-055e-41ce-9e29-9a7adb912778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492b87ac-2607-4c2f-a9b9-fdfa5606e736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec23575-495f-41f7-bda6-4d80ab263eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc3eee7-0d5c-40af-b43c-a10fdbf552be",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679189a6-fb5b-4780-b0f7-b1f0f6a29f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290c39d7-1d8b-4bf9-b792-4945d9443947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57ad2df-4b92-4e84-b109-ee93a6e5bc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ff98e493-663e-4a85-bc26-13b77de30490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9e6fa3-2f5f-4f14-acd1-77bd900468aa",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf1396e-78c6-42c0-af03-c8147666f5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c28474b6-5898-4a95-b76b-6cd6ed91ebb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a509526-1465-4c8b-9cee-e72abd5adbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec502c48-ed25-4285-a027-50c39b8bd4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdce12bf-db24-4004-a753-fe0121616b26",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8c1674-19ba-4723-a48c-ffa4f3aa23f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca525e4b-a733-47c7-bc85-2e98de867cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7b4835-e19d-4bf9-a885-ec2128bad391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d70203f4-53c5-4215-afeb-9b542b478a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a643c79-4714-42f2-a951-95beb2ea12fe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d47f857-3eee-4046-b7d1-fdc887b55dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a56ddc7-7073-4d65-af1f-191069ec5491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8febff28-1984-44b5-9313-c40e27440a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "70ec625e-717f-4f34-a50a-ce79fe07ed2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5598d85-5c4a-4cd9-ac86-46d293a6afcf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095bc15f-713c-4b85-9fa4-13775d244f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d721833-be8c-4367-92f3-cff6cf97f87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bb519d-9026-4063-bd21-24c24d5ac52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd4ae99-005a-41e0-9d96-167c49c0d0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a4e041-6b41-42d4-bdc1-63ff9064c841",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d286874-9d1b-434d-a690-068676e3ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd74ade3-651c-4c40-ac4e-5332407447f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3401fd0-d79f-4f1b-951e-864aae676cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5acd54f0-154b-46a2-ad7a-dd6a4ab4bf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587bcf28-5532-4192-b047-4ca8d5c75a5b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd07f23f-e5b8-44e3-9fb5-69858f35b753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8d4c3c-e70f-4745-b83d-112ff6b50a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf61ab2-74de-4560-b1a8-0e4d6bf317e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd852052-ea3f-475f-b6a4-dc445d36d610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c45c7c-c837-4fd0-a051-8b4f8230ba36",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6718e87-454e-41ec-a515-d0604f086b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b6092d-0f5b-4d4a-9b30-e8aff15c228d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99729c35-63f8-492e-a853-0baf1d1affdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "55ebddb7-e90f-4cdc-b74d-980ea20fb5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd70a38d-246c-4357-b62a-86bd176119d1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a73a35-e076-413a-8948-32fc9ed5b61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9533fc-0a95-4d44-a8f8-6103295fbd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682b9a44-477a-4403-b0bc-72d94032d29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49027282-a68c-4b50-9e68-3a964e5c167e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce436d6c-e52e-4ea4-a6de-7a8c007c8106",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc591f75-9878-48ba-9dff-5ce234544ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec3eff9-e8f8-43c6-bba7-98455bb843a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2463bd0a-ebc3-47e9-9725-d8161c52be45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa7a1c1-066e-4be1-9992-85cb9c761254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dca16b2-f97b-43eb-8f86-47a7a684406e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bbdf96-7984-4e13-95d3-34b8630e9032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83deb34c-2387-4470-97ae-88e67905097d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682a3ede-6000-4613-b639-9365f7c4d1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "669cd7ba-f557-4f0a-8e87-e91fc2fcfee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0bebe2-6279-486c-87ad-89be03bb31d2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd27a24-d637-4608-a93f-56aaaeaad3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d1187a-3b2d-433c-9f89-d5e936ccc16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b21a67-cf10-488e-b898-baab045eee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3550a2a3-f0c1-45e9-8253-e3c0d3a21396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e3db9d-9972-46b3-a603-c47b8a0cb1cb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483cae34-acfc-4ade-82b8-6818f2ecf055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81bd5ba-83c6-4c9e-a855-2fb2a657cc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48a5dc3-ac20-41ac-9e95-7aeb01b6ce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8b1631-2d80-407c-adf3-e8326a410590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d797c233-d716-4ac6-a511-63e54a5dad10",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8522f7a-6118-4db1-bf1f-33c620ef3d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9522026-f610-42c6-bf31-dfb0cd6343ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b002d1-5817-4be7-a8e7-e761b1ac370d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c677e9-2362-49ca-886b-a828bd759f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312eabd2-c3dc-47af-9ff9-a3564dc972b6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e3bb89-f244-4e20-b6e3-a6ce9b65d9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06758aaf-25d2-4afd-aac4-ace82858a74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b003ff0-484e-47c9-9db6-07f86ad1214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9062a5-e4eb-4af3-8c7b-d030cd69356b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab764b20-b9fd-4d85-8824-b6ceb648b68b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6369c395-1b00-4d68-b5d3-1cabc992c254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ad5902-11d0-4d68-9c6f-b310e20bc05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e5c9e3-6be2-4399-bc33-a3ab56a517cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63071692-01a7-4f0a-ae58-98f55530c3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de99457c-c917-430a-8bd4-8ddefdf5ed1e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809da8ae-8f4b-4559-a051-70a86f0e7023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61e81b3-9e3b-4643-ae43-189724fb6676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec63f0d8-a07e-479d-995b-c5f65eaf0b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b92de64-32f1-4e1e-afad-dc4e011e3ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35abe0d5-1498-4997-872d-2bb3f3f96e58",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac730973-6a57-4b1e-8cc8-3ce54c9a41b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61839d74-46d9-4081-99d2-c0d268927556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a49886-7f41-4130-9898-de5936895ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abed4d4e-15dc-4de9-9af0-f7b76392e6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0fcdac-d07d-40d1-8e14-944b8d84080b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f981893-30e2-4f74-adf3-4e8db64ab930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b7ab72-d220-40e3-8e0a-bbe443fb9d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312948fb-56a8-4e45-bef4-2c96b7d0158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1df02e-84e2-41c9-aabc-ef7f3b2273dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738f136a-04f3-4bcb-9399-745e1a30f1f9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb11620-8d80-49b1-b7f3-7c9bc579c829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c4f5f0-cd9b-4222-b62d-462f910f0601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76318f3-3f4a-423f-9100-bdb530051ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6678ba6b-c529-4878-91dc-4aaafc7e0f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180ad86b-3045-47ae-bac0-67b142169ada",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813aac76-2de1-4ea1-9fe2-646ed8decb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2eb6a96-75dd-4e55-a42e-6e54f07c2531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79772051-fcf6-456f-a199-fc22fb31d417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d698a0b-95a1-420e-8359-d464f1d05d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b9c9df-5d7c-459d-8717-b31842a90796",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3deb7ed-f62f-4813-a581-1cd50c867c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d58e33-ed80-498d-9575-8bf61be443fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74230023-b905-41a4-a923-11514f4dd106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "84a75fd3-f0da-4142-88a5-28dd1457dbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b321bc-4fdd-4748-8ca3-f35dcae24527",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8d7d43-a596-41ea-9e8e-3d55f3196ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fabe387-5d7c-4d6a-93bc-96cbb3a7bcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5b65d7-f244-4135-876f-cd3b46d489ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb79075-a270-4c77-9226-cabedb156a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378610a1-23de-4639-9c33-678a518b624b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230e3a27-6711-418d-86de-d78365800d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a13a050-e3f0-4752-9391-3926d740edc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36465cd-6d64-4ea9-ba5f-258ed170fe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "182e9107-53c7-4170-81be-dcdd25e62bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb07d370-c576-4002-ab15-43eb75be2e5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f77e56-90cb-4595-a39f-c0d647e1c671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58238eeb-cbff-4052-9e4c-8d4858ceb388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ca9d57-7a44-4146-bbfd-48cafe14489c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12571e09-a6cb-4d89-9dba-b6fd18e83356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f6fdc3-3f45-40e8-84e5-9395d96f2def",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beb293d-777a-478b-863a-644d69af1fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d3bb77-8e45-4b09-9bf4-7245345adf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d90ea3d-e11f-4513-813e-1501b6c47b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a632c44-000a-41fe-a1a6-191935fd486d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b01c58f-d880-436a-aadf-ec36abf64d03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a04bd09-55da-448d-aedf-23a788813c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e3669e-f8b6-4679-afc7-d1fd5bcd2fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4c1182-ee78-49b8-816c-e19b47bd968a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d8f4fa-37c9-466f-9d0a-0fe04c33f83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562cd43d-e817-407f-a72a-14fd88f5c003",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17cbf31-e920-4d88-84a2-55368e7a9417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6bdb9e-63ae-4aed-98be-672b7c568fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c152cd6-646a-49ce-94f0-2ba926945837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "785bd36c-b43c-432d-8ef7-7c820d56b54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b7af47-c496-41e5-a054-af3bdb69d51e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfbfc34-54f1-4595-b9f1-02145d36fe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999fa62c-0a5d-465b-a92f-8e21cbbc522e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59faccbe-d541-43e8-ad84-830952be0ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae5f503-a38b-4b54-bbab-c84f8e76071b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0687a3e-caf0-4cc2-8ccd-a18cea117a60",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df3729b-9bd7-45de-b1df-563d35ec80eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7f6c9e-3ce0-4e3c-9f95-48d9369ccf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2bdc4c-2743-4562-a8e4-49308cb046bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5635406e-e32f-4c9a-af9d-50063d14bc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac89cc0-6f9e-4234-8eec-f87f3d956678",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba70e64a-bd3a-4ac5-b99e-03cdec5c19db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cb2861-7397-4240-bb2e-3ba4cd770b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1062672-028f-43ec-b1ae-13befb9a1303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6814d4f6-2e15-4000-ae77-69945a6a7128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1dc547-0590-4810-917d-aa1bc11e6206",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a5d17b-dc51-4be0-9837-df3fc07b4b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bf41a2-0e45-4286-b19f-05fcb6d8d92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42fa145-d136-43e2-9632-d56c85331af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "770ed356-a134-476c-8ae0-cc14b92b887e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708551af-0a42-4740-b212-7c73711d4e92",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291931ba-81c7-4780-849f-0fac6f89e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e8ac04-19df-477c-86e0-7baa58b570a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b454fe3-5eba-4e96-b686-a9e8e0811191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55fb0e30-e0c3-4d81-bea9-793fd59d3500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90266d0-7f23-452b-93ab-019b437f0b94",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb225ab-68dc-4038-a93d-1b51f337a841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106a8bd6-c333-4915-bf80-4d505b122e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2691be8c-c16d-4643-93c7-dbb4aa765b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2824fb6c-2d5b-4278-810b-a103dbaaf837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13952c63-060a-4bb9-b7e7-b687454d5672",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dd99bf-dd6b-4a2b-9de2-989bca4d3a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d5a766-2112-41ab-81cc-0b0ce08d284b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c433be6-a1d2-4b98-b43b-7f072e5d2106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ae097d-cea7-43a4-b6e9-b3e02c43b199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4b45e7-62d3-4161-812a-3b1a31365c61",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62523698-4162-48cf-9ede-ac4f1f90dc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a764ab5-a0df-47b1-9282-26d1d41b4089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc4e67f-feae-4349-b04c-7dadef7d6e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d5f95b-e77d-4836-9403-5468f9817a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d88012b-3bd3-4a17-be86-e46101bb4b09",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28063008-f5a4-4c36-bb1a-59cfd5addf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bcb2ab-9563-4aeb-be8c-2b0c8e4392be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c5dd89-80e5-4ae4-be52-4bdace960c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8522b193-680c-4bea-ab68-34515f604fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdd6a8d-88a2-4284-a2b2-9388b0c0e6b7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e5f479-96ab-498b-b3db-6e664e17069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15dbd7f-2dea-4428-a06f-c8dc29512bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91db03e-9f60-4d41-8dbb-17f91fb9abaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82dd122-06d4-448a-99ae-7d90717e7e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b0e95e-1bf4-4aa4-9b20-ae891b917a2e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa69a601-3a4e-4ab2-be8b-c83edd58113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b866a16-6347-4902-9665-81d2dcc5081b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7cb069-a485-48f8-b7f2-e139212d9c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f58641a-13c0-4ea2-93a3-131c574bf767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a959e9b8-f271-4923-a4fc-d397059cce46",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17eee51-01fd-46be-98e9-4de9fc55aafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdbb47d-125a-45cb-bbec-a4f74176eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6950e77-cf15-4306-acd8-0787f7e0dde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3932a1b7-9551-4535-a66e-3eddc0f42138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc14edbe-58d0-47d5-872c-4488ff8227e6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5249b4-c3a9-43ef-9dc3-19914cb1691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1941e9ad-5ad3-4bba-b091-95724c582f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47870ec-28c7-4f46-887f-479c8ea3742c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "051b6254-edcf-43f8-8ae4-2f725869796a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f19384a-a7e9-4925-b703-bcfd53939694",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed051c-4a17-413b-b90a-c566efd19b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853bc9fc-f564-494c-b40e-cb4696b5ca63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd542be-ae91-495f-8e3e-9c6a813374d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe12cb32-fad8-412e-b41e-f2f0a35a68f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76403a42-308d-4d6d-b2bc-ad1f65c98725",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa80771-2fa0-4d2a-8b8c-03a1b18fdce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9cb0b5-e30f-4c45-a858-962865f03985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d144aa29-e501-40b0-afe1-ddfc6db97c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37c30eb-407d-4acc-8df2-07af010127dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c1f1d0-7846-4638-a0fc-b77d171a34f0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1496b51-65ff-4d9c-be65-291c0b443761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc4986f-2e66-4e7a-9ee9-c4d0d28ba237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444a1f07-8152-4944-9a4d-4f2ea2d84f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "086d2758-3d0d-4f06-a4de-49eb2a9a9eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891a73b8-66cb-46f2-909f-e4f675960820",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe23a2d4-c93c-42b7-8ace-8a88574b2428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd4a26e-85fd-4203-9b4a-5253fdd8073c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c26c42-1af3-4012-a73c-a45353446c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb60789-14e0-4df8-a6cd-8808670165c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eba947-fed0-4af1-88c3-aff47bb42c87",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea1211c-b642-4713-9107-fd86fe171b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b063499-d106-4af2-8ccf-e73fd4f1e1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6d7efe-1b31-455f-8f16-2678dbd4a573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "548e60a9-b009-4ca0-aad2-dbc94ae408fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb39416-6679-4973-be5c-3d315ef66613",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fdeb6d-35dd-497d-a24f-d36d66f458e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecab5571-0643-430f-b564-0ccae3e25035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b42f085-0e92-43df-8595-06de9aa1ac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f830fd8f-8c8f-4fb0-8428-e40620701ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b16fe6e-6335-4c21-8495-973ebd226d6b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9ad9da-f3cb-4046-b563-efa6da1c065e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf72f775-bde9-42e5-b999-e189d0aaeb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03c2826-c641-4a31-9942-baf953c7fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7c3851-777f-42e8-9c9d-b634587dcf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad54b809-abb0-4138-81ba-512cf179cd25",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990aff82-e910-4219-939f-5f873285bea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9490fda-1b42-470c-ba59-85f70cb3b698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f98841-5f2c-4754-a94c-bd2ca97e5d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00a4f0b-1463-41ca-8e89-385c51883488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0fcf92-5629-41ea-8de4-b1a282c42107",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af24936-05d4-4509-bca2-3b3f01da8901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98573b24-18cf-4a19-a56d-b3317323ff70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c92033-0f67-4a00-be83-9dec63ffe3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7caba413-9177-4c48-92d6-697cc2536606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91add4e6-8dab-41c2-9fdc-cea028ec8b5a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7162b319-d4d7-473d-8799-83283f92eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c18980c-3ca0-4703-a5dd-e735f3bce71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d13652-cf19-47df-85b0-189742a55bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbed664-b64a-459d-bd0c-d0526e7429d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0352c79-b002-4755-8bb5-475eccd6ad28",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba5f4b2-b21b-4b3a-bfab-9bbbe6adbab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d0837c-0965-48f9-8405-1ef1b08d9812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed672444-881d-42d6-ba6a-146e09dc439d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37feb514-b651-4bdc-aff5-9d7f0983ed0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3ecc21-2f71-4d13-822e-0b50418d4698",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e119fb6-5bbf-40ba-b553-75af9e7dc0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d03641-f4e1-4ed1-b14d-d5d2a1b92430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f819445-f266-4572-867f-f446e37b2d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "573a5e6a-9951-4cee-aa3d-735454a709bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dd7ba4-c1fc-41a1-ac7a-5b30517dd5ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a31b52-eab5-47a6-8aee-570d514864ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c114545d-9c13-401f-8044-b2ea550f14c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5a8da3-0247-406f-8aa1-e3a5f5e4c5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ed7b31-3fdc-4fa0-b4e0-724a2d5ceda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05771569-07a2-46c0-ac44-0e7bd4d2a193",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa12226a-3065-4121-b106-339e242f79be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ababc19f-3a98-4abb-9bf4-6b45111e471a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b4d693-2185-48bf-8c42-5813e8aff799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21311ca3-c7ff-4147-884f-1965e6ac8dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a564da-6a79-4b1f-9787-9b9d0ef0ea7d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1199fee3-803a-4014-bce7-75085abf0410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc018c3a-a2c6-4dd0-991a-708309bc1c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27b821b-eebc-4741-8a22-bb56b450790d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15db7ba5-e755-4941-a3f4-6adc5e09219e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0764df58-4922-4dcd-8569-12dd7a12b486",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc68d20-1fe7-45ce-bf8a-5202ece99fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c8443a-a0df-4351-b978-4a53f42bcf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbba486-18f7-4761-8bc5-f443bbc79fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec23e3e3-0532-47a0-b4db-661cd0b99f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c582cfcb-ca16-4e5e-8cad-d65ac174a9f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eb70c2-c259-4ab8-9fcd-babe1bd11ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2892e88b-9c86-4faf-a617-3e026479b11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2329b783-5798-4026-96ba-9073025f8115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "971632bd-aad3-44f4-9f2c-31160f242590"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a9f28e6-623f-4c9c-8cc8-012e6dcf30c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5189d12e-7c15-4be8-a568-391b47f39b28",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9d184c-ffd2-481e-8397-ff138bdf0e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21e87ee1-6086-463e-9627-49818b98aaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b346c65-f23d-4363-ae76-c272f837bef7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d41c0d32-ca83-40f1-b162-a1a12c0c08ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e02e98c8-a75b-4155-8226-44af4bd55223",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "619d0b85-ebdc-4941-86f9-f846f574ff28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0da7e6e3-0ac4-402d-aa24-db91d50c9a5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4422a14d-4d74-4629-a2c2-82364476e04a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f42c643-8a01-43fa-8345-c573e0035327",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f802b4f-bee5-42ee-a713-a37231b362ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5e06b07-70a4-4a9d-bcbe-eb8546a4a95e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8282f0cd-7477-4dd7-8818-4461eb200fa6"
                }
              }
            ]
          },
          {
            "id": "cfb54a34-ce24-44c7-8a84-3c7b7649c1b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93aa8f6f-1023-45d4-aca9-eb19a3c7be92",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1fef3ea-af72-4a31-a332-2d1abbaa42b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d3860a2-9821-42d0-b716-cc3874184208"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ad4cca4-86d3-422a-8a96-91dcffc35fe1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7be28231-10d8-495c-83eb-c7bf9ded5f53"
                    }
                  }
                ]
              },
              {
                "id": "3dbb6110-7c37-4c03-afea-8fe207a226c5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c04e67a-a365-423a-a401-7755126ed73d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bb77318-8bb1-4f00-b0f6-6e1e3f127644"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b57844b1-696c-43f8-8be1-4a0813c8dbd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dedcdf11-2615-472a-8a77-0250ded696f5"
                    }
                  }
                ]
              },
              {
                "id": "566f9f5a-ed90-45b9-9972-0c81fb1dd8e3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78dda766-ef8d-492a-ac2e-3b62ae7396b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2123a9f-c8b3-4732-bc6c-f2474caf3820"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71d8f326-543b-4f18-aa7f-c62b661848b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc642c60-92c2-466d-8d32-fcb977588e0a"
                    }
                  }
                ]
              },
              {
                "id": "dbfbf2e3-6cb7-4b59-ad67-075163ee0574",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e47122e-ba7b-4f58-bea3-918d8da7b2c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4eeb5942-7783-423b-9a02-d318c8a88676"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cecd2dd-d657-4a24-b155-276fc0382c01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7647ee96-11b5-453e-b54d-9f2341de554c"
                    }
                  }
                ]
              },
              {
                "id": "49cc33f4-8579-4319-919c-c36ee0a8ec79",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0beefa69-8074-4e94-91c5-d865cd19bdb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c7e1d6c-a3ba-408f-b569-2483fb4ea734"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4490355-8b0a-453f-a2c1-ddb33623d53b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e79fe820-ba34-4847-9f72-58715eff179c"
                    }
                  }
                ]
              },
              {
                "id": "e5ff5149-e9e2-4213-b4fe-49e70574522b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24417391-7430-4f67-b04a-f1ca6013c1e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c09f5d5-666a-4b8e-9c21-5565db709fa1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b53217b-ee7c-4caa-b312-898fb720c232",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb2dfd78-2ace-4db4-9d8e-c8da536d3d1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "750818a5-a8a8-4e81-b153-85e8f5fa0a09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f849a81-e355-474a-8cba-de84daddd296"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3282ffe-55da-476b-8c3c-2c4f57433aaa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20a51be8-42f7-4103-808d-05d817461a67"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ae86d6b-ae5c-46a0-9dc7-86191be2488d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b1f29762-934e-45f7-bf1d-91143fe891dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f069835-1cbb-49a7-aaf8-7d5da769e719",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5796334f-0e8e-4e6c-af04-46db28cb27d2"
            }
          }
        ]
      },
      {
        "id": "7166c57b-62b2-4bdd-af27-867b8effa8c4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2dffcb93-3304-4c47-ab28-6eeea97e63c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef27d897-70ab-459f-a33f-832406e979a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98785226-d576-4d5d-b2c8-974ee7e76e2e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320a64d4-9de3-440c-9909-f9cf9d92d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ca8600-e48e-473c-b632-c21cb4d940e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d033dd2d-aa0f-4189-8eed-b6fbbfe2f0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4fc067-ecbb-40be-84e1-6f4725a1b328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca48a0e-1d09-41e7-bee4-21211359b43a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26e8318-d946-4fa4-8cc6-b8d918591ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341fc571-b9b7-4f58-8702-53f4874f2f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161f1d26-7f2e-4f2f-a3ae-7b1fa9e2b3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79886bd2-9b8c-49bb-b70e-d02661b92e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005964c9-3ead-4baf-9e6c-9a805be7c6a1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878d36e0-0a7c-43bd-bc01-8f7f0094630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f2f480-48fd-4f5d-81db-194e6337f93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36a0f35-9781-49ba-b563-44c29171ff92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e172cfdd-29b2-4c8d-9e2f-8837f234c119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2609caab-c2d2-4923-a2fa-d10bdca643f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27dc621-51e3-419a-bca7-4c392402a5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c85c23-ef10-4083-a5d7-66b03adec757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0098649-c9e2-4b80-b128-679038d9bd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f798e049-ba3d-4f03-9f2a-22b1a48729a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f719a7-bd83-4a84-b1fb-faab2c78fa7a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec9820b-0e64-45ff-b050-fd65433fbbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8749e2-b4f1-433e-b838-0c13ed395265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255a8379-93f8-4563-a86e-bafd0dfc1b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b300f5f1-10f4-4ec2-bae7-f57065b2b834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f3e95b-cd38-4030-a8eb-ed13476dca7f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6552f26-8bfd-4d8c-8ea1-c335b41d979c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e802e5-804f-4a0b-a957-b6a8bfb06d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3368d666-bd75-4348-b50f-252a37332e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f52784-129f-41ee-9ea1-1bb29851e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52999748-e865-49ba-b87f-a580859d9773",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787ac381-1fce-45b9-b802-b66850921b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578c69fd-f7e3-4201-a5dc-d8d0239502a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f79d991-4c30-4754-9c12-78598ea9c8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "292682b1-5a21-4218-b3ec-d9b30245ac7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f134bc-54bf-4048-81fc-341b0b885f26",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc8f39d-f316-4189-89e2-aac505bcfc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b535838-e4f3-4a9a-9b4e-91b63d31c504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ff046d-49be-4239-998e-344795c50b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3350458-d6ee-4bb5-856e-43b226045b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4175ca46-8967-4d20-b563-8dda1f09b20f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce863fe2-86ca-4de4-921e-7572908b8759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728e9cb1-bec8-4e95-9194-d35ea839b5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a2beae-5b89-4163-bb7e-98be2e695a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0515692b-b6a0-4553-baf9-6e5087fa5ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfce64b-8432-45e1-8580-b03cd29876c7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98ae314-526f-472b-a16c-fb8641ab8bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f3e953-565d-49b3-9dcb-a41fe313e2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6971500-6155-454d-8954-8df2fa4845d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2592c089-677f-4155-9da4-6987bc40f617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2d04c0-d8d0-47a6-a4d3-bc60244b61fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae1022b-552c-40b0-a15c-fcba58a778bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dd3c32-d9ab-4e95-b87c-4c38385fb71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a985f7d-4f1e-4ea3-9d42-a940478886b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aec8635c-40bc-498a-91da-18cf07ae5bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb4b7e4-17bf-49b6-8142-e2cf660dcf5b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f2c54d-e98f-4427-b0b8-2458e5aca61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325f7759-a25c-42b0-9802-80bab5afe691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24915f3-1d89-498b-8679-375033cdbde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c4edf2-0d14-4b77-bd72-9362fe62fe96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58cc243-de8c-492f-8a1f-af79f9808298",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c761ed-214c-41b2-af94-c4dca4318dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10f8f05-6086-48b5-9f0a-dd08e7a1594a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94657ae5-3f0a-4fb2-8299-86781bac8ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ae7f06-2378-4b5e-a5a6-073edb1b96ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5d1197-9222-4a85-af76-8de9ec99d783",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c239b71-8c32-4604-b88c-ab3e4185b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782889f8-4079-41aa-8a61-1fd50630c1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb87def6-f07a-4c19-a723-6c82e2611e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "99dfc1eb-aea7-4b0f-a216-d008751ec732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94aa9aa4-9bd7-4b6e-9caa-e8e8ea12c52e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a718d6f5-83eb-49c4-91a7-3f77afb9f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4a5cd8-a4b1-41ee-9a13-9f0eeb114605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9118b82b-0397-422b-bfc6-233b2fd54fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee8c0d7-a813-471c-a888-4f0ea401ddc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45f4c40-ce67-44a7-b994-85d98d07fc13",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7321e3-f1f2-40e1-86d6-a055fca082d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b887e5-71fe-4330-87f6-9cad7b794055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607d9f74-d018-4ed5-9a52-e86200ae3a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ac9f25-7d32-46e6-83f9-770637b14a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89db779-74ce-4c7c-9294-d9a396c4acf6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecc2321-5993-490c-ad4d-3adb201d8bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad1b2cb-e98e-44ba-9c18-56e563f4d9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b857b051-de00-44df-8a24-af07a3fdea2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae780f2-ef96-49a9-ae71-563ac2ecc9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4061823f-b9cb-4755-9b96-b64a816cb7b0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78320299-5b5a-41ab-b809-ccc8bfd949d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5f0a8f-ad00-4125-bdd7-a32578943280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ab50ae-4468-4730-8d9c-50fa5e1d713f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2335df-d37b-4bea-a074-bbfdbf341c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcce9f77-f1ae-4f65-8418-cd3cd16efc12",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fce071-0c6e-49af-aacc-968ab12a4e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e258c4ab-4441-45cf-a741-683ebf3ac4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25421658-98d6-4a78-b053-842352baa6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "906cf65d-2b1d-4410-80fb-e5f74eaca3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8b1322-c20a-4453-b423-d618b23f1174",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d34299-2765-4ef6-b2a7-06f2202f6b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8ed590-fdd6-4bea-82f1-6ca9d6cef8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4666b9ca-548d-4123-a4b7-c41cfc604d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68a18bd-3db3-40ce-9146-13f16eeae18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67151ee3-5195-4b5b-8d7a-7189e6bb6749",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405d161e-e28e-41ef-a595-e5c2d199508b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc1e1df-8ffa-4adc-9e0a-f0f0b913b3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74b0e65-768c-4bec-bf5e-95b1f1fae8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71f9eee-e170-4304-914a-99fd86b86435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fa9226-d0cd-41af-8ebd-fae0a726c742",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c189b55-fe65-42a8-89d8-36cf40347a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2890dca4-21c6-45f7-9f05-fbcb8dad7d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5fd449-ddb0-4394-8df9-5c7cd898e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec16c0d4-9d15-4ff8-bc1c-f008384160f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9502ace2-8fa0-4155-b59a-2b9dcaa01fb7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb06f2e9-79e9-4f99-a013-600d3e9166a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b389bce-4d12-498b-bb87-07ce72a18963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a929a9c-a9f2-4e9f-8013-7f084b95fa6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d420ab10-a712-4e5f-95a9-a86ec47f7d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e64230-8a99-4622-8177-e18c5f32a7e2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cd207d-b4d0-418f-85b9-91fb98e3519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a1e39c-1f54-4d68-a360-7e4e4e7f3b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f9813f-111a-4e0c-a1a4-7b542ceb1add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6e1da5-9ee6-44c3-814d-e9e59719c40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db597431-ea51-4d98-b3f5-ec490e6ca5ff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856f1914-fa74-46b0-954d-9d13e36dd423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91337892-e8c2-47fd-a19d-8c01967cff75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3264c1d1-a45e-46ab-a9e2-79d9901e8e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e1f314-80fb-456f-bd61-2c0ec15b7795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3af7ba-d83b-4045-859d-3a9d3672daee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa762b8a-1a08-4392-9988-3e18102845a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca32f8c-c272-4e35-b9e5-e42294e48876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5478aa-267a-457d-bd4b-60fca7c5206c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7556ceae-0afc-4da5-b564-b18298aad29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd47d92-353c-46da-b5b6-452074e0530a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1187e398-c33e-431f-81ff-d9eecbe4440a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c8af30-299a-4846-9a02-787ecf93c549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc7fc31-62ae-4604-8d29-b1b7cc002d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a304ee1c-ec1d-49d1-9697-e317e91d3d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d615ed2-36b1-4011-8bc8-2f859828ae6a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea252bb-5c5f-4a10-9263-68fd337e34e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723b5525-449e-4aa8-af79-e0bf93098acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129c5007-7a30-42d5-b37d-767c8145e557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4f1c38-1204-4183-9906-c5c616ee65c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a1775f-8651-476d-a2ee-53215bbaa9c5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d4387a-c64d-4e39-90b9-cf8f466fe701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be83844-da1a-493a-a75f-ad47b2644672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78eee57-695e-4104-be2e-aa6bd4caa9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8ab6f9-f229-44c2-aa44-491538afc0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7d4a8f-3580-4218-bec4-5f9b238fc793",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f61bcb-73fc-4df4-9a19-828a0b022034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4750a25f-e20b-48bb-b82d-2ebbcd00a8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ab029b-2544-4194-b439-d35bc1261c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5606810a-6408-475c-85e9-bf148d37142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163f99cf-b26a-466e-83d1-ebbc55aba631",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bca027f-f82f-449a-ba39-c8d34c5a45b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc0eb49-63ab-47ab-beed-d7830be003c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2159cc7-604b-49e0-8659-516b1cef5f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1baf4d-faa1-41b2-83fe-769a5d68d0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d768e8-2104-4955-a30e-160d6c561b23",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ead822c-1347-4c79-ab44-85344cd2a062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea49cbc-583a-45da-bf04-2433d67e7a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a029747e-1e96-4b83-9390-6d88d0dd4c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99d7d636-1658-4878-ae45-e89a3287b042"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9db46fe3-6de7-41bd-bd5d-cc4dc2efb871",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6630c882-444f-4311-8591-f0b3f1440486",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136de11b-972f-4e45-8efe-14fa0c8626ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d4484ab9-13c6-4843-b16b-7a4707574819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee180a69-63e3-4a4a-8cfd-9089e81812f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b38ec81d-d0b0-4de8-8f3d-8a1b9856db6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c61c196-a311-4bcb-b80a-d5c7adabb6e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97bf2857-be46-42db-bf2c-bb09a80decf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d41ee74e-5aaa-4e23-a372-8dec41a57b3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "199264a4-84d2-46ad-b193-92cc2f24b8e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b4aeaa4-c98c-499d-a4d2-cb147f76956c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d200912-74fc-4b05-b42d-34db47d0dcea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1df212bb-b52f-4263-b6f7-024b36f1c147",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2878be8e-7720-4810-9866-4e1b84c7cff9"
            }
          }
        ]
      },
      {
        "id": "c2918d92-f286-48f6-91ec-ed839d39390a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "182ef435-b7a4-447b-9a69-68a8f3692044",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f798800-45bd-4f11-a269-83ad1c0a907c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "695aa055-c834-4127-b720-7a4a13f8a568",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44ddcd2-5ecd-4759-aa23-585ec1caa6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22bcc2eb-27d3-4a03-a743-bd3d43883b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d351a707-3521-42bb-8eb1-7df55f755fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02acef5-a27c-447a-be77-f2f9be9f62b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21706f0f-65de-489f-9a12-a6a06e9eb17d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6a6074-d6ce-427a-8d3e-90cd439acd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3774fd1-2805-4380-9293-2f3815f1a358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be151b0d-5036-4046-a983-4266e8614dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64ca938-6a7a-4c9c-93bf-773492c1bd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7de69c-afa4-4446-a629-2367b903f51a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b51562-4890-425a-955e-7366b7ebc6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dad90d-8903-4c44-b775-5903d2e5ed72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942f8f10-ea55-4541-95cc-e39260ad770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4c37b4-d18b-40d3-9327-23f5c4aee0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dc902b-6bc3-4e0a-975d-50f428debe99",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e773d93c-dbae-4d38-87d8-80e2c55eccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ad97f1-4dd7-4f71-bec0-0168bc57f973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee05ebad-3bdc-48a7-a4bd-48b3b1570d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "987087f8-21fa-4712-862a-965654148681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c8e11b-84e3-4cbc-8f6e-59d33b4809fb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360ec1c6-ba79-41bc-9de7-b544859c81df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c647aaf-2dd8-4609-ac33-4a3b49116bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8e6f7e-db09-4b5e-9bc0-8d41acbaea52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c255cd18-d1ff-4be9-8f63-cf16dbc5dec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a98dc85-12fb-4f3a-9f98-56f4e6db6099",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c06e44-c8c5-4915-984e-b4ae6c5e4dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a9e5ad-f4d1-4ad3-81dd-fdec6c9e8631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ef50ed-52a1-4702-8e23-2bfa9524d4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0103efa8-aef3-4b96-ab19-42479569bcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617c1eee-01fe-465d-a94b-1ac41cc9bfba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507544c4-8a07-4813-96d6-ca72af683d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74771f1-b446-485d-a64e-5d6b6dc683e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df751f2-692e-4507-9b93-c88455dd7796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83c34b9-526d-4d4a-b96d-612c6c57c355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999595d1-3063-4bee-8cdf-14e7f99b9ad2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dba048-ae1c-4c44-b214-c93165e663b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db88c21-8edb-4301-b100-0d7592b95059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310980a1-8a78-4250-9bcd-04edba878de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a920586-b17e-46c0-93a8-50de61ba46c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dc60ea-f937-46d0-9174-5b96efc55071",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7443233f-2428-4f5c-9b69-ec8a6f2687b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec72be3d-57b2-4573-9021-c788df1f1a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4ac86a-ef88-461b-b2fc-c1556a4da6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "782afeb9-27f3-4e31-816e-d64b2972947e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43f946e-5429-4199-bc50-54b60a2b7863",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0af0a95-878f-4b75-9a54-a59851dc88f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9985f184-a421-4e29-a115-ddaeb27d0d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85896ab-c57d-4838-81d1-b9c6343c4bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89953a9e-5c12-4901-9761-2f327a3224e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7e0ea4-5fd2-4130-8695-10408a01e833",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21931cea-821b-433a-a906-9dfbde7b1434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5e94cc-4ac5-4786-8185-420de3001945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46fbf7d-8fcc-42c5-b799-96e6501b8f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "28688ca2-9304-47d4-b9f1-ddcc070275bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0ef196-58fb-40e9-8a19-8c232a9776de",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91e9460-1b11-4c27-970f-4148f578d285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08553769-176b-4c3b-a8e9-58d3b5e34d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44bcc3d-bd6f-416f-8a50-a2923fce6528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53775551-9626-4c69-b9f3-179b405e8486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e64d5bd-8b37-401d-80bd-24dcd496f043",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e79d53-fa59-436d-8886-5fbe2308220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2817907-e13c-426b-8fab-ebad9dabefbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bac3e6-be94-4766-bbc8-f62f95532922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0379e7-a598-4cd0-9841-048218743608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e2a56e-5342-49e5-a38d-6534c7c22a27",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6412764-e7d5-473a-9b7c-ac762a967277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baefd8c7-3cb8-454a-b811-6a33020cadf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2765678-11d4-4e5f-b66e-523e9a7f885e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b04854-6d2b-49a4-b0bf-822cc61d3810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fe4fe1-cc44-4dc8-8a93-53bb5d277621",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd7aff2-e140-43c7-b8f0-9da5721f5cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5665f45-08ba-4157-a6e7-d2462f413029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30210b46-6f5e-40a7-9b04-8f4a40eddd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "95e278c3-620f-472d-85e9-6f30b72e2d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89e9d0f-7843-404f-8773-8202374a1ddf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74513b1b-cbb1-4f08-9aa0-4db9dc40a376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58932937-4ef1-435a-810c-bfad2cfd1c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9b2183-8d85-4294-830a-e561df1f96b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4173b6a2-bedd-460f-893d-22f738a7c547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306f87d9-5e60-4669-b612-9540f4bca342",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb3267a-68cc-4979-9e04-627baff01eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc2803b-f76d-4259-9724-b95443a16bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c7afda-4eb2-4341-9664-dd20c694dd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bdc4a1-1b49-4161-9d74-fdb1f52e6d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e9bff1-1b93-4a13-a7d8-b673797b7166",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36af730a-1b82-461d-9388-7bf2f7eb2169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b388fa-78fc-4f78-8140-c3f45c43d331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bc7d0d-3228-4eb1-9dad-0921444755f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68e00cf-9740-4457-965e-05d5ad13fdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657d2f25-f656-4572-92fc-aa5e9037d4f3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052163c5-cf3a-459c-ae84-40ece6fb6bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f93967-ac40-4711-8fd5-65e9efadd573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60fc4b7-dd1d-458b-b3ba-5a9828736881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d2f6b6-c11d-40ac-b654-5861de263c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d2e794-469b-410f-a938-440c69ea49da",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd85fdb-6e0e-4f87-a429-0cf28f1bb502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbcfbabf-f043-49ba-9474-2d98c86d0504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b899ae56-4d62-4b50-b50e-16c178533bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55f8602-0ac7-45dd-a7d2-9efb04808b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01203aa2-df75-4c1f-a1dc-945ca52df0a7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c73c6e-723d-4c61-85f3-b773ec81bf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef19435-d089-44fc-b3dd-eedefd2d3467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70ead51-663a-4293-be86-cf47fa842440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a5a56b-bdf9-4fd8-9425-44e97ea5a5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d8187e-8eb6-49f9-a814-49c271bf8122",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779db681-ebe9-46db-8f6c-2b13c7f1bdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c23e7e-70bc-4b0b-a7b4-2f4c50b39a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc13331-de87-4f30-bd62-11f1625f8b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9baa3a-8d35-4b81-8db4-6b6416d7d6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2dae61-793f-485a-ab55-986695dee97e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627801c1-b097-48fe-b4de-bb0c5637a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b7e8e8-1e12-4b52-a23d-df21f4e39371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f464e2b7-ee3c-416d-8871-d125d085e530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09365e4a-8745-4819-b9a2-3e3af7d26355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0affd1c-45b8-47f1-adb6-5317fb2ce47f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d3cb7b-13f7-4ccf-948c-e49bf48aede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbb3f84-3365-4acd-898a-d1723596b09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c6e923-cd64-4bd5-83f0-b9a1f0caa3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22be1b20-ef5b-4e4e-8562-63094db8dee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4973a32b-05de-4c11-b69c-e987f121dab2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099cf8e8-ecbf-4955-a932-72b7f3795a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8e6eca-5328-4eb4-bfd9-13a206393923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae709a5-41b4-4a4d-8b83-1b3b0e131cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7a733f-3336-40f3-9337-fc293c29f21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3328abbc-af53-424e-ac0c-aba42b3518da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073f1116-0917-4de9-8ef5-14bdb643cff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0260f986-b357-433e-a036-dd176f3a64e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fc2318-fe89-4f35-97d8-62deb65e6f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f68a8d-e5d1-4438-aa3c-91791ee43f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f467a40-e260-46b8-b0c8-0688452f04f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d55e9f-3498-4e5e-9b59-edc69f355793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2083ad-3310-48a4-acc5-5232ba63566e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88cecaf-50de-459b-b29b-e60cef0516fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9636390a-a5c0-44ca-8b3c-c6be24a40205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72448411-9896-4215-a513-25677783b443",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b09eee-26bb-49fe-8d12-ebc20eb1b1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbef26e-5e58-4328-adf8-0ea3852eb305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2cedc8-0f7d-4bfb-979d-d13ed524bcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "537d1ea6-ebf0-4698-843d-51b39d68ea7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5dd3f2-b188-4018-8f19-13f0feb6d3fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb25b30-7316-4fd8-9a70-4171fa3d3677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6da041-ed86-403d-9177-1693ee1214a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28a39ad-195b-4dc7-ad69-dd98cdb14c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9fb3cb-a1f1-4911-88a3-8fd54904bad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2e80bf-3c41-4414-94a4-80ab601db274",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed12eaa-97ff-4726-a913-a9c13b28f5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca875212-bda2-4445-a444-23d90036902f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906e32de-efa9-40a1-9b33-a8eb459dc08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "102c1d32-67b8-494d-90d6-6ff944649ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963e203c-7a63-4125-afe4-c2583bec4b68",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128e2cec-5d8e-4d60-b435-eb136339e849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ccabc3-ad24-4f3d-8018-565118d0ee2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daede6d7-7aad-4c85-97dc-442f8940e611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d04af39b-d7f8-4824-a4b8-ca4e71f0f3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afdf955-0b82-461c-a6fc-8cb58cce5a0b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fc3073-0639-4967-8e71-ad7eb40382c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787dded6-d2bb-45f4-8e8b-558a96422d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8863a276-6690-4f2a-a033-f95767c052c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6db54e4-205a-46b6-912e-447d8b16882b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf02f9d-dae0-4569-9b18-091ecd5e4f66",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049c212c-c77f-44d2-9961-b26e1e6ead2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8d624f-3ba1-457b-aeb2-0bacd34d9797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceea76d-cc46-4d0f-8e91-aaf45986ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "addef3a7-5974-4c22-83a9-0cfb811f17e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca01aba-bffe-4da3-86f5-889e658094e5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63ee3d7-7bab-4d7c-a369-f1c66c4e834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b543c8bc-7120-4446-87aa-f4bb56ab9ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fd1123-df8a-4a15-90c7-f21681ba10f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a0f5d7-f149-4d87-89ad-95acf0bd463b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99171a6-9a0f-4b06-8b75-fd73212255cc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c6add1-5bc3-446e-a1bc-cfbd43b9c738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161ee2c3-3ec2-4562-b6cd-ed95c13c0afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82487f4f-433a-429f-a45a-df22e3fe229d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fa43b3-10c9-4db2-a3ef-26bb70ce574b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c755ae-6f64-4285-b825-c54a0d9bd700",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedaa7d5-e8ac-498d-bb32-ec1785588939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254a7655-0120-4d9c-85e4-0cd9a9d5fdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b814021-a6be-4ce8-896d-48fb5af9a3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5aa30c2-15e0-4d3c-bbad-6e8567c4b165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110a18ea-65aa-40cf-8770-9a66d936da5d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2261362d-4579-4b6b-b81c-c3cb1e30e4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52192a6-554e-4e3e-bfff-50d9a53eb9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b386f5-7943-4d49-8afa-1dc1dba52cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9fece1-278c-4207-bcb1-5effcadecc31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "155e4df5-0874-4d8b-a10a-de737f7a5bfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f674697-f27c-40a1-92d1-c50c6dce39bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d9ace9-a6b7-4172-8d50-cd7fc820d2ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "647b7b45-1b8c-414f-aea2-5399fb74def8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6697600-225c-4758-90cd-f7b63f573ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cc0fd74-3a05-4de7-aad0-202a2decf9da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16104c4b-1a70-42f9-8829-f24b9963d94b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68b2ff88-8f74-4770-a48a-653213b347ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e31b7106-3426-44a6-b98f-5ef6ac5d6bc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2912735c-53ff-4d52-9a1b-454393905f90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8e30fb5-a31e-4604-837b-e0a26669fee6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "827c25dd-ef4f-4c26-ba97-7d99b3199469"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba118e23-19c1-4223-a1f6-a6d114f2248a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d43254e-0091-4bd6-831d-0fa49023ab56"
            }
          }
        ]
      },
      {
        "id": "25e916c3-6266-4535-81f8-5a8b0db0eeff",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc8f546c-fef7-4fd6-9dbf-a3da0f596eb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8873290a-97fd-4c73-ba63-aafd1cbd811b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2f8ea1dd-7fb9-4362-a319-911d9f48d8dd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5925b4d-ab94-4f10-a2bc-16c1a9671f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055b8534-c7d1-47c7-af0a-c97809f98488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef98ff7-e78a-4a8f-af76-5e5352bcfba6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1de30a-6b22-4830-a284-b2d20ef97b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc6bd1e-5efc-4d21-a4b7-38ac9c1e5c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a40a2c-8cde-49b0-87e1-007218dfef29",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78429e5c-2081-4273-b336-da139a52e34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3415679e-b0e5-49f5-bceb-bb1cca93331c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea99e20a-f35b-4635-a028-6d66682ab8cd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f02d0f-4c27-41dd-a9b0-e0f5ba2e9348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404e501e-bdd8-494a-b35a-f4e180d20bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498493e7-529c-416d-b600-8cdbe1802d0e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be194445-2006-4126-b16f-de7f347ee673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9671c367-2a99-4434-928e-350bcb98169f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3c99f1-09c3-4662-be73-6d357744c7e4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b56fb63-b27e-45c2-9bff-5ac084673865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfba1a7-621d-4813-a0e8-af6f0eb36862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fad145-cb2c-4a17-8441-2fcf4809eefb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773158e4-0b8a-4fd2-8260-9f92dbb1113c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de25bb0-212c-485a-8de5-e7a9b4b0d675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514be193-7899-4880-a676-183b0da7ffee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3f11d5-8892-4136-9697-d67522455af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e74c3f-cecf-427b-9373-9ff282132b7a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7095266f-a0dc-410c-bee2-5b4a5207d065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6718b07e-3d05-4897-9e3e-08053293518b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81aa41aa-368b-4ea9-9a6b-50a6bcdcfbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcbeb6e-7821-4e03-9fba-74768ff63c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a7568d-3ca8-4ccf-93f3-52a3198d6ca7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985ad7bc-f21d-4b88-9440-f21966bdabed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3332c57b-a51d-4c85-b27d-346d66627790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa792726-1804-414d-bbf4-caec8fac3047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddc7c2e-9270-4637-9605-fdd86275c7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3e8774-a049-459d-aa7b-6b353360b1d9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12348400-5c12-4af1-9fe5-a6021354f1aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d39a5a-21e9-4096-a56d-bd5cde3ab3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16546d38-4acf-4768-a2ed-1e4dd58f3749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86e2d22-a1ae-4c18-bace-7024996f5764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe89570c-be59-4c82-824e-9282c2ca7c98",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d674f8-980b-4e00-8027-f552be2af495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a07a351-c2c9-4ee8-8548-226e9456aa07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c649a64-3afc-4b5f-987c-058195dcb1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaeec976-f078-42f1-b759-44b6a2f67604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa877a4c-fc03-4003-b900-7deee85d8a08",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939f2004-bc4c-4529-884f-7c54367129bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df91110-acab-4cb0-9a15-a3faba101a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b74ebd6-42bf-4878-abcf-5d818aeacf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fdda0e-45b8-46b6-9901-4c0dabe11bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6da4d7-cd18-4df0-a275-496317212696",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a0ff8f-a7da-49e0-b032-885c4361c757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec7d614-def7-4701-93ec-9df5464db5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57d3f53-be15-453e-97b3-413a78ae7afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610d3082-2f55-467b-bcf5-a2c66ddd0ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d1e47e-7768-4191-a5dc-2dc11c1b5e15",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e9db51-f1bd-4c3c-951b-389e0e307744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0c6ad4-9fa2-46f9-a73d-bf95345e1d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e663281-b916-4036-859a-820435a2ba42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc6ae49-e6e1-4590-9921-44c9d83f3d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a9593e-f36e-4f65-a651-dd4f5d58cc53",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef04048c-80c3-4cf8-985a-c53a08b54ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aefef917-11e0-4c76-9232-fb15832afa2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb8d88e-d613-4027-8d52-ad7707ffe4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3519f3-5846-4ad0-af87-77ba28ad76b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d0c159-e3cc-4e2c-aa90-9c2e5998d475",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae255577-f3f4-4d2c-bf34-375e36e314f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85336f5f-5ecf-4ec9-96a4-d420d36ec777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b145f4d-f90e-4819-a127-94fdc6157954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459711de-e551-4ea7-bc68-421bcfe28db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5116d4a-09bc-4ec2-aeac-02ba3fafca15",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c075e74e-7764-41f2-8472-c88ff1b60e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc75ebb-6298-4461-a7fe-d9a4938f4187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eab6030-ee57-4eb9-8710-be452aad28e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f469c24-894e-4e39-9c33-a6de830e4ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fb81f5-58fc-45a8-88e4-83f55fb9a180",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e46abe-958a-449b-93cc-18af9d54492c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8afd0c-18fb-484b-89dd-da019d7364a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e3b923-8078-4185-bbd7-ef974e2da42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f845084f-6d3f-472c-be5c-0b589dcefdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098423a5-8120-41cc-b554-ebf7a92f7b52",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fac08f7-d364-473d-bcaa-50c25b610cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb6011c-bc73-4686-aef9-c991e6925b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96d363a-4392-4a03-ad80-bcf66821e604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca2268b-32e6-4c96-b5c9-496a8b01252d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5092b648-d279-4528-b64f-26d1a0d945eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2661086-0240-4cf3-9d9f-e44ce6c543f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78d7801-486d-4008-bfaf-a93a89f2fa60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d123d2ac-9950-435a-b2ec-7a5996e9c6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e3f486-513d-47c0-b266-d9cbe2727d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d723045-639b-465f-8e39-3fa98f5d93e0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f837ae8f-f401-42ae-86fa-43942f6b2d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32be0c26-5255-4aaa-ab32-a4e4890046c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b8d51a-076c-421f-ae5e-94930e42d998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17734cd-0d12-4e7e-b2e0-8a4c25ce5902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a012a7a-7e1e-4b1b-9bfa-48d300fcae5b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e4a6aa-71be-4d69-b6d8-651bf1068cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe3ed55-01f0-423c-987a-872685dd8e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5abb9ef-a049-4b87-9c22-4c793671b80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4348de2-2b5e-4205-b944-ed7ad227d035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f08c44-f79d-4f45-ae92-47636c071890",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdf2ec0-2a23-4b26-8e5e-b386cc16c3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4249f06-4fd2-4b2e-a598-01782347e04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917ed1f1-59f3-438e-9881-feb722f8fe88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db15ad6-db30-4100-b5c6-5d52fdff8a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cdcf14-1583-410e-87bf-462d6cc76512",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f75414-7e6c-4a11-9705-5f15dc994d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22880188-846b-44d5-8279-b9c4bc36959b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7202305-b6e7-4053-b22b-dfb33f8d7b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbd9625-c0be-4625-8dd6-58662a2b9858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319d4754-d0ce-4e44-a69c-3701ec152812",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ed0f2-b539-4795-9a78-aa1dbb3e5f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e64b98a-47b0-4ea5-8df0-2efe9df8ac2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a3d2d1-80c3-40b4-bd00-1ef9fb1782e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e4e3b3-5142-4172-93f9-c46e73598938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f6fbbb-c890-4ef7-8379-b232fdd89aaa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e4ac47-796c-4648-89fe-7455ef166034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e66855-c372-480e-a5e5-1a8d887352ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f9e0bb-eded-40f1-9a54-4fd91497027a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a089908-b31a-4e5f-a5ad-8e83b96d81d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18940891-e198-48df-a836-f13363269503",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0adb96e-befa-44d5-8592-75063f1f63c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d260e0-7e15-4b85-88a2-a2ffd1b28eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87595089-3836-4b69-b5f7-a6637ce89e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ff7634-4cef-48da-8a86-e882a9296911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5baf8c-2ceb-4dca-8c06-75fff3aa334b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d9308e-e9be-47cf-925e-0e8d7399cf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2fdb9d-25c4-4243-a3fe-f35772d4f2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07eca6c-7434-4a15-9d2a-45f358466016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe62db5-ba27-488f-b200-f11ce9cd26e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ef8a86-a26c-4179-9c14-f6b7b23ef888",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df800914-764b-496e-8cf7-465afaf94263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4066d8-4781-4160-b094-d0ce80380b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ba1752-e335-4c2d-9dcc-4f11e518ae11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e6a489-4aae-48db-b132-36ed010e1d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ea630f-03b7-4bf6-ac35-25ac7af03c02",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646f5216-e2a5-4c7a-a082-2ffd77d5f748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb4d0200-bab5-499a-af4b-3b80d695f3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae54b99-75a3-4bdc-ab4e-ac082adbba0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38eb4e56-dace-442d-9070-158150743312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a173fcbf-4c9a-42cd-bb6d-b560634aa4f1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad18b7a-34da-4b5f-bc9d-8492690d94f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d761e3-95cd-4051-bd39-40de185723ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a90e82d-fc62-44e2-8f7f-8a483970682c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b76fd07-d4cd-4b4b-888e-030cf1b8bb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d2b82-0666-4bdc-a35f-009ff8324210",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9fc010-8366-4bfd-8259-b8d2ec746250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4dc982-2887-4dc2-9b5c-f6b1ebaad525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66e88f4-068d-47b2-ae7f-38f858d1450a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41be5d2-34d1-44d0-afba-fa5283d94873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75211684-686c-429a-be4a-eb5b1d0b346d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dfa133-f227-4b0b-869b-e166c9a06705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef563ed-2d8e-4bd8-ac1f-c7af9b7f1a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c750fda-95ae-4371-ba32-a9eeab35f9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b78ac85-13b0-428c-8ad6-d2a24e2b53cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5b9db5-4109-4050-8f51-dea045dec2e3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0063d3e-1e4c-4bdd-a874-d6fefeabb26b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76fb399-ce7a-449c-8b9d-7bfdafc8de49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0812dd5a-d615-49c7-8857-323b483d106a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca5dbec-9e35-4915-a57c-1f1c5009d79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8ae443-2e22-4902-b15f-7f0d4f6b20cb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3141e28c-0b0b-4a7c-97a2-991a38e2c04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9a0097-a5ad-488e-82a7-388981450b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abcc9c9-504a-461c-a36f-6628c2d28a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c88b70-fc40-4f96-bfbe-0327b1050625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff18d86-a00d-4825-b3a1-9ffb6f9d3c45",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c21a028-fafb-44f4-8a1c-f2cfcd78d6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4097088d-1bd7-466d-b8ff-1ab60f639a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4beda00c-7aad-46d5-a7e3-7fee9bf48a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384fcd5d-d961-49d8-ab82-75c5a4f48fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d997784-5528-4604-a225-221e6a87cdc7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919993c7-10ee-4c9f-8be7-500736d622be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972ed204-9ae0-47b2-9613-744bcf215280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1f02df-bcdf-45e1-970a-8c961fc06e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975981c7-7a73-40f9-8f91-88be05ef5e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbacc4ac-391d-4663-b742-08925aaccbbd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5faf7f9-9d47-4a03-b727-75b1b461511c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6698a8ca-96d9-4351-864d-446b6432afe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8cc29e-a4cf-4d35-a78a-880d3728e1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1367190-bbaf-42c3-bf5d-1c2a785bf0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8170cb83-0ec7-4254-af46-5e681f95e419",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb04e988-5c1b-473f-9947-cdeaadd20b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7526953-83b6-467a-b779-75674746e62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684b25ac-63ac-49b4-bb6f-7d3ea25b12fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8bc626-330a-4d3c-a840-3988c1b60896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14c2567-f53e-433b-9bb1-15e777483205",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cceed8-f901-4401-b108-4e00c57aaf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98b6ead-e3fc-40d6-b322-56ce4d526e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be664b36-d60b-42ad-8857-dd41715e4af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d48e9f0-6369-431f-9034-61ef14456e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf757c4-c316-4148-87c8-5eba1ee9db93",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fbe579-186a-4984-8e14-0f3761e6ccad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3deaf8-09ee-470f-ac09-1c067e6567cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cebdd92-5d8b-43b0-b76c-d666e695edcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdb3c08-54c4-4a47-b7ed-cbc8f8963426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333db53e-468c-4048-b26f-eb3b4527a48d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f81af9c-8894-4279-98c8-8b7ec2a04b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68eedca-256e-49f0-aded-1d0efd3af361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f3d941-fa01-4a09-b971-6c97ce8a537f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60de0f39-a945-4389-ae73-97fc500ce3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595acee5-005b-4779-8d27-481c1549215f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e584a6de-6396-4451-825d-66cbb30451ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46973950-6c41-4c22-8eb1-1d6809f0f5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857d7fa2-4262-4a37-be39-ee78dd5f1161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfb1ace-ad00-4649-bb07-290fcd80cc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6232eff-4cab-46bc-90af-73c94a22ee13",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaae5f3-f4c0-4d10-bffe-325588181e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64ff091-55ee-4e49-9e8e-6213bf4ab9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda93958-a063-4265-9930-f58c86dba231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302b250f-17e6-4486-9836-f490a885954d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab32976b-7f30-4c8b-8f6d-2582e47202e2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843cd761-3333-486a-9291-a0a5b1acadcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f205a781-9704-4a68-af84-c1cd72bc1f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07387b60-1b63-4433-bdc6-4c1918c9067c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71286fa-5371-4b37-8c47-dc280dd643c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc5bb4f-ee38-4e21-97c3-5b211b0c1b11",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac1999c-9795-4ced-ad73-6fea4e0cf479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270892f7-340f-42c9-8f7a-d6de56666d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b2f02d-2f93-4f71-987c-47e093811696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67081797-1faa-4932-8794-15fd33e4b48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f967e5-e0af-4505-8806-0c05ab325618",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe68412a-27e4-4837-acb0-a84d30be3b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158e3f7d-4ce2-4660-bab3-31bdb53e1e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba22e6c-ab64-4d83-abea-c7d9a7d2a16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce17d222-d3d6-4b8e-86c0-bcba10e80653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f0d73e-32c6-4b21-845a-f98fc80045e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eebc8e-3da9-49d4-a3bb-272bff1c3cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5639c0e4-5757-4091-b25a-84c9cb26ec96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eb3995-449d-4bbd-9c5a-a635c9d81152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702ea4a4-0fde-4c13-8e09-56132f728cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a44006-55c6-4b6c-81fc-4841730fa54c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9d7a2e-3261-42cf-b14b-adb5fd9af229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f85b33-584f-458f-8bdc-32ee3d475a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fdb980-aca1-4fd0-8478-75196e1096eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682de8db-7ca4-41b9-9e5a-d1a2a7904c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55171da-fd8d-4647-a1d0-fe839a872824",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3105e23e-6d53-4efc-a163-837f19586289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f73cc1-26fa-4993-bf1d-1dbd99ac1724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af01287c-0479-4665-b015-e98cb59dfee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78e09fa-fb23-47d2-a95f-bfa4c9d3324c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315e1a4d-2e3b-43f6-8f82-8c8d9e9714ff",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce88258-2f97-4c1e-9b9b-c53dc0be36a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0604899d-e751-43f3-9fea-e5925e29e89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da56e780-ff7b-4246-ac64-79263a188036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110deb06-d59d-4b09-971b-0d527330241c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e00b7f-98b3-4034-ae8e-7273cb439383",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff8d4b6-8a40-4dee-a690-434fa38a6fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad0f1f2-9b81-4485-b5e1-aba7da8d95cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c878394-e72c-4fa6-8f5e-1e8406f34475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c972a91-de83-4694-bfff-58758a7d4f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d9c5b8-e351-4214-952a-51ca225fd01c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd534aa-f241-4c05-a891-54eabf468be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d68ef55-0cc6-41d4-aea9-e1cb0ec22450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302392bb-4421-4a59-b359-f99a128f69fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60ca582-6967-486d-b010-70f8e24fb2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebdbe6e-09b1-4e48-8eac-5eaaaa1fbf8e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd05340-96fc-4a77-a1d3-cfff7fbeb15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f9ad5-dae4-41ff-ac79-776010255b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f601f44c-f093-4d86-9448-ad08a1891c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e50622-c4d3-4dd9-a400-eba2c8482331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e958235-7738-4c7d-95ba-936885bb162e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c113f4ae-6fed-4fdf-8ad3-317c2b030c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d56e39-9a11-49f4-89ec-de40852220ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d054010d-8d5a-4934-9e56-55fe2c701dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010affd9-987a-42a8-8886-8c2c63cb1d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91d97db-d5f8-4c91-83d2-e04b2526accc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbe9d5e-7d57-4aa3-95aa-ae37fd2d4fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad83ceea-9621-4c73-a1bc-861c5aeb3147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807d405b-5530-4e2d-a803-e5afd5f83069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49730533-adf9-474b-b1ee-de8eecfc353b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9eb3f6-f360-4b6a-92bb-411dc52c5790",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48070335-4751-4887-8dff-d26fa88efebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc796d1-1349-490c-8dd5-1dfa28e34e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafe6616-1bec-4db5-b19d-cf8fefcfd9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654a0a66-56f2-41b4-a224-1266343d6c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f334ee7-dccb-41b5-b555-3e0e5b709922",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f56b9b-a313-4437-9299-e21af644a199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527b4f20-b04f-4af7-9f1c-f06415718c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63496c9b-e98e-4cd3-9ed6-c8ea0fb7d400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4e36bb-94fc-45f3-a390-e4910de898e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe57b19a-a3ae-4b63-acd6-7ca16b1b87df",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fb5808-09f5-4480-9ec7-0847cfb9184a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34e53e7-0128-45c6-a086-c8206e843484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83c2f16-3d8b-4d65-9603-4fca482937ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f719a47d-7c4e-4c32-9d79-9d6872312a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90defc92-4584-4229-93fd-78ad02ebecd6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113edd50-866b-4bdd-85d7-6e03f151a0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9fb4eb-3ac4-4ddd-95fd-b3b3b6a91bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139ffe6d-ecf5-4675-b552-a017755376bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c687e250-12fb-4375-bab6-bd53b2f58127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe20e4a-0cc4-46c9-9845-2d48d83d415c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bf2fa0-7828-4618-805f-d655a0f282d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8637c5b3-30c4-4952-8447-c970f58b6630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c1ce64-c91d-41d6-a503-69c210ef88f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58291139-2f99-4a00-a8a3-a97b0a84a24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bbcdbf-c53f-4e13-8744-b2cc4a067740",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed9b444-82dc-4368-b14e-02c79ad2481d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea2026b-d97f-4763-834e-3c2c635eac35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4109a706-e605-4b00-907d-8aab8e0c438d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30057090-11cd-4fe6-a1c1-5edbd13a687e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b88bc3-3356-4260-a772-048d5afb3bac",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2f300b-7c44-4e85-b67d-aebaacfdb5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926820ae-dfb9-49c4-8f23-1f0ae4570195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2610024d-bc46-4062-8670-4c3af403ec99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60acfb57-ff2e-4483-9fdc-f064814407fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a3eb58-195e-416c-a01d-18b61df15555",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c23ce5-c791-4706-ad7c-569598ebc1c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c149ac76-99c0-4a86-aa07-cf189cfdc2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5bdd76-279e-4b91-865b-cfc1eadc97d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cccc49-ef82-413c-a7a8-1388093a139d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2008c2dc-502b-47dc-b539-704a44bda9e0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195f49b0-c540-445f-8096-81c9e6ed2502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3271c553-d7d3-446d-957b-4808331b1d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6065607-11d6-47be-a369-cb03f9812be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865d6fe8-4489-4f32-b7ca-6e6c9193f1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c20b4f-a4a8-4263-95b5-30fd0388ea44",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8a0e2f-2a61-4514-be2c-41a9693e9ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c0545c-c3fa-48bc-9c3f-0076d4dcacdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2082fc79-1858-4f31-81a7-d4671b4d8036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257377db-8f70-4731-93fa-55f07afa82bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9061c6a0-dc74-4139-905d-0e447c261ff1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2610bb61-04a9-46d7-855d-8e834aac898d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c675093-772f-4096-b117-e464574e516d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae9bb85-0566-4031-a00d-7f42e955f154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a0ca8b-b179-4675-b319-d1983c82100b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93f116c-5177-4f3f-9484-b4fe7f15be70",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37fe09f-010b-40d6-8ef7-bb2d722f07ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a68321b-9701-415a-b0ad-859de97081e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8eef11-3f63-451e-ad2f-f77c8cabe478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f18275-3135-421a-b54d-348dd34f6b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bd31b2-e287-4e9e-be83-8e9e86cb1f3b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c9a195-0a15-4d25-b678-a61ca56332ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d76c7f2-3f40-4be9-996a-6108a218d086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af5ecff-9c3b-46b2-8465-a14da5850711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f235b2-1e8a-49d5-abd4-f1ebc0c12b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cfc9b7-9ae7-4cb7-b148-3ee91f602f24",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a186fc-62b1-4c7c-89fd-f594fc416f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96856e3d-00ad-4d17-8c51-12b96140e1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118a7b92-d2f0-4e78-8205-b84e55ecaef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc67a3d-e130-4d68-b9e7-12445b14c7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab253157-86bb-4784-aeea-86ada83a649e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226f52d1-1d5a-4b73-b146-f9bc8a33ad19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e9e774-3cca-44ea-b6bc-7eea391b12f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65dbaaa-5696-4d0b-ac2e-95ced2a28de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759ffce6-16e3-4ead-8e88-7afdad416522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff62fc7-1f11-4e56-80ea-b633e19de489",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c81450-a28c-48e5-8597-c4b39aec11e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8540a749-109d-47c2-b7b0-a99c7b42d9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e98a339-328e-4e72-a93f-ab6d3254c0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d103c8ef-583e-4c64-9698-ae640bd44cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94891435-6fe7-4c23-8ab4-ebc45d959eeb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b7d7ed-9c03-401e-a525-cc451b076cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7cf4516-7f8e-4e8e-9d09-4d2427e0d3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d9d326-cb44-4dc7-aa75-2030079f7fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe656afe-f2fb-41de-bab1-0caf8c1a646a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7fb73e-3505-4bce-9dd3-febfbebbd14b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07b1c8d-0f29-4d0b-a37a-63871178e5ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07a5d71-e45b-4770-ae78-0142837d5ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf948b9-7e4d-4f3d-829c-bd7c055e45a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fc5b57-2c46-4e90-a239-5f19446cfb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093f795d-06cc-4d3b-86b4-becda540ae0e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2902bbd1-416c-42e5-8e60-5ae8a633c578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210ab495-1440-4368-9f30-89f3c75ea906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ccdc7a-4d8d-4432-bbbd-ad1a6dd276c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb55a89-e767-405a-8ad7-e872cd5c1062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c890cd-64fe-4c9b-bdb3-346e754d0eb5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fac5bec-20c4-4f94-91b8-7cc31810b28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98485eb2-ce6b-4c81-977e-6938ec155817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270f5ea3-de16-45ab-b6cc-c07fe6087663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5bd2d2-8128-41ef-b973-c61aa83325b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c57f19-7966-44dc-9df0-060466ca02b2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f66825f-cec8-4a14-af28-625b33f175ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd863657-da2a-49e5-982e-5be29985aa90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee66ee5d-3f7f-41b6-90aa-cbc3778fdda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb89b2a-3a55-4d27-a828-c3629000c8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78792a82-21bb-4938-93fa-c15f920356bc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab24a92-d0c0-4a31-86f3-6baf12c696fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52dbb71-197a-4aeb-9887-6462218045fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92d374f-f44c-440a-aba1-fee2d70b3903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5306ac5-08ce-4d96-a31c-29da51577219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34799af-2af8-45e0-a0cc-7b705dd68fe2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41caf130-e2d1-479b-92f7-dfed5b12febb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa105177-3816-48af-b288-1f266b6b7598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6516dad0-0ec3-4ac8-9b60-65a622e1ec70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d828ec0-2d77-4c49-bc8c-ab6249075d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee83e46-e439-47bb-a02d-181efa0d6556",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b5f447-e581-4ee5-b9dd-4cc12b21fc6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "623ead0e-2f98-4b00-a2c4-7921695ac685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ca9c6f-f13c-416e-b577-3bd44fb7875c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad9c234-6b65-4614-baff-e335c4c57989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a53322-5be5-4331-b855-07dbe8f0646b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa668e4-ba4b-4d3b-b32b-c34a8a9f7451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b2c65e-6243-4f4f-8352-a2daa448a1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde32f93-7d4b-474e-9797-3d8d88f4e1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fdcd10-e880-49f8-b628-d4630cef9217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7297f2de-df13-411a-902c-191ffcd416e1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4799e2-0f14-4a87-9871-3b3847b1f4ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d784df-ff82-4d5f-8cd4-a7bc734810b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dedfa87-dece-4187-923c-571b592b3f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114db6ca-b756-4299-aea1-243ea277a465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e12fec-b650-4a7b-9cf0-668d849adbbd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0035c97c-1ba4-4cc6-a8b3-bb4af56843b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca38259-e452-49f0-a5eb-dd58759283e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4262352-c003-487a-a0f5-2e5bc4adaabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037162ae-abd5-4b34-ae6a-6f7abf4e2ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25b9f18-9f27-42f2-b1df-7c8f61b388f8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07df4e0a-0c90-4e6b-81f4-be5c4138b66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8921a9b5-0e2e-446c-bf3c-27c2f1c5813d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fa98c8-affb-4d2b-b7e0-3e64ac756ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff21cc2-1a28-4765-9180-871aba8c88a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010771ec-f65f-4a4c-9fc1-a33bf0cd83db",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c46006b-5d8a-49f7-b8e4-da277b4f5a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895b18ba-dfd3-432b-a0ce-429299eef12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9fa203-a1d2-4473-b242-b8bbbefccd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849d2448-dccc-47bc-8e13-1e69de786c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188969e9-8c07-4523-9b89-a759e7ed9802",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f08e88-889f-401e-9678-e037290f81b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf1f1e4-d7b0-409f-8750-db65c432ed88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5a6f4f-c9bb-4e8d-898e-e005d7269ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f4bf93-b2a4-41ea-aff2-28b78eac080a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe0ea66-f1af-42d7-b0d1-35c6513d1824",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8b042b-fa99-414e-8d4c-1dbeb1a33226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecc6a810-2218-4c21-8b0c-46d5b8f5a0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d218e2a8-1fe1-4636-90ab-c280fabdb694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bc25f8-0770-4231-a63d-3ba675b3f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d004da2-31d7-4d3b-8c01-79caaa9c2135",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c33289-3f09-480a-9d00-4358d3d6e388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ed822d-c56a-4d76-9836-5ad0d1774e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab341adb-98e5-470b-a976-50d5d1372522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4652afa-ad41-4235-9778-f25ccf55683c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc47c68-855b-40c4-9625-5e1c5145eb99",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8242af92-002d-46fb-ac0f-5540a0fd9ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d37ac2-ffa8-4e52-894f-7af81d251eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6322f7-989e-4b99-b498-12a785fa6b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb435d4-a916-40d6-bd68-9d55a8e598f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad546cba-0d00-45a5-8f7e-0c76ae0d8b7d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c193179-0dcb-4633-b458-f804c86ab513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2008f69-76c8-43af-84c7-5632a0a20017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5cea90-d5a2-4f1b-a553-1fbc1344a4ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce6ffd7-4c85-4019-b48e-6a85618574be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb971c0-729b-4c62-b0c8-4feb87fa9b1a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1468fac2-2e52-4e89-975a-890adca79838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4be9ec-3efe-4894-8860-8594daf8365a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d3b4ab-28b3-4c77-8071-26ecfafc58d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a94cfa9-2081-4e23-8ec0-2c56dab5f4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f86de1-5cdf-4172-8afe-e27898d36a17",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091ded36-3b3b-45c2-99dc-0d9f32002fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9246860-b013-4db5-9e9e-cbfd45511d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a43889-ecc3-42d4-b0da-b00048929e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c28ee92-798e-4985-aade-b3d2eed39cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85388c60-271b-4152-b2df-139340ec344f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda1115c-0dc7-42d3-a9b9-ca535c2cce9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7344329-00f8-4cae-b54c-bc49dec1e16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009297cc-bd74-48c3-b149-93ac8cdefd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740b9775-f584-4bf5-a956-dd2ea710bed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aec6456-4b9c-4966-a7f9-5581add73c73",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae638c74-fe53-4fb3-8649-a2e854aa41f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695ad08e-752f-4525-9ef0-34fd939bd448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f7ee33-41af-41f4-8515-30e98fec5894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a969aa-83cf-4b22-a1f1-dbbb79651ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fe35f7-cb98-40fd-856a-39943b42109f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff11d0d5-da87-488c-a927-135f1ae98b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fec2adf-ad41-4f35-98a3-209f44840854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243906cf-e242-4cac-9379-ea5cd5c76081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce34cdb5-769d-4075-9954-399c3e756259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5a332d-2d85-4304-babf-6cfc3403861b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73612677-1053-4f86-b846-e3b3b9febf4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd28e2ff-a63d-4f0f-af44-076bfcf7e2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4df2c8-93e3-4621-8913-a6fd6a7f3f26",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137613ed-071c-429b-8730-e59563dc7c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05010f25-1b00-4667-a4cd-d9c635628f3d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8987a4-553d-48a7-a7a5-b3f35b507109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177ac222-0906-45a3-9bf2-b1daa1082828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18818507-ded1-4722-a6e4-3763f4a5dcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd00d27-9a0f-4ce1-8229-76cbd28d3c8f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "353a12c0-4a55-4994-88ed-2275c7325d11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6eddf65-bdf4-4b60-a7c0-6a2b05510bd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79c33b28-3e5b-4cf0-9096-3bb3d847daa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7db258a-293c-4b6f-8343-ac37b6524535"
                    }
                  }
                ]
              },
              {
                "id": "64cd7916-6487-4968-9adc-930fb704a2f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a52ce91b-ac6a-4324-8010-dede93b18d63",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604680ff-b22c-4023-a873-a26693941b49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b05842e8-b11f-44f4-ab06-da5693c406c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ea4b3b-2e84-4c6b-a9a4-5ab138070561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04e84089-a227-4742-bce4-963f87d2d22a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75c4e77d-e4c3-4aa0-80ea-835b641d2d6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b17ea10a-f1f0-485e-a87e-a4d4ec70f0df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa89fea6-e7af-4a80-956b-ac752193d8be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8718142-6f51-4713-9d83-f8e955bcb0d3"
                    }
                  }
                ]
              },
              {
                "id": "97a1087c-2c99-4e11-9fbb-191e73034e70",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e486b0b1-d938-4f65-bcfe-52741b6ed832",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a7750b-eaa0-416c-8420-91a4fa2b4445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e16df684-4ad1-46b5-8599-99f6ea2f277f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d2db77-354f-467d-a948-9a7a6da3ae26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a025ae-e086-4628-8d63-697a058ae0ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd675ff8-5aec-43b7-836e-d190142724bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6b39349-f1d9-4497-a8b2-303b152706a0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9789ab4-383c-486e-825c-2c0434acea41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47bd0f76-f0bb-46cd-a49f-d8dda45c5b52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24cbc5db-548c-4a7f-bc62-6054f1972e21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e48f33a-bd29-4c87-aa73-a6a44e05f4d0"
                    }
                  }
                ]
              },
              {
                "id": "381789b9-9192-484e-b1b8-7495812e2dcb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfc167bf-ca2b-4fb3-b3e3-f547e8c2b9d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d5d7382-2950-4239-98f9-9859df1e6a3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1024fbb-ff38-4f27-af7a-7250f9e1ddf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d7add4d-30fd-40f5-a648-d8d2b03562a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "276b3a2f-4c9b-42c8-b8c9-e0dfe6c3a9d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dc7448a4-b837-4db4-a284-2002e92c1e44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4adc7280-661c-46dd-9500-7ecc8a28499a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e25236d-b948-40ad-88b8-13c7e44ad2df"
            }
          }
        ]
      },
      {
        "id": "d32b7ffc-8974-4e77-8528-13cee2c9f5df",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9bc32659-9c8c-42a2-a794-85ed06fa8e77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6256ee8-3b0c-4ef8-aba8-96f98de5853f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e2275d2-e4f8-48e3-a440-9cf1c2438edc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989d2a46-8db5-49fa-8446-ec4ec342ff87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5c42384a-0693-49e4-a5f5-977ae0b1d50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dbff92-5867-4aff-bd15-df0896b7c9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a63a32e-5bce-4325-8e7e-d2170e7a57e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09680612-3596-48bc-b392-b28910bf1a88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "757995f8-6184-4b4e-ab54-82786c3b3b0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7aa14a7-de11-4ab0-bab6-39c9a7f805f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "703272b5-d355-478d-8834-eb63a96ccce3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "219465bf-11e4-4eca-916e-d5426a450605",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d7f651d3-8bd2-4914-90fc-0e30c86542ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "259aa226-c983-4421-8514-95cf140ee18b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0021da8c-1d64-42de-abda-fb7fa7384fa3"
            }
          }
        ]
      },
      {
        "id": "212afbb1-2d7e-46b5-aea7-025d9258645f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a6359d28-0465-4356-a4d2-6eff12c6ca5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4b9f264-b835-4108-9675-386e584663b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "725b6438-7b17-49a2-8da4-24caef02a314",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711c7c28-4b96-4e4f-afb8-035155905ea4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7dca865-a74a-471a-90ad-41fbdd3f7c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb3e864-2ffa-4e3f-9562-bfae990e42b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7a98d39-b4b9-4854-aed5-9e39392692dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "508cb326-6058-40dc-b48d-de2591f9dcc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2455d8f-46f7-44ef-afd5-47d53dc01cc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "453b3650-03be-49c0-bcdf-3437b75d6cfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80403131-1822-4168-b777-d2e6057d4381"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20bdf582-0cd7-4296-9d48-ffbeb565e331",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7fda65cd-22a8-45fe-b229-06c614a00820"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d57b1d7-b527-40e1-b59f-0fac0026f988",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee6fb9c8-5797-4eb7-ad64-c0af855a6e76"
            }
          }
        ]
      },
      {
        "id": "733bf00d-8b2e-4691-8bec-95c70d38fb89",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "deb5ebab-51f2-473b-9753-5d1006ad526b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "065e3cd7-d502-4486-af39-179fca1cb870",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4eb7f11f-3699-4176-8d16-d13b54ba4ba6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93aa0c48-ad07-4736-9f31-109ff9047041",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a136a922-a72d-45f7-8e32-4e9ed9ad4684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1136c5-4672-43c0-8e10-357ad69a40f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef52aee3-1a73-4d5d-a5f9-e208c71db19f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b65315d1-fc67-4199-b6dc-7bf19ff3523b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14ae3a54-9d38-4a89-91d1-5c938ae972ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a850e3bb-d5cc-4816-a7e8-766c87e61abc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "620fff0a-af50-4e78-99ed-bed977150838"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34a07677-dd57-4eba-a026-199ea0acdcec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "023fde9e-8b60-48b9-833f-1d53de7e92b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5325b6ad-caed-45e5-99df-6bd401e04d3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8c41d6f-4e6e-497e-b946-628c1deeb94f"
            }
          }
        ]
      },
      {
        "id": "3eae5174-cc63-4fd3-b73e-9419ee0f680d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01d9376f-7a74-48a0-9f2f-f5ad955b52a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89a89392-37ac-4a40-b7cf-ee1289ffd1b4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb47a82c-469f-4c46-8dd0-9695d0003cba",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dfa64dd-9ac3-477e-8787-f8683b95a26a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d99d591-5ec1-457e-a950-41da7fa13fa8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 53.85211267605633,
      "responseMin": 21,
      "responseMax": 396,
      "responseSd": 27.024883469175496,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689642364684,
      "completed": 1689642391203
    },
    "executions": [
      {
        "id": "757f39d9-7c24-4ffd-ac71-0f544ab56319",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "197817ee-2b5f-41cd-af43-789c18831c47",
          "httpRequestId": "5f62543a-cc49-4a56-9cfe-4dd4d7f4639e"
        },
        "item": {
          "id": "757f39d9-7c24-4ffd-ac71-0f544ab56319",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "793c2f84-f55f-4bdb-abf9-48952f002e52",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 0
        }
      },
      {
        "id": "a25e41a2-d8c2-4dcd-a25c-9dadfe815a9b",
        "cursor": {
          "ref": "90a29f19-950b-4f0b-9d02-48c3df13043a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cf945fa2-af0e-4732-889b-ce2008889d0b"
        },
        "item": {
          "id": "a25e41a2-d8c2-4dcd-a25c-9dadfe815a9b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5276bf64-fb8f-4fc7-9b57-3b8fc31e0baa",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "430a6163-a1e6-4ae3-8bd9-4720ea13cba2",
        "cursor": {
          "ref": "030e401b-e083-4c9f-a5a1-604a193cc240",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4f4cc4ee-7b4c-4606-84d6-961d57fb3803"
        },
        "item": {
          "id": "430a6163-a1e6-4ae3-8bd9-4720ea13cba2",
          "name": "did_json"
        },
        "response": {
          "id": "c1f29670-5617-4d94-9eaa-f6769157ad12",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1c4c9f-3be1-4be1-8411-7efa44cbe88c",
        "cursor": {
          "ref": "faccc677-e4ce-4234-aa42-26248fd040da",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9c45e89c-686c-4359-9766-3b41abe8f41b"
        },
        "item": {
          "id": "dd1c4c9f-3be1-4be1-8411-7efa44cbe88c",
          "name": "did:invalid"
        },
        "response": {
          "id": "0e55f012-e71f-4730-b673-75f997aafae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1c4c9f-3be1-4be1-8411-7efa44cbe88c",
        "cursor": {
          "ref": "faccc677-e4ce-4234-aa42-26248fd040da",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9c45e89c-686c-4359-9766-3b41abe8f41b"
        },
        "item": {
          "id": "dd1c4c9f-3be1-4be1-8411-7efa44cbe88c",
          "name": "did:invalid"
        },
        "response": {
          "id": "0e55f012-e71f-4730-b673-75f997aafae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb671fc7-6fe3-4d36-972d-80e531989032",
        "cursor": {
          "ref": "e5f2fc71-8920-4841-bfd9-879e15e2ff3d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fb8497af-d175-421a-8331-f99420beae92"
        },
        "item": {
          "id": "eb671fc7-6fe3-4d36-972d-80e531989032",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "404f1fd4-c888-4837-9cdd-ecb13c2b8a41",
          "status": "Not Found",
          "code": 404,
          "responseTime": 93,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aec6f24-bfa9-4b9d-95d2-38ef3e57cd0e",
        "cursor": {
          "ref": "3b7e41ec-e51f-4e19-ab33-3169863702fb",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "78f3e7a9-394b-40d8-bfea-805e09e80838"
        },
        "item": {
          "id": "2aec6f24-bfa9-4b9d-95d2-38ef3e57cd0e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a95d9da8-833d-4cac-9487-181f54ff6fd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e216603f-b700-4e78-9bb0-8ba07aa47c92",
        "cursor": {
          "ref": "1622a745-3b6e-46a2-94d7-4f0df60550aa",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a825bf47-b953-4db8-854b-48f0ef67c842"
        },
        "item": {
          "id": "e216603f-b700-4e78-9bb0-8ba07aa47c92",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e76aadd5-7165-4731-93fc-a2647c8261c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2e016a-076c-46c2-ac2f-086190ecb3c9",
        "cursor": {
          "ref": "320a6f20-eecd-4d2c-99a1-547257a60036",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a0c6408d-2be1-4441-816f-58ad84655b26"
        },
        "item": {
          "id": "db2e016a-076c-46c2-ac2f-086190ecb3c9",
          "name": "identifiers"
        },
        "response": {
          "id": "6b94c0ec-40a4-41eb-a2bd-ea092d153e24",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a3eea6-99e5-4de7-b972-39a8b0b8b6ef",
        "cursor": {
          "ref": "9f22d742-e5f8-41a6-a64d-af32c06e491b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5db7ec46-6f81-4e8d-ae6d-466d7e853e37"
        },
        "item": {
          "id": "e5a3eea6-99e5-4de7-b972-39a8b0b8b6ef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0ac67b63-5d08-4a7c-a134-8e795fe3b1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c768bd6-6948-493d-9702-bf0a0d74a84e",
        "cursor": {
          "ref": "af4255dd-9f25-4bda-b683-15b93c6f6f77",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "075081fc-6981-4222-a918-0a3e2f20a474"
        },
        "item": {
          "id": "7c768bd6-6948-493d-9702-bf0a0d74a84e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e5b228ad-4ce0-4323-9293-a1f9a6f31aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e691f-7f53-40be-8f9c-d1c56f36829b",
        "cursor": {
          "ref": "74a64fb1-9929-45c4-86e6-034ba50ccbaa",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3fb19867-b008-4770-bacf-733e6d609253"
        },
        "item": {
          "id": "f25e691f-7f53-40be-8f9c-d1c56f36829b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "484a22a7-392f-4bd1-a866-e37d48a413c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a53aec-8bce-4d4e-9fe5-cd12b905cfcf",
        "cursor": {
          "ref": "ee41c08e-a4e6-4700-926f-f19738302cfa",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f32b7a55-cfb4-4e58-a8f0-0aed2eb9b07a"
        },
        "item": {
          "id": "78a53aec-8bce-4d4e-9fe5-cd12b905cfcf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a0939f95-c635-4947-85e3-9b2b5f3706c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1812b294-5874-433f-b492-a5ebfbe1df1d",
        "cursor": {
          "ref": "5b796671-6ed5-4812-b978-5ec35d179698",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "acb96287-d328-458f-a507-a07db1e871fb"
        },
        "item": {
          "id": "1812b294-5874-433f-b492-a5ebfbe1df1d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f10ff54c-9188-47ec-9407-50beacd9cb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec65b940-db7f-480c-91cc-3ee69b83e61f",
        "cursor": {
          "ref": "431f7fe5-16cb-4988-acc2-950c10c40bb8",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a1a10666-d62f-44e2-87cc-ebdd2bb58bed"
        },
        "item": {
          "id": "ec65b940-db7f-480c-91cc-3ee69b83e61f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "daa7a241-1ab5-46e7-b1ac-4f83e188c778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb6c7a2-0dfc-422e-a0e8-c49be8051f32",
        "cursor": {
          "ref": "b2a15fc8-96d3-435a-8c11-7b471cabf0a8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "78f10ed3-177d-4631-b568-44377ca93c3d"
        },
        "item": {
          "id": "2eb6c7a2-0dfc-422e-a0e8-c49be8051f32",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ec23291e-34ee-4536-8998-13254a37c4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc864dd5-91da-45c8-a2fd-df3558bad17e",
        "cursor": {
          "ref": "c61067d0-9a78-4713-a85e-9a8b969e3142",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "40d156b4-8d6c-4663-9210-3ff893cc96c1"
        },
        "item": {
          "id": "dc864dd5-91da-45c8-a2fd-df3558bad17e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c6a2c117-4025-44ee-bb63-89ca412ee3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245451b4-3cc0-4e75-b337-55083876a596",
        "cursor": {
          "ref": "63c728a7-2e35-4fc3-9c43-894b9230edf8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "72434d89-5c47-4910-b7d0-49ec4207ff05"
        },
        "item": {
          "id": "245451b4-3cc0-4e75-b337-55083876a596",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "92fb649a-657f-4e20-8da0-daff45659955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81255782-d611-4309-b033-e390a9d973dd",
        "cursor": {
          "ref": "37e7514c-0f9a-44f8-82a2-4c667dd309f3",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f331a57d-e661-46b7-8bbf-4d19d9bb82ec"
        },
        "item": {
          "id": "81255782-d611-4309-b033-e390a9d973dd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "620d6c07-f7af-4061-bad8-3de20b054445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a5ef6d-a499-4d44-b915-a6f0406d6503",
        "cursor": {
          "ref": "bdcf8c3f-e7d2-4a83-98e4-6ee3393a63c1",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2cb26916-36b9-4129-bd8f-ce36b0d51810"
        },
        "item": {
          "id": "57a5ef6d-a499-4d44-b915-a6f0406d6503",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "22e59452-ea82-4bac-a533-8167615401ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecd9f61-0bca-4302-a045-7ed97f941868",
        "cursor": {
          "ref": "3fa6d285-2a5a-4591-b215-53624f3eb5c4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6a66f6a8-da63-4f77-be8e-be6a4db88d40"
        },
        "item": {
          "id": "3ecd9f61-0bca-4302-a045-7ed97f941868",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "abf97a81-a759-43c7-9783-232a7252136f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9253fd-7741-4f10-9f18-a2011d57e16e",
        "cursor": {
          "ref": "01a64d7a-186c-4739-824e-0495e17439f1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "212f0a01-75aa-4d8b-a1e6-1233487560e4"
        },
        "item": {
          "id": "da9253fd-7741-4f10-9f18-a2011d57e16e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "71e5d085-7105-4a19-9fbb-7cc122089d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6cfaa7-a6f5-4517-83bf-bdeca5eeff09",
        "cursor": {
          "ref": "16a89838-c556-4478-bf2f-d3dcfdc3201b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c8d60994-1bf0-4bab-bdd7-f0749d4753c0"
        },
        "item": {
          "id": "6c6cfaa7-a6f5-4517-83bf-bdeca5eeff09",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26fad568-42b4-43a0-936b-96e966167218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2fdb7b-309d-46cb-bcd8-f0eb7b828351",
        "cursor": {
          "ref": "a0e1efa0-80f9-4e9e-aaee-3fd56d0fc245",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "432ac73b-191e-4613-9288-10170ee10fbf"
        },
        "item": {
          "id": "fb2fdb7b-309d-46cb-bcd8-f0eb7b828351",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9ac4110a-ded6-4c86-88f1-62f083add797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95ffa0a-710d-4519-b7df-9e0c8114b9cc",
        "cursor": {
          "ref": "74122b1a-9181-48a8-9567-af2da0e4d5be",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "62736eaf-2d7d-4b38-8e32-1bf91339a301"
        },
        "item": {
          "id": "c95ffa0a-710d-4519-b7df-9e0c8114b9cc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f289691b-ab8d-4885-a917-bfd858dfdb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849c7407-1bd3-4cf0-b847-85cef3566176",
        "cursor": {
          "ref": "9b26fcc9-0a1d-43e1-a52b-c6b6385b0ac6",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b28bcaea-762e-4e34-b650-0cc97ecefb0d"
        },
        "item": {
          "id": "849c7407-1bd3-4cf0-b847-85cef3566176",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "178c4153-02b2-43c1-93b6-bf293be784dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdc1e61-0a1a-45e2-ba63-bc0b3ee23377",
        "cursor": {
          "ref": "685c4958-765e-42cd-8bb5-40b903a55eb9",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "709bbc2c-5da6-4509-9420-211e7488e237"
        },
        "item": {
          "id": "6bdc1e61-0a1a-45e2-ba63-bc0b3ee23377",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "09553d68-e195-415c-a38f-01badec4fddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0445213e-25eb-4b91-8af8-61191d08a732",
        "cursor": {
          "ref": "2eb2db27-1e51-463d-9386-2e3fe02ad2f5",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f86fe631-dfe1-4f18-aa4c-dda330c75e29"
        },
        "item": {
          "id": "0445213e-25eb-4b91-8af8-61191d08a732",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e56a7256-cca9-4309-b669-b1dbf5628588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a9faed-83f6-4a7f-9a4d-314dcaa02bf7",
        "cursor": {
          "ref": "8457ebae-fcd4-423f-acad-ee635cc05eb8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0da2c739-13bb-497d-be0d-490a060d70fe"
        },
        "item": {
          "id": "b5a9faed-83f6-4a7f-9a4d-314dcaa02bf7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f3fa6abb-e17d-4d6c-94b5-d968935d0f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ff4626-18bf-4c6c-8c83-18127c083ecb",
        "cursor": {
          "ref": "81dafbbe-0d38-49a8-8e24-1c67f1bfa565",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d29ef8e3-b15a-416f-9510-8a3c6202e488"
        },
        "item": {
          "id": "96ff4626-18bf-4c6c-8c83-18127c083ecb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e3ca97d0-13fd-402d-b192-dad74589ff09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5455cd0d-bb09-4a6e-a89f-65fe09168d0c",
        "cursor": {
          "ref": "5a358e64-1f8f-459f-90bd-261b6c538b0d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9731c181-0ad4-456e-9c66-20e6ae22d6c5"
        },
        "item": {
          "id": "5455cd0d-bb09-4a6e-a89f-65fe09168d0c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bf189ecf-497d-445f-827c-7cf35967e615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f23bb7a-63f3-455a-bb34-8100c8157772",
        "cursor": {
          "ref": "9ea2a599-0e27-465b-a27b-0f3b6da1851e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "54315428-fdc6-4e52-b596-1109f5d0abc6"
        },
        "item": {
          "id": "5f23bb7a-63f3-455a-bb34-8100c8157772",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "914edb46-f4ff-40fb-8b25-54ec3866b102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278293a7-9982-40e8-9449-6828e2a76fe6",
        "cursor": {
          "ref": "067d8e01-a51f-4e15-aae7-c12cda756c88",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c2daa79e-083e-4230-9963-b78f18362ab9"
        },
        "item": {
          "id": "278293a7-9982-40e8-9449-6828e2a76fe6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bb59aafa-131b-4187-80d8-6b621e2b6504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d73292-55f2-4c46-a8df-4ecf735e3c6d",
        "cursor": {
          "ref": "d710152c-a7bc-481f-a719-69dbae32a3a4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f75aad8e-3f2f-4b4b-ac86-a35e41f50cac"
        },
        "item": {
          "id": "e7d73292-55f2-4c46-a8df-4ecf735e3c6d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "491a594e-a903-468a-92b9-7da919425cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad36ad1-7020-4e6a-b3bd-e1bf6ce2acfb",
        "cursor": {
          "ref": "414f3b04-38b9-4f91-8de3-bf8a5cbb56fc",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8027a6d7-04b8-4486-a537-9d0f5083bce3"
        },
        "item": {
          "id": "2ad36ad1-7020-4e6a-b3bd-e1bf6ce2acfb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c0d792b2-daa1-4a63-8e10-093b840e5bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f383a277-687f-4b8e-bc85-aff941592bd8",
        "cursor": {
          "ref": "78533a1d-fe49-4356-b011-370df156d5cc",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "46efb103-08c5-4611-a236-6b95feebae0d"
        },
        "item": {
          "id": "f383a277-687f-4b8e-bc85-aff941592bd8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7eb7e2f7-8785-4a5b-b747-807c91d27964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec37277-4f87-43bc-bc11-1e6705e551e8",
        "cursor": {
          "ref": "62e7da4b-d278-4a12-a12b-121d6ddabdf2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a20afc73-0a11-4b85-b028-4c535676cefc"
        },
        "item": {
          "id": "eec37277-4f87-43bc-bc11-1e6705e551e8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9f37133b-033b-4444-87da-8ca4cc41cdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72feb9bd-0656-48bf-8457-db41b11a61fc",
        "cursor": {
          "ref": "c979bce5-f545-49b2-8839-2a3279cccc25",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "19b58a0b-c1fe-422b-8ddd-f6b9b92a8477"
        },
        "item": {
          "id": "72feb9bd-0656-48bf-8457-db41b11a61fc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "587b4168-5e22-4ccc-89eb-310e6043f78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b6d923-cc12-437e-93a2-f4d2ec0294a3",
        "cursor": {
          "ref": "c6d5f3d6-9d58-4522-a07d-3f6d5c1fb605",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9375d823-32c9-45a9-9063-5212e190c52a"
        },
        "item": {
          "id": "60b6d923-cc12-437e-93a2-f4d2ec0294a3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4e79a6b7-73d4-4a7c-a6b6-0a64fbb13bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf96ea8-5789-47d6-80e2-d0804eb0257a",
        "cursor": {
          "ref": "48b8d931-6eae-4cc2-a2b9-cef9e9c5e49b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "861433d1-f026-431d-8016-114968373d86"
        },
        "item": {
          "id": "cdf96ea8-5789-47d6-80e2-d0804eb0257a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "26458634-1545-4066-affb-9163fd9deb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e195551-b648-4c41-b1ad-125d69d2ae12",
        "cursor": {
          "ref": "a98e73ef-5a54-41a7-a983-9dd6023be18b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "36e4208f-ad7b-421d-b303-dc40b68b7d58"
        },
        "item": {
          "id": "4e195551-b648-4c41-b1ad-125d69d2ae12",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "47368a6f-d69e-4aa5-b1a5-7ff1f842b5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1c9f29-bd46-49d3-9979-3f9e07e945c9",
        "cursor": {
          "ref": "69e7157f-56ae-411b-b46e-9bddb6f83123",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "91b0e689-f18e-4585-9dad-3cf8a091a980"
        },
        "item": {
          "id": "9c1c9f29-bd46-49d3-9979-3f9e07e945c9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c4d4e4ee-d1ba-40ae-85f9-9503a3f39226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde8a7c1-f912-49a6-a87f-5c8b03ca2738",
        "cursor": {
          "ref": "3df3b764-5840-4259-9032-a99e1bbe1cc1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "41bb00f9-df0f-43a9-be90-d0e1f250d706"
        },
        "item": {
          "id": "cde8a7c1-f912-49a6-a87f-5c8b03ca2738",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "febd291f-1930-4d35-a6e2-6a9932976149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc3eee7-0d5c-40af-b43c-a10fdbf552be",
        "cursor": {
          "ref": "4af93cc1-9327-446a-b9c8-d9144f2737ea",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7b8161e6-2c5c-44fd-9e75-66faf0d6d55c"
        },
        "item": {
          "id": "0dc3eee7-0d5c-40af-b43c-a10fdbf552be",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7e28ba08-f1de-4c25-ad7c-119eeae137f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9e6fa3-2f5f-4f14-acd1-77bd900468aa",
        "cursor": {
          "ref": "0f349ec2-085c-4894-90da-d7c5bf237322",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9bdb9376-82a3-4c34-9bef-2b9907a8b837"
        },
        "item": {
          "id": "0f9e6fa3-2f5f-4f14-acd1-77bd900468aa",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3a8bc2ac-10d8-472b-92bd-93020a195fae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdce12bf-db24-4004-a753-fe0121616b26",
        "cursor": {
          "ref": "10e0b4f3-3d52-42f8-8b07-4fd7acb11cde",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3e30709b-d839-42ba-ad35-4175f4ba6b6a"
        },
        "item": {
          "id": "bdce12bf-db24-4004-a753-fe0121616b26",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "73ad2c87-f5ba-4c17-8921-e62170e7cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a643c79-4714-42f2-a951-95beb2ea12fe",
        "cursor": {
          "ref": "09078751-c29e-4524-89c1-83855ce42471",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4cb13139-fee3-4cca-b757-f130b0e7e9fc"
        },
        "item": {
          "id": "8a643c79-4714-42f2-a951-95beb2ea12fe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2c16f515-0cf7-4d90-8120-b2923d810713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5598d85-5c4a-4cd9-ac86-46d293a6afcf",
        "cursor": {
          "ref": "91d59478-4e98-4d1d-b95d-eb0572f89e2a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "98ad2558-88c0-4701-af76-617ebf090271"
        },
        "item": {
          "id": "d5598d85-5c4a-4cd9-ac86-46d293a6afcf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "02afd207-f28a-4bd3-ac02-6a52c056a1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a4e041-6b41-42d4-bdc1-63ff9064c841",
        "cursor": {
          "ref": "67eeaa6b-1d97-4ec8-99cf-41c2a7747a55",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fa412494-1f96-4f6a-b0ca-35c873881c13"
        },
        "item": {
          "id": "b0a4e041-6b41-42d4-bdc1-63ff9064c841",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5d3935e6-d95d-42a2-a5fe-78e957d8c90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587bcf28-5532-4192-b047-4ca8d5c75a5b",
        "cursor": {
          "ref": "33c427bc-c722-4a0f-a721-551d04f68cb7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cc64119b-16cb-4532-833c-12231a7de7cb"
        },
        "item": {
          "id": "587bcf28-5532-4192-b047-4ca8d5c75a5b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d731adb2-ea1a-4503-9947-15deedd2b393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c45c7c-c837-4fd0-a051-8b4f8230ba36",
        "cursor": {
          "ref": "f0ae2c7b-11a1-4850-b945-df574dd64718",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9999be58-25bd-48ee-aa8d-423ef111f0ac"
        },
        "item": {
          "id": "e6c45c7c-c837-4fd0-a051-8b4f8230ba36",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1daebf06-e921-429e-ba44-9d8b442b942c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd70a38d-246c-4357-b62a-86bd176119d1",
        "cursor": {
          "ref": "65b86544-97ef-4260-80a4-3d7d820b0968",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2fe23425-e360-4fd0-93d4-1e71ff4b3480"
        },
        "item": {
          "id": "fd70a38d-246c-4357-b62a-86bd176119d1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "904c7e57-3304-4e3c-95c9-1f92225fa3c5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce436d6c-e52e-4ea4-a6de-7a8c007c8106",
        "cursor": {
          "ref": "f5f0d502-f02f-4fd4-9acc-11fac165d253",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ffea7191-ffcd-463f-8a89-6b09ea42fec0"
        },
        "item": {
          "id": "ce436d6c-e52e-4ea4-a6de-7a8c007c8106",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1365524b-5915-4a58-97bb-4b892fc0f950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dca16b2-f97b-43eb-8f86-47a7a684406e",
        "cursor": {
          "ref": "45b89967-8670-4424-b92c-d25a98c7ff12",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ba5f726c-ee72-40c6-b5bd-8f33844413e4"
        },
        "item": {
          "id": "2dca16b2-f97b-43eb-8f86-47a7a684406e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "59b7b66d-5047-42b3-9b66-dbe76e3e3e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0bebe2-6279-486c-87ad-89be03bb31d2",
        "cursor": {
          "ref": "cbeb395d-d160-477e-8c72-92ab47337494",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aa92f4f9-1a8c-4924-8265-098a30359ac7"
        },
        "item": {
          "id": "8c0bebe2-6279-486c-87ad-89be03bb31d2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "63f58949-17c4-44ff-9ecd-5feddddb58e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e3db9d-9972-46b3-a603-c47b8a0cb1cb",
        "cursor": {
          "ref": "4e629eef-9e5d-4b8d-92fb-00b70f2d717c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d07cd4ad-10cd-4d78-8580-4b65bb4c2bd5"
        },
        "item": {
          "id": "e7e3db9d-9972-46b3-a603-c47b8a0cb1cb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5fb9f293-2cf9-45aa-bed6-5c515c1e52c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d797c233-d716-4ac6-a511-63e54a5dad10",
        "cursor": {
          "ref": "d23282ab-0323-4417-8d25-db929d5edbd6",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bf5df7ad-1630-4e85-a310-58c64aed1ebe"
        },
        "item": {
          "id": "d797c233-d716-4ac6-a511-63e54a5dad10",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "da298402-b8a9-4851-87bd-a4abb0b8cfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312eabd2-c3dc-47af-9ff9-a3564dc972b6",
        "cursor": {
          "ref": "928222e7-56f0-4444-a634-c9cca81bcb28",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7f876d1c-b15c-4a23-96a2-acb6d0969435"
        },
        "item": {
          "id": "312eabd2-c3dc-47af-9ff9-a3564dc972b6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ab4358b8-297e-439b-b24a-f999b545209c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab764b20-b9fd-4d85-8824-b6ceb648b68b",
        "cursor": {
          "ref": "172a0df0-fd54-4d51-a575-a6d1bdb41d42",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f97d22f9-151e-4359-be38-f613e8742fe7"
        },
        "item": {
          "id": "ab764b20-b9fd-4d85-8824-b6ceb648b68b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "868a7563-332c-4411-9a0c-66f43a692af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de99457c-c917-430a-8bd4-8ddefdf5ed1e",
        "cursor": {
          "ref": "b87e9d59-1d33-408e-84bc-e15cc9126e7d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ee0a252f-ab6d-4f85-a7a4-2ef5be6781d8"
        },
        "item": {
          "id": "de99457c-c917-430a-8bd4-8ddefdf5ed1e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e72d43ac-4a90-4358-9b94-e9804c72cd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35abe0d5-1498-4997-872d-2bb3f3f96e58",
        "cursor": {
          "ref": "b35dd11a-f523-4ab0-9033-486fe77390cb",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4d3c54f5-7a59-44c6-8860-bd24da3f6c0b"
        },
        "item": {
          "id": "35abe0d5-1498-4997-872d-2bb3f3f96e58",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a2f94310-5fe0-4ba4-bf73-0ff599e95af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0fcdac-d07d-40d1-8e14-944b8d84080b",
        "cursor": {
          "ref": "4ace175c-4fea-4798-99e5-e1049ab2e55a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "87fed7cb-cfc1-49b4-b040-59935ee1cd6a"
        },
        "item": {
          "id": "2d0fcdac-d07d-40d1-8e14-944b8d84080b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d593d313-bf3e-49a5-85d1-146abe8856ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738f136a-04f3-4bcb-9399-745e1a30f1f9",
        "cursor": {
          "ref": "151ea2f8-6423-42bf-a854-80c9b976a819",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d61432a9-4799-466c-b4df-6cd5c5d70674"
        },
        "item": {
          "id": "738f136a-04f3-4bcb-9399-745e1a30f1f9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5787ccc3-b87c-4766-ba8d-5b0367f488a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180ad86b-3045-47ae-bac0-67b142169ada",
        "cursor": {
          "ref": "e42ad110-35db-4eaa-b730-e1f28762145d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "640a65fe-7e1c-4cdd-891a-7ec262e72598"
        },
        "item": {
          "id": "180ad86b-3045-47ae-bac0-67b142169ada",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f73943b7-3fb5-469f-b505-0619897d345a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b9c9df-5d7c-459d-8717-b31842a90796",
        "cursor": {
          "ref": "692b65d5-3c9e-41b6-9039-907cde6d55b0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0727cfb-d004-4ca7-8958-d04f2e71eae5"
        },
        "item": {
          "id": "c5b9c9df-5d7c-459d-8717-b31842a90796",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b4543222-c01e-4b93-a4e9-f42aa91e63f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b321bc-4fdd-4748-8ca3-f35dcae24527",
        "cursor": {
          "ref": "55419138-d948-43eb-965a-0a937fc80044",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "03768445-4c72-4d2a-94a5-a8acae42bf96"
        },
        "item": {
          "id": "98b321bc-4fdd-4748-8ca3-f35dcae24527",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ba93ddc-972f-4b9a-8fac-5ed2a89558ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378610a1-23de-4639-9c33-678a518b624b",
        "cursor": {
          "ref": "6be5175a-7cc5-48ee-9eb5-bc04e530f8f7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "69de4347-2bb9-4ce1-9819-240bb3d302ca"
        },
        "item": {
          "id": "378610a1-23de-4639-9c33-678a518b624b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cd18fb47-29cf-4558-9d5f-49bc272ef392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb07d370-c576-4002-ab15-43eb75be2e5f",
        "cursor": {
          "ref": "873733a9-a72e-40aa-a6e5-9885fe4cec70",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b9ee3b78-c241-48d8-b76e-e1d85ee1a6c9"
        },
        "item": {
          "id": "bb07d370-c576-4002-ab15-43eb75be2e5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bf83c37f-0411-401b-93dd-346558baf5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f6fdc3-3f45-40e8-84e5-9395d96f2def",
        "cursor": {
          "ref": "4db8da27-2e42-4afd-840f-269230565670",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "21421fc8-bb2c-43a4-9055-c7dafb424185"
        },
        "item": {
          "id": "22f6fdc3-3f45-40e8-84e5-9395d96f2def",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c8a5ab8f-2a2a-486d-b541-c7bc397a08d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b01c58f-d880-436a-aadf-ec36abf64d03",
        "cursor": {
          "ref": "f4464cd5-6e36-4ace-a3f7-cafd84840347",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ecc98792-2311-4c39-80fb-f0e28066c39c"
        },
        "item": {
          "id": "2b01c58f-d880-436a-aadf-ec36abf64d03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "89686786-ed74-4292-a676-72ec9e8b4b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562cd43d-e817-407f-a72a-14fd88f5c003",
        "cursor": {
          "ref": "b7d0ca20-155a-4d27-930e-905157fad30e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5521bce3-1a2a-4d38-9876-f46ba149a3ca"
        },
        "item": {
          "id": "562cd43d-e817-407f-a72a-14fd88f5c003",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c7bd6fe1-da7d-436a-89cf-be9c90a0e8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b7af47-c496-41e5-a054-af3bdb69d51e",
        "cursor": {
          "ref": "d54f9e9f-bb7c-46e1-98cf-c325036e491b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "324fd278-142e-4363-af31-0c5922425ad2"
        },
        "item": {
          "id": "11b7af47-c496-41e5-a054-af3bdb69d51e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a236732e-c7b2-4389-8246-4327a322e1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0687a3e-caf0-4cc2-8ccd-a18cea117a60",
        "cursor": {
          "ref": "f9bfdd00-98bf-4ec0-87e7-0788bfb06aea",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6df71169-6106-4649-b197-d9ef1607dd2f"
        },
        "item": {
          "id": "e0687a3e-caf0-4cc2-8ccd-a18cea117a60",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b4123093-a77b-4c6a-8106-a4546c1ccb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac89cc0-6f9e-4234-8eec-f87f3d956678",
        "cursor": {
          "ref": "7ef013f3-f7e4-44c5-8bfa-1c8f78e18606",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9e3ec5ea-8e26-4e97-a77f-add446db61e5"
        },
        "item": {
          "id": "0ac89cc0-6f9e-4234-8eec-f87f3d956678",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "14e3d6fb-9e3d-4765-ae0d-f1b38632c1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1dc547-0590-4810-917d-aa1bc11e6206",
        "cursor": {
          "ref": "36c638bb-567c-49ae-b065-f7ce01a3a242",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eb84e43b-2248-4520-b5af-874e040709ab"
        },
        "item": {
          "id": "cb1dc547-0590-4810-917d-aa1bc11e6206",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "55d2b2dc-6666-4e8c-a6e3-54d79b0013c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708551af-0a42-4740-b212-7c73711d4e92",
        "cursor": {
          "ref": "ad8ad395-4674-4f49-9eb8-74790b2732bc",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c8c7fe7a-4755-4a5f-8061-aad30673b647"
        },
        "item": {
          "id": "708551af-0a42-4740-b212-7c73711d4e92",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "989a0daf-6052-4b85-ac78-51941f0d41b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90266d0-7f23-452b-93ab-019b437f0b94",
        "cursor": {
          "ref": "a4b2fa4a-d274-496f-be8f-64fe32d85fc6",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aac251b6-89df-4833-8a6a-7c5b4d70df28"
        },
        "item": {
          "id": "f90266d0-7f23-452b-93ab-019b437f0b94",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "774a8591-b7b1-4916-9bad-bc46c7beb672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13952c63-060a-4bb9-b7e7-b687454d5672",
        "cursor": {
          "ref": "580b71f3-bf39-4d85-aad0-9e50ea6cf6e9",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "982cb676-df6a-4f87-ab4b-61820b51cddf"
        },
        "item": {
          "id": "13952c63-060a-4bb9-b7e7-b687454d5672",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7ab2d8f3-77b6-4623-b3cc-31d34a977d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4b45e7-62d3-4161-812a-3b1a31365c61",
        "cursor": {
          "ref": "bf00c720-fa8b-4eb1-a978-1ac47d87ae9b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d9197b91-d541-497b-8916-3a20b7cf9ee0"
        },
        "item": {
          "id": "be4b45e7-62d3-4161-812a-3b1a31365c61",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "19d1a946-7e66-4770-a304-3ec37fa6c5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d88012b-3bd3-4a17-be86-e46101bb4b09",
        "cursor": {
          "ref": "2469fcb9-949d-4940-a8b3-48ef4147b819",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b904ce1b-e522-4347-be77-3024c0ecc0d8"
        },
        "item": {
          "id": "9d88012b-3bd3-4a17-be86-e46101bb4b09",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a4d75ab5-56c2-4c1e-9f92-0e49d8a04c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdd6a8d-88a2-4284-a2b2-9388b0c0e6b7",
        "cursor": {
          "ref": "20702517-f09e-4b48-974d-dd30a80bafaa",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8569276d-458d-445e-b21d-eefb8c785360"
        },
        "item": {
          "id": "bbdd6a8d-88a2-4284-a2b2-9388b0c0e6b7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b1c7ee63-6f84-4669-9d3b-d1775bbe6c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b0e95e-1bf4-4aa4-9b20-ae891b917a2e",
        "cursor": {
          "ref": "13f73d7c-fc2b-4fe4-bea0-60c070807c3f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ba31b77a-9318-4caa-a2ab-aa24cc24a2ba"
        },
        "item": {
          "id": "d4b0e95e-1bf4-4aa4-9b20-ae891b917a2e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "74649d18-7fb9-405c-af84-bd66110b2074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a959e9b8-f271-4923-a4fc-d397059cce46",
        "cursor": {
          "ref": "262e4391-e744-4273-a80f-89033452cbef",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d6bf315c-0d9e-4326-8fc2-696bfad32366"
        },
        "item": {
          "id": "a959e9b8-f271-4923-a4fc-d397059cce46",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "acbda55c-3594-4725-b18c-eeac6c8f193d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc14edbe-58d0-47d5-872c-4488ff8227e6",
        "cursor": {
          "ref": "feeba5ba-4e17-4cc4-9d7b-2ca93a7450cf",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "689d9a40-0549-4cb2-88c0-7916e5334e28"
        },
        "item": {
          "id": "dc14edbe-58d0-47d5-872c-4488ff8227e6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ec97b653-5e47-4275-a41b-2fc732d96516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f19384a-a7e9-4925-b703-bcfd53939694",
        "cursor": {
          "ref": "57c5eef3-69be-4577-b7e0-fb70f6c55544",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "55ce9d04-5592-4c2f-8b0e-d52e6b49dfe2"
        },
        "item": {
          "id": "4f19384a-a7e9-4925-b703-bcfd53939694",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9eea3e02-2cff-4cf1-a58c-47cd1043fb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76403a42-308d-4d6d-b2bc-ad1f65c98725",
        "cursor": {
          "ref": "2bc33951-50a7-4ce2-9432-944933f8ab20",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "29e25ebc-b872-4fcb-a94d-8df2e08d2cab"
        },
        "item": {
          "id": "76403a42-308d-4d6d-b2bc-ad1f65c98725",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "646f66a4-5723-4460-846e-83ac1426b887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c1f1d0-7846-4638-a0fc-b77d171a34f0",
        "cursor": {
          "ref": "afccb3b5-2183-4d6e-9d6c-1720d5bd9cf9",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "be6f7976-502f-46bf-b2ef-8f1f86b758a3"
        },
        "item": {
          "id": "85c1f1d0-7846-4638-a0fc-b77d171a34f0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8eef46e2-0cef-4040-9988-b99745ffc674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891a73b8-66cb-46f2-909f-e4f675960820",
        "cursor": {
          "ref": "f0e1be91-b36b-4f3f-bb37-ecd269b6a2ab",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8ba9dc20-d65d-40d8-8443-9e1dbc218911"
        },
        "item": {
          "id": "891a73b8-66cb-46f2-909f-e4f675960820",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2a35ce10-c237-417b-94d3-5bc6f4c9624a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eba947-fed0-4af1-88c3-aff47bb42c87",
        "cursor": {
          "ref": "7846f11e-3633-4a6b-b62f-f31c776dc7b0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "82021d7f-8db4-4486-96c2-751236d0245e"
        },
        "item": {
          "id": "d0eba947-fed0-4af1-88c3-aff47bb42c87",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b8b94d3a-b75a-475f-a67f-263957f19d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb39416-6679-4973-be5c-3d315ef66613",
        "cursor": {
          "ref": "737e4794-4ece-46a8-a86e-81f931b45b6f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8ff73b33-0b2e-4159-9ec1-e0d234c741d6"
        },
        "item": {
          "id": "6bb39416-6679-4973-be5c-3d315ef66613",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "51532f15-f49b-4682-9722-00da9d6d2d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b16fe6e-6335-4c21-8495-973ebd226d6b",
        "cursor": {
          "ref": "c001a524-31fb-4aaf-aab6-e4a3f7a51266",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "43b182db-1f00-45bc-a5a8-9d3bd7052cee"
        },
        "item": {
          "id": "2b16fe6e-6335-4c21-8495-973ebd226d6b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ff454552-8856-453c-ba4b-dfcf728134b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad54b809-abb0-4138-81ba-512cf179cd25",
        "cursor": {
          "ref": "c807a504-ef2b-4983-a379-5245d3259f9a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9af83ed0-01d6-459b-be50-5a4e31129e1d"
        },
        "item": {
          "id": "ad54b809-abb0-4138-81ba-512cf179cd25",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ff27bf19-a4ee-4f70-b21a-4731adf1b4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0fcf92-5629-41ea-8de4-b1a282c42107",
        "cursor": {
          "ref": "77fba2ff-c1e2-42ce-8f6d-c3dde61473a8",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b7759464-0543-463e-8657-aad996df3220"
        },
        "item": {
          "id": "7e0fcf92-5629-41ea-8de4-b1a282c42107",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0920c2c6-4b72-42ce-8321-cd1270a70b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91add4e6-8dab-41c2-9fdc-cea028ec8b5a",
        "cursor": {
          "ref": "3df16bf8-83b6-4545-9ac1-1671ea41fe42",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7c064a4c-71a8-4b27-9f73-c9996edb453f"
        },
        "item": {
          "id": "91add4e6-8dab-41c2-9fdc-cea028ec8b5a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aedb7211-ee34-4d05-9a77-c8502901d23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0352c79-b002-4755-8bb5-475eccd6ad28",
        "cursor": {
          "ref": "690b2475-9429-4647-8594-b49b49b8c523",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7b5df695-b640-4abc-9a8e-f181ca02330d"
        },
        "item": {
          "id": "f0352c79-b002-4755-8bb5-475eccd6ad28",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d27397b6-53c2-4261-b1c4-c7bc69c2b7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3ecc21-2f71-4d13-822e-0b50418d4698",
        "cursor": {
          "ref": "8467fdef-4692-4bde-8fd5-fc8b647afbed",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4ff1a018-0dd7-4bf3-82f8-b59f971c41bd"
        },
        "item": {
          "id": "9c3ecc21-2f71-4d13-822e-0b50418d4698",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4075c559-ff53-4c7d-9171-c76e9ff9c2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dd7ba4-c1fc-41a1-ac7a-5b30517dd5ee",
        "cursor": {
          "ref": "cc9dd8c4-d79a-410e-adae-3388856bbdd0",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3cdf8e17-195b-46b8-ba37-a764434fc027"
        },
        "item": {
          "id": "69dd7ba4-c1fc-41a1-ac7a-5b30517dd5ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bbe91dd5-7882-4fcd-88ba-53c6f5b9dde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05771569-07a2-46c0-ac44-0e7bd4d2a193",
        "cursor": {
          "ref": "46a08e15-35f1-48a1-9cd5-8da9173b33de",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1e56322e-c7b7-4bff-bf5d-cbab7a939f5c"
        },
        "item": {
          "id": "05771569-07a2-46c0-ac44-0e7bd4d2a193",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "24e9f794-7291-4b65-b471-9db040f4bc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a564da-6a79-4b1f-9787-9b9d0ef0ea7d",
        "cursor": {
          "ref": "e77c7b9b-145d-463a-bb7f-1732d027b13a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "06cf4a4f-5288-46f1-bb3f-61c9f2b289ba"
        },
        "item": {
          "id": "e1a564da-6a79-4b1f-9787-9b9d0ef0ea7d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a066903b-04b4-4d30-ad78-7f4fe4384088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0764df58-4922-4dcd-8569-12dd7a12b486",
        "cursor": {
          "ref": "8b44a506-89c8-44ac-8b1f-9bdf1d3ccf1b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e21164f8-31d7-48c6-b829-37884310ac26"
        },
        "item": {
          "id": "0764df58-4922-4dcd-8569-12dd7a12b486",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "260efae4-73e5-4f11-9e25-f2cc5e3711ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c582cfcb-ca16-4e5e-8cad-d65ac174a9f3",
        "cursor": {
          "ref": "db0f5c7f-4331-4fed-95d7-0fd06ce044f5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "486b96b4-6a26-4ac7-91e3-f60962515e56"
        },
        "item": {
          "id": "c582cfcb-ca16-4e5e-8cad-d65ac174a9f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e8e18c69-465a-4543-9128-982206f8fdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5189d12e-7c15-4be8-a568-391b47f39b28",
        "cursor": {
          "ref": "4fb6ec6c-a830-4b6a-a641-9781cceca0b2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "644f18a7-d3be-4cb7-b251-22cb8db4132e"
        },
        "item": {
          "id": "5189d12e-7c15-4be8-a568-391b47f39b28",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4691f6e1-892a-4c86-8114-947e06451d8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aa8f6f-1023-45d4-aca9-eb19a3c7be92",
        "cursor": {
          "ref": "bb3566f0-0610-413d-b3c3-c5e85cf76a9a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "424a9537-0261-48bf-a505-500cecc80832"
        },
        "item": {
          "id": "93aa8f6f-1023-45d4-aca9-eb19a3c7be92",
          "name": "credentials_issue"
        },
        "response": {
          "id": "89e22675-8a92-4444-bf97-24b0f9442d14",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbb6110-7c37-4c03-afea-8fe207a226c5",
        "cursor": {
          "ref": "4006171f-e851-47c1-8fc5-01b84c720bae",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d7855545-89cc-4511-bfa5-8ad24ea3166a"
        },
        "item": {
          "id": "3dbb6110-7c37-4c03-afea-8fe207a226c5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4be8d578-4c1d-4a99-838e-00ca50e0b1b7",
          "status": "Created",
          "code": 201,
          "responseTime": 178,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "566f9f5a-ed90-45b9-9972-0c81fb1dd8e3",
        "cursor": {
          "ref": "52e1d8dc-6e09-4d35-b319-02a9fd73268a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "66848226-5aaa-4870-9e46-178375c33ef6"
        },
        "item": {
          "id": "566f9f5a-ed90-45b9-9972-0c81fb1dd8e3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0c2e350a-6607-4474-b144-9f0d8e57af94",
          "status": "Created",
          "code": 201,
          "responseTime": 96,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfbf2e3-6cb7-4b59-ad67-075163ee0574",
        "cursor": {
          "ref": "418f0af5-6c03-4cd5-b725-baadf638aff8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4eb414d0-0975-4b72-87ff-4871d111055d"
        },
        "item": {
          "id": "dbfbf2e3-6cb7-4b59-ad67-075163ee0574",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f594a93d-8902-470f-adce-c84641073772",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cc33f4-8579-4319-919c-c36ee0a8ec79",
        "cursor": {
          "ref": "d3723081-4cdc-44a5-9173-0c5c1592ff8e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "82cc4f83-b2ef-4c4c-ac05-4ffdbd9d49aa"
        },
        "item": {
          "id": "49cc33f4-8579-4319-919c-c36ee0a8ec79",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "babfcd57-41ad-4a40-b365-8b54d9910246",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ff5149-e9e2-4213-b4fe-49e70574522b",
        "cursor": {
          "ref": "d07138c0-0993-4b7d-a194-785d267b2a72",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4b0b9dc8-2a04-44bf-81b8-8641b33643d6"
        },
        "item": {
          "id": "e5ff5149-e9e2-4213-b4fe-49e70574522b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8172e2f2-67e5-45ab-a844-5a901f738538",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98785226-d576-4d5d-b2c8-974ee7e76e2e",
        "cursor": {
          "ref": "a48deb14-1e77-4c3c-9af9-f259b4aaadba",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1923ab15-4ce4-43d2-b60b-121dc098065c"
        },
        "item": {
          "id": "98785226-d576-4d5d-b2c8-974ee7e76e2e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "edbc905a-15a5-42b7-a9d7-eb4bc66e0ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca48a0e-1d09-41e7-bee4-21211359b43a",
        "cursor": {
          "ref": "e6664099-9a2a-4f84-9a47-1bffdc097e65",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "04ff38c9-03db-4265-9b27-ae60e88809c5"
        },
        "item": {
          "id": "eca48a0e-1d09-41e7-bee4-21211359b43a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e28311c2-595b-4a7a-9791-573220e91326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005964c9-3ead-4baf-9e6c-9a805be7c6a1",
        "cursor": {
          "ref": "5ab8ac0c-3924-4526-b203-97b8bcbb6194",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "92eb331f-c000-4bb3-8f2a-1fd2dc0647cc"
        },
        "item": {
          "id": "005964c9-3ead-4baf-9e6c-9a805be7c6a1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "14d03207-4dea-4e54-a792-1cf0c7ace6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2609caab-c2d2-4923-a2fa-d10bdca643f6",
        "cursor": {
          "ref": "70ece343-5155-4860-a855-5adf92bc03bd",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8ad6b379-1545-4824-a43b-cecdb481af01"
        },
        "item": {
          "id": "2609caab-c2d2-4923-a2fa-d10bdca643f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5b9eb5f-da21-49a4-8cd0-5cb2892421fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f719a7-bd83-4a84-b1fb-faab2c78fa7a",
        "cursor": {
          "ref": "7c3d2add-d1f0-47a7-b04b-77e7672931e6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "517a7157-ec1d-4fe9-bc12-0496f9193d2c"
        },
        "item": {
          "id": "a1f719a7-bd83-4a84-b1fb-faab2c78fa7a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ab02fc5-35f0-462e-9268-bbda275490c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f3e95b-cd38-4030-a8eb-ed13476dca7f",
        "cursor": {
          "ref": "04ec4da4-ce08-4918-bd4c-4cc03be9f692",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "22d959b8-c7d1-4932-82c6-b6e99c4653a7"
        },
        "item": {
          "id": "77f3e95b-cd38-4030-a8eb-ed13476dca7f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e3243bfe-21a5-4b82-a14e-08e3af1ab5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52999748-e865-49ba-b87f-a580859d9773",
        "cursor": {
          "ref": "a1e9d68a-16ff-4e44-b0e4-18af07bc7508",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "02f6dd47-afaa-4249-b98b-175d973d5082"
        },
        "item": {
          "id": "52999748-e865-49ba-b87f-a580859d9773",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "408a2dd2-cb3a-484e-9281-409b6fe46c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f134bc-54bf-4048-81fc-341b0b885f26",
        "cursor": {
          "ref": "48f7d759-2929-4cff-b839-655b1756c2bc",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ace9bdb4-f510-4458-adec-3ed4f9315fdc"
        },
        "item": {
          "id": "46f134bc-54bf-4048-81fc-341b0b885f26",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8ff3896c-02d7-43cd-bd26-d3eb77e43b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4175ca46-8967-4d20-b563-8dda1f09b20f",
        "cursor": {
          "ref": "64544c4f-bc02-4bee-b3a6-a3f484924cf0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a7bb6f77-35f8-4318-b256-1c7926a55321"
        },
        "item": {
          "id": "4175ca46-8967-4d20-b563-8dda1f09b20f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2c0b4ab0-9fdf-457e-a1b0-b62d5ec8d399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfce64b-8432-45e1-8580-b03cd29876c7",
        "cursor": {
          "ref": "88904c65-ed5c-4d3b-a3b2-866efd844e74",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f1ffce69-34b0-4da1-bf00-436db7dca25b"
        },
        "item": {
          "id": "fbfce64b-8432-45e1-8580-b03cd29876c7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99871336-f4b4-43b5-95a9-84750efe6546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2d04c0-d8d0-47a6-a4d3-bc60244b61fa",
        "cursor": {
          "ref": "b4de8b84-8ad2-422f-993e-8866dc0abe67",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1bfca67a-3c39-4bbe-b3ef-9153b60dab82"
        },
        "item": {
          "id": "3b2d04c0-d8d0-47a6-a4d3-bc60244b61fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f49a0850-19bd-4ffc-88c3-d592d573e9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb4b7e4-17bf-49b6-8142-e2cf660dcf5b",
        "cursor": {
          "ref": "2b6de00d-67b4-4b72-8eb5-b82d13ac81d8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0f62694e-8f5a-4347-a64e-40e13902f259"
        },
        "item": {
          "id": "3cb4b7e4-17bf-49b6-8142-e2cf660dcf5b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b3ca5521-e489-43ca-9ca4-25fab6bcf135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58cc243-de8c-492f-8a1f-af79f9808298",
        "cursor": {
          "ref": "8d7a42a0-5c9b-4829-bb9f-366c13202b66",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a7acbac4-2227-414b-b675-e64f6f675fb2"
        },
        "item": {
          "id": "d58cc243-de8c-492f-8a1f-af79f9808298",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "07238f9f-f62d-4509-b317-a31d20095cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5d1197-9222-4a85-af76-8de9ec99d783",
        "cursor": {
          "ref": "ae06ca61-e27a-4cfe-b110-3306f9184b42",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4d38c627-e0cc-4d61-b1cb-2a2520dfc101"
        },
        "item": {
          "id": "7d5d1197-9222-4a85-af76-8de9ec99d783",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9b2a8b3f-a12f-4334-a9e1-e33e8265c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94aa9aa4-9bd7-4b6e-9caa-e8e8ea12c52e",
        "cursor": {
          "ref": "078aa7b1-68d5-4eb1-bcc7-594da393928b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e14d0698-a02a-4f74-aa26-694f8e32700e"
        },
        "item": {
          "id": "94aa9aa4-9bd7-4b6e-9caa-e8e8ea12c52e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c5a79cc9-40c3-4c8d-b672-c34e7c3289a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45f4c40-ce67-44a7-b994-85d98d07fc13",
        "cursor": {
          "ref": "fa02d9d9-9c90-44d9-98f9-73691cd80fd7",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "73513b84-3f3a-44d7-bafb-b14a91f69836"
        },
        "item": {
          "id": "c45f4c40-ce67-44a7-b994-85d98d07fc13",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3e8ad4ec-6a51-421f-a371-75217e0f1d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89db779-74ce-4c7c-9294-d9a396c4acf6",
        "cursor": {
          "ref": "38ea4aaa-8586-417f-8a1a-ea6f2ce49963",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b525b4fc-c258-4fda-bf7b-e04fc077cc71"
        },
        "item": {
          "id": "c89db779-74ce-4c7c-9294-d9a396c4acf6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a1168188-69bd-49cc-932e-9b612d2dd52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4061823f-b9cb-4755-9b96-b64a816cb7b0",
        "cursor": {
          "ref": "ec049db8-4322-4f40-9961-733230ba433f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b083c538-e37e-4a2e-8a81-16507faa762c"
        },
        "item": {
          "id": "4061823f-b9cb-4755-9b96-b64a816cb7b0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f5d1b55-8853-4750-a59b-f393c8a35dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcce9f77-f1ae-4f65-8418-cd3cd16efc12",
        "cursor": {
          "ref": "6a8f9255-0fa0-499e-ae2d-bdc226c4cefd",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9d0a4d7-e46c-4575-86ae-e8eb051f6429"
        },
        "item": {
          "id": "bcce9f77-f1ae-4f65-8418-cd3cd16efc12",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "da2903fa-7e14-442d-98f2-19a862352c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8b1322-c20a-4453-b423-d618b23f1174",
        "cursor": {
          "ref": "14cf6cfc-fcaa-432b-b461-bbdb1669bafb",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "29fc6391-dba4-4b1d-afe2-204ed4a78ccf"
        },
        "item": {
          "id": "fd8b1322-c20a-4453-b423-d618b23f1174",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ed39376f-132f-4f80-b2a9-a1a62ce362ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67151ee3-5195-4b5b-8d7a-7189e6bb6749",
        "cursor": {
          "ref": "d1929c58-e907-49e1-ae29-288349e5c69e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "928110d5-78fa-4f65-94ef-a24bba730cd2"
        },
        "item": {
          "id": "67151ee3-5195-4b5b-8d7a-7189e6bb6749",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6fc87a92-2bb4-4d94-94ae-86e177f9b73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fa9226-d0cd-41af-8ebd-fae0a726c742",
        "cursor": {
          "ref": "7325988c-aa03-40c6-bc1f-bb2f6f6fbee4",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "03629cfa-0e61-4aa2-a3f3-e4296c420150"
        },
        "item": {
          "id": "84fa9226-d0cd-41af-8ebd-fae0a726c742",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "af121f0b-69ba-4149-8d8b-c7e8d5783200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9502ace2-8fa0-4155-b59a-2b9dcaa01fb7",
        "cursor": {
          "ref": "a28c90fa-e34a-42ee-88ad-ea45ab212278",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7c4a6cac-d4c1-448a-9281-01a3f0f1983a"
        },
        "item": {
          "id": "9502ace2-8fa0-4155-b59a-2b9dcaa01fb7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "25abf031-fba7-47a6-ad80-95d4136ca827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e64230-8a99-4622-8177-e18c5f32a7e2",
        "cursor": {
          "ref": "d4f79cb7-1c12-41e6-98db-d8528942a8c1",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ade2b022-0f1a-415a-8531-56d0d3832ec5"
        },
        "item": {
          "id": "45e64230-8a99-4622-8177-e18c5f32a7e2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fc061f33-4770-4011-99bc-d68162734ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db597431-ea51-4d98-b3f5-ec490e6ca5ff",
        "cursor": {
          "ref": "12733978-ae09-4fb4-8934-ef08618e35b9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c8dcd60d-b10f-424a-91c3-4fba347ecd5e"
        },
        "item": {
          "id": "db597431-ea51-4d98-b3f5-ec490e6ca5ff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "78eacad2-546f-435c-831c-ca90bff473b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3af7ba-d83b-4045-859d-3a9d3672daee",
        "cursor": {
          "ref": "9e3125aa-c2a5-4e63-b7de-bce1b99cb7a4",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "65bf36f6-954e-47f6-93a1-014e12dc0a09"
        },
        "item": {
          "id": "de3af7ba-d83b-4045-859d-3a9d3672daee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d7ab2b17-bec1-4cff-9a93-78345f5a438f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd47d92-353c-46da-b5b6-452074e0530a",
        "cursor": {
          "ref": "a0bb249b-49dd-407b-a000-81858d2adfdf",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "12a55880-1829-4a61-82f0-9e9f5f8df4df"
        },
        "item": {
          "id": "ebd47d92-353c-46da-b5b6-452074e0530a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fc6deac4-544a-42ed-89cf-69fb62942639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d615ed2-36b1-4011-8bc8-2f859828ae6a",
        "cursor": {
          "ref": "27b9bf36-bb3d-48db-a3cb-32022ac62c2a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "eb0259a0-f554-4183-89c1-6c5464352ef7"
        },
        "item": {
          "id": "1d615ed2-36b1-4011-8bc8-2f859828ae6a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5871bcd2-f736-4204-b1d3-4c12dbad5372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a1775f-8651-476d-a2ee-53215bbaa9c5",
        "cursor": {
          "ref": "6107c688-5e99-4231-87ce-cbd9f1054524",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7a0ce260-73e3-40bd-815f-7bb88660d6b7"
        },
        "item": {
          "id": "94a1775f-8651-476d-a2ee-53215bbaa9c5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "41ddd5d8-33a6-4f7e-8b6f-7d22a90b529a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7d4a8f-3580-4218-bec4-5f9b238fc793",
        "cursor": {
          "ref": "dfccd995-7cd7-4e27-adc0-983bcb04ec2a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0ac695dd-d466-4fbd-b8b8-56bf818efe55"
        },
        "item": {
          "id": "5e7d4a8f-3580-4218-bec4-5f9b238fc793",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aa8b2bdc-6650-4768-9b07-c3e5ceddf900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163f99cf-b26a-466e-83d1-ebbc55aba631",
        "cursor": {
          "ref": "ce09032d-fd6f-4827-8a6e-aa594b798b2d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d701aef0-29b3-4228-a46d-3adeb6b82823"
        },
        "item": {
          "id": "163f99cf-b26a-466e-83d1-ebbc55aba631",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "167014f6-db87-4b3e-af66-032591a149a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d768e8-2104-4955-a30e-160d6c561b23",
        "cursor": {
          "ref": "611808f8-834c-4a0a-92ee-1a43f0bb2a1f",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ff89d4b1-41f9-44ff-86c1-cf88696ecd99"
        },
        "item": {
          "id": "10d768e8-2104-4955-a30e-160d6c561b23",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0d6854b6-b5d1-4252-b5ab-265de81d963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6630c882-444f-4311-8591-f0b3f1440486",
        "cursor": {
          "ref": "bec5b8c9-c06b-433b-bbe2-4b6c8e23521b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2d44d769-3d23-42a5-bd87-47102392bfda"
        },
        "item": {
          "id": "6630c882-444f-4311-8591-f0b3f1440486",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7fdbdd2e-28f6-44dc-a486-fe754f608eaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695aa055-c834-4127-b720-7a4a13f8a568",
        "cursor": {
          "ref": "87448ba0-0d75-4701-aaf9-68b53db09033",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4b814cec-8774-49f9-ac77-71f4aa9bfe1e"
        },
        "item": {
          "id": "695aa055-c834-4127-b720-7a4a13f8a568",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4fcc6530-8ada-4cc1-8d74-a5461686d944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21706f0f-65de-489f-9a12-a6a06e9eb17d",
        "cursor": {
          "ref": "69532daf-e2d8-4b34-833d-d19569b89a2b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5eecc55a-32cf-4892-8b3b-b784ff9d9a99"
        },
        "item": {
          "id": "21706f0f-65de-489f-9a12-a6a06e9eb17d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6dd07571-bd76-4cfb-bf7a-95ee8cebfd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7de69c-afa4-4446-a629-2367b903f51a",
        "cursor": {
          "ref": "1284f395-52d3-4cb5-a975-ab96a8e3f37b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "692a3cc4-9c63-425e-a8bd-050c1094a29e"
        },
        "item": {
          "id": "4b7de69c-afa4-4446-a629-2367b903f51a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d8712b45-f32b-4003-a802-2175bb3fbdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dc902b-6bc3-4e0a-975d-50f428debe99",
        "cursor": {
          "ref": "a28c5664-4940-40d1-8c0a-1e00c668f9bf",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f1437692-8a32-4f11-acac-4b3200b61808"
        },
        "item": {
          "id": "d3dc902b-6bc3-4e0a-975d-50f428debe99",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8c32c745-e353-4a02-be0e-dd808cfdba4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c8e11b-84e3-4cbc-8f6e-59d33b4809fb",
        "cursor": {
          "ref": "c9bf8e57-d65e-434a-b52b-efc6bf7dd4fc",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "769d25ed-1ee8-4a93-978d-5bda7136084f"
        },
        "item": {
          "id": "23c8e11b-84e3-4cbc-8f6e-59d33b4809fb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c32d1c5c-2057-46bf-8ddc-0778efdc74ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a98dc85-12fb-4f3a-9f98-56f4e6db6099",
        "cursor": {
          "ref": "73d4c91f-09e9-4f47-a5f2-aa221015ec3a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fd86f154-e0e2-4cbb-9238-f3461d360c25"
        },
        "item": {
          "id": "9a98dc85-12fb-4f3a-9f98-56f4e6db6099",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "50d6e721-8dab-46f0-8569-4acc371c8798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617c1eee-01fe-465d-a94b-1ac41cc9bfba",
        "cursor": {
          "ref": "dc8540fb-0c2d-47e7-a99c-6fe38d6fa66b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "428c1111-3acf-4877-b461-a279eb5c9270"
        },
        "item": {
          "id": "617c1eee-01fe-465d-a94b-1ac41cc9bfba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e196c135-cb38-487b-9741-40042802e3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999595d1-3063-4bee-8cdf-14e7f99b9ad2",
        "cursor": {
          "ref": "ae50f09b-2ec5-4bf4-9597-40316f10d218",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e42cbdf4-b04e-4623-a5e7-9d3c1f6d1bbe"
        },
        "item": {
          "id": "999595d1-3063-4bee-8cdf-14e7f99b9ad2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "15c63822-c295-4437-9baf-50f4597e38e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dc60ea-f937-46d0-9174-5b96efc55071",
        "cursor": {
          "ref": "0e69dd85-cc83-4a7c-89e2-c423edd1529e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bea9bfd3-7aa7-411e-9115-e5fa93e02de0"
        },
        "item": {
          "id": "84dc60ea-f937-46d0-9174-5b96efc55071",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "07dcd2bb-c68c-4f5e-8bbb-84f10311f027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43f946e-5429-4199-bc50-54b60a2b7863",
        "cursor": {
          "ref": "39b83c36-9547-4d3f-9c34-306506c6eee1",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4fa271ea-e574-4226-8e53-6153cd1e1560"
        },
        "item": {
          "id": "a43f946e-5429-4199-bc50-54b60a2b7863",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f897c0fd-8267-4fb6-ba63-c8955f8296e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7e0ea4-5fd2-4130-8695-10408a01e833",
        "cursor": {
          "ref": "99c55ab5-ef39-43ec-b553-93c4778cab54",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e7f1842b-1319-43df-ae77-4fe6ad86dad3"
        },
        "item": {
          "id": "fe7e0ea4-5fd2-4130-8695-10408a01e833",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1625151e-5ead-4467-9894-22c643638eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0ef196-58fb-40e9-8a19-8c232a9776de",
        "cursor": {
          "ref": "ca493fab-0973-4b41-be37-0ad262ec4777",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "55191d08-176d-48d7-a3ae-6c6d790f3775"
        },
        "item": {
          "id": "2b0ef196-58fb-40e9-8a19-8c232a9776de",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "52ade4fd-4794-4201-8831-f3a3c858b017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e64d5bd-8b37-401d-80bd-24dcd496f043",
        "cursor": {
          "ref": "87da98ac-caaa-4dab-8c5f-1ab261058c90",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c0521cf9-e9a0-49f0-8176-b1df96e204be"
        },
        "item": {
          "id": "9e64d5bd-8b37-401d-80bd-24dcd496f043",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f2ec433f-6e7a-45d8-ada5-152fdb1c9726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e2a56e-5342-49e5-a38d-6534c7c22a27",
        "cursor": {
          "ref": "36a38b25-90d2-4a58-b17e-a18bd4a11a85",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8ab083e1-085e-47fd-8e31-5bd1be0110b3"
        },
        "item": {
          "id": "72e2a56e-5342-49e5-a38d-6534c7c22a27",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dd81959b-ca53-4ca6-a27b-45f3e22e7279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fe4fe1-cc44-4dc8-8a93-53bb5d277621",
        "cursor": {
          "ref": "29a3d85d-37f4-4ce0-b508-70ff848d3e27",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e0825429-6bbe-42be-9f46-cc8ba4fd9837"
        },
        "item": {
          "id": "a8fe4fe1-cc44-4dc8-8a93-53bb5d277621",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ce8a1374-c00e-461e-b883-11b639577a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89e9d0f-7843-404f-8773-8202374a1ddf",
        "cursor": {
          "ref": "93e6854d-c645-4427-9ebb-2d9b2002debf",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cce0d4b8-a7c4-4654-a7cf-3083fde30486"
        },
        "item": {
          "id": "f89e9d0f-7843-404f-8773-8202374a1ddf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f33860c-2209-4c5f-baf5-8af2529694bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306f87d9-5e60-4669-b612-9540f4bca342",
        "cursor": {
          "ref": "cfd61fb3-1526-47d2-8a38-6c7e6c8db9e2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ae6a7704-c2c9-4171-9890-7d01b200d1f4"
        },
        "item": {
          "id": "306f87d9-5e60-4669-b612-9540f4bca342",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5cd72050-6ba3-4c9a-a158-af3a146da502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e9bff1-1b93-4a13-a7d8-b673797b7166",
        "cursor": {
          "ref": "7e112685-7060-4d35-a2b1-9e7e7945eb71",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0018043c-5a56-4b33-87df-5c2815116892"
        },
        "item": {
          "id": "25e9bff1-1b93-4a13-a7d8-b673797b7166",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d2b1d850-de1b-4b96-b400-7b183f0e4a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657d2f25-f656-4572-92fc-aa5e9037d4f3",
        "cursor": {
          "ref": "eeb56574-8b3e-4bd7-9f3b-a18efbd0ce69",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5cd447f3-c93b-4b50-862b-1a57b1cfb4d8"
        },
        "item": {
          "id": "657d2f25-f656-4572-92fc-aa5e9037d4f3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aa2399e2-dbbf-4db3-ae6d-f78a91882f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d2e794-469b-410f-a938-440c69ea49da",
        "cursor": {
          "ref": "8c252a13-06a2-47ad-8948-98ea32d01dc4",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0200cc6e-4b80-4a3b-be8f-ea7e9f329096"
        },
        "item": {
          "id": "79d2e794-469b-410f-a938-440c69ea49da",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ace1b5d7-b36e-45f6-a802-095e53c5dce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01203aa2-df75-4c1f-a1dc-945ca52df0a7",
        "cursor": {
          "ref": "ba710e9e-a5c2-40f6-8cca-8585a17dfcc9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "95718034-a822-4beb-ab00-59078bfd9fd4"
        },
        "item": {
          "id": "01203aa2-df75-4c1f-a1dc-945ca52df0a7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9d09b187-156d-4926-87da-24a27aaacfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d8187e-8eb6-49f9-a814-49c271bf8122",
        "cursor": {
          "ref": "e18f9a38-0031-4fe9-ab38-8e97f860f87f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1deda4c0-681c-4d22-8c42-2e31de9660e6"
        },
        "item": {
          "id": "b3d8187e-8eb6-49f9-a814-49c271bf8122",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "323ccfec-b6c1-4704-99e3-0ee7690a5aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2dae61-793f-485a-ab55-986695dee97e",
        "cursor": {
          "ref": "84e55298-8467-4c06-9651-b46ec4180342",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b6aa35e8-942f-4c8b-b5ca-ca705c23b3b7"
        },
        "item": {
          "id": "df2dae61-793f-485a-ab55-986695dee97e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7561c0fd-7cad-4899-974b-d453e2864e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0affd1c-45b8-47f1-adb6-5317fb2ce47f",
        "cursor": {
          "ref": "dd961b4e-b44e-4668-bf27-790cac7a8190",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c4503165-78fe-47b9-a2db-125d23104f1d"
        },
        "item": {
          "id": "e0affd1c-45b8-47f1-adb6-5317fb2ce47f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9ceb88a-d901-42ae-ad9f-69f02d011cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4973a32b-05de-4c11-b69c-e987f121dab2",
        "cursor": {
          "ref": "d7313b42-b10f-445f-82d6-68eaeebadeb3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ae8a8203-57f2-4fc9-926c-38f4945db09b"
        },
        "item": {
          "id": "4973a32b-05de-4c11-b69c-e987f121dab2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8a1aa9e8-d4f0-4d65-b810-0087763b2b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3328abbc-af53-424e-ac0c-aba42b3518da",
        "cursor": {
          "ref": "af6c8a52-36a5-4a0c-9775-cac895c268b9",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eb1ace34-9f61-430f-a51a-133d161ef825"
        },
        "item": {
          "id": "3328abbc-af53-424e-ac0c-aba42b3518da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cad73abc-d8eb-4fd7-a37f-54b4a1968038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f467a40-e260-46b8-b0c8-0688452f04f3",
        "cursor": {
          "ref": "2a9e11ef-b9d1-40ef-ab21-0e20725e9800",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6026bf2c-5bf2-48d1-aa85-d2b9447c5a54"
        },
        "item": {
          "id": "0f467a40-e260-46b8-b0c8-0688452f04f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1b5bcc46-547b-4994-854f-77b40464691d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72448411-9896-4215-a513-25677783b443",
        "cursor": {
          "ref": "65320cc2-bc56-4eb1-9078-f83f1c5802a6",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "968a258a-8cf6-4fba-8da6-71ee2f71f80a"
        },
        "item": {
          "id": "72448411-9896-4215-a513-25677783b443",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f65638cf-5c3a-48f5-ad59-faa5cf713217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5dd3f2-b188-4018-8f19-13f0feb6d3fe",
        "cursor": {
          "ref": "a699b6ba-c507-42b0-a1c3-142b530b26b5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6fbe7237-fddc-4bc0-a1fb-b1e346bf89d3"
        },
        "item": {
          "id": "8d5dd3f2-b188-4018-8f19-13f0feb6d3fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "04377068-bc63-4b92-a073-ae2827f43f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2e80bf-3c41-4414-94a4-80ab601db274",
        "cursor": {
          "ref": "57868ae8-7fff-45d8-8932-f7fac4dc6b26",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "21dff835-6a07-4b84-9f2e-21a54d9fa48c"
        },
        "item": {
          "id": "6d2e80bf-3c41-4414-94a4-80ab601db274",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "57477e7c-1bc2-436d-9962-579d71e9b68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963e203c-7a63-4125-afe4-c2583bec4b68",
        "cursor": {
          "ref": "aa34fab4-4d8e-4313-bdfd-cc12475759e6",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "de4af8fc-0e68-4a2d-a72d-f6a008c8a50f"
        },
        "item": {
          "id": "963e203c-7a63-4125-afe4-c2583bec4b68",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9ee16c7-133f-4f7c-9628-5d21bb61766b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afdf955-0b82-461c-a6fc-8cb58cce5a0b",
        "cursor": {
          "ref": "0d830d13-c932-450a-bfe5-08f5e89c3d57",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f4e717a9-2eb9-405c-b88a-0968817fd5d0"
        },
        "item": {
          "id": "7afdf955-0b82-461c-a6fc-8cb58cce5a0b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e979059d-a226-4a21-8c62-6324ef9569ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf02f9d-dae0-4569-9b18-091ecd5e4f66",
        "cursor": {
          "ref": "af3af679-4007-44e3-aa65-e485b462ff46",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8f5a8e0a-552f-41ed-977e-a068c40ed405"
        },
        "item": {
          "id": "7bf02f9d-dae0-4569-9b18-091ecd5e4f66",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "72d95ee4-d9c9-449d-9bdb-281190c1542c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca01aba-bffe-4da3-86f5-889e658094e5",
        "cursor": {
          "ref": "d8d05c51-7cbf-4174-b59a-796c6378152d",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4fcdd4b8-7b81-4193-a684-e1f15c467fad"
        },
        "item": {
          "id": "dca01aba-bffe-4da3-86f5-889e658094e5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "50684a8d-0aa0-48c8-a37c-086f9ad1f1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99171a6-9a0f-4b06-8b75-fd73212255cc",
        "cursor": {
          "ref": "b7bbdcd8-5f63-4138-8e4a-242a279f9f96",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "92a917c6-3a65-45d2-bed4-63efb85b4055"
        },
        "item": {
          "id": "b99171a6-9a0f-4b06-8b75-fd73212255cc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3145553d-54d6-4375-bbc9-adcdbcf4f023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c755ae-6f64-4285-b825-c54a0d9bd700",
        "cursor": {
          "ref": "e90999df-1f2b-4c9f-86df-c7c27540a9ec",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7f107cb9-cf7e-440a-933f-b06652aca70c"
        },
        "item": {
          "id": "b1c755ae-6f64-4285-b825-c54a0d9bd700",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "01d5cfb2-f8f8-42ba-865c-cbb32a1ddea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110a18ea-65aa-40cf-8770-9a66d936da5d",
        "cursor": {
          "ref": "9801de1a-3291-4614-b69f-6a493939537c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2eb25ecc-effd-4c0e-8dfe-afab48a6a83d"
        },
        "item": {
          "id": "110a18ea-65aa-40cf-8770-9a66d936da5d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c442d92f-84fd-414f-bde3-1eaea51cf133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f674697-f27c-40a1-92d1-c50c6dce39bd",
        "cursor": {
          "ref": "674b4d2e-ba83-4cf9-bb3d-4c125973ebad",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9e089250-a8c5-40d3-8133-324ed3ae6b54"
        },
        "item": {
          "id": "9f674697-f27c-40a1-92d1-c50c6dce39bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6dfa67a0-3767-4b9d-ac77-0a5682f8889a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8ea1dd-7fb9-4362-a319-911d9f48d8dd",
        "cursor": {
          "ref": "13f5487d-1e0e-4948-9971-ea32f2d97581",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3e1205ce-52a7-4e5e-9221-13e10cbde902"
        },
        "item": {
          "id": "2f8ea1dd-7fb9-4362-a319-911d9f48d8dd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2bf2cc0d-ce74-4498-bd5d-2107b78fbe83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef98ff7-e78a-4a8f-af76-5e5352bcfba6",
        "cursor": {
          "ref": "edddbd79-c199-4675-a301-ebd6b583018a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ead2c4b1-203e-4bdc-ad9c-25adec714d29"
        },
        "item": {
          "id": "aef98ff7-e78a-4a8f-af76-5e5352bcfba6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a5fc2350-276d-45e4-9fff-30de12878362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a40a2c-8cde-49b0-87e1-007218dfef29",
        "cursor": {
          "ref": "c5bb85be-9141-41e0-a946-a7af44e532e2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "74b17505-d707-420b-8f8f-99ee579b51f9"
        },
        "item": {
          "id": "88a40a2c-8cde-49b0-87e1-007218dfef29",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d8ac2945-63c8-44e4-b87b-9ad2ed1be94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea99e20a-f35b-4635-a028-6d66682ab8cd",
        "cursor": {
          "ref": "d8c438fb-9e3d-46fa-be79-244440980ecc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fe00b36c-802e-45a3-9db3-d88e8d69bf05"
        },
        "item": {
          "id": "ea99e20a-f35b-4635-a028-6d66682ab8cd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b717ec6f-11c9-491c-a3a5-eb17a30984d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498493e7-529c-416d-b600-8cdbe1802d0e",
        "cursor": {
          "ref": "2fa69f03-113e-4b14-9c28-453ff661ebf9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a1970a50-168f-4ad3-862d-7c529f3d1ada"
        },
        "item": {
          "id": "498493e7-529c-416d-b600-8cdbe1802d0e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "be28d752-718d-4f38-a54f-f90384f95f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3c99f1-09c3-4662-be73-6d357744c7e4",
        "cursor": {
          "ref": "ec15bd75-b4f5-4fca-b033-786272185cec",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5143b5eb-b0ea-46aa-be44-6b6498f087dc"
        },
        "item": {
          "id": "cd3c99f1-09c3-4662-be73-6d357744c7e4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d6b36884-9fc2-4d5b-902f-51c5cd80013d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fad145-cb2c-4a17-8441-2fcf4809eefb",
        "cursor": {
          "ref": "e29735b2-b6c1-43ef-bceb-d1e4c6d519e2",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d0597ecd-5a97-4442-b008-e6932b00a8de"
        },
        "item": {
          "id": "e8fad145-cb2c-4a17-8441-2fcf4809eefb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "80a8d294-3ef4-4d85-be23-7a8ad4ad4def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e74c3f-cecf-427b-9373-9ff282132b7a",
        "cursor": {
          "ref": "46bd8214-030e-4750-8cc9-a235099f781e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8093c1fa-af2d-4322-81ea-de5de2ff95f6"
        },
        "item": {
          "id": "d9e74c3f-cecf-427b-9373-9ff282132b7a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7a7fb166-12a5-4d58-8810-35a8afed834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a7568d-3ca8-4ccf-93f3-52a3198d6ca7",
        "cursor": {
          "ref": "dfd1fdc4-0492-4722-947a-9efe0e482e33",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ff35749-95ff-496f-912a-0a74b1593b39"
        },
        "item": {
          "id": "86a7568d-3ca8-4ccf-93f3-52a3198d6ca7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "98103f0f-b9b6-47a7-a84e-a87f3d19ed18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3e8774-a049-459d-aa7b-6b353360b1d9",
        "cursor": {
          "ref": "47aa7170-2641-49d8-9fb6-a6a79c49d118",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e1aad606-8422-4fa2-b72a-b06fe1c1869e"
        },
        "item": {
          "id": "7d3e8774-a049-459d-aa7b-6b353360b1d9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7e8b8f05-111a-4177-8e74-d93a698a2436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe89570c-be59-4c82-824e-9282c2ca7c98",
        "cursor": {
          "ref": "2d5e9eef-4ad2-4489-bc3e-8bb8a83765f6",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e6f7887f-4743-420d-9fd7-35b0647a39da"
        },
        "item": {
          "id": "fe89570c-be59-4c82-824e-9282c2ca7c98",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "94bf467d-200e-426a-9519-0040d8da1b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa877a4c-fc03-4003-b900-7deee85d8a08",
        "cursor": {
          "ref": "68cea3c7-803b-4e14-96bf-85fde7fe9fee",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "584a755a-a24e-43e1-afa8-4fb21076b482"
        },
        "item": {
          "id": "aa877a4c-fc03-4003-b900-7deee85d8a08",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cfaba2c9-9a34-468a-a75e-f4c0a9cd4311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6da4d7-cd18-4df0-a275-496317212696",
        "cursor": {
          "ref": "f733fc4d-8e2f-4ccb-ae98-981f9ec0e562",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9cd0283-925e-417c-b1f8-30ff14126f4f"
        },
        "item": {
          "id": "dc6da4d7-cd18-4df0-a275-496317212696",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8ba87b1a-3942-4a17-a3e7-f95f581364d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d1e47e-7768-4191-a5dc-2dc11c1b5e15",
        "cursor": {
          "ref": "f86b269b-b233-45fa-98fb-e7bf63bfea45",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "62e37352-baec-41f6-9641-f676629feb9f"
        },
        "item": {
          "id": "92d1e47e-7768-4191-a5dc-2dc11c1b5e15",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0fba2b4f-1840-4ac2-80ab-ca14471311c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a9593e-f36e-4f65-a651-dd4f5d58cc53",
        "cursor": {
          "ref": "4c3f049d-1358-4e89-815f-4dbc8d89778c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "de6fc698-1ee0-4aa4-a507-45af519f0c12"
        },
        "item": {
          "id": "22a9593e-f36e-4f65-a651-dd4f5d58cc53",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7710ed18-acb7-4967-b42f-73d8f4b55f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d0c159-e3cc-4e2c-aa90-9c2e5998d475",
        "cursor": {
          "ref": "8f70d212-c6f0-4961-81ec-41c607843d79",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6c0a2d40-a1fd-4df2-a139-e01cd9a1ec28"
        },
        "item": {
          "id": "89d0c159-e3cc-4e2c-aa90-9c2e5998d475",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "003b19c5-7f70-45ca-b4dd-188e4dbcf9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5116d4a-09bc-4ec2-aeac-02ba3fafca15",
        "cursor": {
          "ref": "39933bc4-6ab8-49a1-aff6-057b73c62fa9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f482f3de-5369-4b99-aca8-a2cd32f30c58"
        },
        "item": {
          "id": "d5116d4a-09bc-4ec2-aeac-02ba3fafca15",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0bb75808-97ef-4975-8683-041ad245e416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fb81f5-58fc-45a8-88e4-83f55fb9a180",
        "cursor": {
          "ref": "0948871b-d209-419a-8be1-187f8f4315de",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "48ed1fd4-8613-4566-ba69-e56f35a24a7f"
        },
        "item": {
          "id": "b6fb81f5-58fc-45a8-88e4-83f55fb9a180",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d1047c93-078f-41d2-80dc-522a6b9f55d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098423a5-8120-41cc-b554-ebf7a92f7b52",
        "cursor": {
          "ref": "fcc03ad5-ff41-4fb2-8c02-be0f924ff402",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d7b995ea-af84-4341-84f0-8c40616f63e7"
        },
        "item": {
          "id": "098423a5-8120-41cc-b554-ebf7a92f7b52",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7c058166-0946-4155-802e-acd6022cd768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5092b648-d279-4528-b64f-26d1a0d945eb",
        "cursor": {
          "ref": "dc12d1a8-9dd4-4ddb-968b-c5c92135e54f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "469d12eb-884f-400e-9ec4-16b72133b5c6"
        },
        "item": {
          "id": "5092b648-d279-4528-b64f-26d1a0d945eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "435b3050-0e7c-49ad-b3b8-24e7e24776f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d723045-639b-465f-8e39-3fa98f5d93e0",
        "cursor": {
          "ref": "6c00e0b2-97b0-467b-80be-64854aadcc2a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e8bb44b3-f2ef-439c-a8d7-b66d87cc62e0"
        },
        "item": {
          "id": "8d723045-639b-465f-8e39-3fa98f5d93e0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bb77edf8-7338-4bad-90b7-28ea94fb847d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a012a7a-7e1e-4b1b-9bfa-48d300fcae5b",
        "cursor": {
          "ref": "1f56e994-9b2f-4dea-b045-dd18b294a938",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1905148b-8563-4d7e-983e-232719adb08f"
        },
        "item": {
          "id": "1a012a7a-7e1e-4b1b-9bfa-48d300fcae5b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3e6ed497-53e1-4e02-8ee0-51c0c8a78c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f08c44-f79d-4f45-ae92-47636c071890",
        "cursor": {
          "ref": "7af1977e-ef81-4bfe-8bb9-d50a65f3b56e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "90945b0f-99e1-45a8-bcfc-9800442fbf1a"
        },
        "item": {
          "id": "d8f08c44-f79d-4f45-ae92-47636c071890",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "beb787b4-b326-4d4a-be41-40769b53c9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cdcf14-1583-410e-87bf-462d6cc76512",
        "cursor": {
          "ref": "c0cc2c49-b46d-46fe-9ca7-ad646612e84e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3bf23735-7d77-47d8-ba2d-4719881c7048"
        },
        "item": {
          "id": "b8cdcf14-1583-410e-87bf-462d6cc76512",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5e00629d-a6a4-4372-a92d-95e67fca0593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319d4754-d0ce-4e44-a69c-3701ec152812",
        "cursor": {
          "ref": "49cc70c0-9c25-4c7a-b118-09dbd99490f1",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5de25353-43f3-433e-a119-f4882adcc9ab"
        },
        "item": {
          "id": "319d4754-d0ce-4e44-a69c-3701ec152812",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a973ea07-d484-41b4-9abc-6bb5d3164c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f6fbbb-c890-4ef7-8379-b232fdd89aaa",
        "cursor": {
          "ref": "4d51e52b-f524-440d-a4e9-eb9983ac6607",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d77eeb63-40a9-4521-a2b2-73e3518afc50"
        },
        "item": {
          "id": "07f6fbbb-c890-4ef7-8379-b232fdd89aaa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e4c51553-2aa5-48fc-866b-24aa925a5d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18940891-e198-48df-a836-f13363269503",
        "cursor": {
          "ref": "29579000-aa64-4e74-88e4-6fc54f078891",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fcdb0890-de1d-47b0-895f-985969ff8c2e"
        },
        "item": {
          "id": "18940891-e198-48df-a836-f13363269503",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3d5cf488-83dd-417b-9c46-f3f754103419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5baf8c-2ceb-4dca-8c06-75fff3aa334b",
        "cursor": {
          "ref": "bc18acbf-55e8-45d9-9705-68c00fa876ea",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "00520107-834a-478c-948d-5bb3daf7aefd"
        },
        "item": {
          "id": "7d5baf8c-2ceb-4dca-8c06-75fff3aa334b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "706589b6-e7c8-4b9f-97ff-d694b3a2d466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ef8a86-a26c-4179-9c14-f6b7b23ef888",
        "cursor": {
          "ref": "18c5e123-d09b-4548-9f89-2bc6320570bc",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8911ad49-1283-400a-bbae-39e900ff49c9"
        },
        "item": {
          "id": "e6ef8a86-a26c-4179-9c14-f6b7b23ef888",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "82bb50f3-1d91-4c63-bf2c-4d03282454da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ea630f-03b7-4bf6-ac35-25ac7af03c02",
        "cursor": {
          "ref": "73cad33c-f5de-4ee4-88f7-fe1d9cfbf66e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "89ea66e7-d21f-4291-b32f-8f371df2f3a1"
        },
        "item": {
          "id": "b9ea630f-03b7-4bf6-ac35-25ac7af03c02",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3d8bca88-fb7f-4f07-958f-6ac60a49aba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a173fcbf-4c9a-42cd-bb6d-b560634aa4f1",
        "cursor": {
          "ref": "6c409148-1bce-40e2-b21b-850719a51260",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5b68b54a-0190-4468-a063-83d5c2c69c6b"
        },
        "item": {
          "id": "a173fcbf-4c9a-42cd-bb6d-b560634aa4f1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2e0e51e7-a8c3-4918-a051-270bb3606732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d2b82-0666-4bdc-a35f-009ff8324210",
        "cursor": {
          "ref": "97eb0fe3-9d4f-4487-9206-7a1ba25b8532",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "789545d2-e2fa-467a-be1f-84ae66ffe0a5"
        },
        "item": {
          "id": "928d2b82-0666-4bdc-a35f-009ff8324210",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a3de65c2-b7fd-43e9-ac0b-3f3b5a7fb25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75211684-686c-429a-be4a-eb5b1d0b346d",
        "cursor": {
          "ref": "5577ebcd-7663-42be-9bf2-babc50d5dcfe",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "819d69ae-db3c-43db-a0e8-d91407e48164"
        },
        "item": {
          "id": "75211684-686c-429a-be4a-eb5b1d0b346d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2d47c4c7-a29b-411a-a589-fc70448d1c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5b9db5-4109-4050-8f51-dea045dec2e3",
        "cursor": {
          "ref": "6c28e862-da7f-4b3b-abeb-c76bb7e00b66",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7816bb15-1566-4d34-a29a-23dc194e1054"
        },
        "item": {
          "id": "2c5b9db5-4109-4050-8f51-dea045dec2e3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8d2f80dc-4e5c-4f16-a28d-5cdfd893cb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8ae443-2e22-4902-b15f-7f0d4f6b20cb",
        "cursor": {
          "ref": "b46ffc7d-dc28-4dbd-ae95-353baceaeca2",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "29c2d9bd-1a50-4c81-ba53-e1ce23d88b96"
        },
        "item": {
          "id": "3b8ae443-2e22-4902-b15f-7f0d4f6b20cb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5bc13e40-ab24-4894-ab1f-f59939278abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff18d86-a00d-4825-b3a1-9ffb6f9d3c45",
        "cursor": {
          "ref": "dde57b61-1bf1-481d-8077-1b6eeb2839b3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6a49f0a1-2ca1-4ca8-8c63-573a57e1c376"
        },
        "item": {
          "id": "5ff18d86-a00d-4825-b3a1-9ffb6f9d3c45",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1cac5235-85fa-48bb-9e16-e7571d1ce8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d997784-5528-4604-a225-221e6a87cdc7",
        "cursor": {
          "ref": "36c1a780-042f-445b-a804-136cde3f62fb",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a0fc98a1-10da-46ef-8a22-29a340bb5798"
        },
        "item": {
          "id": "4d997784-5528-4604-a225-221e6a87cdc7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cc271e9d-9bc0-4d4a-a017-3faeeebdd984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbacc4ac-391d-4663-b742-08925aaccbbd",
        "cursor": {
          "ref": "b88dafdf-981a-4ae0-9d90-7cf7bf7013a2",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2bbe9a01-e331-4f30-9960-dfca4626be66"
        },
        "item": {
          "id": "fbacc4ac-391d-4663-b742-08925aaccbbd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5b53f546-e1c4-4db8-b0e9-5bfaaac26d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8170cb83-0ec7-4254-af46-5e681f95e419",
        "cursor": {
          "ref": "9cfb963f-23eb-40c1-9514-6d2abfabd8ea",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b537a2d6-e69e-4a55-854e-3f9fc90c2213"
        },
        "item": {
          "id": "8170cb83-0ec7-4254-af46-5e681f95e419",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ab1ce081-7d73-4929-8ea8-25d8f7a674d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14c2567-f53e-433b-9bb1-15e777483205",
        "cursor": {
          "ref": "3fb338f7-4e5e-4a96-a758-9e91c844b2fb",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7681d663-e135-4e1d-aa97-588ff95b09ed"
        },
        "item": {
          "id": "b14c2567-f53e-433b-9bb1-15e777483205",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "372804ac-5733-4a43-b140-17fbd6cea7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf757c4-c316-4148-87c8-5eba1ee9db93",
        "cursor": {
          "ref": "3c2cacba-cc2e-4217-9cd7-6785cbc12a4e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "42a4f481-9436-49f5-b52e-c73cd27e1587"
        },
        "item": {
          "id": "adf757c4-c316-4148-87c8-5eba1ee9db93",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ba54cdb9-81f8-467e-bb51-ac7c346f0a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333db53e-468c-4048-b26f-eb3b4527a48d",
        "cursor": {
          "ref": "a4bf83dd-7cbb-450a-91e7-dbbbb7b9884a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5c7f4493-77ff-4dd9-b64f-f807e5d5c375"
        },
        "item": {
          "id": "333db53e-468c-4048-b26f-eb3b4527a48d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "906a48a1-e701-41c3-a6ae-081ef7ad6dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595acee5-005b-4779-8d27-481c1549215f",
        "cursor": {
          "ref": "07c20b8a-1c13-49e1-b361-6ffcdb4c89ea",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "56bc0536-b6df-4913-b5dd-e7b6a98f39e9"
        },
        "item": {
          "id": "595acee5-005b-4779-8d27-481c1549215f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3921a10a-4ab0-497d-bfb6-1b4de95e09cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6232eff-4cab-46bc-90af-73c94a22ee13",
        "cursor": {
          "ref": "2cb7958b-491c-44b8-9e0a-3ec83cbc2989",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "78ae6c94-3918-44f5-9ffc-3fdd685047ad"
        },
        "item": {
          "id": "c6232eff-4cab-46bc-90af-73c94a22ee13",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e6742044-fc0d-40f8-9e0d-d129c6dcc7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab32976b-7f30-4c8b-8f6d-2582e47202e2",
        "cursor": {
          "ref": "1d7f48bd-e649-4d7f-90c8-02406a0754f7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3af3f3f6-a94d-4be1-934a-0729289a6a31"
        },
        "item": {
          "id": "ab32976b-7f30-4c8b-8f6d-2582e47202e2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7dd0c0cd-bf07-45c6-ba44-513ad18f0aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc5bb4f-ee38-4e21-97c3-5b211b0c1b11",
        "cursor": {
          "ref": "bd9d6e7f-62cf-4bb0-b679-9567f2ee9550",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dfe7fa9c-eb2d-4d8a-bcf2-885b96b9e7d0"
        },
        "item": {
          "id": "3fc5bb4f-ee38-4e21-97c3-5b211b0c1b11",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "23171521-b3a4-4970-a427-d4462c989b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f967e5-e0af-4505-8806-0c05ab325618",
        "cursor": {
          "ref": "4fd00b7a-4ef4-4b49-a5bc-980e2103f68e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4023bf51-bb43-4298-8b4c-dde779e7e17c"
        },
        "item": {
          "id": "34f967e5-e0af-4505-8806-0c05ab325618",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fe9ee630-3001-453d-a336-0d8db20d2585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f0d73e-32c6-4b21-845a-f98fc80045e1",
        "cursor": {
          "ref": "33e582d8-5f6d-4a94-a0a8-dc5631fddde7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1fa27a0e-5157-4cd9-a80f-42991903cf01"
        },
        "item": {
          "id": "92f0d73e-32c6-4b21-845a-f98fc80045e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "553dde16-069f-4b6f-8bda-11e200018c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a44006-55c6-4b6c-81fc-4841730fa54c",
        "cursor": {
          "ref": "6f9de52a-06dc-46be-96ff-1c6c9c1d807e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dc2756b0-b6fa-4d88-b813-7661f8561d4c"
        },
        "item": {
          "id": "43a44006-55c6-4b6c-81fc-4841730fa54c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c5359189-7539-4add-8bd8-130f369b2a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55171da-fd8d-4647-a1d0-fe839a872824",
        "cursor": {
          "ref": "b1fc2540-87d2-448e-8d36-cc372a0a20d1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "67f03b0f-855e-4f46-89c9-d4d8c98c77f7"
        },
        "item": {
          "id": "c55171da-fd8d-4647-a1d0-fe839a872824",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4f83345f-830d-4056-a85d-adaa0abf9b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315e1a4d-2e3b-43f6-8f82-8c8d9e9714ff",
        "cursor": {
          "ref": "7255ddaf-8ec9-44c5-bdad-a8c6fb5ab8b3",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "51ef992e-4ccd-4312-bf3f-0e93f848d8b4"
        },
        "item": {
          "id": "315e1a4d-2e3b-43f6-8f82-8c8d9e9714ff",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ed3a66c3-b3e7-42a3-b9c8-bea8e6deebf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e00b7f-98b3-4034-ae8e-7273cb439383",
        "cursor": {
          "ref": "41665937-5208-4797-a750-74267400322b",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f6fec8bf-1b05-4605-9970-8beb99023692"
        },
        "item": {
          "id": "f9e00b7f-98b3-4034-ae8e-7273cb439383",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a6cffd2d-225b-49e8-844f-051a538aa7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d9c5b8-e351-4214-952a-51ca225fd01c",
        "cursor": {
          "ref": "698cef76-749d-4e2f-8750-9e1ed00c7923",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "82d89004-6f73-425d-af1c-8d71072af921"
        },
        "item": {
          "id": "29d9c5b8-e351-4214-952a-51ca225fd01c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "50052ae9-f67f-4f3c-925d-0d65dc03fb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebdbe6e-09b1-4e48-8eac-5eaaaa1fbf8e",
        "cursor": {
          "ref": "26d460f2-86eb-416b-a264-321e4580e3fb",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "540dd12e-99ab-4c77-8bba-a8ffbeb2f70d"
        },
        "item": {
          "id": "0ebdbe6e-09b1-4e48-8eac-5eaaaa1fbf8e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6471fdba-6117-445f-b539-34b29b97261c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e958235-7738-4c7d-95ba-936885bb162e",
        "cursor": {
          "ref": "7b3d24e1-e2f6-4059-9973-b494221d867d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "63435c78-136e-4456-a0cb-3fe7c81f1d08"
        },
        "item": {
          "id": "0e958235-7738-4c7d-95ba-936885bb162e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2fae55bd-d016-4503-b85d-e9d6eb6e44e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91d97db-d5f8-4c91-83d2-e04b2526accc",
        "cursor": {
          "ref": "30cd4095-f79c-4135-854d-cd727ea2681f",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "376a66ea-505b-458f-bf27-9a776dfcbfd2"
        },
        "item": {
          "id": "c91d97db-d5f8-4c91-83d2-e04b2526accc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2f20a8cd-730f-4377-ba77-b9fe46bb2e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9eb3f6-f360-4b6a-92bb-411dc52c5790",
        "cursor": {
          "ref": "003d2eda-b1c5-440f-8bae-1e3b2d1ba9c0",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "868e415d-69ce-4f68-856f-177052e9be58"
        },
        "item": {
          "id": "8a9eb3f6-f360-4b6a-92bb-411dc52c5790",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "31964e99-8654-45a6-accc-4c3ace728de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f334ee7-dccb-41b5-b555-3e0e5b709922",
        "cursor": {
          "ref": "12a1c63c-6173-4a03-bd08-33d605848f4b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "10faf2a9-0f26-4ed8-b32d-1298725260e2"
        },
        "item": {
          "id": "9f334ee7-dccb-41b5-b555-3e0e5b709922",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e944ac80-f086-489f-bdeb-6e12aded3540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe57b19a-a3ae-4b63-acd6-7ca16b1b87df",
        "cursor": {
          "ref": "cda41f54-ff02-4843-ad9b-c8afb775264e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "95fda4bd-0465-473c-95c8-74c07d000a0a"
        },
        "item": {
          "id": "fe57b19a-a3ae-4b63-acd6-7ca16b1b87df",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "36e9e2d1-fc59-46ce-b3a1-1bcfca7153b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90defc92-4584-4229-93fd-78ad02ebecd6",
        "cursor": {
          "ref": "cc8f3854-fcb9-4d22-a551-e13eb325a596",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e1d38a49-4f29-4ca9-a0d2-118533ed781d"
        },
        "item": {
          "id": "90defc92-4584-4229-93fd-78ad02ebecd6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "66932e95-d421-4f06-a847-64fbdf2fcfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe20e4a-0cc4-46c9-9845-2d48d83d415c",
        "cursor": {
          "ref": "15657f26-77c1-43b9-88cf-5abae7be7608",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f19965e8-fe1f-4c6e-a75b-3667c0bad704"
        },
        "item": {
          "id": "8fe20e4a-0cc4-46c9-9845-2d48d83d415c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "56a7f3bd-ee50-4fb0-9593-aa6a40078e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bbcdbf-c53f-4e13-8744-b2cc4a067740",
        "cursor": {
          "ref": "a83aa8e1-ea81-40e7-a527-b933a12d4b3a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "213d73e0-69a9-49a4-99a7-1275604909d8"
        },
        "item": {
          "id": "a7bbcdbf-c53f-4e13-8744-b2cc4a067740",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ec0bced2-d602-4467-81e2-065b065c4a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b88bc3-3356-4260-a772-048d5afb3bac",
        "cursor": {
          "ref": "5ef0ec28-9b2a-4871-975a-a7a990cb8c21",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dfc8b260-695b-494a-814b-5707ff30d369"
        },
        "item": {
          "id": "f3b88bc3-3356-4260-a772-048d5afb3bac",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d89c58a4-fadf-4da0-8e90-0e8a0099962f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a3eb58-195e-416c-a01d-18b61df15555",
        "cursor": {
          "ref": "d98b5a2f-f942-4f07-a035-b01527839244",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "15524140-e7dd-4fde-b178-78af2118f5a8"
        },
        "item": {
          "id": "c1a3eb58-195e-416c-a01d-18b61df15555",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "90fe218e-b996-4b9e-bc9e-10c675a2dfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2008c2dc-502b-47dc-b539-704a44bda9e0",
        "cursor": {
          "ref": "a8148be6-804d-42e0-ae96-03123ca6a94d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "587264f2-b3f9-4802-803a-587c2693c0b9"
        },
        "item": {
          "id": "2008c2dc-502b-47dc-b539-704a44bda9e0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "009fe0e3-db46-4275-bd37-94498170a31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c20b4f-a4a8-4263-95b5-30fd0388ea44",
        "cursor": {
          "ref": "218fd54c-4169-4ef9-b319-12136b48f255",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c7414d51-5d3d-423d-a0c1-99f3060f5f7f"
        },
        "item": {
          "id": "29c20b4f-a4a8-4263-95b5-30fd0388ea44",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b96ce5e3-23e4-4cc6-8705-9b158101f7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9061c6a0-dc74-4139-905d-0e447c261ff1",
        "cursor": {
          "ref": "3ff6d45f-aa7a-4ee8-ae11-7defb831553f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0dd39940-1a30-473c-bd86-fbe54d6da918"
        },
        "item": {
          "id": "9061c6a0-dc74-4139-905d-0e447c261ff1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0738a307-285c-4fce-b3b6-037e50c74856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93f116c-5177-4f3f-9484-b4fe7f15be70",
        "cursor": {
          "ref": "e86fb421-3667-4376-b17c-b3d348afb4c4",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "63d4c0ca-45e3-4d92-ad86-f85b74950a00"
        },
        "item": {
          "id": "d93f116c-5177-4f3f-9484-b4fe7f15be70",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "13830ba0-5d61-4538-9544-ac3098aed32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bd31b2-e287-4e9e-be83-8e9e86cb1f3b",
        "cursor": {
          "ref": "ea76cefd-9d7c-467a-b464-89bdb721ac5b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a9c07132-98ab-4890-9a4c-024840069f38"
        },
        "item": {
          "id": "80bd31b2-e287-4e9e-be83-8e9e86cb1f3b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "343a7e2a-a4f7-4195-86ae-af9f95a1348d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cfc9b7-9ae7-4cb7-b148-3ee91f602f24",
        "cursor": {
          "ref": "9d6b3e57-fc50-47f7-bee6-d83fd4b6e3a6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "859c459e-5b93-4793-b92d-934de07c034b"
        },
        "item": {
          "id": "b3cfc9b7-9ae7-4cb7-b148-3ee91f602f24",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "62064024-7009-4baf-a75e-68e8c871e606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab253157-86bb-4784-aeea-86ada83a649e",
        "cursor": {
          "ref": "073df67a-fd35-4c1e-ac3e-1f2587ece2f1",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a186340a-ffa9-4d50-8c76-53d405d08af9"
        },
        "item": {
          "id": "ab253157-86bb-4784-aeea-86ada83a649e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ca8d1749-c190-4267-a1c5-2ac733f662fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff62fc7-1f11-4e56-80ea-b633e19de489",
        "cursor": {
          "ref": "025edb33-6e1c-42a6-93e3-69f6e7c2c0ae",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "08548bef-0548-405b-bd19-b5bb56ac6821"
        },
        "item": {
          "id": "3ff62fc7-1f11-4e56-80ea-b633e19de489",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4db97b9a-98a7-4783-8fa6-bac92efd9b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94891435-6fe7-4c23-8ab4-ebc45d959eeb",
        "cursor": {
          "ref": "5bf8278d-b6a3-477d-bd32-f156d2ec100b",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fd95f1b6-be6b-41a4-a244-81a9931eb133"
        },
        "item": {
          "id": "94891435-6fe7-4c23-8ab4-ebc45d959eeb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f56d3ff9-5932-44ae-ae79-4779dfb3d797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7fb73e-3505-4bce-9dd3-febfbebbd14b",
        "cursor": {
          "ref": "d1f38666-394f-4e8f-b785-b39e326a0bb8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f6bbd98d-445c-4645-8fe4-5ac72f38ed4f"
        },
        "item": {
          "id": "af7fb73e-3505-4bce-9dd3-febfbebbd14b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "efd0d44a-88ed-4c6d-978f-12e39d5a4e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093f795d-06cc-4d3b-86b4-becda540ae0e",
        "cursor": {
          "ref": "a68ff870-1dd4-49f9-9d32-4f21547f76a8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1c0ae1a9-d923-4327-8011-3553292d5bc8"
        },
        "item": {
          "id": "093f795d-06cc-4d3b-86b4-becda540ae0e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c51cc91a-fe44-4664-9d95-a2070ceb4852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c890cd-64fe-4c9b-bdb3-346e754d0eb5",
        "cursor": {
          "ref": "2407e3a7-2607-4013-99da-bf315acb42b1",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a1cbeab3-1e12-4d7d-a96f-960683dd24b7"
        },
        "item": {
          "id": "a4c890cd-64fe-4c9b-bdb3-346e754d0eb5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "52951993-804a-4289-9070-5ff57aa072f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c57f19-7966-44dc-9df0-060466ca02b2",
        "cursor": {
          "ref": "63aaf640-dc4f-4e25-8958-5aabeadec8eb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bbf9c9f8-b7fe-4755-b3e9-08b57554739a"
        },
        "item": {
          "id": "f4c57f19-7966-44dc-9df0-060466ca02b2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0cb3aefe-7ed6-41eb-98a2-87721f76d7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78792a82-21bb-4938-93fa-c15f920356bc",
        "cursor": {
          "ref": "a09ac345-8857-41e0-bc7f-1130b9733dc7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5cc92814-bb74-4b7e-972a-3def4ab04de0"
        },
        "item": {
          "id": "78792a82-21bb-4938-93fa-c15f920356bc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0e398660-4ea1-41b1-8578-e19315f22155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34799af-2af8-45e0-a0cc-7b705dd68fe2",
        "cursor": {
          "ref": "045c4a3a-ec96-45a7-b3b9-4421aeeb013d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a4d696a3-6b81-4f27-99d3-4298216e7db8"
        },
        "item": {
          "id": "c34799af-2af8-45e0-a0cc-7b705dd68fe2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cb66a185-af40-42bf-9381-471c664e2414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee83e46-e439-47bb-a02d-181efa0d6556",
        "cursor": {
          "ref": "898483b9-b835-496a-81a0-9503968e4f7b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1c329c79-6e14-4c0d-9d66-7bf6f7667907"
        },
        "item": {
          "id": "aee83e46-e439-47bb-a02d-181efa0d6556",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a2bb8395-880e-4719-a8df-d516d4e459c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a53322-5be5-4331-b855-07dbe8f0646b",
        "cursor": {
          "ref": "2f5dbb91-488b-4c1d-b99d-7067fd0e36bd",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3a2e6e61-b491-4e63-adae-863294103549"
        },
        "item": {
          "id": "e3a53322-5be5-4331-b855-07dbe8f0646b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f5825007-7317-49f7-b2af-e7f3866452a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7297f2de-df13-411a-902c-191ffcd416e1",
        "cursor": {
          "ref": "2c4853d3-22eb-4c9c-b51c-a16621c079e2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e03a9e1f-7f0d-4aa7-9446-fbcdf5e30e77"
        },
        "item": {
          "id": "7297f2de-df13-411a-902c-191ffcd416e1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6745a232-72c4-4a47-a316-24252758f2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e12fec-b650-4a7b-9cf0-668d849adbbd",
        "cursor": {
          "ref": "64dda956-dd19-4971-8fca-c029869cf840",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b299d9e8-dc2e-463b-8ba0-16f5e3aa85c3"
        },
        "item": {
          "id": "55e12fec-b650-4a7b-9cf0-668d849adbbd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "76e965db-c279-4bf2-9c35-adca1f4634ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25b9f18-9f27-42f2-b1df-7c8f61b388f8",
        "cursor": {
          "ref": "5c840c2f-ff4b-45fa-ad90-9c6ddef8318c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "de810776-13b3-4c4c-80f8-2177b4bdf2fd"
        },
        "item": {
          "id": "c25b9f18-9f27-42f2-b1df-7c8f61b388f8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eb8e14af-267d-4c85-b52b-5bacc0bcf816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010771ec-f65f-4a4c-9fc1-a33bf0cd83db",
        "cursor": {
          "ref": "eddfc3fe-7d6d-4bbc-a90f-01861166d5a3",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0e78146a-bdfb-4fea-b4ab-aa6fbc7ba35b"
        },
        "item": {
          "id": "010771ec-f65f-4a4c-9fc1-a33bf0cd83db",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9cd623cd-da27-4ef9-9352-7fc2e9239344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188969e9-8c07-4523-9b89-a759e7ed9802",
        "cursor": {
          "ref": "2211b0cc-1b3b-47bb-8015-56d7065d1585",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "087779c3-396a-41b9-9cb4-17d1276ebaf3"
        },
        "item": {
          "id": "188969e9-8c07-4523-9b89-a759e7ed9802",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "88bbabfa-9a11-4f08-baa1-87f020778df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe0ea66-f1af-42d7-b0d1-35c6513d1824",
        "cursor": {
          "ref": "503a37d0-fbf6-453e-b5e7-d14598d583cf",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "01c25ead-991a-4a29-959c-cfbc0f75351b"
        },
        "item": {
          "id": "ffe0ea66-f1af-42d7-b0d1-35c6513d1824",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "50726a29-ab25-4845-ade2-c35cec82f806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d004da2-31d7-4d3b-8c01-79caaa9c2135",
        "cursor": {
          "ref": "54527207-4ba9-43e8-a358-6f8671312c5f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a13033fe-659e-4435-8a05-8184779c9f88"
        },
        "item": {
          "id": "3d004da2-31d7-4d3b-8c01-79caaa9c2135",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "99371b9d-9f1e-41b0-ab97-926e0d7221fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc47c68-855b-40c4-9625-5e1c5145eb99",
        "cursor": {
          "ref": "99a82da9-604a-4cfe-aa8e-b05b6f1fb62f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "44dfec1e-a38a-4fb3-bd5f-ef2b19e3f6d5"
        },
        "item": {
          "id": "6dc47c68-855b-40c4-9625-5e1c5145eb99",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ff6df73-5ed6-4b31-9825-e66d81c71b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad546cba-0d00-45a5-8f7e-0c76ae0d8b7d",
        "cursor": {
          "ref": "8acacd9e-ecae-430f-9f2f-7f002758556a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "718c3ea5-b411-4f70-9d8e-8bcd90f3f13c"
        },
        "item": {
          "id": "ad546cba-0d00-45a5-8f7e-0c76ae0d8b7d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0a444221-b171-4b19-88c4-fec87b06391c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb971c0-729b-4c62-b0c8-4feb87fa9b1a",
        "cursor": {
          "ref": "3b8bc04f-fc67-4ef7-904a-f558686a438d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "13b748b0-c7b4-4339-897f-8fbdacac40ba"
        },
        "item": {
          "id": "3cb971c0-729b-4c62-b0c8-4feb87fa9b1a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b79a9e28-8519-417a-93a8-30351672d409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f86de1-5cdf-4172-8afe-e27898d36a17",
        "cursor": {
          "ref": "ed3d8126-07ea-4d6d-987e-13360d187b90",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e2abe132-47a1-44df-8a93-6384fdc859b1"
        },
        "item": {
          "id": "58f86de1-5cdf-4172-8afe-e27898d36a17",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "510fe9b7-93db-4af5-be74-0163e93652c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85388c60-271b-4152-b2df-139340ec344f",
        "cursor": {
          "ref": "2ab7a5f2-a639-4f5d-9728-e78ece89d8b2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7d4e7b91-48f7-4c77-915f-d14388e11406"
        },
        "item": {
          "id": "85388c60-271b-4152-b2df-139340ec344f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cf52931c-2c1a-4eaf-94ea-ab58e9d3bd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aec6456-4b9c-4966-a7f9-5581add73c73",
        "cursor": {
          "ref": "1c832eb7-93e8-4764-9861-704d00093a85",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "96a39d61-f692-4acf-9af0-cb3581ebc730"
        },
        "item": {
          "id": "1aec6456-4b9c-4966-a7f9-5581add73c73",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fdf5b1d7-80ea-4bba-8abc-b8ba21ad14d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fe35f7-cb98-40fd-856a-39943b42109f",
        "cursor": {
          "ref": "7555fa41-5b09-4b52-a61a-d1b65460a302",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "61dc88e3-b39b-4bd3-a08c-8aea7e3262fd"
        },
        "item": {
          "id": "e3fe35f7-cb98-40fd-856a-39943b42109f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "673b4f87-f815-4df5-8454-f928755b5395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a332d-2d85-4304-babf-6cfc3403861b",
        "cursor": {
          "ref": "0cc695cf-083f-4aa0-ba34-6f070e52db13",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "97062c7b-a14d-414d-8e41-5a3b8a2682d6"
        },
        "item": {
          "id": "5e5a332d-2d85-4304-babf-6cfc3403861b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fbba3874-1b6c-449b-928f-419071e11d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05010f25-1b00-4667-a4cd-d9c635628f3d",
        "cursor": {
          "ref": "6384b9c0-b4c1-44ce-b507-77a3fe38056a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "33ee9650-f8d2-46d7-9ff8-b658e6e5eb5d"
        },
        "item": {
          "id": "05010f25-1b00-4667-a4cd-d9c635628f3d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3e4d0ffc-786d-4e9f-9149-8cc5e4bd7935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52ce91b-ac6a-4324-8010-dede93b18d63",
        "cursor": {
          "ref": "165d76c9-d8f5-4716-ac5f-993db5837aaf",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "eb7c14c6-b569-40df-9464-0669a7caa45e"
        },
        "item": {
          "id": "a52ce91b-ac6a-4324-8010-dede93b18d63",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "585c55a5-bf19-4c8d-814f-08fd4586ac58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e486b0b1-d938-4f65-bcfe-52741b6ed832",
        "cursor": {
          "ref": "5974f95a-bc2a-4433-ad56-d719a86ba0ce",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9c6677b3-9d91-42b2-9e24-bdc6e162d7a9"
        },
        "item": {
          "id": "e486b0b1-d938-4f65-bcfe-52741b6ed832",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6b9d813f-3174-4e7b-8724-13df52f8b4c7",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b39349-f1d9-4497-a8b2-303b152706a0",
        "cursor": {
          "ref": "7f5d5df2-db49-42c1-99f1-fb7f24b86be9",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "698b8a46-3af7-4af1-a0ca-992060f488f7"
        },
        "item": {
          "id": "b6b39349-f1d9-4497-a8b2-303b152706a0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bd36bc11-a2b9-4162-933f-a0c48321c736",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "381789b9-9192-484e-b1b8-7495812e2dcb",
        "cursor": {
          "ref": "b1a8994d-b301-4913-a00a-d5fa20b85d50",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0d8a700c-5373-455b-8cf9-393d9ce0abd3"
        },
        "item": {
          "id": "381789b9-9192-484e-b1b8-7495812e2dcb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f72da9ff-ef6a-49a4-aaec-84154fdc22dc",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2275d2-e4f8-48e3-a440-9cf1c2438edc",
        "cursor": {
          "ref": "76a41146-fe21-45d0-8541-6b97fd0a0b52",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0424b864-357f-4316-a8c0-1865a46beae9"
        },
        "item": {
          "id": "1e2275d2-e4f8-48e3-a440-9cf1c2438edc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c56875ee-0e58-436b-b1b9-bbf025ab4be6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2275d2-e4f8-48e3-a440-9cf1c2438edc",
        "cursor": {
          "ref": "76a41146-fe21-45d0-8541-6b97fd0a0b52",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0424b864-357f-4316-a8c0-1865a46beae9"
        },
        "item": {
          "id": "1e2275d2-e4f8-48e3-a440-9cf1c2438edc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c56875ee-0e58-436b-b1b9-bbf025ab4be6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725b6438-7b17-49a2-8da4-24caef02a314",
        "cursor": {
          "ref": "2c9603bd-52de-454a-9cd8-e61e56352990",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "41a87749-0aa0-4d56-aecd-812a862244f0"
        },
        "item": {
          "id": "725b6438-7b17-49a2-8da4-24caef02a314",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "35438e29-8c26-4c21-8b0a-508824b69aaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb7f11f-3699-4176-8d16-d13b54ba4ba6",
        "cursor": {
          "ref": "c1696dfd-f190-4d6e-93f0-9631a6e1f351",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "78e35695-db5f-404b-a9b3-72fcb988209a"
        },
        "item": {
          "id": "4eb7f11f-3699-4176-8d16-d13b54ba4ba6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e4ad8239-47ff-48b0-910d-6314265e4e50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}