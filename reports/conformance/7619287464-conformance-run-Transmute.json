{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2202ea93-4396-4ef7-9550-f188461c22f4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1cca8976-ac9c-44b1-abca-c645681060fa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d93d949-cece-4eee-abda-ccf69ebd3e61",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ede89e05-1bda-4d64-8db0-18d97873dd97"
                }
              }
            ]
          },
          {
            "id": "e45a6c9d-aa75-45f8-9a75-5f83a450ccbe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b7a5c9b-2ac6-4995-b0df-ac7eb6055b3f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b289e0c2-9ff1-4208-859a-0bbeacb9acc6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8ceab9aa-6291-44b9-85ad-72c3ac682898",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "eddca500-94d8-4474-bd25-d64506b53d0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a622e478-8e45-4969-9989-f626298834c3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed46678b-0051-43e8-9cbf-eea030a8be98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "986e954b-05a0-4512-81f0-9af36169006e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "891166fd-4292-4f86-8f66-8f45b0d891ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ce33d89-a918-4abf-b9b3-efdc463a974a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "517be14f-7fb4-4c4e-a18c-70ad55894670",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8299cc98-314f-4844-835c-d0d4de1388c2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b86bbd12-6143-466e-acf6-f173dc43d3c1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c37118ca-dcb2-4cce-ba33-d801c80cbb2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25f0f102-b4a7-493c-ae12-2d4789ba8925",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdd5bf65-a835-4956-9bfd-7fa75623b34a"
            }
          }
        ]
      },
      {
        "id": "23218684-aa90-4a12-9c8c-f44ce1bfb6ee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e23ff418-322c-4148-b36e-569afce29c67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c857081-b005-4204-993a-ab86fb5deb45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9f53ea8-71e6-4326-93bd-9f4d0cd45a9b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e94d0f-99fc-4e96-b427-689db1975098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f953366-fd7d-4b41-ac29-9936135f277d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce9d6ab-2abd-4404-ab15-3c7fc3fe3ec1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78159c89-3248-478a-8018-0773b6c493c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ebd2c19-167c-4603-974a-9863d8816f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf32b440-2b6a-4706-b4dd-c2c4e95c0956",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2e2b08-4c9a-4d5e-b0bc-a723df45af52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70f9d348-8f7f-49dd-9780-66a82f57b8b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62e17737-4a10-4020-9655-384ba4d9d106",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78dcce23-f31c-41d7-bbac-81d5ff81ad45",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db11b4bf-8420-4294-a9ed-4d8516d236ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4eb9c98e-8d6a-4961-b278-8e6c16e67172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690f6a02-d7ec-449d-8c47-0e25801f236c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ec9890-1879-4668-aa9f-efab9887c1d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3c76dcf8-17c5-4c1e-9a16-db2680369b10",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d85f1f10-4804-471b-aa51-18c397682ff8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec429d49-13bd-4040-b7d3-a5e1ae134e1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "87f5455c-8f25-4701-ad2d-c7cf90ad8dfe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fa3be20-c7a1-420f-9e34-f267e92412e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2fc96ded-7381-4c5f-8cb7-f8157aa22d28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ecf5e00-b1bf-49d2-b38d-8213319b0a85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f532f959-ee29-4ee9-b34d-27404d30f241"
            }
          }
        ]
      },
      {
        "id": "9c8ba780-c027-416c-95c5-c9bf595f70c2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6814b99a-d398-460f-83db-c9e6a113a9c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdebf6fc-131b-46fb-8768-67d202f46e4b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "70d77a20-3edb-4e83-980e-a02a7291f1ec",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51d09d0-8598-4810-aa33-0a05dd47cec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38f4aa3-48f7-48e2-90d8-db3e572f8f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222a3bb8-43be-4f2f-9ee5-2b8e312d6764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3220db92-e9f8-45d2-b648-86c8920a4151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67522113-452d-4a24-9a79-cf0646129163",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b03ceab-ab50-4d83-928c-69998bc402db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dc7422-b2b4-468e-88ae-1efa1f762b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b2b59f-00e5-4c66-9ddf-1ec17170e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecf0bffe-6611-41a8-ada7-dce08a728f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b76e6d8-789a-42cc-908f-cb8c68c95249",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a04c50-90a8-4720-ad98-4f318896af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e6be40-7791-4957-94f2-b89d7f1ad992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0e398b-be85-4758-bd34-9c1413933899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2062b65-6561-4054-9e56-f5b6f65111a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f7d1f5-85a9-41fe-97e0-8f014c818252",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd949ce-6659-4e9e-be87-102ffb0fc2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab9f478-d0e7-4d6f-a793-144b618b1d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b47fad-9441-4c44-8ec1-05466946cc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be5d0780-c158-4731-890d-641674139bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfac4f2-d89e-4393-a70c-c9d7e07db997",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0c7b5d-0fc1-4839-a314-f2515567ba5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93522a1-438b-40f7-9afe-43447da71eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea01d4d-1f63-4b44-9945-d7edb5b6dd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9edd31e-43bd-4263-a57e-b46f41b04a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39ba2fe-fba6-48c5-bcfc-b2f52978971d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0e9f58-e93d-44c0-be18-7649e55c4ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48f6714-c274-4c86-a2f1-7e9e7914c522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453cecce-c589-47c8-b85f-69a1a2b0d5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cd9be4e-c26e-4151-bea2-e65be61fa9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0e1b39-0551-4401-95b8-337fa89cadf6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad288ea9-f28d-4805-b113-4248ddb76259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7643341-0a3f-4645-aabd-3140793b226f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e289012-1e9d-41f0-b78e-e419f747f48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d334306-7728-4d6f-8183-b65a9487784a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2435df-90e4-4e74-b557-1ff77de9f0f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9f662f-be74-4df7-b2a0-00a3c40f1990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81291724-5d86-4c5d-82f6-a2725770d0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918a021f-920f-4972-8add-e4c31f540e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52de059d-e5a9-41ef-9e7b-4898c65da69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68f499d-4954-4dde-a7bb-4c8801eb3019",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d91a4b-234f-42d1-8184-38dddb38f620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0e5f2c-c735-4a87-9601-c74b02d4116b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad413259-9b5d-4329-9eb9-1f5f47354ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2adea81-577b-48b6-b603-9fedc55b3c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2ff3c4-b16e-4f08-a584-8ae8a2d98aca",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248eaab6-54eb-4c99-9436-32845e9982af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f860eb1-639e-43c4-8c71-7ed546e9db8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329dd74d-2e72-4c3b-8ea8-d20487f4747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f55c606a-6fd3-4d2c-86ad-4fdf003546b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3a7c43-66fb-4caa-ad74-4631c5529858",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52335db3-cee7-42b7-a8fb-e23abfdbb3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73139f68-57ee-493e-95fa-b403a4d1713b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee15900-e58f-4109-aa3a-d6e9d690238f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eecc60ae-c621-4374-b641-729bbee82816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ff87b6-18d1-4ea0-b28a-097e264f2514",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9914c110-9e41-4ef7-9783-8df7b04e5249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c49c2ee-a9ae-40ec-a9d3-c3f894a57bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5cdaa7-4c0b-4495-93b4-730fe8c077dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6f36a76-a1ff-4c17-b991-e8c1062dfcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fba77f8-01f9-4269-8e56-37ff40e3cec1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9ed961-a6fe-48fd-8a8d-768c11e2626e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd92e5d-6b21-429e-b711-d80a88a2e3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2b022a-a659-40d8-9b70-b8fa35c2fb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f5faf34-26d6-4bdd-9550-abef4b0db9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9209ae-09cf-4a68-8b57-b16e181bd032",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082529f8-6e6a-464c-9862-e24024b02d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3663586-2a54-47f0-a622-03f33cc2c213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e557ae2f-9cad-4e3d-81bb-3781bf4298f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "691d1a3a-2c21-4783-b075-0c7ed04b8aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447af137-9db1-41ef-be19-c553b1a99e2f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee1c41e-f205-4dc3-a796-7bddc713ce9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb2d4e3-c8e1-4de3-9b43-0a13f3d3b862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805c98e4-2fd0-4867-9ad2-509aec90facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1298e278-b724-4598-b1fb-6004c10f0643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0192e47a-09f8-4443-aba9-67841187cca5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd25a1d1-7d0a-4e13-b038-bc24157990ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546e319c-2524-4f61-8459-e48c364f0dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a974cca3-73fb-4f27-aa77-feed9a45e13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d0b08c9-b4c0-41f2-85b2-3119b545ff0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fec0a6e-2f3e-4e99-8f66-3a566ece0ff0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01b2ad7-7e6b-48cc-abd7-c0495786dfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e926b2-550d-4f61-96f6-3c6dda250015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cb7d9d-42ca-43e6-b85a-39dfcb193bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "950d06db-cf8b-49be-9ad2-9bb656ed5a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d92e22-4aee-4cb2-becf-0404bd609769",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61373bf-d23d-4860-8f34-22e0ed46fe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f0200a-0dcd-4166-b79e-1116efd58dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f229ba16-57de-4046-9398-7359b5190f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c51d58-aec9-4e3a-b12e-348a5e9bf45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32033ae-298e-44ed-b3b9-46e7803165aa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd5e536-c001-4867-9890-b7c966f855fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abd09b7-3052-4594-abf6-f932d8381773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875c470d-c3fa-493f-8d8f-733c9fdda342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79e5ad9-8621-4850-ada2-97065de4796a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcabfa49-53cd-4c20-aa3f-27ae376d5104",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4964b1-23c6-4b98-9001-01a1bbfe6102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4676c3-0962-4ff3-abac-c67e6151cd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69619827-1d97-470a-bb1d-4dbac08c80ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8719d12a-6d8d-435d-87d5-2b0bea0700c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38575a5e-8b07-4343-a45a-41c9b5a6c708",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d7b257-1428-4c66-bb79-36ebe5106a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30387e8b-aca7-47d0-99d7-14945668f74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a863707-f531-4129-a26b-d0ac25348665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42fdd3d8-1ea4-438c-9a01-233cd1147319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4537b7b1-2cd0-4f5b-ba4d-d2025313b1af",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c5db17-5c2d-461c-997e-35748fbfb898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3900582d-6d2c-4a39-a95b-23dceaf4cafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cf72dd-94af-4245-9636-1f5e5b52a1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f634ce09-eb30-4f63-91cc-5ef000b8f750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942742bf-c9e7-4fcd-93fc-30bb77e0f633",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81187f1-89e2-439b-865f-11ccf1087f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f38c0c-685c-4cca-ad84-6d84593641b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04d700a-33f4-4b1b-a27e-86955cece3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe22986-ae8e-419b-9904-c807cffc9227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5286f9a3-2442-4fd3-8f68-ebba82e0476b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ebc019-0f7e-4d50-8c1c-d833a07f5935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41559b4c-b1fe-47e6-b3f6-9e4cbe41e61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4ffddd-2779-4600-b6c4-642c95b04aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "08bec7ef-e3cb-4e89-b670-ce8c2ead0d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e804f2d4-0a36-43a1-9309-c5a4918570c6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff5bfbc-0452-4e3f-a71d-05d78de3bd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdecab87-37ea-4bec-89ce-615e96652ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccde1847-b678-41aa-be87-613fac4bac76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2cb89a-b328-4ae6-be20-29641023da42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac6770b-114e-40d6-bef2-02bad1a043f1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0976392f-62dc-4ff0-9b16-fa4d50236cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e5d0d0-c93a-4f17-9595-23eba58476c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a57d106-81a8-4076-8bc7-fc3eb220e7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2da922f-2d70-49c0-ad70-8229e64a44b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d865ff-5f96-4432-817f-c2267cc7912f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1858df-22ec-467a-a0f3-728de7c0e944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d62700b-dfa9-4a20-a019-d5c42937d94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2efcc8-6aa9-4aa2-8b0e-5b992ce87426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13d22b8-40fb-47cc-b659-492f89794e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56bac82-269d-4e39-a295-b2b9540b222a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f59787-dc4d-4db5-9a1b-edacffa215ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ff2bc7-13ec-4fbc-b26d-621ef31b28ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2262427c-b6fc-434c-99af-43de0823fc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2de1cf7e-5b9b-49cd-a167-8dc0e0bd9c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b125187-1c5a-4499-a675-a27357f7adf8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fce86b6-630f-44e4-a45a-5691280f75b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a5c6cc-75a7-45c2-81cc-b01483b184d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba55f53-6b09-4797-8fca-0e0f21112c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f44ffef-1e7d-4825-a58c-858def4dfa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afadf02-2f9e-46fe-9a20-cafc3d2ed982",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f907ec63-b809-498e-a6b5-b29dbf1f13d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbff6b20-40b7-4c0b-be42-60c67e51921f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86110698-b20c-44d3-9fe9-c2be48663d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "52014296-a1a4-4ec7-b709-085134c3429f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843c974e-06e5-453c-a1d2-68b15a4454d0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1b7078-efea-4baa-8dea-4c8691ad9211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb3afcf-0234-49f8-89ed-39678203ebba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b61afc-892d-4a7e-b3db-f5e0bfd88f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b79ee97a-4668-4e10-946d-92a3a7476a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a8e80a-00da-4d54-89d0-c3dd1066ec53",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3ee64e-f029-4791-a862-a1b59621c565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b86cb7e-ccda-4e84-86e7-9303e9d51085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cdf50e-085c-4a44-8d9c-f24d6fd65f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a82f367-51ec-4ed9-8558-bc2096152416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d816246c-c398-4402-8193-a61857644980",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256a4cb3-dc58-4a7a-b9f1-acbc09f0cce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaa35c1-092c-4680-be23-f6a92183b073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55906abc-fa43-4e6d-b19e-4697199bcf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36409e25-68a8-4e23-89ff-4bc507337cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b3502f-136e-4a17-9b48-81c7f94b0fcc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ced924-0ed4-49bb-98ce-39f0e8aa2fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3299db84-ec5e-48f3-be17-414db05408bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2c9ff7-9267-4611-9eda-d95d608e31fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f606719-3e3c-4ecf-bd47-c3e092c6e254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da67d48b-d618-47f9-a6ca-d865659136e3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b849327-2e78-4136-927b-5c49aa8ecfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc31b50-6f2c-4f7e-95b6-5f6404cff25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6fc1b1-e934-49f1-b7a5-ad37fdf60ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf70182-9ce6-44b7-b645-5e1ec578e8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab81d39-5df8-4c41-ae07-95345c7ab447",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcafdbc-4cc8-431f-929c-227e1aa3b0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b007e715-6e2c-4e16-a153-708509413204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2574185-edac-4e89-9c3b-165faf309991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7286fc-3fa4-4715-b9b8-e46dd19175bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a674b1-637a-4303-af15-cdc24931d21a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e15005-b598-4d50-8b3f-3806b1eb8111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fd318d-e798-40d9-8d57-9cd00951eb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd1fcf5-11fe-478a-a49f-f9a3ad7a30be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b49b1724-e8f1-49d4-b812-96b26cdd3e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912aa660-301a-4359-ad4e-3a8b8ad74a0d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b613ad-d5b3-4880-a849-68db9434f12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f711d032-d0c2-469b-aacc-a85147380837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59845d0a-431c-4bb9-bb9b-12501ba7bc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "46b3ccdc-3ce7-4ea0-93ea-0ba5228166d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c50d8b-9085-4ca4-b7c7-178dd1de337f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d258e19f-a2c6-43fe-83f5-3e233bd33d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431f1e8b-b9d4-4a1b-aaa7-42e86b249d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdc12c1-0519-4763-bf26-3151dabac292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e682a407-dd12-480f-9946-e5c2786dc900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3faf4b45-c2c7-474c-85e2-326b0beb5804",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da70c34-fca8-485a-b20e-5d15164fbc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb4c424-d58c-4c6e-82a9-4531af2164ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd27daf5-7da8-4138-a796-66016b37ee4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5528fc5d-22f4-4591-b04f-af8cf2da5474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cc1ea5-2637-4f5d-b9a0-bdc635409fee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5781afd5-bd34-478d-8fa1-89de7b264984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73ef0a6-7562-48ec-93bb-6e05741d5265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f4c869-368e-4ed3-b716-fe597d789f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e89e75d8-f935-41b6-a604-a6843fe369ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3423765e-8b5e-486e-ad72-4f6002346961",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00661905-ff29-4ec7-93fa-577d2e7cd01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302d5c44-a9fe-4e56-adba-f6e4d75c426d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bac65e5-8040-4900-8beb-5b7f8cc51b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe1910f-78ae-4b26-9909-5c3efa46f0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e65afc-17a8-422d-9445-f8977bf7fe76",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e65e59-6b06-4244-950f-e2c0e7013911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5456cab5-1ace-4eec-8583-2f229c632bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542db2ab-ff77-45c4-ad3d-2088edf8baea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "721780c1-aa0d-4294-9635-b66e4cb996bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c764d5-194a-4e4d-8673-ab308b701930",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ac87fe-d0f9-4a4b-b20d-3510ebd41ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafe8d33-daee-4b91-a188-3e048078781d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e8c66d-77a2-4fb8-9bd2-2caea70f3202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "81720922-6a5f-490f-ae54-ea4029415913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008d1d7e-4a9f-4e31-9b83-d190b598a01a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97199423-98b8-4370-b8a3-6c7d2c8590ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d19efa9-1bee-4b8b-a917-72661908c0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e241bf-7aaa-4bdf-88e2-a6998a9422ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8083ac8-7cf8-40fd-ac38-9c1d7764964c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47877490-7acd-4b67-9fee-c5d3025aaac2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3543e6c-9517-4ea2-9328-afabcfc1f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89955c3f-41ae-410b-9001-dbf984e29aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9be10d8-c99c-4acb-8312-b1e111eb05f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b8afaf-6d82-4d81-8ab0-4a8163774f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7b8fc7-71cf-4bb9-a036-1700916d63f0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66178584-4576-4079-a716-8b417b4eea72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770725b4-e8fb-48b2-ae9e-2482b80f6233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00b3113-4811-47c6-80c4-703f3dc6e936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1478bbff-bb87-40ca-b39a-5401b0da2355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6edf011-6f58-4f84-9fd2-35b3baa245f1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec13766-1588-4142-bf20-08a17821f346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097c2e76-26eb-4dfc-ba57-bd1e39acb182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1066f2f5-0cf7-4c3b-ae2a-6fbae83e24a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea1435e-fb9d-40e6-8b84-3194fc8dcc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1fa954-3256-45a2-9c95-f92c5249784c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e55aea-e7c3-4875-82f0-350f8d2983fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48f7a2d-905b-418d-89ed-8b4075057d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f89bd65-4538-40bb-ad0c-aea8e2b7b453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cceb0d25-d539-46e5-8eac-196afb2af8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e860c84a-48b5-4f45-b6cb-d384eb12375c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b680d2-3480-40ba-9fdd-5351bbd4d3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ef5af3-e064-4ab4-94c2-e906ecfcef11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfed6f2a-6ec5-44a7-8ab4-8c54042bbd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4aef7949-318e-4d95-a175-5b7b5cce8ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0862896-6168-4ddc-82c4-835bc482489e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a209ad-8262-43e8-97b4-df3ee1683917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736d46c8-ff07-4484-ac89-ae8ddd60cf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7526e2a4-0419-4218-ab3d-f41bfc748e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2663a85d-8060-4754-82f6-7ce40d4e3a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32461ede-c4ea-437d-a75a-6d099534302c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b879881a-8cf1-4a62-a7c0-ef50d6e1535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3179b5a5-f57e-4900-8140-50404d619e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f802cd-12d4-4bac-8518-4da21cfe31a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2bc543-dca9-4946-b7f1-3095e10fa7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a5f83f-c4ee-40e4-9bd3-5bfee25e81ee",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a648e5-5f0b-4dd7-91a2-fb4b26e1f577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330a91bd-4923-4cd6-828a-d1569c0b8133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51dbac2d-9b46-4ef7-8c8d-2dd530f2b73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2552c5-a96c-45e5-98ff-756fbc435d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc84efc-aa7e-435e-b554-5bcdb16aea20",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be53c593-feb4-43c8-8ced-97b975dda1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f640bf-ece3-4541-8263-259cb8de3e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7da2eb3-9453-403a-9434-e2f0caae2bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1253777-0023-4c6d-b51a-ff8528abe9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4de1774-5164-4cdf-bf13-dcc2bca5ea24",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7b4810-d967-4651-899b-3810f0fbec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40afdc6d-0b63-4045-8b24-f17c1feaf347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e67a0f-29f5-477e-a268-e364f7901b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea5a0db-078c-440e-b2c1-5c03213d853b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69552a3-d0a3-4040-89f5-e8dab2ee059e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8012cd6-5d43-460c-b9d6-97c1a3251cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007e286c-38ce-4eef-bc0f-70f9de65d303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027e1d1b-fc60-43bc-99ce-758476dc9933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3481e2e8-5284-40a6-b5f3-c8c7d6ff0cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6198e8-a780-4142-9f36-dd8816393ea5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c90ddf-bb90-4a85-8b99-ab6da7db5d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382406dc-d00c-4420-9891-0b11bc9d5f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b5cae1-76e3-4af4-afba-8dcf35a8fc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9e0b6c-6f18-47ce-9431-fd6a2eb2fba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f612b4-9470-48d7-9128-94f583433a1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf83d902-8d36-4f18-88e0-8a89a9016552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e0b126-a5b1-439d-9b0c-94206663a929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d1c398-7e61-4e0f-b2f5-087a9e98e3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0b1044-2177-4da6-ab92-d832ff3961e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f392a8-c7b9-498e-ac91-433bfcea48e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd7fb81-667d-47d2-b75b-61a5c0dbf6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83375cb1-84cc-4959-b071-b8a35fabd513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055a2bbe-c88d-4cfe-93c0-0ab8ae5375e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f08dd2b-d27e-4f29-ad9e-a97c987dc565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2c6156-fd2e-4b98-a1d1-8488ddd88b54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbe2906-f2a2-41a3-81b1-558710cda891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2b0d81-fc31-4f5f-830a-fd5d5f3a16bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6127725-e554-406d-b068-34d4ce24ff42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14645d90-0815-4905-9d7d-66c937b294e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9e264c-6753-48f0-9806-01fb2bab84fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a47420-3986-4a95-8b48-a029a994715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88da1758-26bd-495c-b2a0-b65072f510e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec5d73c-cdee-4516-95d7-ccab83300356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d2a7c5-255a-4f50-bb2a-1b1e4ae7a64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c5ac39-d01f-420d-8159-5c9cd0cdc47c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4e0305-73ed-4757-be6b-67da3eea5b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f86cbb0-e0fa-4b75-877d-3cd4eb17a7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcad2e2-2438-4a9b-8fad-9c0dbf60d132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1831358-bf49-4083-8cab-00d7ca503961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f05d822-82f4-481c-9fa3-c34a74a93a5b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb475944-bb88-448c-b35c-2acbe9a78bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9721f0-c327-49b6-abec-a9bbe4f01ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a37ada3-d603-4bd8-b7cb-8e1a56a84e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3479f8-4dfc-48d1-8952-ebcfcd312c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abf38e0-e9c3-438e-97cc-e90ed5942df9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d713c94a-fa97-45eb-9aba-2e24d7958f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e80f30-5fea-4f2a-aa19-b3ab7020ca8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07adf12f-ebd5-425a-be34-2dcc16ba71e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c362a3-af30-4287-b1c2-0c91a336439a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91d8419-7719-4026-9be6-c582a1244178",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f264130-c72a-4abe-a9ec-f6ec8a2a38eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48919f0-657b-4c88-aa27-1d43bfc71bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d150810-c12b-40cd-b86b-71eadca0f23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8816254-e98a-4c95-b0f7-c63932e0684a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673659b5-87bc-432e-9f7d-1a7d2762ce65",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190a9147-df29-4ba4-a8f1-f9e74882fa7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb71322-88e3-4840-aa25-5bbfc33ba8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a78919f-f181-4362-92d2-62e6ef95a93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e100aff-3dcf-440a-adc8-c9f9c610cf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bd169b-8cb5-4831-bf16-a2c94940ec2e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f533350-faa6-4391-aa22-d3a6146be99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c608b1-561c-41da-b49e-231fdd3b6cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef1af49-c10a-4627-8caf-d2cd9caf9b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9699ffc4-4a93-4c34-a5b8-fe01a0603308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ffc6ed-a2a7-498a-b1f2-8aa9fb2ca88e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8cb898-943b-4633-bc0f-6074116ebb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fee03b-7959-40d8-aa45-ac3253d8ef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb7230-273c-477f-a27e-ca6e82fc3642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "adaf382b-a39b-44d9-bf5b-40699b816a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b609ae27-37e6-4606-92c2-fe751fedf2f6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e0c4df-b140-4869-960c-d3ac02b97835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1537a1-3534-4b51-b86f-ae60e09abc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba22a83-f398-4cd2-b6f9-c5556707cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9198106-1f0f-4e18-9368-b2afca7745d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262c5eb9-74cc-4111-85bf-d01ec4dcfc75",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1f5485-b2c4-4660-ad23-10330b1a500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e0d226-a796-4e0b-992f-d80bca7670d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f36fae6-d572-4fb0-9a52-671c3e73cac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "033be50e-bd15-430f-b98c-a90a3bf48634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444e2be1-558b-4b41-98b7-b81353378e4d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b364758-4002-41cc-85e0-039a4edb4d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4eb4d19-4354-450a-bd2b-e43e7ead885a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47c9663-6ecd-4949-ab98-5c83316fbccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6653cc-1ba7-4b88-96dd-6aae0b13c05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9d503a-0f19-4ad7-92a4-0e51343eeead",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543a452f-db68-4990-91b8-f407bc446ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b277bf18-95e3-4c04-aa92-547e1d2cf73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fb523b-4032-4b60-b59f-216d91d2c19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "829a45d5-a8bc-45b0-850f-f2209d82cd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8d89c0-a381-46f2-87aa-05a635778e4d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c91df3-3efd-48c3-8313-89971775be9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10746274-e572-4570-bdb1-b5d6c8c7c2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8d1833-2eb1-4fdc-8bec-170b5e4a329b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3862af9f-6e2e-4207-abaf-d2ebb1993201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8a3a1c-3219-4990-a0be-968f495f3aa6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6a1ecd-f130-4dd6-a05c-f85fb0837717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea395267-dc21-43ab-8d1c-efc0fce61419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8c413e-d0c4-4558-824c-1e09c6a0656b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16272e7f-c295-4c28-9988-7b40878fc8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac0f50b-1f9d-4531-b912-866358274e4c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8472029-1c4d-4a50-a487-50969530d203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48d9773-5052-4fea-93fc-9701b0359afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab3036d-77b6-4428-8dd3-1f7a561a0710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2785e24-1dbb-4087-8b3a-8487bd8f7324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c8a351-cacd-49ce-aaa8-ce191cd39fba",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9129062-ede4-46fe-8ffb-428a1c2875d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f39663-6219-41ca-bcd2-c2402e555415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00259782-97b6-4467-a8a6-366892c5ae78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccf61ff-fec7-4541-ab41-754ead6bdca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0c5b98-823f-4361-b628-4fd62941e8c4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8208a74a-605b-4ea7-a9f0-6c732e9b30b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3e469b-e646-4569-ba1a-e14d9d29d55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43939a59-576c-46ef-aea0-5895edbb91d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc57c86-1c7a-4c49-8b2d-adbf44a07b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564bc723-9333-49f5-910a-9f2f202573bb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d49cfe-cca7-4dca-92e0-160831446677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f91ea6-9be4-49da-b9e9-e90a5e3870ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a12cbe-5a51-4820-9746-660bc119c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35689775-b46a-4389-8d10-88f4c30cd14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced4ae47-35c5-4f29-aa27-9023a2fa1154",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6b6d6f-20de-4efd-ac9c-eaf673a89725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc519b5b-a864-402c-a03e-a2a3b9d1eb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ea7be6-e736-4778-8381-987a856ef12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5aaefd1-1a60-4db1-a56f-c5d3300d6a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217d13e7-735c-4bcf-bdae-1e68673e3d3a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020db65b-a5fd-4aff-8cde-2778852e3516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f619d253-26e8-4059-bf15-30797193b372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa4df9e-c3e5-4bcf-90b4-5ebffa7c33dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f20ab45-0b74-496a-8c5e-81b2fe9c7faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343fbd48-c8fa-4fcd-94ea-99ea4ff5c6e4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55538415-86cf-41dd-8f48-b9f74b886cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6df2aa-5c8c-43af-8e02-516a8caf9fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba084fab-1a29-48cd-a8c6-a5a91762a960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a40cab-b313-4aa5-9536-df06b019e803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cddfde1-453c-4839-aa04-79de61756c0f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36cf1d7-fce1-4df0-ac28-79b92e296f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5e0a0d-dc63-4a8b-9b74-e022f2f61ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d895b6-c9ed-4498-8554-56cd33a92d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9170ba7f-1abe-4066-a27c-692a8289919a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1aba166-cbc7-4871-8eda-257c95d7a648",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ac0dba-e085-4ac0-80e0-477dbc398db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64ee7ff-661f-4362-9aa1-5d420ebf33ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e0a64f-2f21-484a-94a5-26bb69bf4180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfab5b4-0bd3-406c-95ac-cfdfa98a4bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a4d9a6-715d-46cb-bbb7-e61444614e3c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6ce40b-6561-4e04-8b09-2515d00c0ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c10751d-813b-4aa6-9c2a-1d0fd8677c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b9a893-ebd0-4575-93c6-19ba771f790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e14e809-c205-47f3-a55a-60cbbde2348e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3969a459-6167-4ca3-a902-8166917b6e15",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e453d82d-7545-4b57-9145-e62d2eb8c3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a604fb74-0e39-4b5e-8f5a-8dc6eb388dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc00c66e-3404-4edd-b9a0-39ceec1c5639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e04bac39-dbd3-4c05-a4cd-50c82e07e146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34a42f9-c09b-43b4-8eb6-106f99848f11",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496ac648-a367-4c4c-b572-04147de98588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939ec950-5832-4333-8a27-cb5461f3659a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d82431a-e84c-48da-ba8c-18d248601c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcd1786-b882-434d-b20b-461bc4bedc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523c9604-6843-4699-9842-ba3e08643bd9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1fcea2-1165-4ce2-8f1b-ebbed6e7ff04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b845d7-2976-4582-8652-145ded9e606d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e91f27-77f6-4068-aa23-8c14ed09ba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a55698a-ce8e-482a-99cb-1217e3121e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37da17f4-ea8a-46ad-bd5a-26423e3575de",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67516320-4aa6-4edd-9951-ff01bec4fc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a364a8e4-55a7-40e3-8f1f-8424222c258b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1438c0d4-62fc-40c6-acd9-d2f0ffa85a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1a8535-5926-4126-8784-29ad49a4f943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a838f53e-b58d-4b9e-b917-7c5474c6d538",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f0240f-be3f-40bd-b8b8-954aeb007142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710c4898-1dec-48f1-a66f-b05e084ea37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a9f0b9-3998-436a-86f1-7cc531fc7d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c07f81-1b11-4b9e-b774-908c29597f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddb2720-97f8-4c69-b4f3-2d3dde5a0ffd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc15ae60-aeb9-4f85-8068-ef16d5f31e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a405f337-26e9-4a1c-bc72-819eee4b849b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad63622-837e-4326-9532-ad3410fcb80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "343c2fec-0b55-4f95-82ca-93ac25c875c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2a864d-b062-4a83-81bc-e7290b5871c6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181eb8fd-f1b6-43fa-8462-7494bf5243c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92eb49e0-b71b-4e27-a0e6-72345bdcb08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d7038c-560b-4b8f-95c2-e7b4c601840b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "221ada8e-af31-498b-9965-56647a005549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10af93e2-b448-48a1-b2e1-1dc81b2be1a0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7481e2-00c9-4cc4-8af5-9056f2367832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d9170dcd-8de0-4db8-bf45-8601ad49e179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa2de06-81de-41be-9c5d-60546c014e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5580e31-cb4e-460a-9ba9-166a50d17ff7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "961107ad-ed85-4e7a-804b-3cf3f5eb743e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc2ab9d2-ce50-4021-b721-ad4016446fbf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c7f2fa-b83d-48b3-9d0d-940adac91909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28b84681-d591-4c0b-bae0-3ed9b3403abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc4a323-dba3-41a9-b19a-93943f97fa49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee166e9c-60a1-44fd-8233-6d16eac02984"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "008043f2-9d59-4e60-b203-d71bbb3307c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd35b494-b995-4456-9979-19bd3ed40fb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64f0137f-83ac-4c15-b649-08734e0ca2e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d6abd16-764d-4c92-bb90-e50fb8aa8041"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "143b8dd2-0fd7-4c49-95f1-89f9e9b69e5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9639188-2ecd-40ec-ac18-71fce97e5f52"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7c6bade-a3fd-4c9a-90ad-a000eb33b631",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d50e99ec-0a9d-47f5-bd60-763f8ba74e8e"
                }
              }
            ]
          },
          {
            "id": "917f1139-b30d-4e8a-9d3e-5d386b264df6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28012e97-6894-4f39-b912-2fd0846f9566",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d443c565-fa45-422f-8480-f3fe5691e556",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d99de0-1821-4905-b5f2-752e1f3d6655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "472f24b0-f717-4528-9128-a6af30ee1e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e584e5d7-2902-49e9-b67b-05f17b3515d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d033ef10-279a-4264-99f6-68d59a65a24b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ff3f80f-700c-40e6-a082-b8ff20f977c3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ad06b4c-6f27-46f5-97c0-deb8faf252e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94bbb087-b1ed-4a74-98bb-de73239222c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a2def0b-da46-428a-a15d-2087f0a84d17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "961821a3-1b58-41cb-b3e7-8357c275b07b"
                    }
                  }
                ]
              },
              {
                "id": "4f2db07f-7fdd-48e0-9310-fc9380ce15bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31772eae-a5d6-4131-97a6-c1fc2d40f534",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee6b4145-ec5e-4b5d-9923-996ddad10f22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc6d2b7f-e6cd-4c6e-aa5a-0f749883ba26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b06ff406-cf00-4e21-87f9-a831b01da52d"
                    }
                  }
                ]
              },
              {
                "id": "e1824f55-390b-4be3-bdda-30f14188f4df",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbc8eccb-5bcc-44c6-9610-f7f3a0e50b50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b48de92-1b88-4086-8fe0-fa7f8038ec02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c086347-da87-4ae2-b863-5713b5f1fad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99795213-e15d-4309-b7b7-6490360d47e1"
                    }
                  }
                ]
              },
              {
                "id": "abf54cbe-2b61-4cc9-85c2-371bf998e704",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bbde3a8-5f2b-4cdb-a2ea-beb8d90ba848",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c46015a-8b2b-428e-9f5a-869b5356138f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f693997-4822-40f6-9b3f-84f2d5b64c56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4c413cff-3f88-4192-8648-feb57ca30b38"
                    }
                  }
                ]
              },
              {
                "id": "df0b6ec0-543e-4a0b-bb77-0afb643a07e4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf569d13-4c86-4f04-b7d0-6eec79374246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa9eead4-822c-4142-adef-03ef5930df49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f33192f2-8023-4d18-997a-435a41c56374",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dc5c6dd6-b60f-4cfd-82d7-81649697d072"
                    }
                  }
                ]
              },
              {
                "id": "a25f9838-44c2-4569-9b77-38f6de5f34c0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e456e1be-be37-456a-9cd0-649247af372c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d5a9dd3-0e0b-4da2-b6a9-a44947bfa190"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2af6979d-422a-4cb5-a501-6ba2fd08bb7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92174b68-33ec-498e-97e4-e3e0f57b1dc7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54345c9b-532b-4674-85e6-12805043a0bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "931fd520-e4d5-44cc-8189-a1064d3ffd15"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3644c368-abe9-43f7-960a-a9cba533d36d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07654fdc-918d-4833-956f-63e989ebb373"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7c2cc41-35bf-4ba0-af99-a1f148639f8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "83848975-7d6b-4bc7-83a1-20d022d3dd80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2704aba4-0a0f-48fb-a229-8a417d1ff01a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "921647d1-786c-4ca4-801b-2423b796c5b2"
            }
          }
        ]
      },
      {
        "id": "34709f19-2076-44e1-a14c-6ba169a48465",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1e9b324a-12a0-4465-b7c2-464b9c0702b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62e50cb5-8c96-4429-9c7b-1ceebcd42d99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6bf81e8d-5fc5-4d92-a96e-276b16e9574e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2848df-ee4e-4567-b05e-d3864d450ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac164f4f-e1e3-4806-b444-997334ce0525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5ad44c-6cfa-4853-b0ee-f507706a9acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64bc19c-c0b9-47ba-bef6-1bb8a49ad08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2bdde3-3472-4049-8f24-2dcc8366dcee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7917b502-4975-46f7-a039-45400bafd5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd2841a-1c48-42cf-930f-eac154389c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ce0f36-49b1-424e-a882-acabb95173df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fdecaf-1b49-490e-b928-6996af02b1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b086c182-4344-4b9a-af4b-8dc088cd2b6f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6900247-e5a4-4949-a652-6883e8c49a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73154789-dbaa-4284-8719-96b270b09a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4f658e-f53b-4e40-9cdb-c178fad5a79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "694cf06e-5db2-45ea-b892-eeb97396118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bc8666-2db0-4137-8c4c-2dbf500fa07a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8feb0dd-f87a-495b-ac08-f37ba8d68e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04234c5-a21b-46ae-a020-c2e634e39872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b91238-612e-42f1-ac34-5fdb6e55cea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b368387-6ef1-48fd-8a0e-1e7404f2fd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f0610-1ac2-4aa5-a439-fa5a1e5c2f28",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b32053-575f-4f93-bf15-86dce4a4ce61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799432a7-0e3b-4095-9807-b52b9ed89d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fa2d1f-e331-4aea-a04d-22a1303857f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be86e7a-f773-4da2-9f67-70fffeda462d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5331dc-3803-4c56-8164-013d151837c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d19759d-2f0e-4bca-a742-96c4dbb9d45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627dc974-ab46-403e-928d-7201a77a54b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0839f084-1052-44e2-876d-95252d985465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88a176f9-5c0f-41d1-a406-41008e04a12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f3e89b-660c-4773-a1d4-33123325bade",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afae6fce-3299-41dc-949d-4bdb4787146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1758fb-59e7-4dc0-956c-d6e6bd0a891b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29de3893-d831-41d6-afdb-b5b15b8c09ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb1ccb3-b79a-4607-b8b8-8896afb056c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144b4913-672d-41f0-b0ab-9e666f9656ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c13b570-55b9-48b1-a0f9-5e8bc49cc1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c66367-02f5-403a-b38e-a6137c6eb861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e21b24-388f-4e26-9f59-0f0b0c1b8193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12efa878-9701-44d4-89cc-cf67cdcf344f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb56b611-e98a-4ddc-be82-034c4216447b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0163221-07ee-4828-aca1-c2cd56306422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3580a5c9-170c-4037-a51d-6a6da4a1ede7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b695e5ce-7af8-47bb-bcc6-b224a77c6e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21eb8dde-872b-4d03-96d8-e01f3c2e5edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e0aaf1-5b7c-4ad7-93a7-1a3a4a6ac97c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998d2d8d-b2f7-43be-b434-1170cdd32c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49036425-1703-42ce-ba4f-ea64706459f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bf83ac-20cd-475c-a253-ce0b8111188d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fea94b-496c-4fe3-8561-902a8ce43e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6400d1-a8c9-4368-9457-6f0d378312b9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7200e71a-1304-41be-b558-1a2e86f940ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0848e8c7-5518-47a6-acf1-8de514666593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d4aaac-4395-4d86-9bb1-800063b21c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e844f5-8e44-493b-a8a6-7cfc7572f74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77789605-89cc-4ea0-af9c-93fb9d0e99fb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44413414-e85a-4146-86e1-704b52e58fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c85dbe0-ce9b-4524-9de9-3d5fd50d2312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc868cd-5a4a-4810-9153-a0333d9a696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0683d029-1d63-41f1-96b7-73d7855023a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f246d8-c7cc-4e76-be11-0274c3c557e6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f184dd-02a5-4226-9b28-b62c06a721ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9dec802-6b95-41e8-a863-cacd9b5010a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedf12dc-371d-4278-9290-41c298c56d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4feed86-8fd5-4524-86bf-54e7374099e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6faf4f-c123-459c-9d5c-c24211c7663b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de95bc6-2ea1-41ec-af41-d370430a5792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40e2084-9978-4a4d-8f31-39798c3cd1e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b457f1e5-85ce-4fa3-9b9f-121c2b4cb899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1763876e-ebe6-4788-8265-fb71df9acde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe4147b-c440-474d-8254-18812daf4604",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c1ebaa-8bfa-4177-bf04-80271eb4980f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6285931-7f11-420f-b2f8-c2c29491700a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328e2fcb-f910-4e07-9351-64ecc32e83ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4002ee-e577-45c0-a3fe-71af05926bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3223fd-de2e-4ebf-a061-443678e3cbf3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db071f7-bf1a-4370-92ff-5794f2ba3e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d5f8fd-5a69-48ba-bb50-3be9be1e2681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363389d4-4c3d-4e8f-99a9-bb40e4ba9b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc4919b-feda-4990-853a-e3915c8d21fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4150ba3-546b-4df3-8f37-e984b1cd5ff1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066ecaa6-84a9-4e6a-813e-27297cf1d805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943f19bc-1c54-46d2-9675-31697acd23cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47517c6c-a9e7-4636-9114-4bafe95e08d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5dbf1b-c211-4d04-bf77-5671ce80574c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80a2f64-ef4e-4ab7-844c-769e30dae832",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708c57ca-b62a-450a-ae58-dec274c3ffea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1465f00f-c3ab-4637-8e02-a616f08b805b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1143a95-b758-4208-aa8b-ef9f25dedfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc24c93-ac31-45d2-900d-1771b1538c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d750f4f-0750-4bc0-92f2-cc1a4174fa17",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195eeaf1-319c-4e77-86f8-f28a442d02f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ab4b5d-de78-4cb7-8f69-2f4cf67e2774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2a8250-d082-4548-85e3-f8dd8b4cd1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "243bca28-6f37-4879-92f7-b31ef6dfb486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67d5750-ae58-4c77-963d-70fa54dbd3f2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9b8b17-9cb9-4926-b12d-bf2cecbe04e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633e84cd-541d-4c44-8953-6a6ad9076d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590d8317-65be-4cd4-b2b2-b1254bc28249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ca7081-0732-41f0-b257-c43065d23a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e7441a-068a-48b3-85cf-43414cf04562",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca72db2d-0fdd-4422-883f-7cb5ca232c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6abbb7-d621-41aa-a62c-ee98469f31fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc501ae-b21b-4161-b77b-e8ab56330d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5850234-3831-4bfe-bf53-e8e199bde4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3399ab1-d4ab-42a3-ac5b-175aa337956b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059c4f82-97cb-4790-a7e5-805d0673cace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef03f738-9cda-4875-9e47-ee811d05856f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1579f758-28ee-4882-afb6-53b7833a5075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "340f3ac7-3cf1-4c53-841e-53876569379a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de7beed-dd28-4767-8228-542e564df721",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fca4ae7-47a9-41d0-9e1e-a5b77177fbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e733b0-7a6d-45fc-856d-c62375cd7c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103fac43-a682-4cfc-a3aa-6aae88e41307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76261f14-9ecd-44b8-9038-0e02683720a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c3ee77-0252-4863-aae1-6a1a5117c03e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207fdd0a-12a4-48f3-a04e-ce7d5fe6b62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1db0e2-d6b4-4bb8-8e26-e2629f9d90c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcace035-f5bd-4986-ae17-7be0a4779e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b308f494-62c1-439c-a073-42d36213e95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a947a0-0f85-49c4-91a8-0a0acd408dc2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984f0744-12df-4a0c-9858-e796411f5837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e184022-8683-44a8-bf4e-9ec5bbf3f96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca25779-b6aa-4dc3-b7ef-b73a94b4bc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ac6d49-587d-466d-aa6b-4fc0da4309bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c502b0-7b3e-4ccb-9b77-4bc075d65aa9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbc3e47-4950-4257-a83f-ab0e371d26b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b9d17b-da45-4d4f-8253-9e786ee2235f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8594ff2d-c914-4de5-a74f-7951931ccacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "facdec23-d63e-4be4-b85b-8b5c969a3b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a7557e-58ef-42f4-a93e-412aafeefaf5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bc892e-984a-4108-b5bc-099ea8c7d6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a02cc1-307f-4045-a7fa-3d79a0aeb02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa558c2-a1f9-4d65-afa8-f386cb2a65fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51996c42-d5dd-425d-af9a-c46a4f911f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098f52e1-524e-4b04-a508-66eede809eec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed9b009-9d79-4ddb-8fd6-f69b4305de92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6779f077-3e8f-46c0-813c-abdb8a4cc0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85712109-a518-435c-8207-7dd964a7d196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f16a88a-808f-4f77-ad6c-de280f8ccadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b451c41-3f8e-479e-81cc-b5d3f4ffb3ec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0afb4e-afd2-49c7-a30d-9a15939bc241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da353926-2677-4ce0-a014-f8178830fbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c94b32-1c54-4f57-b123-0f2fb9080ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed9c737-2136-4a77-a058-27cdacbac317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db856939-fe02-4268-8999-87bdd410e56e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf6a322-f8c5-4657-b3c5-445bac0b3179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6e84a2-b2c6-44d2-9de5-9802dd8037a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fb7799-25da-4e6b-b3e2-5194d3f8e293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fd098b-1236-4a3e-9c93-40ccfca81a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e39d42-6e59-4c9e-849b-b6cb79b95486",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c28ad08-8561-45d2-8745-91ca789364f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c28a81-2353-4520-83e9-18e57abc36a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766049e8-b602-4bf2-8537-4e08e7f95daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "219e4c4f-0c98-4c4a-ba87-81c5f1e4b15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4db3af8-1eda-40a6-a3f3-f549e4b22e90",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cf7700-7b9f-4b7c-a37c-2c634314d634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7bd8b1-4fe0-480b-af07-d3ed68ae331f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0eef22-b109-46c4-9e16-676a0433e591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07941674-059a-4d97-91c4-8e3d202b69cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f78d1d43-852c-4f4f-9242-4ef3105bff1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c349e7a1-3b6c-4ab4-8fbe-792787867239",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e2fe95-fc5f-4d44-93cb-bd3d49449671",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b52a0312-79c1-48a2-9736-92fd0e4953a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9710bb68-68a3-4ab4-81b3-e93239d88309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9e84f8b-61f4-42e7-baff-706447d715c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e64dfb78-8774-4612-b1e4-b4ac789a93cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7605395d-82f9-4002-bfd8-a0a3208ea3f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3ca620e-b82c-48e9-9b66-64f5ca74c10e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "794e5aec-dd79-45da-a87a-a0a5b8d9770b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a3bff46-ba4a-41a9-9698-e4ec9f853abe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b3555c5-2f45-4ec3-9a8c-41089788ff60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a7cc94-f0c9-4a5f-a7cd-739e41ba5a68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76684140-bd05-42b0-bfff-e4e2761f44bb"
            }
          }
        ]
      },
      {
        "id": "6e74b511-84c5-4896-9b8e-3df4de354732",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "857a7a51-783c-4ea8-a51f-57dc719ab53b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "511e2aba-f634-4788-8c76-45976dce73a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "762d4777-1589-467f-9b2a-cecf3fdf984a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b37bf-3e55-4add-86aa-59bf96af753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc39ec9-46d2-44b3-8e8d-2c955dc13856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1169d39-476f-4ab0-98bd-02e1556d8d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbeb82a4-f93b-4a33-b527-1eb54f85cede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962b6279-f5ac-44fb-ad49-0b92081139f8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f07a0d-90ec-4e53-baf1-06856535c268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73ce132-e754-45d1-ad35-c465696269ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f3a6de-84ee-44b0-a865-a24d220a49be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc548ea-acb4-4e4e-a064-de34c55d5ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9f0c61-7830-4261-9e4c-86631f514902",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec5342c-aa10-4cef-bb76-3844e90c1531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ea70db-7c3f-40f5-bbce-b00a689ba802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac47105-114e-40ab-94e1-5f4f057d3caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72c9c89-d8ec-444e-86b9-ca89a874a944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870e5155-ed73-417e-a9e4-17c963d9742a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f87b6c4-8388-4d0a-8a4d-f729180855a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9384ba58-351a-4b08-bccc-e88f9187ad54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e60207d-4409-42c6-acdb-89602c2f2548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04736d53-da12-4b84-ab94-3891af945ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7a7566-6677-4d35-bfa5-6289398c1e3c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c16b0-37f4-4a70-bcc1-e0096f7d4bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54131112-c53e-47d5-9147-ee4235397845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a016770-e250-4474-a038-189ac01b60f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c0d786-9b66-48e8-939c-d13c28564158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e86b13-ec19-4489-921c-c43185e11df8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5544eded-4a3f-4b3d-9bf7-df78f9e89ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b471f8e6-a7e0-4e0f-88e6-d2f46219a623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad673e8-3db9-417c-824d-dd53129d0216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e863c48-00d9-4154-a837-6779026065ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989fe72d-7928-4a28-928c-9784da61e472",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e84053-a836-47aa-9b62-3ef8aecfec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192d30aa-36cc-4c5c-a508-3e4d42bc93d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c123aa03-02a1-476a-b3d0-1c51f636fb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba21b53-1aad-471b-b370-3b9d97c10372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e4ecd8-f828-4012-b4ab-02f57845473c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9538500a-d791-4ca0-9b8f-5cbcd2c2bdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b1ed07-c479-45ff-8b38-38cccc3b89c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aa4861-cd9e-4bac-b7f1-1de247b1022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd11bc0-7f40-44ee-afc6-dfb0c8507070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c7c00e-9ebe-42e9-aaa8-df2fa722117c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3501d1f8-05b4-4bd7-b94b-94a8b2415d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9e6b03-abeb-4d8a-9585-302b61e0c0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99223140-5384-4e11-804e-504a0c07437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89ed368-bf29-4075-910e-df9dbb937f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22b6520-f2a6-48a0-82ae-eca42a179904",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb322b4-4b97-45fe-9f75-2d328a703bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111bbe39-9ffd-431d-85f2-d21e974e6e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565d307d-ab0f-4fb6-a4d7-cfecc642db20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e38bb19-9b25-4884-8238-f7b4e469f440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e65c2a-3e90-4c9f-8279-b67d050fc255",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40d9740-be1e-413f-9e86-dbd40b2f8162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9823291-0f51-4c42-bf05-56c6fc69cccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213b9efd-13ec-4e87-b63f-c0ae32c37e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7e964dd7-0d7b-4866-b53a-775bc45ca9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981b4539-3ead-4c3b-ac81-435a5c493c95",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218aff8a-4b03-4b8f-b360-73d6e0239233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57fee52-c3cc-4246-b4a4-d2fd514eca58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ae98e4-360f-4d2b-bf5f-2fd151e2e1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe8a39d-fb8f-4acc-b43c-c276e18e7064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc69a8-2319-4825-a809-58e8f1aac08a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815a772c-c61a-4b7a-a2c4-5768f1ef1580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e4955d-b182-4ee3-ac81-51c25580ba8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0302a943-9a98-4b9e-9939-3762a5aa5f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e970132c-7220-41b7-8481-ed7711536311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5dea99-a2e5-4c06-87b8-b94d70baf6c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd63385-8f13-455b-85e4-6e65f9861f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777e5103-4b4a-4d6e-9ba1-6b7c10d7a789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78505664-443c-4272-9ead-a5e6e6e73130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "009f07e4-8f25-4fe4-b8a7-10e0e20ec02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd7b75b-ef27-4ffe-be59-6f1be5e588d5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cfc473-0262-45cd-bd8a-92b8a3e75ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e5a48a-2b70-4409-b8f9-fb7570e90ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61e3e35-0ca8-4b04-9b5a-7d33fc8fd0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b39308-791c-427d-a968-4d5d3de6b9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21feb273-c1b5-48a1-8ef5-e440ff546c07",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103c1d62-e4e0-4009-882f-f1f7eb421526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865650ef-afb9-4fbb-80ad-9d57da420e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ef0c15-85ca-4583-b7b4-979c143f691c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1749abf9-3266-4e36-9e25-124f526c8b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49db7926-189d-4602-b3d6-d6c9f38d0b40",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d37d5c-d8ad-4ddf-bb0f-e168885a80c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cd540e-e175-4bbc-b3f0-0b45ca810ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016493b5-5a62-4b0e-8f6a-0d64c35ef564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "093e1108-9571-4ef7-a891-fe0a3e029eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92228838-9475-4f4b-8c48-93cc29102807",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b121a4-f8f9-440b-a1d3-2cf456ab288a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f37bbe-84fd-47b5-b399-e77aa1094672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111082ea-9d9e-4d9d-9bc8-2c67fe77ccc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d22641-3056-4f26-a931-a1186d5f77d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86c4930-ddac-48ec-a391-dbb18b0cbb61",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca424f5e-25a3-4a50-8138-ce5b6921806f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c1c364-ab80-4403-be35-bb338532297e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e49e2a5-c54a-4780-b7ab-1ba454679f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "550ee66a-1391-44e5-a638-5b98709fc224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483fa0b5-80c7-407d-87b7-734733c6d3ae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb70876d-9561-4abc-b1c2-ecc23f32e886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248f4e37-25cc-4213-bc65-37176f5898ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f38e089-df6f-4a20-a507-e43ed1ca9450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e42525f-8853-435b-a982-14bb4ced50cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62824835-498b-4150-b202-e1548f66b951",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e37ae8-c22d-432f-869b-b0d1b1c7f69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1879fa5d-3e42-4143-91fc-542ef80f3a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4147dd0-b88d-45a7-b9ea-bb395fb02b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ceb88fb-c82f-4348-860c-73ea998b2492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3a8efe-387a-4f11-bd4c-464e85ab88ac",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f809c47e-76a5-47d2-8b5c-ef45c90a76c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635cbce3-54a7-4e3e-8e42-3c1375c5091f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e9a8b1-92c9-405e-9042-fa0522b95919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2b1ab7-7215-488c-8bd5-1cec5e41db44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476d91cc-c781-4c2e-ab70-a14e9fd1e8b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cbdaf8-cd3a-4100-97c2-b3cf98646f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a06f82-8f9d-4a85-bbdb-827759d45642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0b7849-58cf-4761-8f1a-05c6f9148489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ecd035-0381-4277-8bc9-1b7a760701f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb20b670-7b8e-4902-a25a-f422c4cf263e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc3d5b5-449b-479c-bdea-b5f079d982a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6109b8de-494f-47ed-a7d0-85251c71ff77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d181d23b-4bdc-424a-b63e-4bab566b37db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d81ad1-dae2-43b4-b26f-7079378537e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1ba4c9-5eee-4719-bcdb-f0822fc25ae7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5226bd7-b179-4095-be3e-cf1aaad49a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec14180-cca8-4578-8708-1ec1fa1d069f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78aca23-0bf5-4b08-9ce9-4dce8db4aee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baadc2cd-13e0-41f2-b044-3aae149b60fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2699d61-c69d-4bac-8ceb-ddb61a68c28d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df8569b-9687-476a-8745-ed8710507aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce3e271-f8e2-4ff7-93c8-526bfb666044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988836db-ce97-4457-8963-699980d9c5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4474c680-064e-49a6-873d-302af30f47f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a1422e-6fc8-4850-a0aa-96a47486736d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55dfb18-954d-49e3-aa67-d52a29162b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0f39e2-ac38-4329-ad9f-e86fec53f265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca5224c-bca6-403e-9bdf-5ea5415cd20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abcf71e4-7363-44e3-9e9d-65d4ddb0169b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cf010a-ce44-4a4f-86f9-3a48627182f9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a5ee98-f92c-4ebf-98fe-71ec70db8710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca03521-f64a-4bed-b705-9552c56b8671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b92706-e95d-44e8-b374-21bbca8317fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a454036-6d99-4661-b808-5a55b9ef68ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9ce97a-a95c-4c0a-85b1-73fbcaceb8be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff49aed-44bd-423e-b99c-3bfb16c445a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5012c35-68ce-49e2-8cf2-844d8e48208b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2131c582-dccb-4c68-8112-18fa0e384a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da6a712-b1d3-476f-ae90-441434662e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2365528-6132-434b-9722-c8e37c78c2a6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c25cf53-7e7f-47fe-a996-a4b095d68cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f54acd6-cdf1-4c9d-b2a7-68dcef1b1cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bfdce8-f55a-4c92-941b-9a2b5f405fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1eb6a6-7410-42e1-940c-732adbc0be89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c223206-944b-4450-b787-97a2f787342b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286e0164-3ebd-4909-8fc0-fcd8c7c7a9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba13978-0601-441e-8a8c-856e6e44b73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebe181e-5b03-4096-a358-a5d832584338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8859c1-73ab-4f75-ae0e-4bafa9dbb238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817269fc-b1ba-43fb-97f8-4591ab87977c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209f428b-7108-46f8-8e82-c6bb518b3c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79ea4bb-9a7e-4fbf-8ede-7250ca304552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3785b3e-85bb-4c90-b298-f1a4e91135d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9198af6-cdd8-4bbb-9e8d-c5083d7b4391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa5f25c-78ef-4d3a-979c-376e92a57a92",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19c5b55-1716-46af-a949-d07588e0377f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c6dc11-7694-4501-a654-86d1bc34c718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d020dd19-9635-4cd5-b573-377c848b6751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b608dd1b-eed7-47d6-a616-c7a2567342c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f69842-9be7-4003-9bd1-474c85078e51",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3277084b-e822-47c6-9b16-5157e1582bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839f2bbe-ed9a-4b50-92cc-1d2098790955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc609678-0dcc-4bb5-a35e-87902613f466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a109e52-5b86-420c-ba3c-7ca37a3de3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0323c4e-4f82-48e3-8adf-080b20420f78",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764fd082-38df-405b-984c-f9d6c75f68c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db55fab-fbd2-4f06-b8c7-6a9f61943fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74551246-ac55-4ef4-aed2-4d38a51da520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6c7161-efc9-439e-aa5b-ddf17ebd291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f2ca68-00cc-40d8-ae81-6e1dbc27a983",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0a8e9d-fe2e-4945-8c29-f21eae9c6453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079663c4-c564-42a3-a7e6-961a941c7e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a5c634-813b-4912-a467-0c8d0cd88e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d25bc9-9404-43ec-8329-ced106e74f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7866f280-8367-45f9-bb5d-a583865b2586",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a80f3c1-0046-4fd5-afbe-a731cfc31607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9058ee6d-ae8c-4ed8-b389-446591cd616e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaa43e1-470b-40e0-b767-827823b60460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "076b1fe6-020a-4222-88ec-72be4ba71620"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8a65999-8907-49ad-9f9a-94c87744e187",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad8a5bce-a2c8-4ae5-955c-62df2daf7e7c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14206c86-bf93-4dfe-be8c-d334d47b2a4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a4673d03-c161-4aa4-94c4-1472b7409621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ee17df-de01-4876-8d69-0cf5928d1dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec6e3ff4-8d9b-4edc-8075-cd57bb004f6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7bea329-1eaf-4efc-9767-176f7d9d8490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e06040af-50d9-4663-b1d3-87531cd657a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd51e70a-14b1-4db1-a59e-91cfa74d25de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edd413af-aee1-4a2e-9f6f-9d8ddfd79dc8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92b70c47-f79e-40d4-9c88-f9a33049b5df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24f0d1e1-ae2b-4812-baef-761710eb1c0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b68aae3d-ae56-4acd-97d1-7a19d922e6d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "248bdf62-3d51-4fbc-b421-9d85c461c556"
            }
          }
        ]
      },
      {
        "id": "b100bde9-5aec-4916-90e2-6141452277a8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5d5223ec-9cc7-4b85-b811-dea42ce9dbaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47355b2a-6d43-4231-b8ab-d70ed2ef4f0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa08eb26-7df8-45b3-8cdc-0725a8cd59cf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5a033-053e-42c7-abe3-45a09e8259ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b4bb0c-bd29-4070-99df-17f0af0d3b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f306cb30-e1ed-4e41-9801-98caa1714a34",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f09823d-fa8f-47a7-850c-47ff335dd3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba96457-a0ce-466d-8471-23324be3d58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df317ad-ef0c-40f7-8bea-4eabad2ab2aa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8fec5a-7bf3-4fd8-ab8b-dff54782103a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750b839e-0b05-4692-a7e5-2afd843a2686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a296bc3-1d50-4514-94fc-a3c2185e4b53",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0881dae4-7abf-48c9-b440-61787fe7cd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bda00d-e9c5-4c97-a087-204d513549e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f7f787-4579-45d3-8608-df6635f45b3b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4470fba8-2b64-4512-b00b-3ab35f251238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6ecd10-f6b3-417f-88b5-e996ddc5ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89563baf-a91b-42b7-a785-c8980c324fdb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65a3cc1-ac1c-49c5-8916-708d0c942c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0d8808-ddbd-4b76-93f2-bd7ab5565800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95278d3-5c23-490c-a380-5d4b0c8d87ee",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832e8332-8153-4f85-b4dc-44545d73398f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f45e67d-4c43-4893-9e6c-0a2f1d7adfc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d20260-eb9b-43eb-bed6-15af10fbf4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7202f76-356e-4baf-a9b6-2b245c60739e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56286cf1-b06d-45a7-98d9-67b61729724d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff79ed-84a2-42a2-87a9-03270e339360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da54db19-a28e-4156-94d9-0ecb87126d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da4d3bd-18fc-43f4-bddb-18d36d06954a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be634b2f-19bb-40f3-9c67-1357db8be684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b865eb4e-3a31-4160-b8e2-f84aceca5848",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9542a24c-2a58-47b1-88af-8bce5b9d22a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe414278-db51-4d75-a87a-63680c35679f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08fa255-f9fc-4ec5-b43a-9c8198cb0bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86e74db-97ca-43b5-bd75-45e98b8a3b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708a0cce-f20f-4b17-83c4-31a622075072",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d5772d-19a0-42b1-9e02-e5896ec4b107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd0d1bc6-a0ad-4df0-ac30-4dcd2c0e776f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049664d1-349e-45a6-9ef8-581dd4bc5c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b85075-5527-4cac-bf84-91914bc77438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a62f4e5-2f45-4274-b2c0-2573eb4c64dc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533ae115-72dd-4e98-bda3-1076fd9da7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822b1c7b-6e45-45cd-bc89-2487459dc989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf937dc5-c704-4b2f-812b-20e890ce6197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda88e66-b3f7-47e7-ade8-182351d36421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4585b4d4-d7e2-42bc-8d52-6b4fe4196890",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be37dee-94d9-4645-b2fe-8b5314a27839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff7521b-4ad2-4f1d-91eb-31ea404a8b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfe3b0d-a1fa-4cf6-a168-25fdb50ea98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759555f9-f79d-4a5a-9092-87b8c70f8f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e480d5-1264-477d-8941-1b2bc9621b44",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65f9544-7654-4f8b-9b5c-869cb794f6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0345f123-4c20-4b36-ba26-d37261691f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930f4a1b-97aa-43cb-a998-6b3b9b76ef6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe51bdc-56de-49c9-acbe-9b0c75bad503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2a6346-4778-4166-aa7e-3b75e5d71e9d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fff37bd-3664-4df9-b176-921af535d6e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22876dda-0408-48e5-bf50-3aea43a3ed45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eda7b5-84db-4466-ae43-135b0d2f6344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049e24a3-3586-4271-b55e-89c11b617857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbc06d5-c9fc-4f05-b706-949579d268e5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d4d63b-a350-4f17-a452-19a780aa6f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a11dd2-bb37-4e7e-a120-621fc9b25323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93857b4-babd-49cf-a87c-dbd217e945d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e68d24-bfea-4c8d-84fe-a1b01d681c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c74768-1562-419a-8af2-b21a317fd695",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298aea94-e879-4ffc-b014-232ecc091586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d1f292-4c07-4765-8a2b-f94a94f26e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce2eb61-98b5-4566-801e-e7b9b14bcfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfae418c-e5b0-439b-b7b7-6db56ae0e72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe45533-f590-4d22-9194-fb029b648415",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaff63e5-d3de-4665-aecb-56735bbc4a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9944929d-6ace-4ae8-8e70-dc527d661458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7a6e97-43af-42c4-96f1-485f76c7d09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a00b78f-ab22-467e-b900-b8581f2d760d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba026762-2121-48cc-a63a-385444c89388",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cb4dae-51b8-403f-aa77-3f324372195d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae5e806-2679-4870-ab20-9bd91059152a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b1459-8250-41ec-99a2-f6a5b14a64c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2716dbe-47d5-43c2-b416-16f9129df125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94c0628-a33a-4210-a10e-0ed46d5f1def",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59177f1f-541f-4e50-8390-49af5c97f69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99705e99-4568-4411-bcff-db0d6460b459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d623a7-13ba-4eeb-95d2-9aa9f3415df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68243fb-2ba6-4296-92cc-a1f4016398db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444f2f63-afc5-41fd-adc4-0076d1d4674b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c906b8cc-0544-413f-aae2-aba627ea8ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caaae9b-e2a6-4938-adbf-c99167a0a6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ab6b7b-212f-4002-9950-557a60109d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7895b643-174a-4fd3-b060-66794a27b011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420a9f59-dfd2-4e05-a0de-78a1da3bcf36",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e70c2b5-cfc6-4d67-8d5e-aca268c154ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763efee8-4722-4c61-96ce-49b6e92ea564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294b341d-416a-4460-8070-8e8f69252581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60e7ab3-f4fc-4e54-8413-dac12a19b447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41c9422-277b-47eb-9e7a-f2e684f13082",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d91d181-24fa-4296-8e18-f571620103c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ede47d0-a57c-47b9-8f6e-7406f9b562c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070ef24d-a2f7-4792-83c2-2b38732845ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f951da2b-afa6-4dd2-8ef4-c77f3407a280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cadc411-1a4e-4e2e-a29d-68d3a320267e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e209eb-c485-409e-acf3-cbdea993890b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6647fe3a-2798-4a2b-a078-5ccc2a482f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff1989d-97aa-41b6-93a1-1e45ae49e797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3741e124-6e0a-4d42-b5e8-3bba4635a37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749971d7-c1cf-4031-b8c2-99ca84dd02f9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7597071-7812-40dd-923e-11d276cbbbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e87bcf-a264-4323-9b64-a54b779f718d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5158202-9ca7-4c0d-b359-8d6d6f83db38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a82a9b1-ea77-438d-872f-0e5210681763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad79396-d96d-4ddf-9339-1b9ac39b18d6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd598e42-d3c3-438a-9a0a-5fd793044760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8acf112e-e85a-4ab1-943b-28903fe03b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f296c1c3-1faa-461d-ba99-34a51d334e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e568e895-0bfd-4898-b3d4-11bb50bf40ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e50ef2-29c7-4e70-90ef-4f9d16d295f7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12526fa5-b48b-4544-bc24-74295c0eeb67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d7127f-0977-4003-bc45-1ecc88d2af4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7f21a4-52c5-4bd2-80d3-7e250cdfd2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ae8377-9c1d-4acc-8a5a-5714839888bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d716a08d-3e38-4088-95c1-4cef63f5963b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770b4882-818d-4379-85e7-97870d6aa289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27c81899-c3b8-4750-b899-9ecb8f3d91c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818403b9-0713-4a22-9e54-a2801eff294a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acc4de1-672c-440e-963d-749504404abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33528e0-7c46-431d-9aa0-303ffffdbbdb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9879142f-9d31-4270-a0b8-fb6052160c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c384b34c-4759-4648-a58f-6e1721f114cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d35d41-cdec-49a6-b09c-6b98efd7ea07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8f2d8d-b1c0-4948-b4a6-41a224eceb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ad2dba-44d1-4a20-ae38-3fb5738ca034",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3613f9c-5a73-4db6-93ce-a5428c35e0dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b610de21-3da7-4f39-a0ae-b91617c5ac0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed947e50-ba20-4790-b67a-049256a23965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340b9819-0cc5-49aa-88ee-4cd8610d213e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8a7ff6-ed9e-4085-bfec-35777c20c33e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4447fd-0fd2-4774-a8fd-e95d82568997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ff0e8dc-0c9d-42c1-b5a5-04e40e4214ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410d8479-2690-4175-9b5f-ad5f9175f700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b61567-7d97-4cf2-ad17-57a26fe3c22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cf22ce-e7ab-4cfe-b642-35f4b41ca0a2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798aea07-f0b7-4401-af30-ef35b8abf066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfacb813-9a4e-42b4-99fc-e658cc8c904e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ace95c0-fca8-4bef-b264-6a904f7c3fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bed05dc-1689-4dab-965a-c3d84a99354a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a436637d-35a8-4c65-a0a7-d46682b04b76",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edfffb7-78ea-4364-ba8f-fdce6e91bba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f730ac-6557-42ba-b091-abc31c1b8a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f9789b-7ad8-442c-855f-68f5a10cca34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3b9bfe-46aa-4362-be41-ba66719090aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c38b6f-ff69-4d86-ae4a-4d5942e48c6c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2277f8b5-334b-47ef-a6f7-85e5d9892b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7cdd4b4-e689-4b77-acc5-d141e00972ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7afed57-dd62-4c4b-970c-3491429b6bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3166c7c-6262-4538-99d6-3d1cc0c80c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd7c3c4-6ec9-45cc-81e4-9df672d9686e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a57534-9d3c-4c3f-b4c0-f0687d99f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2349f081-3a44-46c5-83b5-07da63ef0f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35cab0f-dbea-4c1b-9fc1-ada408b1031e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da181256-11fc-4b07-b7ef-82be0d705e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03461d5-b64c-4fb9-b877-ff9d35f73201",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cb283a-8c35-4697-ad06-254e8fcd14d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329f3cea-4c43-4437-a778-21d225828fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e3d0a4-c33c-4419-b898-c9c490f8da36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7fbcaa-4e24-46db-a14b-022c24cf456b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160d2420-1719-4231-b0ea-f9e076a6bddc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42db6473-ccbd-48ae-88d7-875c0bfebec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afae6193-1bcc-45a9-a96c-2cd52323e325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b038daf6-80d2-4411-afc8-bb6cad3d54f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f248ef54-a6f2-4c72-a237-31b63c740ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9668325-0a4a-4aad-8e94-32a6b4c0f784",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1649713f-e295-41f3-b441-003fbc503eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089b04e5-7da1-47da-9f8f-47a75bb69590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395ae32b-6c89-4b56-b4ff-b31688af301f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa86008e-33e3-4d9a-b9c8-c9e8669c6c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07f0492-2c60-4a1d-927a-8889edcecc77",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2301279b-7ff2-49a3-a6a0-e8f72bfb61e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684300db-c4cc-4fc2-822f-f84d7e0f72cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69c6edb-d7bf-4ffd-bacc-39199dc1116c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de761f9-81ef-49fe-9e89-5ae8cf62d57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a35738-e9a4-4583-a73e-d3f6a5938377",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fbbe5d-3248-492a-a148-2191faaaf0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35c2bf2-9d49-4e5c-8ec5-9fdfb8285585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995d288f-8b22-40cf-8bb0-fd32374c6e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208ef58a-43e8-4f98-9c82-90ab9c5d3729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39feeca-e677-4058-b58e-f2d344d30efb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dbfd5c-6c1f-4403-a8bf-5da6993e9928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eced150e-5425-4194-b9af-d0d91d8d4359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67486aa3-e0e8-4fc3-ba1d-0eaa4a9293b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557e0238-5e7f-4b9d-8957-e9881b11b41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4a82bf-305a-4467-8a7f-c7bf2b2109b4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d163603-4611-4013-a21a-1665c36fdc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9e2583-b0c3-4582-aded-ef831cb37d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdb235a-b66c-4213-b9ca-34afbc981c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619de6f2-ad4f-4ec6-9bc0-f83d9dcbebc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fba4f28-b969-4869-ae50-27e511d7a801",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8864c9-0bae-47f4-81eb-56bbe217d4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39898101-2966-4505-a63f-3da708e60838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6258ba5e-5bff-4dd8-9247-2fada743a193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282e49ec-529e-4545-b9c8-cbed2fd031a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4c0d72-e723-4814-8503-dbba5eec7516",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0de0005-3d72-44e1-baf3-d64971e65db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6125c99c-d68b-4823-ba2e-2f9cdbe5bb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce946c7-feeb-452a-9b84-34e4ff6b6252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c816ecf1-f091-4b5a-83fb-8df123a8b0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79c55be-4490-4c89-8d0d-d50718b28678",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2edffb9-70d9-4262-8160-772e16f5bff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f74e57a-e410-48b7-b4c3-30141de53c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88154f7b-86d8-47b2-918b-a7ddb2e2ef41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224369d8-e7ac-48dc-90de-b5a144d169e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bccadb-50b2-4f02-80b0-da0ff1110918",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecdd136-06df-406d-b3cb-4954d42fffbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e7a42d-0a61-457c-8656-1f2b4588931e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f356ae14-d6a1-45da-bd1b-26495fbba035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b507bb-e52a-4cc4-8f23-110da8388a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98eb2c79-d64d-4fc3-bbf8-3351c33519bd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29f4f2b-24d5-46d4-b2e4-0349f5480842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbd8344-804e-4855-a4e5-c06778d0e46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee3c416-a66a-4461-9f86-a6d0f8925706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b21b90-4d42-4008-97c1-aaede97fa69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4826991b-9af4-455b-8c92-6c282233d8df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca34d9e2-b9f5-4326-a269-31d6fec30229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d7d8a6-dce4-46cd-919e-63885b703f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f830e345-0c49-42f0-a6d1-04895cdfd8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8f1aea-77bb-411a-9368-321d5ed1cf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fca2c0-6711-477b-9827-527061cdc335",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53d21b2-0dcd-4570-bb39-476b20aeef12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41501a50-9768-4f3d-ab3c-28bdb2a34e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b0c837-ccdd-4ec8-9da0-a94f0b2059a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5102c4-7d59-43d3-abb0-ef248c99256e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57501fe4-3574-45f1-9e99-eef40cf0a01d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3f5ba8-2fa9-42f3-bca7-4385e690e7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d206b84e-b86c-4af7-962e-ccf72e256f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3f8306-b761-4e02-b5bb-680e01ddab7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5cac21-0c4c-4098-8bfa-334c5efcfc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7cf3dc-eb82-41de-a7ff-54f0e9333cdb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa548719-55a4-4137-9697-8488b67d95e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55804f96-4b4b-4d35-a5e9-4795f7f62de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0960c18f-c4b8-452a-8a7f-9186b1f92741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f0923d-fa88-402d-b56e-b63bf2f23368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa9e4d5-3f1e-4d98-b67b-988bd999e271",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4162c782-a373-4beb-a420-b537d5ab3111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0f60c0-4b71-4e14-be7d-ceec48f9308c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe9831a-9105-45f2-9a7f-43ef6480946b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e83e7aa-a8a9-4a6a-9187-df814de71f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2b5b29-fba8-468a-8545-6ee1402a60f4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419e887a-72c6-4b09-aa84-6a12c6be58a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac925326-a88f-49ef-ba48-a091f0b02ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9233648-14a1-4ae3-9b33-ed73ba163920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1343838c-b565-4a78-8276-74df87a670b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18202c83-6ccb-44ae-8c2b-c10eb6863eb4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08200787-6f2f-4b04-a153-9c24a8be3d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a381d2-67d1-477a-9d34-ee25d7e30340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dc1377-b228-4db6-b2af-eb5dbfa97b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2989496b-ac7a-4d30-a721-839fe1240f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa465360-188f-4bd9-b252-b0848a28aae1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7385f1bd-2634-4077-bfc2-9b54dbb99058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0730032d-8ff5-4aa8-b6bc-f61393fac64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a590fa26-1a4c-4990-a38f-481da42c6729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9163fb4-bb5e-444b-be8f-791fb793d549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89271cc6-7ebe-493f-b802-5ac3b8a8604e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b3fc2c-f3d7-4649-a8e0-e138ebe20c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad79b43-6c33-4fed-9646-86a9c9722968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1aa81b-98c1-4412-9c2a-b3fd6811e893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc0be0e-1298-4721-808d-81b434a17ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9ecbc9-1d03-4d43-9ced-eaf1348f482b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53446330-e1bd-4863-8060-c114959424d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edf24a6-dc7c-4f2d-97bc-e0da9f5384de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b44ffb7-f93d-482d-84a9-41dd001a7a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b67d44c-5ec0-4484-b85d-c34c0a66febe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6c2d6e-fe78-4dc5-8660-572894c9600f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1524374-0e6d-47bf-9657-54bb53f2db49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725483b2-aecc-497d-b8cb-caedb0af9c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94580d50-c33f-4d8c-8c41-e42e14be5e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2490420-8caa-4eac-b07f-587f00360be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8016fd44-cbf4-4b50-aafd-0359f0e26249",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ade74ea-e692-40e5-b70c-f8c0edee7998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e89577-b05e-48e6-ab26-70654fe34700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c978e92-f3d8-4490-b31d-2880209a50c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8508675-6fa3-4e83-87c0-6c1e46d25e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97885a9-b1a3-44e4-b97e-8ce7f0d7bf3a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc6bc8f-2b1e-4b85-bfd7-10280b0ee88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf01037-c831-418d-82b9-782868983d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8747b788-0dc5-4aff-9c0f-506bc02d01be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a12997f-9899-486f-bf35-62c1854757c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465b613c-0e49-4c2d-9a77-aff76b16855a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de924e5-6f71-4a7a-9329-8c469afcc94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e27ac12-d911-4efc-a7de-7ec47794380e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06988814-c45b-4680-ab50-ae7fa489f63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382192aa-88c5-4975-9fe8-0c59f22e7c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c5919c-e6cf-40ee-a590-629501df374a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0635c6-76d2-41ea-bed6-ed61fb8fe802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4802f6a9-9b2d-4eed-8d96-ff4cdd682561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db6bbbe-011b-4d1e-9e95-4dc6ce213a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9119fc-2922-46a7-ba72-399b1a886e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8904f066-41ad-4ac5-a9ec-d302debbcd71",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d32f11-bb69-4965-963e-8e200ca007e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce66e777-bea0-4678-9cb0-46b237ff7713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9f7c64-cb01-41d8-91b8-3b33c0e58fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209673e5-1a9a-414a-88a8-deb753257561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92aadedb-14cf-42d3-af61-1c94b74b22e4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9209ac89-1c4b-4db0-9e17-a55c44b3fa7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de09e09-c699-4a98-b32a-4bb930881dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ccba72-6a1e-40af-b138-7f71a884a06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e04cf3-ca90-49e5-8224-191b8fa72336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634b8742-a65c-41d6-8580-fe8bc5fe7d91",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1922ce-0074-49c8-badc-6af9e51c1d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1b37f6-4868-465d-af80-ab9325b2207c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644b0caf-4eeb-4ed1-b5b2-c920c3074c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1035c75a-1bbe-4117-8766-1eea2ec01638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8670b8b-2114-4c08-be17-66f8de7e500f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cd8ccf-c9d7-4835-acb5-bb059c4d3756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcdda3ae-b0a6-47f8-92a8-3dbf86462920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbf16eb-dce5-4f56-8408-1540588443a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed16f648-49b2-4810-83eb-c66ec1605233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9284a91a-bcee-4602-8fe8-ceb677b15f54",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cd5b9e-0d81-4515-8178-836c98be4f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07586d80-4929-4971-9e7f-21739845c696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551b6fea-c8b5-4019-80fa-c4a338d5347f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9ff2f4-ea60-4948-85a7-0bba452008c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300ea3f6-cd25-4f1e-823d-b93d6d7e5a86",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a859fc5e-307f-4a9b-81fb-f42192ac1896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30c7c75-269d-4dfd-838e-3ad87898ad48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afeac471-0dfa-4334-b2be-7ab1d96acc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9d05e3-86b1-46d2-93fd-9c49425e1c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed44d98-d90c-4eb4-ac35-10b821d92ab1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792b3e42-fe10-43a1-9912-78f45d938238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f026581c-2905-4068-bcef-d36587454c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a27f5f-0988-4869-9c50-34916c6ef22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977c3320-1a64-4eb9-9f1a-0f1be879330f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca67e232-b254-46db-b0bb-0b15f1b13918",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0740304-ccf7-42be-a3d2-ef1e4744ec17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0847dfbe-c5a3-426a-b656-cf6b7345f5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f936450-9b2c-4b80-a94d-3ac018d8e0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e72c48-4005-4e46-aa7f-f5ca9213654d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2576bc-d8a3-4e09-9e93-7b5561969628",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ff0bea-887b-4d3d-9e67-75623e0046b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3019eeb2-a4ee-4435-88c9-40a348d897ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb718b1-a85a-4d1e-82b4-0b5c8fa01fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9144ecf-4a90-451f-910a-a15a54a9e524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a995656-74f8-45cf-8a67-f0494a5883f4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16144a46-7b83-4598-bcef-c2bdb338f08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8959850a-94d0-4e4c-b171-7d21102f8f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc56dbe-a3bf-4d23-8684-85416943ed94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af88670-5eda-40f7-abed-6cb07804dd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b51cc7-ea08-455a-80be-6c2dc8d78b24",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9a2885-d297-40cd-8c56-a2da6590d770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b873523-d93c-48fc-8db3-d92e64212fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6e6608-d55f-4c14-a000-632a0c6f2216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38983a5a-e14d-4695-95bf-ee59a589003d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6633bed2-b65c-4788-b77f-17fcc705ff37",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1df473c-1b69-40d2-b097-cc8d18d1b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f313a4-6691-419d-8e3a-ff11b0635371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b154687f-336a-4262-9c19-d335fbb7be78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf1ebd3-8663-4dda-bb98-d20310094449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0254c5-05ec-47dc-8380-66f7a7a7f85e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eccf906-27f9-48c7-b1bc-e2ba7f365e86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1577ca5e-6759-476b-8b92-dee4f898a222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f574198-9e59-499b-86b7-2bfbf506bc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4839a30e-9952-46de-91ed-ffa50a50bc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8918ac97-cc60-49dc-8a7e-aef32fa117a1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892aac6e-4f8a-4667-a1e2-2ad10bd08d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb31630-eaaf-47ed-b804-565e41c074e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd1e0c5-d4f8-4f5e-911c-568729d9edab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cf48a7-eb4c-496c-92a2-f303e96238bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd6ab08-c71a-42f3-a859-c64110da96fa",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f19c896-4abd-49d8-a040-704126be3bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd78e81-dc47-4305-9556-70ad2b9a7008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826996c6-6c29-41b4-b596-66fed535cb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629d0b79-2edc-4017-bd6c-c4fa93fc1efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8369d7-60f6-4cf5-a720-a496fa9eeb11",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e558c7-d652-407e-bb72-49702c2d3b63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04c34f6-6b09-4f86-a2ac-8ff0d565a3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fc91cd-e4ff-47d1-aeaf-3dc4cd607975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02b5d2b-d3b5-4e82-b071-6fd9c3759bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8add26-4638-4bb8-af66-b831a66b8206",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115a5e56-3e33-4e73-9631-87798454db4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e665cf5f-86ef-46df-9304-a121fa575a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d759748d-111c-4fde-88f7-7d29e88a753e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67ef05c-192a-4739-b23a-99a143b1ecd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1451259d-f4ba-4541-9dd6-314ff72c64c0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5c9b24-0a02-4ef0-9a3b-f92e9094b386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32adf293-bbec-42f5-bc40-4ee9a5b74b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7994aaaa-f670-4e9d-ae42-74cab7c21c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07baadf1-c503-4f7f-9844-82538ddc8a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b75af2-6316-4d58-af1a-1c26c7a5458c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbb434a-eb2b-4526-9b92-b4ac5cb863d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be90c5d9-9e17-4f40-a6fd-f9cddfc825e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7f76a2-e84f-408c-91f9-60a4486e982b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc358b3-6537-48ab-8b8d-6dfe40075e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d5a6ea-507c-45ef-9d36-a9e641f9833f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67ec00d-d3f4-4314-ab4d-8bd6b9c207ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c99ea4bd-24d1-4d86-96a5-68a72bd73b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb42405-6a6f-447e-aea8-ae60a6754b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b620247e-b491-4c96-8075-626fd1769c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c79b58-ef33-4cfd-870e-bdbc114e81cc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1767ea-fd77-4d5a-93ba-880dcc16d87e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2008350-917c-4a37-88c8-f593bfd9ee4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdc1d55-6610-4d1c-9bce-a3ec18ef0cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2039bceb-bf40-49b9-ade0-5bc37c816ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268c53a8-5805-42c9-96a6-6c9b6b910aa2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa52c40-e106-4d76-87c8-113c5e35c19d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70970b11-f240-4eb8-9815-ccf7ce4607b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d763b45f-eda1-462c-927a-9750ef933be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b08d52f-136f-4a10-a479-4679846875a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4b955c-059a-4629-b967-fb944d012809",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46271fb9-ae17-448c-8b36-c891c33bd726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4216c23-e16f-41a8-9cda-910bf10628e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ea379e-ae13-43b8-8f69-d67a171e7db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197ba6fa-aae7-4054-b66a-6171e4603e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffb8307-e287-48c1-9ac2-c96faac1e9c4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04516024-91d7-4741-94c3-57c97e8be468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faea7988-f548-4a9f-af4c-471c8ed56d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ab46a5-523b-41d1-aefa-9fa1b8601054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c5d396-056f-4af8-a3ca-4c7aeaa5bc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf88b35-67db-4bbe-bc78-43a9311ffa0e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714e1410-d7cd-4784-a4e0-5ee3005682f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45f90be-419f-48fc-84b4-15f266d71e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a003df3b-3132-47ce-96a9-958a9d861b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f103447-8076-4671-85dd-6381b03dcf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d0b8d5-3178-472c-afe8-fdc622c7695f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75b60b1-25bf-4790-8128-35d1990ea349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf25127-ed44-42c4-afd3-fc725976a37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719a49a6-7647-4b1a-89a1-ae003dbc4d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652d72aa-5586-4ffb-9001-cc42dfe21215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91142d5-1fda-4596-abf9-5a917eef71ef",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247e1061-197c-4b31-8acd-d5cc0240e0eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "571273b8-efd5-4212-b027-e03b95634e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954b71f1-45ee-4122-960a-d20ac321319e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f1fc8c-e8fa-4688-a2b3-2e40b7864613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caff5a8a-def6-4093-968c-fc6890c5e725",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a07876d-77fd-43e9-adf7-feea8ff388ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c042bb-0a9d-41a5-9d50-20373020e3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fa6c8d-9ebf-434e-a803-5164ac13a58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e00b64-6dcb-4205-8921-900f1372b76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e334f393-fc3d-4f55-87e8-5b4c3f1e54d0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379feffe-0cd7-44c6-90a7-646639a54396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf80c7e-713b-48df-9f9a-8b6fb6f9b4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b7e59d-734a-43ce-8322-c8336e1e900c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb2b7fb-a31e-4adc-8590-af836954c693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e8cfce-97d2-4f63-bdba-e66bafc49e57",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53420048-7deb-4e61-949d-2315b38ce0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79313fe7-cfe2-427b-8fe3-b1ad000403dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7cc891-61fc-4dfd-985c-86a2613d9254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60312129-2852-4bdf-b1e9-473485a60ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e548627b-157c-4f8c-86f2-469fb88cee8a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37868b90-70ab-4e5c-ab91-e18aacf2f7fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b88fb5-07d2-4d52-a5ee-b02fa7395507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d634d298-2088-4aad-95ca-ae92fde1ac26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289f6dfe-e256-4458-bf6c-2099c49b0b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b89e4a-b469-4f99-99f4-b837a1d98399",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1e3929-62df-4bcd-b0c0-2b840f782c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba02cfa4-67c8-42e9-9b01-84806e55649c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c9bb9a-a0cc-4d50-a2e2-fc52e411d0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa9cfb5-0c69-43d4-ab51-4694ac782e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c107c57f-9d0b-4812-a837-070272ef42b9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83a4099-3cef-4ba3-9d50-04573de7af2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63a2f30-897d-4121-b34a-494737f183d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea725ae-fbab-437f-be7f-5be97484dd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc71f950-6290-4cca-98d9-9853b75f45e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410c8f74-8208-4afd-af11-c8dd58329213",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e6f820-dbf2-46a3-a605-e70bb98aeaab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa779aef-7f2e-4122-aa4a-3955f5458165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcef0444-e95c-4276-86fc-e86dd64cc684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b673f808-6b95-4beb-a532-15cbdc0841f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438b41c3-6052-4b29-aba7-83a3f0f05de6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca84bc3d-5310-48ff-9ade-f92898365947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f4aacd-b112-464f-8649-8683640fce9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc8b9bc-3940-457f-a97c-4ca54a4f6af4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e4f246-52ae-4ee4-8a0e-82de4ff29215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5818e7-6a6c-44f1-b3b8-12200da7d1e4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca647e9-ba7a-4f74-abe6-1de3de01d129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b2cbd0-4086-47ef-9915-79cf4948427f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d83c7a0-e1f2-4271-afc9-9c145d2b0005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d7a4e0-ac64-4392-ae22-781d36143a05"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab989b06-73a1-4de6-9281-2b09a23df2fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3979c591-2b2e-4ab4-b170-f750c3822c40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ecbca23-73f5-412b-b5b4-e5407485bbec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e91027a-778a-4940-9ea3-7ac2ccbdc615"
                    }
                  }
                ]
              },
              {
                "id": "41b1d807-0a7c-457f-956a-86987170e5bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1abac777-a8a0-4150-99ac-e9292e7fce2d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4fab6c-0101-45e0-9849-cc7a4c0428a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dcf3a24f-97ee-494e-b6c4-265fa152a415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3678d7e7-8858-43c1-a06f-5f42354f6553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b69ee154-7ffc-4985-8f13-511f303d4327"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df789094-a988-4db2-a88c-a1d3e0b18236",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "336544d9-e3b7-473d-a4fc-0e46b3d08717"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb7563e5-866b-47bd-af0b-1d844cc0e1ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ce9244d-2086-46ab-b7c0-839e5fe4093a"
                    }
                  }
                ]
              },
              {
                "id": "52299d76-2f77-4630-94f5-a09a7a9965af",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0997bcc8-54e4-4def-9fe2-8c31f0d137db",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94604d12-72ac-40f7-9c12-15bb0dffc515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "26f89a04-7a5e-488d-8abe-d6c7cbc7b60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f69a5a-c717-4767-80cb-5acda8e5677e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd03545c-b7d4-4bcc-9628-a13422376f09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d48529b2-e4a5-4ba6-9e95-676b8ae84197",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b37a00d-0d6c-45b4-b7fe-d01bf5ad8a54",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7152060-e1c7-41f4-9213-2c7fe405fbb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35b518ed-3a5f-4c5e-83f9-1371bb5da3ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c43aeabd-db31-44d9-af4a-6ee3cda1d09c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b901200e-9a49-4767-81d0-88e65bc9b1ef"
                    }
                  }
                ]
              },
              {
                "id": "8838e75a-6986-4afa-b044-95b2a4724e91",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fcff7e1-2baa-44c7-a617-b9cb88aa10cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cb0cde35-a9c1-4382-83f9-ca030a734146"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24d2f7e0-a10e-4a57-9625-015588e74555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "643788c3-9eb1-45d1-83d2-76897e6d3b1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2922671-aefd-437d-b503-02185dfc3948",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f13b4479-efb3-4e75-aa9d-7bc2ba41e46b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd2a5a07-c64f-4632-971f-d6bf18b4fb27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ece1335c-1c5a-4cc1-981a-ad096cc5d8be"
            }
          }
        ]
      },
      {
        "id": "3e254e1e-4d2a-40c7-a195-3d7111cad5f9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1150691f-6c0f-4bf7-8f3b-8289422fcecc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6178ca8-3c04-4cd2-ad0c-f0fca8696210",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f5cb5cc-d78d-4218-bf97-24223dfae779",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb18d9a-975d-4182-bad0-ffa587c58e37",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c06a170-79d4-4797-b960-ed98447202ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da56e86-10d0-4fea-87c7-824e8aee5738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f641e7a-3011-498f-94a1-19ce6fb7798a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fe88799-5738-47af-97a8-e15837a83e6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ba8aec5-48ca-4693-8ace-11e1a8647bb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e3be6f2-5b40-43a8-b06b-726d580c3a07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a004b56-6f64-4021-aa6f-69cbbff3ca1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "138575b3-e11a-4470-a7fc-b29c68a50391",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "12d0d6ce-b2c6-43f6-b8d7-f95596564652"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5ac8408-b32e-4871-8579-394a9409614e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1882e1df-b64b-43b2-bb02-eed68c8e6426"
            }
          }
        ]
      },
      {
        "id": "c79e7667-8b3b-4dbc-a57b-19a68ada5ab7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "597d2bde-5e72-414c-a402-cee93d9463a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43c1b87a-18fc-4751-ab4d-5f5033c0f408",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "747bfe5a-7649-4798-bd00-bd380f6b5d16",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5061477e-7bcd-48be-934c-dcd19d548c1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "285e50b3-6cde-4986-88ea-3955e2853bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888d7424-ffa0-49e1-a14b-ee71720bd863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74ffeb2c-d359-4837-abd4-10340088b6ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf83f508-1940-46a2-bfdd-10c30b1310ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b085a847-2485-4e6e-a40d-25b9a26b7909"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ca0609f-ff6a-48d5-b4cb-94962f6fa361",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20d96bf1-fa74-4a19-a987-352b96976701"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c8efea6-598a-49b6-99f3-cb60c5af7a9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9de5aac-da84-4a67-bf07-979fa1ac8276"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c5b0908-a052-4a11-9663-5b4b30f9288e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5052215c-1297-42e4-8f1b-cd22c23db654"
            }
          }
        ]
      },
      {
        "id": "99a8e3e8-6811-4f52-b7c8-487e87c26ede",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7717e6e6-b199-4b2f-9af5-535be31170ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06494e52-f28d-4356-90a7-6e620d72412f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "552a9dc3-0e76-4c7f-8536-24011b0f8bd5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bfaa8e-89c0-4e5b-80f3-26baece83e46",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be732504-60f3-42ee-ac04-02f1df41099c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3290a319-31b2-45ce-92e6-86989c79cf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f60f4557-8f71-4783-86c1-e6248926cfbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9792ed23-9e0b-48e2-a4f5-e84459c5770c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60d2d29b-500c-4d88-8326-f41c811ac2bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e1114a-7a8d-4e49-a5f1-2ee1423be562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8063f04e-9349-46d1-84d0-ef84e69077ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9452fcc5-9870-4db8-8aed-7f670865ebae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b96326e5-e124-46eb-b912-76b58190bd83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcde5c1b-b38d-4afa-95fb-bdf6782129b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "329b3735-fcdd-4a3f-ae5f-d096050a5eab"
            }
          }
        ]
      },
      {
        "id": "44738716-1b1f-4ae7-9886-1eb5551d06cd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11fd0d06-6179-46c6-aef0-d91465afd620",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0d1b071-cc35-4e5b-8700-5c1e7ad1bb6f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8c7e4442-c7bd-4fd0-b7a8-5c1cfac31d09",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9e06144-b7a7-440a-9c2b-8cc810708cea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b251bb30-4029-44a5-988d-0e6ffd874518",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.55087719298248,
      "responseMin": 8,
      "responseMax": 3216,
      "responseSd": 342.95900482486076,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705970234760,
      "completed": 1705970277311
    },
    "executions": [
      {
        "id": "1cca8976-ac9c-44b1-abca-c645681060fa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "98b351d8-82a9-4f3f-818e-caf559cd3172",
          "httpRequestId": "57754645-1c9e-41b4-b510-d1b70760f576"
        },
        "item": {
          "id": "1cca8976-ac9c-44b1-abca-c645681060fa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e3c19f0f-637e-4fd9-af6d-80446f2dc5dc",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "e45a6c9d-aa75-45f8-9a75-5f83a450ccbe",
        "cursor": {
          "ref": "60f8b96c-2d0e-4a96-bacb-9b98e1a2fb78",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "614ae098-ae6e-45fa-b9bf-1211806334ef"
        },
        "item": {
          "id": "e45a6c9d-aa75-45f8-9a75-5f83a450ccbe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7c292b5a-83b4-4d20-8eae-2171a62663e7",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "a622e478-8e45-4969-9989-f626298834c3",
        "cursor": {
          "ref": "5fa84e14-212a-4327-bd9a-555e747ad8b7",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "72065298-5b7f-4fb4-9944-db15e6cd113e"
        },
        "item": {
          "id": "a622e478-8e45-4969-9989-f626298834c3",
          "name": "did_json"
        },
        "response": {
          "id": "9c312000-642b-4000-95e5-c315ee5cc769",
          "status": "OK",
          "code": 200,
          "responseTime": 676,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f53ea8-71e6-4326-93bd-9f4d0cd45a9b",
        "cursor": {
          "ref": "fa9a85e7-fd8a-4ccf-9a19-d30b64f6303f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd7cb797-a331-4ad0-a67b-216c81b26b22"
        },
        "item": {
          "id": "b9f53ea8-71e6-4326-93bd-9f4d0cd45a9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "165d0304-5aaf-4fd3-85e7-fe8e19edb38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f53ea8-71e6-4326-93bd-9f4d0cd45a9b",
        "cursor": {
          "ref": "fa9a85e7-fd8a-4ccf-9a19-d30b64f6303f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd7cb797-a331-4ad0-a67b-216c81b26b22"
        },
        "item": {
          "id": "b9f53ea8-71e6-4326-93bd-9f4d0cd45a9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "165d0304-5aaf-4fd3-85e7-fe8e19edb38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce9d6ab-2abd-4404-ab15-3c7fc3fe3ec1",
        "cursor": {
          "ref": "b6e5260f-1c41-45b0-8847-9f5357841f28",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2ea0784e-c33b-4866-b702-ad8ca672d2ec"
        },
        "item": {
          "id": "8ce9d6ab-2abd-4404-ab15-3c7fc3fe3ec1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "82b16561-b1a3-4417-a2ff-819ff26980d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf32b440-2b6a-4706-b4dd-c2c4e95c0956",
        "cursor": {
          "ref": "0afda3c7-adeb-47f7-88a7-c85c97d3b81e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3553f911-e382-4c23-811f-04d7eab8480e"
        },
        "item": {
          "id": "bf32b440-2b6a-4706-b4dd-c2c4e95c0956",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "13b25f4e-d213-4d48-8a01-9d0e04a930b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dcce23-f31c-41d7-bbac-81d5ff81ad45",
        "cursor": {
          "ref": "ab8b326e-4808-4ff3-9d96-bdbe6b37a9dd",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2d291af1-2d2f-4107-ac92-8002c613bfdd"
        },
        "item": {
          "id": "78dcce23-f31c-41d7-bbac-81d5ff81ad45",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9d1fd459-6146-4397-9672-17c0cf57d6c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85f1f10-4804-471b-aa51-18c397682ff8",
        "cursor": {
          "ref": "b9bd528a-bec7-4973-b928-9696ce515e86",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e9158b8b-8d86-4d18-9ecb-152fc65bb018"
        },
        "item": {
          "id": "d85f1f10-4804-471b-aa51-18c397682ff8",
          "name": "identifiers"
        },
        "response": {
          "id": "ea7d8b4b-1128-4c5b-9ba2-4a7388e9745f",
          "status": "OK",
          "code": 200,
          "responseTime": 308,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d77a20-3edb-4e83-980e-a02a7291f1ec",
        "cursor": {
          "ref": "da38d1a4-d8cc-4a68-a9d3-cbbcd38d8bab",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5fade49c-bae7-42a3-bfc5-acf4015bc836"
        },
        "item": {
          "id": "70d77a20-3edb-4e83-980e-a02a7291f1ec",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62bb5881-cacd-453f-97dc-129f89c2f0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67522113-452d-4a24-9a79-cf0646129163",
        "cursor": {
          "ref": "1f2b7481-b3d5-42d4-a81e-44f4564d0e55",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2df44ba6-036d-4fc8-9fc3-dcad6ebbc7c1"
        },
        "item": {
          "id": "67522113-452d-4a24-9a79-cf0646129163",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e140df53-aa31-45be-9352-df750d8da8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b76e6d8-789a-42cc-908f-cb8c68c95249",
        "cursor": {
          "ref": "6f443763-9b0a-40c4-baf7-4288a4858f94",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0f4bffe9-8755-41ea-9794-8e5b0cd0e637"
        },
        "item": {
          "id": "2b76e6d8-789a-42cc-908f-cb8c68c95249",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ecc685c2-17b2-458d-afc0-01256416eb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f7d1f5-85a9-41fe-97e0-8f014c818252",
        "cursor": {
          "ref": "a52b866e-ea5a-4f87-8c6d-78d9f12fc3b3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "067a2e3b-39ad-4d49-9859-8ab0d090f3a4"
        },
        "item": {
          "id": "c6f7d1f5-85a9-41fe-97e0-8f014c818252",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7a2c05d6-63fa-4b23-abb1-10ffa3ccddd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfac4f2-d89e-4393-a70c-c9d7e07db997",
        "cursor": {
          "ref": "5f8b1e2c-da3d-43b2-9591-13b2eab92433",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "62ebfcb6-5841-4969-94dd-c1934b9be2e9"
        },
        "item": {
          "id": "0bfac4f2-d89e-4393-a70c-c9d7e07db997",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "db811653-678e-46e8-882c-eb33d8d29705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39ba2fe-fba6-48c5-bcfc-b2f52978971d",
        "cursor": {
          "ref": "2244b5ba-db25-4a37-8aa6-b7465a9c5998",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "95eccbf6-2445-4f92-99e4-6ac3922e21e4"
        },
        "item": {
          "id": "b39ba2fe-fba6-48c5-bcfc-b2f52978971d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fcc5efae-6485-4746-9fe2-00e97ce32feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0e1b39-0551-4401-95b8-337fa89cadf6",
        "cursor": {
          "ref": "c4b7a1b9-9ca6-4b00-95ad-eb325741e888",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b8af2d82-4004-41de-939d-4113d72db42d"
        },
        "item": {
          "id": "cf0e1b39-0551-4401-95b8-337fa89cadf6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "38c3fd97-ae52-42ac-9e5f-ed11d40049d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2435df-90e4-4e74-b557-1ff77de9f0f1",
        "cursor": {
          "ref": "5ab45274-09d0-48ae-9a62-4aa07388a388",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2010c0b6-081a-487d-b4cd-7793efe6b53e"
        },
        "item": {
          "id": "8d2435df-90e4-4e74-b557-1ff77de9f0f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "65a0d78e-7617-46f0-86b7-1f1d4faf81b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68f499d-4954-4dde-a7bb-4c8801eb3019",
        "cursor": {
          "ref": "09420c38-e4af-4663-a131-efe5dc169392",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "89c45ef2-51c9-4837-8258-2d3857060bb1"
        },
        "item": {
          "id": "c68f499d-4954-4dde-a7bb-4c8801eb3019",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f029682a-28ea-4765-9b71-a9069e53bcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2ff3c4-b16e-4f08-a584-8ae8a2d98aca",
        "cursor": {
          "ref": "c80e730b-9d92-4fac-b5fc-4c92dccdf2f8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d83c59b2-5326-4c91-b8de-f3fb35f012e2"
        },
        "item": {
          "id": "8f2ff3c4-b16e-4f08-a584-8ae8a2d98aca",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4067266b-a775-4878-bfaf-dec3b400154f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3a7c43-66fb-4caa-ad74-4631c5529858",
        "cursor": {
          "ref": "400620a0-de40-4fbf-a689-f9fd06f61833",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9499c581-9c63-405f-b9fa-e8fd115ffcc1"
        },
        "item": {
          "id": "1e3a7c43-66fb-4caa-ad74-4631c5529858",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "31e0bf3a-86e9-45de-b121-b59c7a9c7d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ff87b6-18d1-4ea0-b28a-097e264f2514",
        "cursor": {
          "ref": "f5669e0e-3ebf-4dc4-b0b2-24e014ee8958",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c6831e45-eb58-4773-b203-70171ec2f340"
        },
        "item": {
          "id": "e5ff87b6-18d1-4ea0-b28a-097e264f2514",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c4229527-168a-4b77-802d-d9c55b20012d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fba77f8-01f9-4269-8e56-37ff40e3cec1",
        "cursor": {
          "ref": "c5f22460-a552-4d9a-91fa-010deb1d6128",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0ac7b2b6-845d-410a-b8dd-5eacc4830b31"
        },
        "item": {
          "id": "4fba77f8-01f9-4269-8e56-37ff40e3cec1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb965034-207a-4f3f-aa76-9ca068c81298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9209ae-09cf-4a68-8b57-b16e181bd032",
        "cursor": {
          "ref": "eff1677e-a29b-45cd-8205-3a6fdcadad43",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ee6bf9fc-b19d-447e-a4c5-fe3a3bb157af"
        },
        "item": {
          "id": "ce9209ae-09cf-4a68-8b57-b16e181bd032",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f343ba17-0522-469f-9cb0-0f121c84262b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447af137-9db1-41ef-be19-c553b1a99e2f",
        "cursor": {
          "ref": "cf4c083f-1525-4deb-a97f-2ed835830f9b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "154febbd-f20b-4bf2-969c-6a086ef7cb79"
        },
        "item": {
          "id": "447af137-9db1-41ef-be19-c553b1a99e2f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3c143090-1a56-4c3c-b6d3-aeb0cc4daa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0192e47a-09f8-4443-aba9-67841187cca5",
        "cursor": {
          "ref": "9bf18e3b-1a8a-4c26-a260-c56bcdac7244",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "68193e63-b995-449a-958a-18ac46f262c9"
        },
        "item": {
          "id": "0192e47a-09f8-4443-aba9-67841187cca5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d393dab8-81b9-4402-8b17-5fe27657fc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fec0a6e-2f3e-4e99-8f66-3a566ece0ff0",
        "cursor": {
          "ref": "b1d15a3a-76c9-46e8-88c2-41a4b3904009",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0822fb9b-92bc-44e5-8957-30cd93526acc"
        },
        "item": {
          "id": "8fec0a6e-2f3e-4e99-8f66-3a566ece0ff0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f66decf5-a036-4372-871f-eca7571d9c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d92e22-4aee-4cb2-becf-0404bd609769",
        "cursor": {
          "ref": "5c1f324a-39a8-41af-a57b-e3f441c23325",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b245d665-6f96-4561-bef8-b8faa12e62ef"
        },
        "item": {
          "id": "e9d92e22-4aee-4cb2-becf-0404bd609769",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b5a1ce20-be8a-456d-8913-7a796b2e63ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32033ae-298e-44ed-b3b9-46e7803165aa",
        "cursor": {
          "ref": "cda756d0-9d87-4f99-a3af-3a9cd9bd97ab",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "71a62010-b37f-4c71-b5e1-27d0edd7406f"
        },
        "item": {
          "id": "f32033ae-298e-44ed-b3b9-46e7803165aa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "798335cf-ec89-4d65-bd8e-85b1db443095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcabfa49-53cd-4c20-aa3f-27ae376d5104",
        "cursor": {
          "ref": "9ddb4bc8-d49c-445f-9ac8-c06e4f62d5b6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a6b3fa70-796c-4a9f-83fd-af2253d45161"
        },
        "item": {
          "id": "dcabfa49-53cd-4c20-aa3f-27ae376d5104",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "501a42df-10ad-41cc-a223-7a273001f391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38575a5e-8b07-4343-a45a-41c9b5a6c708",
        "cursor": {
          "ref": "9c59030a-054a-4152-ba3a-a6b13f50f29d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b33a1552-ea9e-4058-8115-58b41a9a7679"
        },
        "item": {
          "id": "38575a5e-8b07-4343-a45a-41c9b5a6c708",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3a027876-55e6-4669-ade3-d3dd3045154d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4537b7b1-2cd0-4f5b-ba4d-d2025313b1af",
        "cursor": {
          "ref": "9cd4e4a2-fab8-4837-989a-d658b6e9b29f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fcf6118e-4570-4af0-9254-6757b85f2ef4"
        },
        "item": {
          "id": "4537b7b1-2cd0-4f5b-ba4d-d2025313b1af",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b2e740e7-4e6a-439b-a713-6ced96d5aa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942742bf-c9e7-4fcd-93fc-30bb77e0f633",
        "cursor": {
          "ref": "22698579-8b64-4d1e-a69a-4734670dd098",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e6187c45-1e58-474d-904c-f61f1be5be45"
        },
        "item": {
          "id": "942742bf-c9e7-4fcd-93fc-30bb77e0f633",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1aaec68a-750a-4f04-b608-df0da3575110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5286f9a3-2442-4fd3-8f68-ebba82e0476b",
        "cursor": {
          "ref": "a05d0766-e75b-4794-add0-2df44b814e0a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b8b21ad5-1291-4cd4-bb4a-4ef989afe9c3"
        },
        "item": {
          "id": "5286f9a3-2442-4fd3-8f68-ebba82e0476b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1ccf1dc7-fce7-4cc7-9a01-0ef1bf1ab0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e804f2d4-0a36-43a1-9309-c5a4918570c6",
        "cursor": {
          "ref": "7d03bd9a-d809-4d81-97e0-d9c4ed7a425f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "18d2538e-a8e1-47fe-ab34-c9abf771deee"
        },
        "item": {
          "id": "e804f2d4-0a36-43a1-9309-c5a4918570c6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e2ffc1f4-96f8-45f2-ace3-c57d0c41fbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac6770b-114e-40d6-bef2-02bad1a043f1",
        "cursor": {
          "ref": "f4d68e27-ffe3-464f-922f-01a87fba8d46",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d1dad429-dfbe-4276-aff2-b895f8c9fb3b"
        },
        "item": {
          "id": "aac6770b-114e-40d6-bef2-02bad1a043f1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "159c3e01-d20e-474a-afbb-fec9cec94417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d865ff-5f96-4432-817f-c2267cc7912f",
        "cursor": {
          "ref": "bffd346c-5ca2-40dd-9bf6-a5d2b551523c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "80b99e2f-6c81-4800-9175-ac9ee2aa3299"
        },
        "item": {
          "id": "33d865ff-5f96-4432-817f-c2267cc7912f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4a3b10fe-3067-47a6-9bdb-c08ea2cd4e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56bac82-269d-4e39-a295-b2b9540b222a",
        "cursor": {
          "ref": "fc9bad12-cdb9-409a-bbb2-d7502a2c07cd",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6a19cb4-cebf-4839-8128-33fc85eecaf0"
        },
        "item": {
          "id": "e56bac82-269d-4e39-a295-b2b9540b222a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3078c5b3-d6bf-4ce6-b350-c2e4501498dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b125187-1c5a-4499-a675-a27357f7adf8",
        "cursor": {
          "ref": "33ab6b85-2f16-4c9d-9723-60b570dda656",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "43a79b9e-68bc-445b-b802-f261a288b52e"
        },
        "item": {
          "id": "9b125187-1c5a-4499-a675-a27357f7adf8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bf2fe47f-b763-4cf5-bc9e-dfeb0fd31c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afadf02-2f9e-46fe-9a20-cafc3d2ed982",
        "cursor": {
          "ref": "a4bce328-4462-4dc0-a810-e383394fc5f6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3df58874-8c3a-434a-8ba6-fe86cb3526f4"
        },
        "item": {
          "id": "8afadf02-2f9e-46fe-9a20-cafc3d2ed982",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "12677c67-44f5-4454-a846-1f2e0303e8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843c974e-06e5-453c-a1d2-68b15a4454d0",
        "cursor": {
          "ref": "2dcb5825-2b1c-42d8-b072-6b27936b1d23",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "44d4dc1a-3157-4d0b-8c6e-9b566db8e4aa"
        },
        "item": {
          "id": "843c974e-06e5-453c-a1d2-68b15a4454d0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "938d17f4-728c-4e9a-8bac-cf09bf1e2ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a8e80a-00da-4d54-89d0-c3dd1066ec53",
        "cursor": {
          "ref": "509b9f88-5fa8-497c-9f26-d2635c15001d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6d6642e1-4536-4ba4-9e95-1a5b8f54f99a"
        },
        "item": {
          "id": "b0a8e80a-00da-4d54-89d0-c3dd1066ec53",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d2b7ad9e-1013-4e9d-adc7-6c3f1b7b0f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d816246c-c398-4402-8193-a61857644980",
        "cursor": {
          "ref": "c09f7dd2-d5a7-4829-8294-64ad0ce251ce",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "51f57803-5c2a-4b10-b523-7f148495bab0"
        },
        "item": {
          "id": "d816246c-c398-4402-8193-a61857644980",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dea41415-c546-4696-b31d-d979005fbcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b3502f-136e-4a17-9b48-81c7f94b0fcc",
        "cursor": {
          "ref": "63b8cb18-2933-4aee-b0a4-f7ea7a515e28",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6e1239e3-f4c2-40d0-974b-6933a9f32f64"
        },
        "item": {
          "id": "40b3502f-136e-4a17-9b48-81c7f94b0fcc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "da68cb14-1a9e-4872-bd03-7e34ffc22b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da67d48b-d618-47f9-a6ca-d865659136e3",
        "cursor": {
          "ref": "f1fa3e8f-09d0-49a7-a871-7f411ba4bc62",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "064b20a8-5a89-46fb-b030-275a95b2a49a"
        },
        "item": {
          "id": "da67d48b-d618-47f9-a6ca-d865659136e3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "05d70b26-3275-4f84-91ad-fccdac5cdd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab81d39-5df8-4c41-ae07-95345c7ab447",
        "cursor": {
          "ref": "7a183a7b-712a-46ff-9025-054388b46cd7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "de60db87-41e4-40a4-b0e9-6ed8acdaec0d"
        },
        "item": {
          "id": "2ab81d39-5df8-4c41-ae07-95345c7ab447",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "973ddac6-3410-46b7-8223-ff125a817f46",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 342,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a674b1-637a-4303-af15-cdc24931d21a",
        "cursor": {
          "ref": "e381293f-73ef-4716-8a6e-5f1df618369b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "531c1c2c-f40a-4807-b2bb-b22890c598eb"
        },
        "item": {
          "id": "42a674b1-637a-4303-af15-cdc24931d21a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8d1b96af-cbeb-42e5-a6b7-19723554cc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912aa660-301a-4359-ad4e-3a8b8ad74a0d",
        "cursor": {
          "ref": "59675b5b-778a-4649-bf2e-11217f95af71",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "97420dc9-5e4a-4b75-aa6c-dc0016e6b41e"
        },
        "item": {
          "id": "912aa660-301a-4359-ad4e-3a8b8ad74a0d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3bc0dea7-f029-4132-8595-aa8282f83f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c50d8b-9085-4ca4-b7c7-178dd1de337f",
        "cursor": {
          "ref": "8b6cbdac-2a7a-4747-8b62-1682c83358c1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "709a8a5a-a3db-4b88-8e9d-244bce0c325d"
        },
        "item": {
          "id": "33c50d8b-9085-4ca4-b7c7-178dd1de337f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5534d995-33a4-4f5d-85d4-3761237fd23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3faf4b45-c2c7-474c-85e2-326b0beb5804",
        "cursor": {
          "ref": "aeaf976d-e2d0-484f-9089-6f702e3ef3f0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "152efed4-b6bd-4305-b77e-13d37398d6cd"
        },
        "item": {
          "id": "3faf4b45-c2c7-474c-85e2-326b0beb5804",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "854d87e7-a94b-425f-bf41-5cbd05250709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cc1ea5-2637-4f5d-b9a0-bdc635409fee",
        "cursor": {
          "ref": "34bf5ad1-dc78-41fd-8f75-68e3dc2a8260",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6bb22127-a3d9-450f-9f4b-0aa787ddb26e"
        },
        "item": {
          "id": "58cc1ea5-2637-4f5d-b9a0-bdc635409fee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a2292f71-adae-42a4-b368-af5f0f8092e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3423765e-8b5e-486e-ad72-4f6002346961",
        "cursor": {
          "ref": "a619d57a-ae53-4386-927c-64bb0f88734e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5289ab7d-c48c-4b23-9581-0dae0dbb8a2f"
        },
        "item": {
          "id": "3423765e-8b5e-486e-ad72-4f6002346961",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9679ebfe-f195-462d-8672-22bef056ade9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e65afc-17a8-422d-9445-f8977bf7fe76",
        "cursor": {
          "ref": "338a6a43-b962-41b6-bf8b-209b108856a7",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9827fc8e-92ba-4798-a586-974bdbb2666d"
        },
        "item": {
          "id": "59e65afc-17a8-422d-9445-f8977bf7fe76",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d597d11a-f75d-4bff-bce4-4f112ce25b5e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 353,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c764d5-194a-4e4d-8673-ab308b701930",
        "cursor": {
          "ref": "6b80ffca-a8e8-4196-a366-8ff63751a7ee",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e34167a2-cbca-41e4-8586-2dd0a085f8c2"
        },
        "item": {
          "id": "22c764d5-194a-4e4d-8673-ab308b701930",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a18e6302-ea60-46bf-9846-18351c3223d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008d1d7e-4a9f-4e31-9b83-d190b598a01a",
        "cursor": {
          "ref": "83f85bbd-1ea3-47bb-adef-50f5b740b952",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d7fb1829-b66e-4c07-bd3f-129f5eb6401b"
        },
        "item": {
          "id": "008d1d7e-4a9f-4e31-9b83-d190b598a01a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f2bed858-a3bc-47ed-bc93-edb4bd111d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47877490-7acd-4b67-9fee-c5d3025aaac2",
        "cursor": {
          "ref": "3f4cf075-9af6-41f5-9676-ededd90b15f3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "86effccd-771e-48a6-97e7-602694d01897"
        },
        "item": {
          "id": "47877490-7acd-4b67-9fee-c5d3025aaac2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aa0f1249-3540-4f7b-a10b-9d4afc110527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7b8fc7-71cf-4bb9-a036-1700916d63f0",
        "cursor": {
          "ref": "47df2a7a-6a4b-401e-9caf-89e3659b1dac",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "89aa5f9f-aa44-45ec-b5b2-3c9a1098e748"
        },
        "item": {
          "id": "af7b8fc7-71cf-4bb9-a036-1700916d63f0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "99d45727-c164-425a-b01d-24b3b2a933ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6edf011-6f58-4f84-9fd2-35b3baa245f1",
        "cursor": {
          "ref": "17676e8d-51fd-46ec-a34f-57dfc979daab",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2a2fee42-ec9b-4f4f-9055-89811c0a6227"
        },
        "item": {
          "id": "a6edf011-6f58-4f84-9fd2-35b3baa245f1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "250d6671-eafe-4b68-914e-c53153f0598a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1fa954-3256-45a2-9c95-f92c5249784c",
        "cursor": {
          "ref": "4377780f-68df-4b7d-96e9-af721181e147",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7fa216c9-e9c8-4529-8ee2-781f33cbf8e8"
        },
        "item": {
          "id": "ac1fa954-3256-45a2-9c95-f92c5249784c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "05ccc24c-a379-4a8e-9faa-b3fa609f0ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e860c84a-48b5-4f45-b6cb-d384eb12375c",
        "cursor": {
          "ref": "b14202ff-81dd-4f7e-972b-0531fb29ce29",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2302c03a-74da-4047-b1a8-74b9f5b72e33"
        },
        "item": {
          "id": "e860c84a-48b5-4f45-b6cb-d384eb12375c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e5465519-a7de-410d-88c3-fe8e08f3ce67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0862896-6168-4ddc-82c4-835bc482489e",
        "cursor": {
          "ref": "2d7797ca-de4f-47dd-a75c-2911bfe19819",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a8b6d8c2-67ad-4d3b-bac5-95c79681668e"
        },
        "item": {
          "id": "f0862896-6168-4ddc-82c4-835bc482489e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1a79ab9b-3489-46ea-88e5-a650b0a691b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32461ede-c4ea-437d-a75a-6d099534302c",
        "cursor": {
          "ref": "155d6f3c-49ea-411a-8b92-49d20feb8e6d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "47facb99-8d74-4f43-a5df-72f81b563217"
        },
        "item": {
          "id": "32461ede-c4ea-437d-a75a-6d099534302c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6600b8d6-bf13-4dc9-944b-5a2900bc6421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a5f83f-c4ee-40e4-9bd3-5bfee25e81ee",
        "cursor": {
          "ref": "b829aa18-5bb4-4447-aef4-894499c495fd",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "76f7681f-43f6-4dc4-b316-07f272c11e91"
        },
        "item": {
          "id": "43a5f83f-c4ee-40e4-9bd3-5bfee25e81ee",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "252f9132-1cb1-4d10-ad0c-62dc4e1bc04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc84efc-aa7e-435e-b554-5bcdb16aea20",
        "cursor": {
          "ref": "775e00e3-5ac8-405c-b928-710bb7ae9af2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2d537646-088b-416c-b82e-e3f4a61f2a2a"
        },
        "item": {
          "id": "0fc84efc-aa7e-435e-b554-5bcdb16aea20",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cae6cffd-f835-48cd-8f49-dfb9bb765f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4de1774-5164-4cdf-bf13-dcc2bca5ea24",
        "cursor": {
          "ref": "9299730c-7ffa-4ee2-8894-4a7bdd47cb37",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e79c1109-3267-4261-a47d-8e4861125d23"
        },
        "item": {
          "id": "e4de1774-5164-4cdf-bf13-dcc2bca5ea24",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "db86451f-7924-4d47-9118-f21b37a9ae5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69552a3-d0a3-4040-89f5-e8dab2ee059e",
        "cursor": {
          "ref": "58c31e64-b00c-40d1-9c87-fd1b91fbc47c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e47b284a-213d-432d-8abf-58f18f752a37"
        },
        "item": {
          "id": "e69552a3-d0a3-4040-89f5-e8dab2ee059e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "879b60cb-4f55-4b89-93b2-e93efc8929b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6198e8-a780-4142-9f36-dd8816393ea5",
        "cursor": {
          "ref": "e69209af-0b52-49fb-9d39-956bd8bae9ad",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "87998946-f01f-40b3-ad4b-9027cc7c9cb9"
        },
        "item": {
          "id": "0d6198e8-a780-4142-9f36-dd8816393ea5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "34951827-4ca5-41ff-b3f7-dd5642e265d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f612b4-9470-48d7-9128-94f583433a1a",
        "cursor": {
          "ref": "21492d57-78ad-4476-af75-0f573b65ae53",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4b32e07c-fe49-4a6f-b1cc-f042c5a8dd05"
        },
        "item": {
          "id": "97f612b4-9470-48d7-9128-94f583433a1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cb13b22b-fe90-4029-9e75-52997d529440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f392a8-c7b9-498e-ac91-433bfcea48e3",
        "cursor": {
          "ref": "e20d3a81-4eda-44be-afb9-17c1dc37cc5d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "44e1a599-99f1-41ca-b006-15d2887f0d05"
        },
        "item": {
          "id": "f6f392a8-c7b9-498e-ac91-433bfcea48e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c7f01190-e0fd-4d12-814c-b05530c7d2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2c6156-fd2e-4b98-a1d1-8488ddd88b54",
        "cursor": {
          "ref": "45396e6d-d276-4767-b21e-9b4f429a44e4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4c88ce00-445d-4983-8da2-c86fe5e5f94f"
        },
        "item": {
          "id": "ca2c6156-fd2e-4b98-a1d1-8488ddd88b54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f8109846-d653-4b59-93f8-2471dd3f1cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9e264c-6753-48f0-9806-01fb2bab84fa",
        "cursor": {
          "ref": "96803495-cba1-4f63-b381-7f6bc96f7c61",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "922d16b5-9d67-4126-8be5-5882c2f7d081"
        },
        "item": {
          "id": "7b9e264c-6753-48f0-9806-01fb2bab84fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2b0b6db8-08b0-4bb9-a369-829c203169c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c5ac39-d01f-420d-8159-5c9cd0cdc47c",
        "cursor": {
          "ref": "0c7288b6-abba-48d6-aba9-a3a79c37fc7c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f0973c33-5a0c-4788-ac3b-21f63cfa8b98"
        },
        "item": {
          "id": "a8c5ac39-d01f-420d-8159-5c9cd0cdc47c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "03b8c047-ea81-4da1-ae01-4c5ff07bd2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f05d822-82f4-481c-9fa3-c34a74a93a5b",
        "cursor": {
          "ref": "0a648e26-a4b9-4a17-8203-7bd2a07787f6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ce283157-731d-45bb-92b4-c50e67db8b6f"
        },
        "item": {
          "id": "0f05d822-82f4-481c-9fa3-c34a74a93a5b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c9ab3586-1bbe-4e8f-bf9b-2cff1336eea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abf38e0-e9c3-438e-97cc-e90ed5942df9",
        "cursor": {
          "ref": "d040f5c1-b53d-48a6-b942-a1658c6fc5fd",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cd141540-4c99-455f-a0ca-3e9f926fa0c6"
        },
        "item": {
          "id": "0abf38e0-e9c3-438e-97cc-e90ed5942df9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0908976a-af40-4352-8bf3-fc3798e0188d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91d8419-7719-4026-9be6-c582a1244178",
        "cursor": {
          "ref": "a1cce441-a17e-484c-a7c5-696ee72f96cd",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "714a4cff-0e69-459c-83af-6712ac110c46"
        },
        "item": {
          "id": "b91d8419-7719-4026-9be6-c582a1244178",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bb67d744-61bc-4240-bbd5-a235a6750590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673659b5-87bc-432e-9f7d-1a7d2762ce65",
        "cursor": {
          "ref": "3d3f9aa9-4604-4fa5-a1fb-42b228f13ffc",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "40fb78a1-c0a2-446b-b6a3-4a613686639e"
        },
        "item": {
          "id": "673659b5-87bc-432e-9f7d-1a7d2762ce65",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "27d80b1e-2e8d-48b9-97fc-ca536a5a8831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bd169b-8cb5-4831-bf16-a2c94940ec2e",
        "cursor": {
          "ref": "632113ec-bbb0-42ad-a157-c1d2f336dd3e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "52a559ef-70b2-4ab5-9330-41cb501ab9a7"
        },
        "item": {
          "id": "87bd169b-8cb5-4831-bf16-a2c94940ec2e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8f3fd33c-ea68-411a-afd0-2aa781ec08d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ffc6ed-a2a7-498a-b1f2-8aa9fb2ca88e",
        "cursor": {
          "ref": "ea2b84b1-6029-4f53-a4c5-47ae6ca0f0ec",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "275c50dc-f207-41e6-9ca2-da9f030de285"
        },
        "item": {
          "id": "40ffc6ed-a2a7-498a-b1f2-8aa9fb2ca88e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3f09b46a-5f5f-4f02-9d18-845c319eda55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b609ae27-37e6-4606-92c2-fe751fedf2f6",
        "cursor": {
          "ref": "677455d4-5f70-42b2-8066-d76c97d49808",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "50e0fdfe-4dbf-4c18-bd44-e408010d195e"
        },
        "item": {
          "id": "b609ae27-37e6-4606-92c2-fe751fedf2f6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9773ec81-1905-46a7-8395-712c7dd7540b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262c5eb9-74cc-4111-85bf-d01ec4dcfc75",
        "cursor": {
          "ref": "e799924f-5cff-4b09-9ca1-5f55bd04f8d9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1fa4cfa6-1731-45ed-b20d-108daa805406"
        },
        "item": {
          "id": "262c5eb9-74cc-4111-85bf-d01ec4dcfc75",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dc3b0384-4b2e-4e0a-a5ec-ec40c7fa1c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444e2be1-558b-4b41-98b7-b81353378e4d",
        "cursor": {
          "ref": "d827d308-1f2e-4bc0-996a-d7e562e9eb16",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2d7eb75e-a193-4e5e-af5f-7c61959eacfd"
        },
        "item": {
          "id": "444e2be1-558b-4b41-98b7-b81353378e4d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e3a78dc4-8d3b-4269-b8b0-88c075913c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9d503a-0f19-4ad7-92a4-0e51343eeead",
        "cursor": {
          "ref": "0c0d99f9-480d-4454-8026-c9043935b17f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "168c00da-9d00-4b33-b273-1afa213ff759"
        },
        "item": {
          "id": "dd9d503a-0f19-4ad7-92a4-0e51343eeead",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e41803c6-736d-42e3-ad34-58a5f81b944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8d89c0-a381-46f2-87aa-05a635778e4d",
        "cursor": {
          "ref": "fb4bd960-36e0-4f00-980d-d232c686b37f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6bb14bf5-650c-49c2-8959-c3092e80f23b"
        },
        "item": {
          "id": "7a8d89c0-a381-46f2-87aa-05a635778e4d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9a4a9975-f5a2-49d5-8906-d223f9502daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8a3a1c-3219-4990-a0be-968f495f3aa6",
        "cursor": {
          "ref": "e39c1f3e-fa60-4720-8547-40dcffe3d011",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1cb94101-415a-463e-bef0-74e87562db44"
        },
        "item": {
          "id": "bd8a3a1c-3219-4990-a0be-968f495f3aa6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "abc842ed-6132-4ef7-9950-843e66728d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac0f50b-1f9d-4531-b912-866358274e4c",
        "cursor": {
          "ref": "0d0ca869-2011-46cd-8937-f89b0988ae93",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3fcfcc99-1b3c-4519-a43f-423108f99feb"
        },
        "item": {
          "id": "9ac0f50b-1f9d-4531-b912-866358274e4c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e6b5169c-495b-4550-abf7-9ec9621830cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c8a351-cacd-49ce-aaa8-ce191cd39fba",
        "cursor": {
          "ref": "0aaeefc4-e68d-48ae-93d8-b896dc7cef26",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dc99bbc9-c8d6-41a8-8787-3441b4109042"
        },
        "item": {
          "id": "84c8a351-cacd-49ce-aaa8-ce191cd39fba",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e97d723e-a146-42d9-abe4-a1957b6e284e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0c5b98-823f-4361-b628-4fd62941e8c4",
        "cursor": {
          "ref": "bad5b046-69fb-4dc2-a309-a2c7b4d8d45b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a1364f8b-9d3f-4547-81ab-7e54dcdc367e"
        },
        "item": {
          "id": "3e0c5b98-823f-4361-b628-4fd62941e8c4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c9fc23cb-4053-4af8-9432-5e41c19f5e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564bc723-9333-49f5-910a-9f2f202573bb",
        "cursor": {
          "ref": "0d6c2ad8-35bd-418e-82be-fe908363b001",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "38599d75-9b80-4483-bc42-49a176b715b7"
        },
        "item": {
          "id": "564bc723-9333-49f5-910a-9f2f202573bb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b8e511c2-45de-42b0-a68a-3b659b614a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced4ae47-35c5-4f29-aa27-9023a2fa1154",
        "cursor": {
          "ref": "92902302-25bc-41ce-a621-fd4c50697b54",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "53c24ca9-8440-46a7-ba09-2008e8896cff"
        },
        "item": {
          "id": "ced4ae47-35c5-4f29-aa27-9023a2fa1154",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f842b589-4c18-463b-8676-5ddc29190a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217d13e7-735c-4bcf-bdae-1e68673e3d3a",
        "cursor": {
          "ref": "f2d55301-ef87-46dd-bd66-74d33fc126bd",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bd79259a-6573-48ea-90ac-07ea0a65a290"
        },
        "item": {
          "id": "217d13e7-735c-4bcf-bdae-1e68673e3d3a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4130f603-0e59-41f6-b005-7c7f930ac366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343fbd48-c8fa-4fcd-94ea-99ea4ff5c6e4",
        "cursor": {
          "ref": "cd991dce-a781-44db-8a1b-783d8eb385f2",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "949f4da7-b594-46a2-8ba9-4c4063b68bd5"
        },
        "item": {
          "id": "343fbd48-c8fa-4fcd-94ea-99ea4ff5c6e4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "16e80f52-41f0-493a-b6f4-86b858856981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cddfde1-453c-4839-aa04-79de61756c0f",
        "cursor": {
          "ref": "0ebad439-6bbd-4aa8-ae07-222b6f408587",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "215f4872-486f-4fd5-8f6e-41c824f4a3fc"
        },
        "item": {
          "id": "6cddfde1-453c-4839-aa04-79de61756c0f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bda47d89-86ec-4ebd-8f7e-61bb2e29dbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1aba166-cbc7-4871-8eda-257c95d7a648",
        "cursor": {
          "ref": "cac2f35a-6a80-4e79-a513-ebbc904e928c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8310184c-7327-40f7-9b56-f4ea096a5a3a"
        },
        "item": {
          "id": "f1aba166-cbc7-4871-8eda-257c95d7a648",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7b416047-c139-4165-80ce-4be7f234042b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a4d9a6-715d-46cb-bbb7-e61444614e3c",
        "cursor": {
          "ref": "88121ce5-7257-4070-8eb3-216fa1e46707",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ae04bb3a-5af5-44b4-93ba-4dcd29126fb8"
        },
        "item": {
          "id": "60a4d9a6-715d-46cb-bbb7-e61444614e3c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bbb020c7-86d4-49e0-ae7f-62a5d5a9fa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3969a459-6167-4ca3-a902-8166917b6e15",
        "cursor": {
          "ref": "72326e26-73bc-4f2e-910e-816a666b2504",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5b00836f-af6b-4e7b-b8fd-b3418b5f0026"
        },
        "item": {
          "id": "3969a459-6167-4ca3-a902-8166917b6e15",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fb1684fe-592c-4e65-9322-7f3c79cf548e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34a42f9-c09b-43b4-8eb6-106f99848f11",
        "cursor": {
          "ref": "7e92da15-4bb0-43cb-8a64-2583139f079d",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a5b7d2f1-e629-403b-b032-327a96453e1f"
        },
        "item": {
          "id": "d34a42f9-c09b-43b4-8eb6-106f99848f11",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2c64edab-1250-47cd-b707-f34ae9ea5c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523c9604-6843-4699-9842-ba3e08643bd9",
        "cursor": {
          "ref": "e5852ee7-aabe-41d1-9af4-e142e54b8506",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2eb60c41-cbe7-4434-a86b-111edd430f23"
        },
        "item": {
          "id": "523c9604-6843-4699-9842-ba3e08643bd9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cedd44bc-9ddf-40e0-b222-fd026ec462ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37da17f4-ea8a-46ad-bd5a-26423e3575de",
        "cursor": {
          "ref": "9551ddc2-9b13-4ed1-ac78-356ced04ccc7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "109a3fc0-1646-4fde-bc71-249bea20d66d"
        },
        "item": {
          "id": "37da17f4-ea8a-46ad-bd5a-26423e3575de",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "964a8420-4139-4f74-b6ea-79e9f2c35fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a838f53e-b58d-4b9e-b917-7c5474c6d538",
        "cursor": {
          "ref": "f1ad3758-2f42-49d4-b004-0530a5ea6780",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9dd0a025-ee19-44ca-8163-cf478eafda17"
        },
        "item": {
          "id": "a838f53e-b58d-4b9e-b917-7c5474c6d538",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1a1a7942-cf5b-414d-93af-00c6f5c1d985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddb2720-97f8-4c69-b4f3-2d3dde5a0ffd",
        "cursor": {
          "ref": "6b4a10af-515f-4db4-9261-88c078c29ee2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c18a5b76-9045-41f9-937a-cef3d8a558c9"
        },
        "item": {
          "id": "7ddb2720-97f8-4c69-b4f3-2d3dde5a0ffd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5d9171b2-d304-489c-90c5-0c4a6745dbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a864d-b062-4a83-81bc-e7290b5871c6",
        "cursor": {
          "ref": "ba47e787-2950-44c5-9825-0c66fb52c8bf",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "feeb2ece-7172-480c-be6a-a3269b340ed6"
        },
        "item": {
          "id": "ad2a864d-b062-4a83-81bc-e7290b5871c6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "12698723-908a-4fbd-9dc9-a15c75d44941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10af93e2-b448-48a1-b2e1-1dc81b2be1a0",
        "cursor": {
          "ref": "f602f234-7372-4d3b-9f8f-2931d3b5c7cf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "13af63d7-85db-4040-8a34-bc104208c244"
        },
        "item": {
          "id": "10af93e2-b448-48a1-b2e1-1dc81b2be1a0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5ddd52ab-7564-4f36-a5ec-f9e129f84e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2ab9d2-ce50-4021-b721-ad4016446fbf",
        "cursor": {
          "ref": "57c37d57-27bb-4f07-954f-3770b7982dd8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1f1a69d1-9393-4044-9f71-bccb47c29790"
        },
        "item": {
          "id": "cc2ab9d2-ce50-4021-b721-ad4016446fbf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c52418d7-e28e-46e2-8465-2547f5d282b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d443c565-fa45-422f-8480-f3fe5691e556",
        "cursor": {
          "ref": "c94837ca-12bb-4275-81c5-c08e0c357431",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3c72240c-8eb8-4516-8246-4052fa76ac5d"
        },
        "item": {
          "id": "d443c565-fa45-422f-8480-f3fe5691e556",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7857f88a-97f7-4e67-bcdf-560631560d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5ff3f80f-700c-40e6-a082-b8ff20f977c3",
        "cursor": {
          "ref": "1f4f74de-2b3c-4815-880b-4074c22e7c4a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1d349145-090f-4565-a080-319eef7d6eec"
        },
        "item": {
          "id": "5ff3f80f-700c-40e6-a082-b8ff20f977c3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b12433fa-63ce-47d2-868b-b0f9c1e9827a",
          "status": "Created",
          "code": 201,
          "responseTime": 3216,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2db07f-7fdd-48e0-9310-fc9380ce15bc",
        "cursor": {
          "ref": "b00a0559-03e9-467b-a10b-d6e50ed4a39b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bee42348-1bd0-4ffa-814e-07097c597dbb"
        },
        "item": {
          "id": "4f2db07f-7fdd-48e0-9310-fc9380ce15bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f878020c-a9ff-4fd1-8aeb-ad9b9aadbf31",
          "status": "Created",
          "code": 201,
          "responseTime": 2878,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1824f55-390b-4be3-bdda-30f14188f4df",
        "cursor": {
          "ref": "4aa01ec4-8aa8-403b-9423-11f35088c282",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "01ac0c86-5bef-4871-bf52-95b0f3618c96"
        },
        "item": {
          "id": "e1824f55-390b-4be3-bdda-30f14188f4df",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f39bfe02-5165-497b-bf61-d35178f1bddb",
          "status": "Created",
          "code": 201,
          "responseTime": 2000,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf54cbe-2b61-4cc9-85c2-371bf998e704",
        "cursor": {
          "ref": "3cdd6eea-9c5f-4a2f-8ee3-7e15f735c477",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d6180bbf-b1f6-41e9-8742-aaa48cedad61"
        },
        "item": {
          "id": "abf54cbe-2b61-4cc9-85c2-371bf998e704",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b5d9613e-99c4-4e35-b06c-c2184148f4b9",
          "status": "Created",
          "code": 201,
          "responseTime": 2129,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0b6ec0-543e-4a0b-bb77-0afb643a07e4",
        "cursor": {
          "ref": "c30acc5f-e67c-4b19-9aed-8e8a32495faf",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b75dc540-3a78-4fd4-83f6-a9426ea5e620"
        },
        "item": {
          "id": "df0b6ec0-543e-4a0b-bb77-0afb643a07e4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4d49d250-c6f1-46d5-b595-292745677aa4",
          "status": "Created",
          "code": 201,
          "responseTime": 2157,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25f9838-44c2-4569-9b77-38f6de5f34c0",
        "cursor": {
          "ref": "14039d86-8893-4b49-ac16-c07fd23d966b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "10652e41-6bb7-4176-a0bc-c0f143c82438"
        },
        "item": {
          "id": "a25f9838-44c2-4569-9b77-38f6de5f34c0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c0653d6d-78d9-4c8a-9475-59d1e2661943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6bf81e8d-5fc5-4d92-a96e-276b16e9574e",
        "cursor": {
          "ref": "0fd580df-bbce-41e7-afff-c06303a930b1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "14d2abd3-9098-433a-9720-d4abf4e4e33d"
        },
        "item": {
          "id": "6bf81e8d-5fc5-4d92-a96e-276b16e9574e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "844a29da-76dd-4489-85f1-eb30d28cb504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2bdde3-3472-4049-8f24-2dcc8366dcee",
        "cursor": {
          "ref": "d0b17194-b19c-48b8-9be8-b725ef9eefb9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0da988c6-6483-4f0d-9a9e-cf2f767f2229"
        },
        "item": {
          "id": "5e2bdde3-3472-4049-8f24-2dcc8366dcee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7d987b51-96b2-4ec1-8eeb-a3979699fedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b086c182-4344-4b9a-af4b-8dc088cd2b6f",
        "cursor": {
          "ref": "02c53424-d8ad-417e-86b5-2bf36a63ffa9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0b444b9b-cbe6-40b8-9321-21399cb695b1"
        },
        "item": {
          "id": "b086c182-4344-4b9a-af4b-8dc088cd2b6f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "305aba2e-733d-4abf-87b4-355c1e17bf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bc8666-2db0-4137-8c4c-2dbf500fa07a",
        "cursor": {
          "ref": "bdfc95d7-232b-49b9-bf6b-833c5f561295",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "345ac21a-1737-4e5e-bee8-76a6a9daf5fd"
        },
        "item": {
          "id": "c5bc8666-2db0-4137-8c4c-2dbf500fa07a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f2b4c6fd-2d7c-4252-98d7-1878b9ca68df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f0610-1ac2-4aa5-a439-fa5a1e5c2f28",
        "cursor": {
          "ref": "80e74f9a-d2d5-4a69-950c-c7c0036f8730",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1a1e9e1e-507c-4954-847b-818e3df068a6"
        },
        "item": {
          "id": "a08f0610-1ac2-4aa5-a439-fa5a1e5c2f28",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "27b3696c-9e4c-4992-a5ac-aa3427cf75ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5331dc-3803-4c56-8164-013d151837c7",
        "cursor": {
          "ref": "8e93200a-f51b-4e86-9f11-e8705b75bab3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4712ea7c-7a24-4ce7-9765-c19b194a1fc1"
        },
        "item": {
          "id": "5f5331dc-3803-4c56-8164-013d151837c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "43595521-7446-4cbd-b860-a0667d83b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f3e89b-660c-4773-a1d4-33123325bade",
        "cursor": {
          "ref": "253a2814-cd18-49ce-972d-801eb54c2572",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5157e9e5-acb5-40c2-ab4b-45d9caa2763a"
        },
        "item": {
          "id": "f3f3e89b-660c-4773-a1d4-33123325bade",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ed3b74eb-4f6e-48d4-b3f5-212b4c5c403a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144b4913-672d-41f0-b0ab-9e666f9656ac",
        "cursor": {
          "ref": "9c8cbd59-b145-4b40-8b33-d7d02de11a1e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1ee6743c-8858-44d6-8970-dcc7e4f22e4a"
        },
        "item": {
          "id": "144b4913-672d-41f0-b0ab-9e666f9656ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "47ba3555-4eb8-420b-b037-7aedb81f660f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb56b611-e98a-4ddc-be82-034c4216447b",
        "cursor": {
          "ref": "9ab1d34e-2ece-4b1b-ac2d-3d69a697799f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5e09eec7-0108-4bb2-98e5-65f265813a90"
        },
        "item": {
          "id": "bb56b611-e98a-4ddc-be82-034c4216447b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a526e9b5-caa6-40a8-9c84-831fe11d249e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e0aaf1-5b7c-4ad7-93a7-1a3a4a6ac97c",
        "cursor": {
          "ref": "a93fe073-ed25-47f2-8fa9-8c269a8efe05",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9f4dd4c2-9279-4d88-8d86-6551972d5b08"
        },
        "item": {
          "id": "b6e0aaf1-5b7c-4ad7-93a7-1a3a4a6ac97c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d35e1fca-856c-4d9e-92ed-4de1efe0b779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6400d1-a8c9-4368-9457-6f0d378312b9",
        "cursor": {
          "ref": "e927d3e3-1805-46fc-80ec-a7df0e22493c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5a39f9df-3ba3-48f4-b757-329fa3e94e01"
        },
        "item": {
          "id": "be6400d1-a8c9-4368-9457-6f0d378312b9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6aedb12f-8ccf-425e-a3ec-52666251e18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77789605-89cc-4ea0-af9c-93fb9d0e99fb",
        "cursor": {
          "ref": "11f90858-5fd9-4478-931f-a883e5e6f8b7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "234466f7-e47a-4067-9d93-3b783e650c1e"
        },
        "item": {
          "id": "77789605-89cc-4ea0-af9c-93fb9d0e99fb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "be6b0c74-43ba-40d7-88f1-1a2dfa39900c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f246d8-c7cc-4e76-be11-0274c3c557e6",
        "cursor": {
          "ref": "eaa02377-f626-48a1-ad20-330685c72487",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c5503ac0-7028-4834-ab25-b6783a60cdec"
        },
        "item": {
          "id": "e6f246d8-c7cc-4e76-be11-0274c3c557e6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2cfd8951-a8bb-4a62-a991-23d07aa1fc15",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 113,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6faf4f-c123-459c-9d5c-c24211c7663b",
        "cursor": {
          "ref": "5b037228-7a67-4e2a-90ed-23c6c81870d7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "380c0dca-5dfa-4b9b-b3ec-f6d6ca6d6dc7"
        },
        "item": {
          "id": "5b6faf4f-c123-459c-9d5c-c24211c7663b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2ce44dd1-e7dc-469c-b6f4-18ea13727cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe4147b-c440-474d-8254-18812daf4604",
        "cursor": {
          "ref": "aefe73d7-8ea1-4480-b3b2-e2f4985f4d87",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e054af02-109c-4268-a0ff-3bea0c72d34c"
        },
        "item": {
          "id": "2fe4147b-c440-474d-8254-18812daf4604",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e5f935d2-f5ab-4eb7-8709-3d444b309fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3223fd-de2e-4ebf-a061-443678e3cbf3",
        "cursor": {
          "ref": "a1f61f4f-cecb-42c4-acf7-35bb6703ca94",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1a6a0b37-c79e-48ca-b508-225b2e32146c"
        },
        "item": {
          "id": "af3223fd-de2e-4ebf-a061-443678e3cbf3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "be7b12ee-6be5-42ba-b6e3-861a0130f8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4150ba3-546b-4df3-8f37-e984b1cd5ff1",
        "cursor": {
          "ref": "2c053338-c20c-4ac1-b009-8ba96f0c267e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "74238579-59ab-459f-8df8-b2f363ced914"
        },
        "item": {
          "id": "c4150ba3-546b-4df3-8f37-e984b1cd5ff1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9c3d788d-f1c5-448f-b2a1-6a226675ad6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80a2f64-ef4e-4ab7-844c-769e30dae832",
        "cursor": {
          "ref": "95935f62-9bad-4b24-9df4-7938751988aa",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7973fad4-41fb-4176-95b3-1493ebd5aa47"
        },
        "item": {
          "id": "d80a2f64-ef4e-4ab7-844c-769e30dae832",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8a2404bd-0ecf-45a4-bcea-6443615d786d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d750f4f-0750-4bc0-92f2-cc1a4174fa17",
        "cursor": {
          "ref": "86fd1b0a-afd8-4bc4-a1f2-d8eaa963eb96",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2a7a84f2-97ec-4035-be80-82c97b4a657c"
        },
        "item": {
          "id": "3d750f4f-0750-4bc0-92f2-cc1a4174fa17",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "39c2c57f-3e92-41d3-b591-6207a21ce056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67d5750-ae58-4c77-963d-70fa54dbd3f2",
        "cursor": {
          "ref": "8c5efa7f-869e-4b12-94e0-1113ec2bfa01",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b674d8cb-d127-46e6-873b-2c6212be4ebd"
        },
        "item": {
          "id": "a67d5750-ae58-4c77-963d-70fa54dbd3f2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f8146809-8b7b-4f84-9ea5-077f1059e8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e7441a-068a-48b3-85cf-43414cf04562",
        "cursor": {
          "ref": "20214fa9-083e-439f-8882-b30376344f74",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "41fc21db-0e77-40a2-b464-f2b1ce347d5f"
        },
        "item": {
          "id": "97e7441a-068a-48b3-85cf-43414cf04562",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d7954a79-30a9-49eb-ad01-8d2ba3ef7986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3399ab1-d4ab-42a3-ac5b-175aa337956b",
        "cursor": {
          "ref": "dd05a31b-5e9c-46c7-bf73-91113db53e29",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8a48b3d6-bd64-4dbf-9f6e-55b18374797b"
        },
        "item": {
          "id": "b3399ab1-d4ab-42a3-ac5b-175aa337956b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7dcb3fad-cf15-4378-a874-4c21bd3989ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de7beed-dd28-4767-8228-542e564df721",
        "cursor": {
          "ref": "93d953a7-766a-49ad-83f2-cc125a7ab13b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c06ce74c-5231-45fe-8ca3-2a0c085696bc"
        },
        "item": {
          "id": "5de7beed-dd28-4767-8228-542e564df721",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5d78015e-bf7f-441b-871c-58ebb028212e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c3ee77-0252-4863-aae1-6a1a5117c03e",
        "cursor": {
          "ref": "ab6c8906-fb31-4c1e-9f73-e18b9822809b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9cc4ab8f-8f14-4f8c-95f2-5b3872556cb1"
        },
        "item": {
          "id": "d8c3ee77-0252-4863-aae1-6a1a5117c03e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c0d5186e-a897-4a95-9bef-c67b240f2698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a947a0-0f85-49c4-91a8-0a0acd408dc2",
        "cursor": {
          "ref": "96062fab-23f0-45a8-b3f8-30f56fb6642c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c8e47622-22e9-40d0-b867-fcce249b4611"
        },
        "item": {
          "id": "b0a947a0-0f85-49c4-91a8-0a0acd408dc2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0cde70a1-0fef-4947-8e92-eba888e3af03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c502b0-7b3e-4ccb-9b77-4bc075d65aa9",
        "cursor": {
          "ref": "78fea9d2-272a-4877-8234-bd6e1fd4eb1b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "26b4d734-bf6b-4bac-9be3-ddb02f4b3752"
        },
        "item": {
          "id": "d2c502b0-7b3e-4ccb-9b77-4bc075d65aa9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b8156218-038f-489a-afbc-eeb0b517796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a7557e-58ef-42f4-a93e-412aafeefaf5",
        "cursor": {
          "ref": "9e969195-01c1-4fa8-bcfb-2e78511086b6",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aeacfde3-d525-42ba-b771-fc2078c73841"
        },
        "item": {
          "id": "22a7557e-58ef-42f4-a93e-412aafeefaf5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fb875207-79c0-4b12-8f99-a971a18086f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098f52e1-524e-4b04-a508-66eede809eec",
        "cursor": {
          "ref": "908edf28-a0dd-483d-aa78-9a689fb9b6b6",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a4a472e2-c0d4-431b-9845-2379e3b4f2b1"
        },
        "item": {
          "id": "098f52e1-524e-4b04-a508-66eede809eec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f1fb154e-c74e-4071-8c60-7ae233e2026c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b451c41-3f8e-479e-81cc-b5d3f4ffb3ec",
        "cursor": {
          "ref": "a9227c3d-f9a9-4fd9-9bd7-8cb0efb73d3e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "db49c1e1-1eaf-4277-9b79-413b7afe3082"
        },
        "item": {
          "id": "5b451c41-3f8e-479e-81cc-b5d3f4ffb3ec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "64448919-7106-453f-a1ef-b61167317644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db856939-fe02-4268-8999-87bdd410e56e",
        "cursor": {
          "ref": "c83ca266-eb23-4f8a-aede-03ac50774b96",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8456e796-a1fb-49c6-b2df-89d460609539"
        },
        "item": {
          "id": "db856939-fe02-4268-8999-87bdd410e56e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "77d62e2c-afe7-4a46-8010-2b83af9caf56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e39d42-6e59-4c9e-849b-b6cb79b95486",
        "cursor": {
          "ref": "a5b7aa55-608f-42cc-8a1b-466a71192196",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "20d7d824-49c7-4705-b0e8-a4221bc55c7d"
        },
        "item": {
          "id": "53e39d42-6e59-4c9e-849b-b6cb79b95486",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b10ea1f1-e64f-417e-84b6-210c494e3474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4db3af8-1eda-40a6-a3f3-f549e4b22e90",
        "cursor": {
          "ref": "e8814e1d-1a4b-4ba4-ae83-3caead7f50f0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc74cc22-8f37-4659-a801-c4e69d320ab0"
        },
        "item": {
          "id": "c4db3af8-1eda-40a6-a3f3-f549e4b22e90",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "af010643-a7f6-44d4-8c3f-8863e5987bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c349e7a1-3b6c-4ab4-8fbe-792787867239",
        "cursor": {
          "ref": "c0740663-cf7c-424d-add8-1450f69c0424",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "61b55141-05b7-4a42-9873-5cac7d2c2e51"
        },
        "item": {
          "id": "c349e7a1-3b6c-4ab4-8fbe-792787867239",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "135ff543-90a2-4bca-98a8-d80849b752cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762d4777-1589-467f-9b2a-cecf3fdf984a",
        "cursor": {
          "ref": "2eab949a-a390-451c-8017-0cb1ddaf716b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "36c62f13-45c5-4ba3-b474-69457df4b0fd"
        },
        "item": {
          "id": "762d4777-1589-467f-9b2a-cecf3fdf984a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4f55c9bd-a03d-47e2-9bcd-300c9f212525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962b6279-f5ac-44fb-ad49-0b92081139f8",
        "cursor": {
          "ref": "37999b43-a4d7-4a66-bfa9-9a4042a09e98",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "056f56fe-212b-4dc1-9863-d078968ea96d"
        },
        "item": {
          "id": "962b6279-f5ac-44fb-ad49-0b92081139f8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b1c37fcd-cda9-4737-a2c0-192ea7c4bf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9f0c61-7830-4261-9e4c-86631f514902",
        "cursor": {
          "ref": "c41763f2-d039-4195-8f44-1d43c7cd9ad9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "869d3876-f7b5-43c2-bab4-105e20962865"
        },
        "item": {
          "id": "9a9f0c61-7830-4261-9e4c-86631f514902",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4cd458ee-63e3-4913-93f2-48247973de3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870e5155-ed73-417e-a9e4-17c963d9742a",
        "cursor": {
          "ref": "89b6ab1e-2507-4c82-9354-63c0944cfcbe",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c0007ff8-7d5b-4ec6-aab6-b8dd20b18a3b"
        },
        "item": {
          "id": "870e5155-ed73-417e-a9e4-17c963d9742a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc744e07-07ac-4ea7-98cd-f8e272d0183a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7a7566-6677-4d35-bfa5-6289398c1e3c",
        "cursor": {
          "ref": "11a6bb84-c851-45ae-8330-6c09546e0977",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8de99811-70b3-4586-b046-49622aaa9f78"
        },
        "item": {
          "id": "1f7a7566-6677-4d35-bfa5-6289398c1e3c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "79a55b5c-4a1b-4491-ac68-f4a6c5728496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e86b13-ec19-4489-921c-c43185e11df8",
        "cursor": {
          "ref": "0f719f75-796c-4a37-98fc-48423d633b9a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3387a1d3-2a46-49e4-8bb4-db8333e970c8"
        },
        "item": {
          "id": "a3e86b13-ec19-4489-921c-c43185e11df8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1d451059-47b1-4f20-8937-c7f1fc8f37f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989fe72d-7928-4a28-928c-9784da61e472",
        "cursor": {
          "ref": "aca0ad5a-b359-455a-a601-fc39eaca2f74",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4407266b-f98d-49ac-adaf-49396fdce257"
        },
        "item": {
          "id": "989fe72d-7928-4a28-928c-9784da61e472",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3cd1343f-2a94-4b23-b33d-24582a192bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e4ecd8-f828-4012-b4ab-02f57845473c",
        "cursor": {
          "ref": "56d05672-ac84-41f9-a27f-ac5ae4dc6c4b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c121d002-792a-4bed-857f-53cc763daa31"
        },
        "item": {
          "id": "90e4ecd8-f828-4012-b4ab-02f57845473c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "56dca4ba-9045-4b9d-8650-62c2644cd3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c7c00e-9ebe-42e9-aaa8-df2fa722117c",
        "cursor": {
          "ref": "db26e86a-d284-45a6-8c68-0d078cc855e2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "96c09eb2-29b5-4d29-97dc-a15cfabcf449"
        },
        "item": {
          "id": "99c7c00e-9ebe-42e9-aaa8-df2fa722117c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5be1d318-f60b-4742-beac-6e40f2413076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22b6520-f2a6-48a0-82ae-eca42a179904",
        "cursor": {
          "ref": "4b2bd166-06a2-4025-885d-e92f1227384f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4fb7db19-4f69-4487-a7fc-fbe26e8821a8"
        },
        "item": {
          "id": "a22b6520-f2a6-48a0-82ae-eca42a179904",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "40b38dc7-4a93-4675-a35c-e44d786d8266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e65c2a-3e90-4c9f-8279-b67d050fc255",
        "cursor": {
          "ref": "81352b8d-5ed3-4cef-be5e-2592acd9ef5b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "69bd847e-c967-4f5d-a6ae-339bfd3384a1"
        },
        "item": {
          "id": "51e65c2a-3e90-4c9f-8279-b67d050fc255",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d535d7ee-79f0-4eba-8a73-b6b78e29ed06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981b4539-3ead-4c3b-ac81-435a5c493c95",
        "cursor": {
          "ref": "dc0b5ebb-1a21-4266-bb3d-052700417114",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "430b7c34-1829-432c-a307-0a2f0751bac1"
        },
        "item": {
          "id": "981b4539-3ead-4c3b-ac81-435a5c493c95",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b2b6fb19-9dc7-46d0-a6de-dabbc3bf6b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc69a8-2319-4825-a809-58e8f1aac08a",
        "cursor": {
          "ref": "8ceb646f-f135-42bb-bb59-2ad7981fcb4a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c0a4d0cf-b2a4-4f87-80b1-94a94a00f0da"
        },
        "item": {
          "id": "3bfc69a8-2319-4825-a809-58e8f1aac08a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "39d97add-9666-4d36-b65d-8c3e038699d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5dea99-a2e5-4c06-87b8-b94d70baf6c1",
        "cursor": {
          "ref": "4a546f6e-8da4-48a3-9e05-89fe346fd02e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b72af921-b263-412e-b358-ab153850a8ca"
        },
        "item": {
          "id": "cb5dea99-a2e5-4c06-87b8-b94d70baf6c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a2dd6ce9-15d4-489c-915e-29369778176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd7b75b-ef27-4ffe-be59-6f1be5e588d5",
        "cursor": {
          "ref": "bed41332-7f62-4af8-ada0-4587bed39b57",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "220d080a-81d5-446d-92a7-d187b7cb57b4"
        },
        "item": {
          "id": "abd7b75b-ef27-4ffe-be59-6f1be5e588d5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ba00161-36f8-4184-bb17-3d1a9469e143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21feb273-c1b5-48a1-8ef5-e440ff546c07",
        "cursor": {
          "ref": "3468d276-f047-4280-80f9-203f03777c98",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "27523f58-a8b0-4f34-baad-1486c246b622"
        },
        "item": {
          "id": "21feb273-c1b5-48a1-8ef5-e440ff546c07",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a1b78c24-3a37-4d6f-8714-f9e6da9e3f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49db7926-189d-4602-b3d6-d6c9f38d0b40",
        "cursor": {
          "ref": "36dec3b7-b51e-4b1b-9e34-b677173c9d91",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a2b7a8d0-94fa-4000-8b53-4fc9da5e4354"
        },
        "item": {
          "id": "49db7926-189d-4602-b3d6-d6c9f38d0b40",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8b91a344-73e3-4bf2-8a2f-53bc45ec9823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92228838-9475-4f4b-8c48-93cc29102807",
        "cursor": {
          "ref": "c8d91e92-a046-4907-8cb7-b2973d94931a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0e816261-a789-4650-9b51-bdc33fbe6532"
        },
        "item": {
          "id": "92228838-9475-4f4b-8c48-93cc29102807",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8e71ddb9-84f1-42e0-a511-4583f2a8b8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86c4930-ddac-48ec-a391-dbb18b0cbb61",
        "cursor": {
          "ref": "d111f0d9-02f5-4860-990a-29e6726044fb",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "75dfaf81-a22c-485a-aafb-e6666f9d5802"
        },
        "item": {
          "id": "b86c4930-ddac-48ec-a391-dbb18b0cbb61",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "daa5254f-9081-486e-a2db-22686c22f5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483fa0b5-80c7-407d-87b7-734733c6d3ae",
        "cursor": {
          "ref": "c72b8953-adee-4f4d-bcb5-4bd5f95d266a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "78e0ab30-384d-459c-9db8-d3764a2b5d53"
        },
        "item": {
          "id": "483fa0b5-80c7-407d-87b7-734733c6d3ae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b52db4d3-de8c-492a-aef5-64a27716cbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62824835-498b-4150-b202-e1548f66b951",
        "cursor": {
          "ref": "a7ca8d7b-77f6-4518-8055-3f05961a23bd",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fb9c2694-51ea-471d-811c-8d0bcd9c7881"
        },
        "item": {
          "id": "62824835-498b-4150-b202-e1548f66b951",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b4c25a2-de1b-4ed9-857d-d9516d7d92c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3a8efe-387a-4f11-bd4c-464e85ab88ac",
        "cursor": {
          "ref": "b49ff351-2ef4-4be0-9700-81cb94327083",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "31ba17b3-3b5e-4894-9f2c-301933dc93db"
        },
        "item": {
          "id": "3d3a8efe-387a-4f11-bd4c-464e85ab88ac",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "51cf6686-4d7e-46b0-a41b-7f85f57013a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476d91cc-c781-4c2e-ab70-a14e9fd1e8b7",
        "cursor": {
          "ref": "ebbbb70c-ded1-4252-a3e6-c79acf94db09",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "adbce84b-039e-412b-984c-cb8fa1abbc2e"
        },
        "item": {
          "id": "476d91cc-c781-4c2e-ab70-a14e9fd1e8b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d1e66a54-1d9a-4da8-9fed-5a7eeafed663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb20b670-7b8e-4902-a25a-f422c4cf263e",
        "cursor": {
          "ref": "92250a3c-0d3b-4cfa-9153-a1a930c10f8a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b529b967-04d2-4071-bbe8-2840ebe19181"
        },
        "item": {
          "id": "eb20b670-7b8e-4902-a25a-f422c4cf263e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5ceca478-fafb-4958-91c8-1c2a450b980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1ba4c9-5eee-4719-bcdb-f0822fc25ae7",
        "cursor": {
          "ref": "8d987733-af80-47ff-aa93-ce3013e5b024",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "503ec471-6df0-420a-b367-4281f8c362b2"
        },
        "item": {
          "id": "7a1ba4c9-5eee-4719-bcdb-f0822fc25ae7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b5c32cad-b726-4f15-9b58-46b8d2e7ba5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2699d61-c69d-4bac-8ceb-ddb61a68c28d",
        "cursor": {
          "ref": "d3fc3140-066c-4212-8311-a66ee525fbb9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "08ba9281-e0e6-4247-9e52-e7afc1b2ac3a"
        },
        "item": {
          "id": "a2699d61-c69d-4bac-8ceb-ddb61a68c28d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5e21657a-eb07-4412-80f6-c803de3b7f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a1422e-6fc8-4850-a0aa-96a47486736d",
        "cursor": {
          "ref": "3abd5e0b-3177-4160-849d-d173575390f1",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "211a4fb7-8f4b-485c-b4ed-63da01ac0f58"
        },
        "item": {
          "id": "34a1422e-6fc8-4850-a0aa-96a47486736d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "25e0cb77-3aab-4adc-8de5-1ba9a941b840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cf010a-ce44-4a4f-86f9-3a48627182f9",
        "cursor": {
          "ref": "85e21251-d225-4734-a891-c5ac34768398",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "acc90de4-16ae-4b67-9afe-2e3c7bcac138"
        },
        "item": {
          "id": "30cf010a-ce44-4a4f-86f9-3a48627182f9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "04dd88da-28b2-4109-9bd9-3267b89a6b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9ce97a-a95c-4c0a-85b1-73fbcaceb8be",
        "cursor": {
          "ref": "401690fe-745e-43ff-b07d-360ad34e3261",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "36989c8b-619c-4881-8bf9-6c528ec56693"
        },
        "item": {
          "id": "ab9ce97a-a95c-4c0a-85b1-73fbcaceb8be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c90c6c96-fc8e-45d4-a689-0d4375ad43dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2365528-6132-434b-9722-c8e37c78c2a6",
        "cursor": {
          "ref": "d5621662-90e6-4ac7-b82f-94bc10ef26ad",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7e630951-fd6d-424d-bf77-8d7815e30c43"
        },
        "item": {
          "id": "e2365528-6132-434b-9722-c8e37c78c2a6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c985701e-7615-4e63-9246-9b596774e215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c223206-944b-4450-b787-97a2f787342b",
        "cursor": {
          "ref": "bbc8efe3-34a2-4bdd-85af-6dd32bad0cbc",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7def7c95-4059-4451-972b-1c074564d22f"
        },
        "item": {
          "id": "9c223206-944b-4450-b787-97a2f787342b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2a62ce4a-d7cc-456e-946f-2df6b61b17e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817269fc-b1ba-43fb-97f8-4591ab87977c",
        "cursor": {
          "ref": "7eb92716-957f-48dc-848f-19657742abaa",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "03faefe8-f40d-4533-a9bd-506a79ebe4ef"
        },
        "item": {
          "id": "817269fc-b1ba-43fb-97f8-4591ab87977c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "54e43546-21ab-4b9c-9262-6283a4c544ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa5f25c-78ef-4d3a-979c-376e92a57a92",
        "cursor": {
          "ref": "85ca1b35-1101-4402-858a-0f625e9ddb7d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "038fa113-ea9a-4ee5-9585-329421dee3a0"
        },
        "item": {
          "id": "8fa5f25c-78ef-4d3a-979c-376e92a57a92",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "93ccf597-0d38-466c-a8e6-6b6f1a95aa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f69842-9be7-4003-9bd1-474c85078e51",
        "cursor": {
          "ref": "3e3913d8-0c2b-4daa-8b01-862394c7d127",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6e7ee7f9-471a-45ac-9b5e-2048da95d95f"
        },
        "item": {
          "id": "69f69842-9be7-4003-9bd1-474c85078e51",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7df6777b-8ec0-4e5e-b4b1-9be08f37c420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0323c4e-4f82-48e3-8adf-080b20420f78",
        "cursor": {
          "ref": "eb9795f4-2dc8-48ee-9975-d0c476ac8557",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4d3f244d-39c1-4f8c-8822-8deb8d6551f7"
        },
        "item": {
          "id": "a0323c4e-4f82-48e3-8adf-080b20420f78",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ae1be738-4fa0-4c84-a195-46c6fc657332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f2ca68-00cc-40d8-ae81-6e1dbc27a983",
        "cursor": {
          "ref": "fa384943-deb3-4e6e-926b-a51fbc6e9a00",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "633504d1-1b4b-49f7-9c87-6f74519a8cb7"
        },
        "item": {
          "id": "d4f2ca68-00cc-40d8-ae81-6e1dbc27a983",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1aba8f24-2fa3-478d-9d88-d0b4560e0e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7866f280-8367-45f9-bb5d-a583865b2586",
        "cursor": {
          "ref": "30054a1e-1b1d-49e6-9e70-37276d151a90",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5e105950-aa7e-469e-8769-fb9ac0f877a7"
        },
        "item": {
          "id": "7866f280-8367-45f9-bb5d-a583865b2586",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "344e6e61-e2ad-4502-8de6-8d2486febeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8a5bce-a2c8-4ae5-955c-62df2daf7e7c",
        "cursor": {
          "ref": "2c95a1b2-7903-40b6-9410-d203f4eec07a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6c31a664-f2da-4bfc-a8cb-dbc3e40ffb52"
        },
        "item": {
          "id": "ad8a5bce-a2c8-4ae5-955c-62df2daf7e7c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "096b221e-e897-4bf4-817a-1b15b20afafb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa08eb26-7df8-45b3-8cdc-0725a8cd59cf",
        "cursor": {
          "ref": "ec15a9ea-871a-4a5b-a142-488ed02a9097",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cde32c73-0d4d-407e-9e31-5d6477a3b348"
        },
        "item": {
          "id": "fa08eb26-7df8-45b3-8cdc-0725a8cd59cf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f5220752-fa23-4b55-a771-12f93b04bfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f306cb30-e1ed-4e41-9801-98caa1714a34",
        "cursor": {
          "ref": "d51cdc2c-5080-4bab-ad91-1034fd8dbe24",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f8461732-7327-475f-a667-3af8ef60b902"
        },
        "item": {
          "id": "f306cb30-e1ed-4e41-9801-98caa1714a34",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2b73f331-ef1a-4eef-9ac3-bf3186327311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df317ad-ef0c-40f7-8bea-4eabad2ab2aa",
        "cursor": {
          "ref": "1d0ee82a-062a-4341-9f3e-e8cc635b57cc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "80ec0261-38c9-432e-acb0-6a8085d3c381"
        },
        "item": {
          "id": "0df317ad-ef0c-40f7-8bea-4eabad2ab2aa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "809c1962-4294-48df-9bd6-10f9b9588c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a296bc3-1d50-4514-94fc-a3c2185e4b53",
        "cursor": {
          "ref": "2b37e9d6-6eb4-46ca-93d5-0c1322227597",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2cc167c5-25dc-4342-b716-e186d8880c39"
        },
        "item": {
          "id": "1a296bc3-1d50-4514-94fc-a3c2185e4b53",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0e61c80d-6199-46d6-8bd4-49daf718e6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f7f787-4579-45d3-8608-df6635f45b3b",
        "cursor": {
          "ref": "c87883a0-c7ac-4987-9dca-8392bb708148",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3c9f4d9b-3c98-4d6b-916d-b0bb5e73a324"
        },
        "item": {
          "id": "42f7f787-4579-45d3-8608-df6635f45b3b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3d5bccf9-2cda-4e56-9961-33b98e1d177d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89563baf-a91b-42b7-a785-c8980c324fdb",
        "cursor": {
          "ref": "d9a14d64-1cd6-4fcd-92b8-146854fdeb30",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "788e416e-70c5-4ecb-94dc-8fd85cc03a55"
        },
        "item": {
          "id": "89563baf-a91b-42b7-a785-c8980c324fdb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2ff0ce92-e05e-4187-b761-629fa0b3abac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95278d3-5c23-490c-a380-5d4b0c8d87ee",
        "cursor": {
          "ref": "3bc8a83d-b49a-4f50-85b0-729b3f83ba02",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ffe75ccf-2950-4388-9888-2a87be2eaf10"
        },
        "item": {
          "id": "d95278d3-5c23-490c-a380-5d4b0c8d87ee",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "df1cace4-c448-437e-89fe-12a7952f8629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56286cf1-b06d-45a7-98d9-67b61729724d",
        "cursor": {
          "ref": "fc3241d2-45f8-4bc4-839f-6e8e41a5b38e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7aaada36-b0e7-44e4-92e2-3e6d738f7ea8"
        },
        "item": {
          "id": "56286cf1-b06d-45a7-98d9-67b61729724d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "898f91d6-7a3c-477a-a0d5-9b575a44aef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b865eb4e-3a31-4160-b8e2-f84aceca5848",
        "cursor": {
          "ref": "a0087a2f-3b20-4679-b41c-62dafe8b639e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1e970449-55e2-4892-8a08-d357a7f76ee3"
        },
        "item": {
          "id": "b865eb4e-3a31-4160-b8e2-f84aceca5848",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "98f15310-df0d-4561-9525-4289b835aa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708a0cce-f20f-4b17-83c4-31a622075072",
        "cursor": {
          "ref": "e9b54dc4-4099-4cab-87b1-c3e138ec6159",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "772e977f-1cfe-4e70-8f82-64d465525cd7"
        },
        "item": {
          "id": "708a0cce-f20f-4b17-83c4-31a622075072",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9c68a57b-e87e-460e-b10b-5b5658a3a8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a62f4e5-2f45-4274-b2c0-2573eb4c64dc",
        "cursor": {
          "ref": "4cc9ea05-155b-407d-8989-962a708cadb9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cb25fd25-1a97-4c1f-af5c-153784f1ac18"
        },
        "item": {
          "id": "3a62f4e5-2f45-4274-b2c0-2573eb4c64dc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "67ebf0d7-f606-4f8e-91be-37069ca7c6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4585b4d4-d7e2-42bc-8d52-6b4fe4196890",
        "cursor": {
          "ref": "b8d9dc2b-b3a5-497f-bcca-cce94cc5c518",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d75744e5-2f22-4473-9501-624360159e01"
        },
        "item": {
          "id": "4585b4d4-d7e2-42bc-8d52-6b4fe4196890",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07628dcc-884e-410b-9a36-844c7a988ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e480d5-1264-477d-8941-1b2bc9621b44",
        "cursor": {
          "ref": "209bbbe8-313b-4f41-af1d-6571b7bcddc2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8f57ee74-6e4d-4a1d-a3bf-f01dcf651574"
        },
        "item": {
          "id": "89e480d5-1264-477d-8941-1b2bc9621b44",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6847c6d2-e902-4c5d-bc91-c0985a5164c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2a6346-4778-4166-aa7e-3b75e5d71e9d",
        "cursor": {
          "ref": "8cde46d1-9b34-483e-b301-cc197593a6eb",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e9794e40-cbc7-40f1-b05f-b6eb584e486f"
        },
        "item": {
          "id": "8e2a6346-4778-4166-aa7e-3b75e5d71e9d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2a64d2e2-3711-4b12-9a15-f7a3d963d75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbc06d5-c9fc-4f05-b706-949579d268e5",
        "cursor": {
          "ref": "23925d46-64ad-4835-8dd9-96d644c2f441",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3f967e8d-0e32-489e-9da8-c74dc8b2d3db"
        },
        "item": {
          "id": "6fbc06d5-c9fc-4f05-b706-949579d268e5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "26d1935d-da82-415d-ba4c-29819b2adeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c74768-1562-419a-8af2-b21a317fd695",
        "cursor": {
          "ref": "e65ea36f-e669-43bb-bedc-ecb60818a917",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6ea28240-1717-4529-b953-4230eb17ad9e"
        },
        "item": {
          "id": "b6c74768-1562-419a-8af2-b21a317fd695",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2f4848f2-35ce-4119-86e2-9eb90b0639e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe45533-f590-4d22-9194-fb029b648415",
        "cursor": {
          "ref": "1ee096ba-52df-4cef-992e-4440eee94868",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1c4dc7ea-b469-4b98-a8a9-63b36e3799e6"
        },
        "item": {
          "id": "ffe45533-f590-4d22-9194-fb029b648415",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "061e3bf6-2851-45a2-a67b-f834c2966e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba026762-2121-48cc-a63a-385444c89388",
        "cursor": {
          "ref": "8c5c7dc7-0878-42e6-80c5-560af98936d3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bf21155f-1ea5-4bbb-bf2d-3687c574a458"
        },
        "item": {
          "id": "ba026762-2121-48cc-a63a-385444c89388",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "95dd2f37-ae1f-47e5-b9c8-f98feddf342c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94c0628-a33a-4210-a10e-0ed46d5f1def",
        "cursor": {
          "ref": "65fa7211-f258-4b79-80df-0d157c5bea10",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b01544d9-c518-4fdd-9fd0-70c1a789ff4e"
        },
        "item": {
          "id": "b94c0628-a33a-4210-a10e-0ed46d5f1def",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "abf7b8af-86f1-48ea-8472-0afb1569c2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444f2f63-afc5-41fd-adc4-0076d1d4674b",
        "cursor": {
          "ref": "ca336db5-bcfd-47d5-9829-e5d5f5f2de8c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "54909805-68e1-4586-a622-f5f8b043d9c7"
        },
        "item": {
          "id": "444f2f63-afc5-41fd-adc4-0076d1d4674b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ef647d79-817f-4a2f-be13-fafb338fe29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420a9f59-dfd2-4e05-a0de-78a1da3bcf36",
        "cursor": {
          "ref": "1d9083b9-7a99-4a40-87f1-d907b4fd126a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "baaf5dc5-0dd5-4534-9788-90c03f03e7e4"
        },
        "item": {
          "id": "420a9f59-dfd2-4e05-a0de-78a1da3bcf36",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9576592e-30c2-4f5b-87f0-a805788ae423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41c9422-277b-47eb-9e7a-f2e684f13082",
        "cursor": {
          "ref": "dad6f5dd-5915-4c04-b115-836fdaaaac41",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "707b4028-274d-4f78-8d2c-58853c3cf6f2"
        },
        "item": {
          "id": "c41c9422-277b-47eb-9e7a-f2e684f13082",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b3d19741-3dff-4b1b-9ac3-2c43e9e52a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cadc411-1a4e-4e2e-a29d-68d3a320267e",
        "cursor": {
          "ref": "164c1812-7533-4685-9411-05b26f169a5d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eb5806b2-3947-4a41-8ce2-3867dac0566d"
        },
        "item": {
          "id": "4cadc411-1a4e-4e2e-a29d-68d3a320267e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4ac31143-0184-433d-804a-e1c52195f9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749971d7-c1cf-4031-b8c2-99ca84dd02f9",
        "cursor": {
          "ref": "361a2c56-5dd9-41e5-9965-166af58a93f8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bd082f38-1f40-48a4-9fa8-f7a15e394c38"
        },
        "item": {
          "id": "749971d7-c1cf-4031-b8c2-99ca84dd02f9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "19c3dbe2-c447-4de8-bbcc-ccaeb608df29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad79396-d96d-4ddf-9339-1b9ac39b18d6",
        "cursor": {
          "ref": "cd9c3e97-dfe6-4cde-bb8e-a488a87fe17a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "46d912a4-b766-4194-9403-71cccac128dc"
        },
        "item": {
          "id": "aad79396-d96d-4ddf-9339-1b9ac39b18d6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "eb2ac8b5-f7de-44d0-896b-53f09132faab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e50ef2-29c7-4e70-90ef-4f9d16d295f7",
        "cursor": {
          "ref": "c90c1ff1-d036-48e8-abae-c8c80e91a643",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e4abf572-724a-4101-a8c6-46ea03465363"
        },
        "item": {
          "id": "a2e50ef2-29c7-4e70-90ef-4f9d16d295f7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3f9aaa52-a543-40c0-a9e9-739cfbf4976c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d716a08d-3e38-4088-95c1-4cef63f5963b",
        "cursor": {
          "ref": "d6ccd78a-3142-4cee-b551-04b4e018e86d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "335e65cb-7eaf-475d-a75d-22fb0e547d8f"
        },
        "item": {
          "id": "d716a08d-3e38-4088-95c1-4cef63f5963b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5972e0ec-7387-4db0-988c-fc56718f047d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33528e0-7c46-431d-9aa0-303ffffdbbdb",
        "cursor": {
          "ref": "71c31062-6d99-4480-9440-fec84ba9c4cc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a17f472c-364b-4070-b99a-a5f80803eaea"
        },
        "item": {
          "id": "c33528e0-7c46-431d-9aa0-303ffffdbbdb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c7a691b9-7fee-4d92-aadc-ed092d87ac42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ad2dba-44d1-4a20-ae38-3fb5738ca034",
        "cursor": {
          "ref": "82b76c4f-2608-4875-8184-3ebd01b5bc9a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "43808750-f640-4600-9c08-74689f30d1b7"
        },
        "item": {
          "id": "d0ad2dba-44d1-4a20-ae38-3fb5738ca034",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "deaf0392-36f6-4c60-88b9-1783b2948f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8a7ff6-ed9e-4085-bfec-35777c20c33e",
        "cursor": {
          "ref": "9d08f122-e158-49e3-9c57-d8110587f062",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4b09ca59-d154-4653-8936-b10b7d63d8d8"
        },
        "item": {
          "id": "4c8a7ff6-ed9e-4085-bfec-35777c20c33e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8c465947-41cb-481b-8c33-08b9be6101d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cf22ce-e7ab-4cfe-b642-35f4b41ca0a2",
        "cursor": {
          "ref": "5b36767e-4a1f-4483-933f-2357bcb45da2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "209195f5-09d6-4aeb-a6ea-490ffc9e631d"
        },
        "item": {
          "id": "d7cf22ce-e7ab-4cfe-b642-35f4b41ca0a2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e0122702-4add-4ac6-b5ab-2d508b26c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a436637d-35a8-4c65-a0a7-d46682b04b76",
        "cursor": {
          "ref": "6fc1e649-457a-4391-8f78-4c2bfc42de88",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ff6937a0-511c-4405-a1fd-8d1a45ec84dd"
        },
        "item": {
          "id": "a436637d-35a8-4c65-a0a7-d46682b04b76",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2250420e-52d6-46fe-97f9-58620e49b0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c38b6f-ff69-4d86-ae4a-4d5942e48c6c",
        "cursor": {
          "ref": "dbe51e04-7938-449a-9735-3801496be75d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3adda0d1-0447-4201-8bd2-704ca78380e1"
        },
        "item": {
          "id": "b2c38b6f-ff69-4d86-ae4a-4d5942e48c6c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2124e50b-921f-4b46-b891-7d3b15c21021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd7c3c4-6ec9-45cc-81e4-9df672d9686e",
        "cursor": {
          "ref": "182e3cb1-64ef-4079-bc13-0abff033b42b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0335965c-5d6a-4f3e-8b42-2ed6fe585c20"
        },
        "item": {
          "id": "dfd7c3c4-6ec9-45cc-81e4-9df672d9686e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4aeef2f9-c73f-4dd1-965f-e3fd7cd147a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03461d5-b64c-4fb9-b877-ff9d35f73201",
        "cursor": {
          "ref": "31fd91aa-ff36-4f11-9ec2-c1cd5f877512",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5d02927c-627d-4e20-9a27-d33e01a9e221"
        },
        "item": {
          "id": "b03461d5-b64c-4fb9-b877-ff9d35f73201",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3205a0d3-8d3f-4b5f-9d91-cf57972679d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160d2420-1719-4231-b0ea-f9e076a6bddc",
        "cursor": {
          "ref": "3a2869e7-e48f-46dd-b17b-c82236594fe5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1e0f804f-b516-4b21-bec0-30260307f4fa"
        },
        "item": {
          "id": "160d2420-1719-4231-b0ea-f9e076a6bddc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "622c9833-e0ce-4429-8238-6f0402fec17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9668325-0a4a-4aad-8e94-32a6b4c0f784",
        "cursor": {
          "ref": "d66a20ae-20af-43c8-977d-3bcf0f561e16",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "34f68ab3-e5e9-476e-ab27-9bf64764deb0"
        },
        "item": {
          "id": "e9668325-0a4a-4aad-8e94-32a6b4c0f784",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f8148142-360d-42ac-ac41-3fb0e43e4d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07f0492-2c60-4a1d-927a-8889edcecc77",
        "cursor": {
          "ref": "91b066e3-60b9-4b01-87b0-28ba65bfd25e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8a3b4d1f-978c-4d0f-a758-cec47f187f88"
        },
        "item": {
          "id": "b07f0492-2c60-4a1d-927a-8889edcecc77",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "624752ac-c6f3-48d0-bedb-963a3383983a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a35738-e9a4-4583-a73e-d3f6a5938377",
        "cursor": {
          "ref": "6b1adbea-ffab-4696-8075-9157b4c1697a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b979f1ff-31a8-45e6-905b-8936b839b833"
        },
        "item": {
          "id": "e9a35738-e9a4-4583-a73e-d3f6a5938377",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e69b0acc-01b9-4dc9-9043-e276a7f8822c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39feeca-e677-4058-b58e-f2d344d30efb",
        "cursor": {
          "ref": "583dee8c-9c88-4d56-b492-4228f4a2e0b6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ce79b8bf-077e-4288-ac8c-8b3517ff895b"
        },
        "item": {
          "id": "d39feeca-e677-4058-b58e-f2d344d30efb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1b3f4050-763b-434a-ba99-7488d45558ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4a82bf-305a-4467-8a7f-c7bf2b2109b4",
        "cursor": {
          "ref": "f95205b7-4da9-4cbb-bd39-7d5d75f489d1",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "35846eda-9255-4f69-828b-6d1a099086b7"
        },
        "item": {
          "id": "7e4a82bf-305a-4467-8a7f-c7bf2b2109b4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e777cdee-05f1-4a17-9860-0c9f54f3bbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fba4f28-b969-4869-ae50-27e511d7a801",
        "cursor": {
          "ref": "23213d59-f6bc-47d2-8112-3117ee456efe",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "72facdc6-4da0-4caa-a63f-09e822c1c597"
        },
        "item": {
          "id": "4fba4f28-b969-4869-ae50-27e511d7a801",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a93d50a1-49e5-41ed-9d77-bee1413b1cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4c0d72-e723-4814-8503-dbba5eec7516",
        "cursor": {
          "ref": "725dca35-0947-4f91-8a72-f0b2097a49c9",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cc1daf8d-23c8-46a0-b4a2-e5fc2b339cf0"
        },
        "item": {
          "id": "1d4c0d72-e723-4814-8503-dbba5eec7516",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d1423295-d3ad-48b5-a250-bdf89dc97934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79c55be-4490-4c89-8d0d-d50718b28678",
        "cursor": {
          "ref": "b9a6d4fa-451f-4273-a81c-f8b6c1e8d7ae",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1d5c7143-612c-4315-be02-9fd8c84dae82"
        },
        "item": {
          "id": "a79c55be-4490-4c89-8d0d-d50718b28678",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "389b5824-0b7c-4a6b-8b4b-e65f3adcbec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bccadb-50b2-4f02-80b0-da0ff1110918",
        "cursor": {
          "ref": "2bb46bda-6e06-4481-9e78-0c5e3642fdce",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "44df76b4-4cae-4541-9dbf-8113676ba6b0"
        },
        "item": {
          "id": "f9bccadb-50b2-4f02-80b0-da0ff1110918",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0b8da924-3e38-40ef-8a03-9f2955103dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eb2c79-d64d-4fc3-bbf8-3351c33519bd",
        "cursor": {
          "ref": "7fe51033-6639-4fc6-8687-6422f2674eab",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7ac29afa-afac-4485-94c6-5aa32cfda68d"
        },
        "item": {
          "id": "98eb2c79-d64d-4fc3-bbf8-3351c33519bd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "22a41df3-d73d-42cf-b5d8-2fa2523d0fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4826991b-9af4-455b-8c92-6c282233d8df",
        "cursor": {
          "ref": "56ce245e-5214-46aa-9e85-8e538083c97a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bf11a521-42db-48ea-abf3-0c15f54da061"
        },
        "item": {
          "id": "4826991b-9af4-455b-8c92-6c282233d8df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "31f05f0a-634f-4648-abf8-00bafe54d156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fca2c0-6711-477b-9827-527061cdc335",
        "cursor": {
          "ref": "df857a4c-f520-4b26-92d7-c4262f0a8ab5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d4ba6a0d-77bd-4b1b-99ce-531a2cfc9b0a"
        },
        "item": {
          "id": "42fca2c0-6711-477b-9827-527061cdc335",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "22e5a79b-8dd9-411d-a494-adb07b2bb0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57501fe4-3574-45f1-9e99-eef40cf0a01d",
        "cursor": {
          "ref": "86ae7105-876a-42cb-8e4b-6bd9c9b86538",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "029fce53-7a4d-42f8-b60a-96bff82fa1d9"
        },
        "item": {
          "id": "57501fe4-3574-45f1-9e99-eef40cf0a01d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8219c4ed-08c0-4139-b2af-3608220bd487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7cf3dc-eb82-41de-a7ff-54f0e9333cdb",
        "cursor": {
          "ref": "372de3c2-5ca6-4f1c-894f-4b87f510e363",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d11c0a6c-f41b-417d-ad98-b5924cff48e0"
        },
        "item": {
          "id": "cc7cf3dc-eb82-41de-a7ff-54f0e9333cdb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8968d91c-553d-463c-92f9-fd5ad2ebddfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa9e4d5-3f1e-4d98-b67b-988bd999e271",
        "cursor": {
          "ref": "f27fb662-d008-4d0f-8ec1-fb32757a015e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7dcb50d-c624-405e-925a-7eb4971e495c"
        },
        "item": {
          "id": "4aa9e4d5-3f1e-4d98-b67b-988bd999e271",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3e99943e-5407-465d-bb21-3ec7509c4977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2b5b29-fba8-468a-8545-6ee1402a60f4",
        "cursor": {
          "ref": "ce32e462-5eb4-48de-beaa-404f7d9cb92d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "239db488-7612-4c0b-aa85-ab5fc21b57d4"
        },
        "item": {
          "id": "6f2b5b29-fba8-468a-8545-6ee1402a60f4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b9353127-b539-4007-8180-284028823162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18202c83-6ccb-44ae-8c2b-c10eb6863eb4",
        "cursor": {
          "ref": "d2996d5a-1d20-4c61-a5ce-28f3cc9a4499",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a1e572b6-6b3c-4a43-a1e0-5beb32ef676c"
        },
        "item": {
          "id": "18202c83-6ccb-44ae-8c2b-c10eb6863eb4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "65a90ef4-665b-4a64-8ec2-2dbb9fb6a187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa465360-188f-4bd9-b252-b0848a28aae1",
        "cursor": {
          "ref": "a8071fd4-81ea-4e11-988e-3f2a88e9f0e3",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2bd1820a-0878-4dba-ab77-cf766de7a46a"
        },
        "item": {
          "id": "fa465360-188f-4bd9-b252-b0848a28aae1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "59c2821f-78c8-400e-aadc-a929198065f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89271cc6-7ebe-493f-b802-5ac3b8a8604e",
        "cursor": {
          "ref": "81d93ed9-321b-4180-b533-4736bbebd949",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "16feaf57-a323-4c5d-b5dc-1b92cefdbbf0"
        },
        "item": {
          "id": "89271cc6-7ebe-493f-b802-5ac3b8a8604e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8060f096-6b20-4b94-b815-39db9d7e6fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9ecbc9-1d03-4d43-9ced-eaf1348f482b",
        "cursor": {
          "ref": "544a4e49-e528-4eca-aef8-b12e85897130",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "99fe1866-2005-4996-bcf9-9c690bd4aea4"
        },
        "item": {
          "id": "4e9ecbc9-1d03-4d43-9ced-eaf1348f482b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "84f23f9f-55fd-4473-ba40-8c1bd5285574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6c2d6e-fe78-4dc5-8660-572894c9600f",
        "cursor": {
          "ref": "9128868b-ea8f-4c7a-83eb-3306ea180bec",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "172732fe-6b12-428f-b486-0a30c0774666"
        },
        "item": {
          "id": "cf6c2d6e-fe78-4dc5-8660-572894c9600f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d2c53114-97b4-414d-b807-b194128f822b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8016fd44-cbf4-4b50-aafd-0359f0e26249",
        "cursor": {
          "ref": "eceec987-a232-44b9-a951-b809eea07b71",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "38a42feb-ce42-450c-ab8b-dffcf3f8deb1"
        },
        "item": {
          "id": "8016fd44-cbf4-4b50-aafd-0359f0e26249",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0cc1cd14-c26c-4d4b-a581-d2cc38f3631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97885a9-b1a3-44e4-b97e-8ce7f0d7bf3a",
        "cursor": {
          "ref": "7b63f76b-fa66-4713-893e-507457521cfb",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7036831a-2e31-468f-8e7d-f33f9dd296d0"
        },
        "item": {
          "id": "c97885a9-b1a3-44e4-b97e-8ce7f0d7bf3a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "40346ab2-2274-455b-87f3-8d38b43a4832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465b613c-0e49-4c2d-9a77-aff76b16855a",
        "cursor": {
          "ref": "93b0a63d-d4f0-4f79-ad84-d14f834adbe0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8562a54a-53e0-4fe3-b5fb-d26b936fbdcb"
        },
        "item": {
          "id": "465b613c-0e49-4c2d-9a77-aff76b16855a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "59971740-b8ec-4e03-a453-beb84d0d256f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c5919c-e6cf-40ee-a590-629501df374a",
        "cursor": {
          "ref": "7041f7db-9ff2-43b4-a55e-e895d027551c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "41c047db-080c-4bb8-aab5-57812133f0d4"
        },
        "item": {
          "id": "b4c5919c-e6cf-40ee-a590-629501df374a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1bb08dfb-9441-4e49-bcb5-da1615b67673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8904f066-41ad-4ac5-a9ec-d302debbcd71",
        "cursor": {
          "ref": "43f1c3c6-fb1e-4e3a-bc6b-5c3ada2e3f66",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d5788a20-34b7-4c22-9b09-c63cdfe25892"
        },
        "item": {
          "id": "8904f066-41ad-4ac5-a9ec-d302debbcd71",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c0cf6033-1ea9-433b-8f8c-0e0162a09c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aadedb-14cf-42d3-af61-1c94b74b22e4",
        "cursor": {
          "ref": "e6ceef78-d6a2-4483-b1c7-2d8bc17f6014",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "782a4842-94b7-4cbe-91c1-2d846042ea86"
        },
        "item": {
          "id": "92aadedb-14cf-42d3-af61-1c94b74b22e4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "473dacce-26c5-49f5-b7fc-46734c8ac63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634b8742-a65c-41d6-8580-fe8bc5fe7d91",
        "cursor": {
          "ref": "b0c4aade-cdf2-4743-b80e-8743a3159ff7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e4f5f6aa-5192-4e20-b433-045e180f7dd6"
        },
        "item": {
          "id": "634b8742-a65c-41d6-8580-fe8bc5fe7d91",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "665e58b4-a182-48d8-b6e3-6bf33c9490d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8670b8b-2114-4c08-be17-66f8de7e500f",
        "cursor": {
          "ref": "bd11a662-a2e1-4707-8b3f-dd986736b3bc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9665c16e-2ee0-4cea-8672-094448c38214"
        },
        "item": {
          "id": "b8670b8b-2114-4c08-be17-66f8de7e500f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c2bacca8-5252-43ae-99c1-7134de1e6ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9284a91a-bcee-4602-8fe8-ceb677b15f54",
        "cursor": {
          "ref": "07b05a68-3514-4146-857f-865aaa064132",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93959b3d-5717-425b-877e-8065c3a9b0e6"
        },
        "item": {
          "id": "9284a91a-bcee-4602-8fe8-ceb677b15f54",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b5e58fd8-0fbd-47a8-ae88-51a75f4425f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300ea3f6-cd25-4f1e-823d-b93d6d7e5a86",
        "cursor": {
          "ref": "14245c14-b0fe-4b4c-8d28-014c1bea64ea",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9d76d564-d6c8-486d-a5b4-fe64d57c1a20"
        },
        "item": {
          "id": "300ea3f6-cd25-4f1e-823d-b93d6d7e5a86",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b686ccdf-f535-4822-bd89-139460e82a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed44d98-d90c-4eb4-ac35-10b821d92ab1",
        "cursor": {
          "ref": "610cce8c-57cd-40b3-b5c1-6b5b0b32e2d2",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b18a505d-98d6-4282-a36d-2b772791123c"
        },
        "item": {
          "id": "5ed44d98-d90c-4eb4-ac35-10b821d92ab1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "43a1849a-b58b-4f8b-ab61-5038eae3ccd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca67e232-b254-46db-b0bb-0b15f1b13918",
        "cursor": {
          "ref": "afc71af9-1cf3-4451-97b1-b1b4065672be",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c53d6a31-c127-4eca-8e44-a5b7d6f03c49"
        },
        "item": {
          "id": "ca67e232-b254-46db-b0bb-0b15f1b13918",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c7bae287-1349-4e8c-9513-dbd0a12bfafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2576bc-d8a3-4e09-9e93-7b5561969628",
        "cursor": {
          "ref": "fab8a4b1-479e-44ea-b491-7de0df173979",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7e807c11-d882-4cd2-854d-89406d13bebe"
        },
        "item": {
          "id": "4e2576bc-d8a3-4e09-9e93-7b5561969628",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8dde5b1c-c8a5-4702-b1cb-8386a6e048d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a995656-74f8-45cf-8a67-f0494a5883f4",
        "cursor": {
          "ref": "7c50082d-d236-4021-8285-554dc99ae906",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "58b50472-8283-4459-a913-a62730a7403b"
        },
        "item": {
          "id": "9a995656-74f8-45cf-8a67-f0494a5883f4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6c92e93e-0db3-49b3-9fea-cb3d338fecc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b51cc7-ea08-455a-80be-6c2dc8d78b24",
        "cursor": {
          "ref": "0c3b0001-cef9-480d-922b-9ad5910897b9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f9d64650-f59d-4060-8324-957853ed6c8b"
        },
        "item": {
          "id": "b9b51cc7-ea08-455a-80be-6c2dc8d78b24",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "abd6d6be-887e-406b-b828-e01cd1069a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6633bed2-b65c-4788-b77f-17fcc705ff37",
        "cursor": {
          "ref": "e126a7b8-3fb5-41d3-ab81-f3240ba0dbcd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3a712c7e-cf1d-4075-90bf-73c5102f29e9"
        },
        "item": {
          "id": "6633bed2-b65c-4788-b77f-17fcc705ff37",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6237573c-6f90-44f4-8bfa-8861469276fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0254c5-05ec-47dc-8380-66f7a7a7f85e",
        "cursor": {
          "ref": "1391de68-c2bf-4c38-acc4-1fc8dbbe4908",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "eab52886-3a86-48ce-a529-df25f6db1f4c"
        },
        "item": {
          "id": "dc0254c5-05ec-47dc-8380-66f7a7a7f85e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a6cdacc9-eb24-40d6-85b2-1ba3a1f98d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8918ac97-cc60-49dc-8a7e-aef32fa117a1",
        "cursor": {
          "ref": "997a7a9a-da0e-44cb-930d-0137084805b7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "743ff1b3-02df-433d-bea5-57071b2950e0"
        },
        "item": {
          "id": "8918ac97-cc60-49dc-8a7e-aef32fa117a1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a9525350-4d5f-4553-85ff-630774305fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd6ab08-c71a-42f3-a859-c64110da96fa",
        "cursor": {
          "ref": "fe57dde9-ed58-465f-b05a-428d0bdf4597",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "082b4097-56cb-4f4f-bbfe-240e73fa579b"
        },
        "item": {
          "id": "2dd6ab08-c71a-42f3-a859-c64110da96fa",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "264be4ef-bcdc-4a75-82f6-2fc688515242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8369d7-60f6-4cf5-a720-a496fa9eeb11",
        "cursor": {
          "ref": "865cbb49-5649-45b3-a859-39501121a6f6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "52776eff-e111-42ec-8727-3c0d863a7268"
        },
        "item": {
          "id": "af8369d7-60f6-4cf5-a720-a496fa9eeb11",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a68f24b2-9953-4f00-91ef-a5d851b6a0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8add26-4638-4bb8-af66-b831a66b8206",
        "cursor": {
          "ref": "c180a4db-e3fc-4db5-9057-b1b4d477c38b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ae5c7c7b-c3ca-46d1-94ad-abc9c2bd5cb9"
        },
        "item": {
          "id": "0c8add26-4638-4bb8-af66-b831a66b8206",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b4e8f81d-ad7c-45ad-a3cb-e9a0b6b6bbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1451259d-f4ba-4541-9dd6-314ff72c64c0",
        "cursor": {
          "ref": "28890a86-3791-4ab6-8937-47740aef60d4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4bd11b8b-b4ef-4a42-a841-3730a0f9ca48"
        },
        "item": {
          "id": "1451259d-f4ba-4541-9dd6-314ff72c64c0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bc099c24-fd74-494b-8919-d9c91882813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b75af2-6316-4d58-af1a-1c26c7a5458c",
        "cursor": {
          "ref": "1b41d99a-bfe3-4c37-98ca-05e0d80f96b5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fc18a996-4843-4647-a4b9-35be1408a687"
        },
        "item": {
          "id": "f0b75af2-6316-4d58-af1a-1c26c7a5458c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3a82be50-ec5c-464b-9e36-27117b1a77cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d5a6ea-507c-45ef-9d36-a9e641f9833f",
        "cursor": {
          "ref": "0de76380-7bfe-47f8-a14a-d463c66be82b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e49c0a1a-ccd3-4783-acfa-2bcf95da239f"
        },
        "item": {
          "id": "40d5a6ea-507c-45ef-9d36-a9e641f9833f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e32534b4-9865-4d73-840b-07f7dfa60021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c79b58-ef33-4cfd-870e-bdbc114e81cc",
        "cursor": {
          "ref": "01223684-c6d4-4720-9c00-c784b9bfb491",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "14f96dd9-d283-4b0f-aea9-7692b614b0d5"
        },
        "item": {
          "id": "a5c79b58-ef33-4cfd-870e-bdbc114e81cc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ac2f69df-495e-464a-b6ec-2d0275c7d190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268c53a8-5805-42c9-96a6-6c9b6b910aa2",
        "cursor": {
          "ref": "ef8deefe-ffed-4b42-8830-1a08f56fc850",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0c19c80a-0e72-47c9-bfa6-2f32d865088b"
        },
        "item": {
          "id": "268c53a8-5805-42c9-96a6-6c9b6b910aa2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "58dc6a26-d3ee-48da-88dd-9260a567459a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4b955c-059a-4629-b967-fb944d012809",
        "cursor": {
          "ref": "d32abd3a-7740-48c8-8e22-cfefe717af70",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "289aafbd-8d59-4caa-810b-c23f19df65ac"
        },
        "item": {
          "id": "1f4b955c-059a-4629-b967-fb944d012809",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "736a048c-3b07-46d1-a9f2-986bd1a50b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffb8307-e287-48c1-9ac2-c96faac1e9c4",
        "cursor": {
          "ref": "115dee6f-ddc6-460c-ae12-ea2d6a2d8ff2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2c56af7e-9349-4f83-933d-ecef81ac2b42"
        },
        "item": {
          "id": "dffb8307-e287-48c1-9ac2-c96faac1e9c4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "699352e1-9f5b-4688-ab56-29dba3a9d7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf88b35-67db-4bbe-bc78-43a9311ffa0e",
        "cursor": {
          "ref": "983d838a-11cd-4683-85be-f5fec062f6e2",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9516238e-9a0c-4aa9-87e6-1a71a40d1f97"
        },
        "item": {
          "id": "2cf88b35-67db-4bbe-bc78-43a9311ffa0e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f43b4902-1b39-435e-b6c2-9c34eb5b4612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d0b8d5-3178-472c-afe8-fdc622c7695f",
        "cursor": {
          "ref": "3525e439-cde1-45c4-862c-6e3d99571246",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d1bec550-c5a3-4ab7-928b-cfee21c161f6"
        },
        "item": {
          "id": "25d0b8d5-3178-472c-afe8-fdc622c7695f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e4658494-2d7e-4e90-860f-67169df9c357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91142d5-1fda-4596-abf9-5a917eef71ef",
        "cursor": {
          "ref": "c3cada75-f238-4c0c-abc3-f7e07c31ab07",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5fc17603-51a7-49c3-ab6d-4462ad88de2d"
        },
        "item": {
          "id": "b91142d5-1fda-4596-abf9-5a917eef71ef",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f856de52-510d-4063-8788-74a77f21ce59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caff5a8a-def6-4093-968c-fc6890c5e725",
        "cursor": {
          "ref": "318ad6a9-aa68-4379-a539-49c211b88649",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "53c3258b-4d61-4aba-a213-685c2972644c"
        },
        "item": {
          "id": "caff5a8a-def6-4093-968c-fc6890c5e725",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "80aec081-9efc-4967-b1d2-f091eeb0a31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e334f393-fc3d-4f55-87e8-5b4c3f1e54d0",
        "cursor": {
          "ref": "d7f57667-5f78-42ec-b50d-e87e6c400d10",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "67e4152d-db4a-4a40-8098-aaf758ee0d77"
        },
        "item": {
          "id": "e334f393-fc3d-4f55-87e8-5b4c3f1e54d0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c81d1afd-b818-4e9b-b4e1-e582c16ce026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e8cfce-97d2-4f63-bdba-e66bafc49e57",
        "cursor": {
          "ref": "5551d321-53f5-478c-9d00-bee89518dddb",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a9d95dec-888b-4d84-beca-2345907afd70"
        },
        "item": {
          "id": "c8e8cfce-97d2-4f63-bdba-e66bafc49e57",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7f9071e5-0915-4682-95e6-58751eb74ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e548627b-157c-4f8c-86f2-469fb88cee8a",
        "cursor": {
          "ref": "3ce73f1e-f446-47ef-b27a-2854fa4e618e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "25b4cd2f-0bb6-4e47-8e6a-96fabc3a36b4"
        },
        "item": {
          "id": "e548627b-157c-4f8c-86f2-469fb88cee8a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2a405b00-d08b-44d8-817b-7de656fc8148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b89e4a-b469-4f99-99f4-b837a1d98399",
        "cursor": {
          "ref": "6e38ee04-9480-4289-8835-6201469dfe51",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fc12e257-3f25-46bb-a4b7-1daae458fb54"
        },
        "item": {
          "id": "86b89e4a-b469-4f99-99f4-b837a1d98399",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "da8a65ac-89ae-4529-a71a-1a9c7ede2330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c107c57f-9d0b-4812-a837-070272ef42b9",
        "cursor": {
          "ref": "e5bc4177-e077-44ae-98b3-22ec0c0cd9dc",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f0cff26d-559c-46d8-93bf-d927b873bac4"
        },
        "item": {
          "id": "c107c57f-9d0b-4812-a837-070272ef42b9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a7b201a2-d9f1-4a0b-8b4a-678e40aed95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410c8f74-8208-4afd-af11-c8dd58329213",
        "cursor": {
          "ref": "33d175e4-83f1-4cea-a8f0-510266fdb722",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "22c8e27b-3a2f-457e-b8d9-3218a1b4fdab"
        },
        "item": {
          "id": "410c8f74-8208-4afd-af11-c8dd58329213",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4f51d797-3942-496d-8e2b-3db58ab147fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b41c3-6052-4b29-aba7-83a3f0f05de6",
        "cursor": {
          "ref": "c668f8e5-a857-460d-92d8-4c7a7cb2b8f6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "898bd824-851f-457c-9691-fd0e45394c81"
        },
        "item": {
          "id": "438b41c3-6052-4b29-aba7-83a3f0f05de6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4eceb18c-9533-4658-abec-5fd8ed074069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5818e7-6a6c-44f1-b3b8-12200da7d1e4",
        "cursor": {
          "ref": "cfb7f4c4-dc97-4b41-b053-32eada586f8b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d9a79f84-6ff8-4bd7-8bff-793b14458d59"
        },
        "item": {
          "id": "6c5818e7-6a6c-44f1-b3b8-12200da7d1e4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "784fb6ab-416e-4390-b880-c7dad7518060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abac777-a8a0-4150-99ac-e9292e7fce2d",
        "cursor": {
          "ref": "7581972f-42c9-4366-9ae0-54c310503c34",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1bcd1d7d-e115-4eed-b091-4e3b0cc2f7b9"
        },
        "item": {
          "id": "1abac777-a8a0-4150-99ac-e9292e7fce2d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bdb8a9db-db0f-455e-a2ec-1a1a23ee4d20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0997bcc8-54e4-4def-9fe2-8c31f0d137db",
        "cursor": {
          "ref": "a5fe475d-368b-4d18-9791-f0eb8a97679d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5502efdf-7069-474e-924d-125fd9049485"
        },
        "item": {
          "id": "0997bcc8-54e4-4def-9fe2-8c31f0d137db",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2263e1a8-a980-4489-9c0b-271df15faea8",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b37a00d-0d6c-45b4-b7fe-d01bf5ad8a54",
        "cursor": {
          "ref": "2aa9a137-7707-4b53-847c-039f515c8d35",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "063aa34a-d204-4eff-8dbe-19b38a8209bf"
        },
        "item": {
          "id": "3b37a00d-0d6c-45b4-b7fe-d01bf5ad8a54",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bf039654-fd47-4446-914f-d3f009e27695",
          "status": "OK",
          "code": 200,
          "responseTime": 1374,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8838e75a-6986-4afa-b044-95b2a4724e91",
        "cursor": {
          "ref": "bc63e128-95c1-494c-ab80-ee110af746b8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e97c61e3-77f0-46bf-9ea4-fc9025b17ad1"
        },
        "item": {
          "id": "8838e75a-6986-4afa-b044-95b2a4724e91",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "132a80eb-f9ef-4be1-9171-c947e98fb334",
          "status": "OK",
          "code": 200,
          "responseTime": 1239,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5cb5cc-d78d-4218-bf97-24223dfae779",
        "cursor": {
          "ref": "fc23d743-b4ab-466c-8598-5e75479c0737",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "39f29f48-140d-43c1-b9e7-526db0aa6fc3"
        },
        "item": {
          "id": "2f5cb5cc-d78d-4218-bf97-24223dfae779",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "16dce2b7-250d-4a24-9bec-d9b6de2081a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5cb5cc-d78d-4218-bf97-24223dfae779",
        "cursor": {
          "ref": "fc23d743-b4ab-466c-8598-5e75479c0737",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "39f29f48-140d-43c1-b9e7-526db0aa6fc3"
        },
        "item": {
          "id": "2f5cb5cc-d78d-4218-bf97-24223dfae779",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "16dce2b7-250d-4a24-9bec-d9b6de2081a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747bfe5a-7649-4798-bd00-bd380f6b5d16",
        "cursor": {
          "ref": "8f57d2ef-e46b-4ac5-8b15-7b5952e09864",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "64c1393f-bbdb-43b9-9197-24d9c0419059"
        },
        "item": {
          "id": "747bfe5a-7649-4798-bd00-bd380f6b5d16",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a42bd1b6-d533-4d3c-85d3-6b024697d564",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552a9dc3-0e76-4c7f-8536-24011b0f8bd5",
        "cursor": {
          "ref": "7aed2a6e-204c-43c2-a9e6-9f86310f1536",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "878f4142-654f-4943-982c-df67dec3777e"
        },
        "item": {
          "id": "552a9dc3-0e76-4c7f-8536-24011b0f8bd5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "74bf54e7-bce1-4627-9835-f40b0e3c224c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}