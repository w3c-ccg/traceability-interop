{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b86f17da-4adb-43cb-979f-d864abf284e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8f91c3db-abc6-4de3-b3da-cd793769b481",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18394eb8-2ea5-493a-ac0f-b29786d5a939",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d430f77a-a15b-4232-a537-d16b94ae7e16"
                }
              }
            ]
          },
          {
            "id": "89425a9a-fcd1-4540-8618-e17b398b405e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7976357b-b7a5-4243-bbe4-c3d6b7e335b9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "29024093-c062-4803-965e-5f395e4e2d01"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a412e82e-578f-4dd1-aef4-b0c8d0df5fae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "469ccd92-082f-4d9e-a73d-2e91c4389e3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb541022-caec-493c-9d49-22a501dafb18",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1364b1eb-9426-4776-ae8d-90ba8cde2c44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c79eea89-22f4-48f3-94cf-43569c02e2a1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af0a5fd1-514d-49e1-8d67-d00c9e95a7e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecd5b8b3-c234-4962-91cc-213294da74b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6f02ed89-0c44-4e3d-8167-4acf10403326",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb3c2b44-21bb-42cc-8aa9-e15671af08b5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d8295af-289f-4c5a-a507-c3c7b1c56c70",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f63f15ea-f6b5-4f4d-b2d0-263ef387f2ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "529c0375-8367-4be5-8250-9cdc35e3e30a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11f955db-4d8a-4a4a-9c11-f342acee7ee0"
            }
          }
        ]
      },
      {
        "id": "afb1d9da-9066-40db-a823-b2354c52a514",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2a443a33-089a-454f-b2e9-a880be8cd010",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0aa36e10-e270-4a7f-84c8-9ae044131009",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21ebecf6-b54d-4bb4-b9d2-5acaf4f45a63",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdb8d8c-1d0f-444a-a08f-a8ae09c30344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0902e67-d3a7-4c04-964c-62dffd687e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f384e8-72be-4daa-ae9b-4d2cd1920efc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a97e19-8e48-4416-83ba-d2d15eb5b697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa06aab8-f179-4c3f-a48f-90a2cde96b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe21dc8-b39e-4b4f-9bde-455a5301fcac",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931c9edd-bfd5-4186-9b07-9e554fc44495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9262776-c21e-4113-866b-052701d2de9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e70c99b4-4c0e-456e-94b1-cddfa8d33254",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b134415-3854-4c67-a475-b328cd57471c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bad3c1-5e34-483c-9644-206897afc053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4305530b-8bde-4157-9628-3efc73491162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842d2297-3ef3-490b-81a5-0452b2b503ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c25a03-edb5-46db-a942-0185c6cd8d51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e79833ae-648a-41c7-b817-8d9d54d880e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71b6d8aa-2275-4fb4-a33f-6d8a93ebf64f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64f310f6-f72d-4ca7-88cb-67743b70bc47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "19c8aa45-80c7-41d7-b375-cd7568f16dcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64dc7b99-7e25-4ea3-a999-63c70fe0655c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a2c3a639-9395-4f72-ba59-e8533ec02521"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b08e4c2e-c07a-40b3-84d2-bebf431c90e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95b81b90-088b-4646-bc74-9b74744dde8c"
            }
          }
        ]
      },
      {
        "id": "5064245c-ea54-4f84-b1b0-1a66345d9c7f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "86199a1d-6b0e-49bb-bfb2-5870eb39db86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4027b623-ebb6-40b7-aad5-d38c19cec046",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "35689a0c-2336-4077-8a38-f7980c443978",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a10ab18-39a6-4408-8475-b8790d6e1982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d38463f-ed1f-48cd-b5c2-a1b88d5497cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af78a36-3fe9-4bc2-9354-73f1225b9c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82b89f49-a403-4530-94e6-1e7b78999e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65faa33c-e006-45d9-8564-d75e15fb641c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f4e962-22cc-4e9c-ae11-3017ab662589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26569a9-d0f4-4b07-922d-f74d37d64d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3fbc1f-51d3-4295-b46a-ea48727d6b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b65fa47b-3cc3-404a-b7f2-a7746abaf124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069e9eb6-0a01-4c6c-96dd-7da5f4e036c6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c50025c-579a-4ae9-9f60-27a80917b923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f88c1ab-9e87-4cd5-9490-b2b87f42d29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8525dd-d340-4281-855e-2ed95086b6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f43123f5-2224-4b5f-9a78-4703f4c090a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36067deb-31fe-47da-9761-249f01a84f62",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694407e2-738c-46e9-af77-195ef847e966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8653ae7e-9063-473c-8850-ed7e620b6d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972091de-2ac4-4ce1-a3d8-6cbe523fc3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca062a73-b7ee-44f2-89e0-4ad1185c5a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5a52f5-d5b6-4e91-8788-216b376a41ab",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc87bd9a-7120-4739-868e-031b84a3c136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd012e1-7bfc-4417-8c8f-53317e661962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787de10-abcd-491c-9b1a-1d4087b93b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1b80874-da41-4cd4-a39d-17757bcd7b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad77af3-a7b3-40b1-9949-408fe4582a01",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c669d4-c204-462c-8c1d-09cf2589a90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2858fd-8ee8-4908-bb99-1d04d77bb4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c338961-c1cd-4b44-a866-abb89d00c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcde3cc1-a3ee-4203-8220-83d16ef1fd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad40149-7af0-46f6-8ab4-4b3072303040",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df40100-d0da-4d66-b6af-effba880b0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8481c734-20d2-4415-bc91-914235c09d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6a633a-7d6a-4e51-93fc-d48bacae0226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c35f0c4-faad-4e24-a0df-990ef991b547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6c3bdc-edf7-457f-b691-7bc458ddcc15",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a654a40-1db3-4029-b6f1-55dcf2feec6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f5633c-74f3-4048-9cbf-5e536cdbabb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db022a99-5e5d-49b2-9182-0f149fcf2356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d376bad1-51f1-4076-9875-d170b3c0e6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5a8c98-7166-473c-94da-8f16f1518ca6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4aacd4-df61-48c1-a0b1-aa2663ca8086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c58405-2b12-4742-b0fd-ad87921bc727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c110290-ade3-4b56-9f6d-46708c794674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06cd66c7-1b6c-4803-a94b-9271519643e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5797ef7f-140c-4513-868a-eb9a3878c2d3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb32a4e4-406e-4141-af46-bb80c2343f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8afa961-96bf-4497-b146-e6903eabae45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37a53e6-76bb-4aca-8c69-978e5b04ee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93c2fc4f-74a0-4548-89ce-f10c4bde3b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046b3fd9-4386-4e5f-affa-5febc2520c45",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db63e73-2487-4980-961a-6f43c454178d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6887ccc-3f01-4a2f-9259-611e929e55ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6280ecb3-77ef-4f81-ba57-38a29f04f2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc88347-f934-4e22-ab61-21a604d52846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba20bb2-2f96-4082-a9e3-f4983fa26109",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5042a69-f071-4156-b842-510ac20c0c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269915c7-ba50-4675-bfa5-423a4a7bdb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288fc281-164c-477a-8459-86840a08e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd19a204-657b-47c3-9a1a-12d3f1ff2b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe9b9dd-2e40-4c94-890a-f05e4e0e431a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874f0af0-793e-4b45-b236-a6112b3156c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085a37b2-4574-4461-bc85-856dd31fea61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf97a15-3131-49c5-afdd-0126020c268c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "548f3875-7ba4-444c-8a91-90ee74e8cf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff9cdd9-ccb8-479c-86cf-00d85c0ac0c8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1435f92d-2d25-465a-aad9-3da6f57b3da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3a65e5-839a-464b-af5a-9714184c8166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67de10f8-8abd-4f3e-a12a-e7d25241062e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddcb5f43-4206-45d3-a282-bd3b45086ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771acd6f-4924-47a8-9f5c-c56c793c2203",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0eb36e-a7ac-40f2-9b63-4ae1202d7ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3d9672-b459-417a-a629-650d04585bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5e6f8b-ad51-4438-8183-e59937af3211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14ccb411-74c6-43a4-b74f-0eb955e59c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820cb831-42c8-4dd5-91f0-5e9ed35f65c2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a31960-1cd5-41ff-9ab9-0cb1d2d42447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e880e331-ea59-4e8d-bd84-c6d92e04849b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e4327c-5f1a-428b-934c-04fd32eb2a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcd07e4b-0f5f-4127-95b5-0537de0254f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693b5eff-f31e-4f4e-896f-52dfa3035be9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b451f1-8f67-43c8-a128-51b2d74bfc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538f821d-d74c-43a4-a1ae-73c1798a162d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af032868-8456-4e36-988b-3fecd8de16fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e68f0d4-290b-4dec-aeba-099d4060ed6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156c3787-cc97-4d81-a027-ad4d3ae636df",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d4a7be-377b-45c8-afef-e02f4921374e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac1e452-df38-42c3-ae5d-520efe4c32a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d0300b-c271-4e59-8f75-a8a4604a0102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd722148-d0be-41a8-b17a-8c584e2e570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5414a90a-1d72-41f9-8cab-8db89e7c5276",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e358b019-bc5c-4659-aec9-2408847fd047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2501f455-2bd6-421a-bbc0-686059bec519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b70b78e-c07e-4113-89cc-a008c5ce3824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e325686-b906-490b-80df-5d36bd8e8184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cdb254-fb43-4244-807f-b3a4aec11f4d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b299e1d-d127-42c1-99cb-241b3371ef37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bc067c-577a-4613-8964-605a3969c9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4370eeac-39f1-4cb5-8af4-0ba98232b5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3885e4-4b61-47ee-8adb-fad7c9a27a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fbc5e3-af89-4f54-af2b-136b88d265f6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3b6ac3-34d0-45f9-8e5d-f2264caaf1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55e207d-af00-497c-9d2b-6063a6683cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e287c6-e599-4a7d-8fac-d2f0d47c4bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f06c949-1880-45be-a4f5-ddc7e4ffd854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437b54a5-d0ba-412f-abf1-a29f8c553e44",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555c9700-cd20-41a0-b22b-72a3a561570b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d33611c-49ca-445e-8a18-e027883f9ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1d6ee3-d59c-4997-b7aa-25621acbb9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67e843b0-f243-4a1d-bafd-bd59b6d318e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d54e46-7dd9-4923-9d7f-534fea6d66c9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cce6fc2-7afd-47cc-9e58-7604e6ec54f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de14a138-9bfa-4d2e-9a4a-b097eecdf96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4fd980-56b4-4ebc-a1be-91b9962e703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "746a0ae3-ad28-4852-b030-915be23b8ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcc64ec-8516-4e74-8ebb-d6d38be4dbcf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bdd37d-c6dc-46c3-b879-9617d5330420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02167feb-9099-4d1a-8a26-752d55b48e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bb297e-1400-4bd3-a927-0434aeea4061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9eb9346-ecf1-43ea-8be6-e4583623edf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffea5a1b-f462-43a6-bad1-05734d84ad48",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0f1cd7-373b-47e7-888a-4c605f0e0d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab20e77-8457-4f21-b6e8-ea905b0f33e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caef0c4-8493-4ebe-ae12-650e67750245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f74fae3-2598-4e5e-b8ba-7152fe1336e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f55a1d-9974-4d3a-a78d-a25fccdd4b41",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883f9f1a-9225-497f-94bd-2c77d2534d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a66fdc-9cd0-4e9e-a218-f9b13aac35f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a41cc50-1598-4ddc-94e8-814a2b89fe6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "125dd7c9-fae0-4a94-ba7f-b043f21bd538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a669a2f6-ce7a-4397-8e4a-319a90c8619f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31593a4-e5d6-42fe-b3ea-1d1933abf083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1184dcef-7dd5-4a4f-b1b6-a4dde0ccae6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d16332-181f-46f1-9f4b-d94be5aecdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d26f692-562d-4916-a0f4-a759271bd7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46ae42a-8e4e-4e2f-91d1-2ae45e5e1669",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d09ca1f-b26a-4df3-b5dd-403db4c6b037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2932cd1-f372-4c06-8f49-85856900f5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04ebc2d-f2c0-436b-a705-184db5ff8c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c70a23a-4140-45e5-8ac6-f49152606f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb29ce68-923b-42e8-a805-d57c30a778c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a548446-91e0-4fba-9925-a08f247c719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599d713b-644f-4cba-bb4a-6427a0bb9bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ad2ade-6268-469a-ad8a-d3ee25aad255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ed3b3f-bd70-4d47-9c4f-316c42ebb695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276f45de-cadc-4fc9-87d3-e3b61031439e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3e97e7-2420-47bc-ab27-94db5f44666c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374b0077-3903-4b1b-b20d-a39fe4d0ce98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b2a35b-c6ad-4e37-9735-76ced537b722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e273ea0-3369-4d5c-80bb-040ab4109f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82387cc7-bcfc-4011-a794-bcfed56ee6c4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce7350f-ad1a-4be9-b1c9-83c5e88cf128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57915600-b304-47b4-bd31-6264477a35b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84eedf7-4753-4def-b45d-666b00f4a025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64d823d-15e1-45dd-b5cc-f06938ce25aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4864f876-355b-4f46-a4be-15e0289ef201",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8284067-526e-47d2-b619-73642020596f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0068ef38-5cbf-4cb3-96fd-83f28e8407a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48356fa6-e750-4810-8e5e-cc6719524b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5545fb-25c9-4523-8e1a-8d7a6080929d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7baf9d6-af89-4dec-a2be-7c88202a9297",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effcb818-702f-436e-ab9c-9839e187ada8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612bea71-0f54-4c66-9ca4-ea4261675c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9046bfe3-b7b3-4ae6-bdf7-158577175a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3f0061-9b94-4c40-ad3e-65f98ad7c40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb7bcfc-966f-43f0-825e-e16cf38c6593",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6a62df-60e7-41e9-8d80-4b0772535237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62373b0a-c28e-41d3-8977-3d47b8af927c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65abfb13-6505-4d50-8f46-e1561784ba7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44380a3f-9f93-4fac-80b4-934171f6d11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b067a56-5e2e-4046-b1bd-1b809dac02fd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19419f3-f45c-4ed2-9f1d-f88515ddb405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc2d880-e28e-4232-a543-eca1a6bf921c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d0c99b-3b88-4d16-858f-7ba0fd56440b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7af1b943-74f2-4495-a0af-07ad02bd46be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfcc1f8-dbe6-4247-9b58-b9113fc630ff",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abff7bc8-8af1-4213-9d66-9e7480a6cf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15ff5b7d-01c8-4fd7-bfb2-2df49802b72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc23eb3-1292-4886-a661-e0ea2261649d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf88702-a57d-4432-8b91-f2ea92541bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2030b47f-a7ae-4203-9911-6a797101b2cc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51440205-be92-4ff7-8664-47a9a9b26021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc516655-6e37-4889-8d0d-22f7e9e0d04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63109b8-a870-4a90-b48e-000e7ce8e683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8e7b55-516d-4fa7-ab3a-d64278d711ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ea1fe3-636c-4d59-9956-5ec2fef5136b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe878a46-b43a-4973-83e7-38e0f5ed3756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ca6c10-3156-4cf0-ac22-c512c6084b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1eb3de-3eff-4b08-9650-1a9db062beee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cebcb9f-f952-412a-b4ea-78e716eb6c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbcc71f-1735-4cfe-b72b-8b10df024088",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89507eca-e93c-4f0f-b8db-62b9ba2b1060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e28737-d64c-4b2b-a45c-16fca525cd78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f95932e-9b83-4851-b0b9-0372ee8dd070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d940a90e-dc05-45a9-9c1e-66f35a1c8b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f6f5e6-3eea-47ee-8ff5-bae571ed04d5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a500b8-8e04-4e14-b77d-71aa714c5e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832a66cf-5c8c-45a8-8d54-9cb9e6c7b341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e49c02-71eb-4366-ba0e-90f4288fe8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "da97e514-b342-4f2d-a084-bbdad38a5d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017bd2f9-d33e-4634-883c-049cf387fa4c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f52cf2-6d85-47ca-81ff-e34dcd3e1790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee992fe-060a-406f-99bd-7d58fc05c3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a005f5fa-5e3b-4c1f-8afb-7ba652e1e11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b18cbe7f-16ec-427a-9328-e63f36c068c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6f0e13-87eb-4c52-8880-d1f1a6180ac3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40d4f5a-c36e-4291-af72-d62c0b9ab4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2ae0b8-9503-4979-a547-9d0ccca8c4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6880b3f3-0646-4726-abe1-a25a20936aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c89cac-6271-4375-a932-de012e9cbb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b1129e-1d61-4e09-9978-3ef61fc0b03b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cd9841-5c7c-4159-8d91-d6b6dbe672c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfabfe7-913d-4754-95a7-7be1b24b9f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a644867-22fb-4bbf-acfd-124663067691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "826d9465-e6aa-424b-8305-1510f574f19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b885af-0ac5-4dae-aaae-1caa6fa337de",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951289e1-cec1-438f-9d71-09ca3ddc5e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3add28-3a54-4468-a4b9-10bb240374a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7482061e-3385-4e0e-a989-80abac460722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5383f148-c872-4f22-8fc8-c8663e09b9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241cbeee-093c-43a2-83a2-a69c731914ba",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0abb7ad-b6c9-49bb-be79-bb7bafeda9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac05981b-5319-4f68-9302-876555106a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b7e7e0-2188-4adf-9265-7d37b7d90b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf0a4f6-7505-40ee-80f3-0361ecf46686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8121e3-bc4f-4605-b60c-5303bd11950b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793d0080-3636-4832-b534-ab47905ea4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e1d557-2fdb-465e-9a10-cc8aa9199b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527b79cb-b022-4b98-ad63-f7807e873ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b58c7ca-417f-4574-8af6-788883f23cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5239878-e275-4510-bd06-fdee8b8c35de",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed27585-42b6-47a3-a3bf-53607e179aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd0fb03-abdc-4014-bbd5-cf7ebe774053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836e2e3d-b5bf-4a91-9e84-061fab3f1dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8821c0d3-1e33-49c7-a7bc-db6ebf955d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ab32ca-be8c-484e-9d1c-c3f362a5a9f1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff1193e-c643-4e4d-83ea-78ec54176bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820bf504-8484-46f1-8173-335a2da28150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9124af0f-c1d9-4c68-8cb4-72883eee5351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ac5670-ffb5-432b-a3b0-24434ea04aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cd9b7e-4ee3-4a0b-add7-c9988bd96085",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb639e2c-7a77-4991-88aa-1322d647fefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23d69a9-e3be-49ff-a205-c894eda7a72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3face1a6-46d1-42ca-b3c9-9ddd7700fef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd5c5fd-3728-427d-8fb6-7bb158980913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a97f56-a8a3-4429-8c34-7c3ee19a0091",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea85dd90-f233-4164-bc93-450be35d6173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694f1f8b-d0bc-44e7-b2d8-1ad60ca823a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff616796-2f52-416e-a9c3-47c3809ecf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "553491b8-9758-4ef3-895b-5d3009e45b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fada9f-1187-4783-a925-eed65455f9b5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c875a2de-db2a-4104-9f0b-caca9fa25d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037aebd8-06a6-4142-8d8c-48393575a9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429f64cb-22f4-4ba4-925f-06317f133ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd47372-9c61-4bfa-9f83-8829b343d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c936b3eb-a532-4942-a15f-8a8c244826cd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba554fb5-3eb7-45b5-be3f-826cc3e1657a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902a8305-a76a-4ba7-857c-f3c1d80653c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bd8312-d79c-4389-a6ba-905a860b4c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcaf336-9387-4e09-a55b-29a5c31e670a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62d1eab-b63d-4769-8c89-e53f141705a2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22322a81-6316-4e0e-ba95-ea3add1cd885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3304d09e-1828-4485-870a-a86e14dd377d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63abdcd2-e2bb-41ff-8785-a0a127d0a4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53978c9f-e521-4456-9d70-1b364cf35974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73449be-a98e-4039-8cd9-7456c241a962",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbef91b2-745d-46c1-a10f-f4119bb16253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2503c9dc-48d5-4339-9f8a-0fc098c1539b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccb8ba7-f903-4318-a9e8-25fb3ec9e49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1b950a-af20-4930-95b4-7950ee78e865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cb1e1b-30b7-437d-9273-cbc00a0f8032",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6934f8a0-ebb2-464d-bebe-f7094299e00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef88a5d-d672-42cd-a165-d531c79b4cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f51f6d-1621-4323-bcdb-1d1ac3395244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a8ff8a-aaf3-4331-a285-5e4e3acfa595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca80f8c8-45ec-47d5-a888-daf319a027ac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1baff1-b9d2-4bfa-ac96-9a903a08a747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c365139a-2c4d-4d74-9a06-7887834b1b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a7f2eb-6719-46df-9008-c88edf398c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "baf33658-eb01-41b8-8e33-eb743e279253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcbcb02-1615-4628-942f-1525d727f4e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69ed385-f653-4e64-b9a8-efb54cc61fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75dda6a-4c75-441b-a83d-1b174522606d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c3038c-de10-4f01-b548-8612eb1ba206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f36f546-49d5-4bd6-b00c-2da6a01ac731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6b9dd1-b9d3-4e31-9b7c-ab391a9fbca2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e557337b-e39b-4fdf-bbf9-c64d8116fce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ee6e21-7f4a-4f98-9d0e-6ed6cb8fc259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125d01ad-ba28-4d8a-9856-e2f8a82864b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "163cd924-4d3a-4ea7-9fb7-2ed37325ab6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c06d67f-a72d-48ba-b93c-856b50a1e309",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9678aa75-88fd-4f4d-855c-b34c323afbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78406cc-2d2b-4edd-8cd5-977a3d394c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ca2603-072d-4924-98ff-3ff8a9cb7937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c76f155-2db5-4a2d-959c-e46d82550e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c142f3eb-8c71-4233-b6a1-51fc6ee4648f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06141ca7-24e7-46cd-bc9e-41dde2fc8a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fd0932-8645-404a-9dc5-d234baa4b067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7d160a-cd51-430f-a92f-ffd329a28d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80614efe-cfb6-434e-af04-804073b3e9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245cdae8-5ab5-4ee9-9e07-43f13a93dd9f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcd8aeb-a418-435b-bd88-1caaf70b4730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d5ab98-738c-4d4c-af16-adfd2c932caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58249f1-0d6b-450b-b6f4-207c1498d605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2df1ae-8fda-45d7-8bb8-9057349b0c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8180c284-6f34-41cd-b9cb-690081d44aa6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b763787-9c84-4fe9-89ca-cadbce0d3ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594b74c7-c450-4467-af33-9091595c7dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf1c590-3d7f-495c-a0c4-04175c69fde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af6f652-469b-416f-b7f1-ac21f1f7a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3d8d9e-b2a0-4a2e-aeab-61ed4014e508",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9635af88-d52b-4284-a31c-7d78ad661c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c195c92-4b99-4a69-85c1-45067ecaed61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7b7815-f58e-4a7b-9aec-a6f14c21016f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5f8b8f-a005-4db8-937e-d609d4e9f765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17314670-70bb-4631-b204-e470770653a2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef89fe3-ddf4-43fc-b656-15d07ca42ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d6d572-5476-4e6b-a14d-f2931638840c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29196ae3-882a-44bd-b070-a6470c8e3096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65d90759-de7e-46cc-9374-89d59cd2a88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4634a3-0af4-4849-8c5c-32943cab173a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8292eb13-9edf-47e9-a776-206eb6d54959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd76dd5-ae8f-4d52-9a79-3a2c8fa7063c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbe1036-df5b-47aa-b9f1-eb15efbb1f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6feb69e9-9b14-4d7d-82b3-33c5e7c00233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c135cb-6f78-49a5-946d-fd6591c47117",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3ec2d5-62d0-4a33-ba05-e6dd2083b378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7c4a7c-e5a3-45cf-bf13-4a20f3f87a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6497f6a2-5681-4172-b12f-38b8dfd48c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8728de62-4c55-45a0-baa2-ec5c76c8fbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68a2b5a-9dfa-4a01-9a49-2b1d49cece0f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a25ebc-feb5-436f-ae5d-0514e16a1d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a3d7c4-cba7-4302-addd-5c0000823559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ebbbbd-d15f-4dcb-89c1-305c5c07f6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41eeb2f8-0314-482e-a6b3-12aa98b5fde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b9a7cb-f73e-4f19-8b80-c976a98868ba",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56250274-bd8f-458a-bc1f-1c7bdb41c73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a22889-665e-44f5-9200-7e13676cab34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd69697-f57f-4277-b02e-ed64f4b07445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea61b0b-2c70-4d8e-b1f5-3b9a0b20d03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1673ef7b-1a1c-43c4-b12b-2a6ceace903a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff4167a-7f4b-47cc-994f-e4a78361816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81940111-144c-41a8-b40b-d6c2262c393b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b366c3-9ea6-4cf4-9131-49bb492a74ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90d0271-370c-4cfe-81cb-a1700a0b3394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30dea13-3238-44e0-9757-24eb25768939",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99cb1e9-22c3-4d74-aea4-7e0977a6d3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3e3991-b3d9-470c-8c55-e8f17d53c85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79ad00d-d39f-481d-8088-236947dee035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb57e1ec-a6d3-43e9-8cc2-2abeb7b3fa41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead98a27-15cb-49a5-871d-c07dada5faba",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147fb543-7f18-4b4f-b8fc-6b87638c9ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23ca1b6-64bd-477c-a9d3-83cb31e7fded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a636c5-b879-46a4-9e8f-6181bf113438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1324432-0398-4d3c-873a-1d6886ed5bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ab9e22-d34a-4a4f-a937-4ef31d178dcd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1fd7fd-38c0-4730-a32b-5256457f9933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9828c111-20f8-4493-bef0-06fab8cdcee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d347f317-cbef-4d0a-8000-0f2932e9bd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "212832a7-be5b-4cc5-bed9-0277b3303106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07237fc8-283c-44d6-a429-ccbf9848ac5c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed436f9-11f4-4b34-b526-87ae25d2811d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4364a564-f465-422d-a293-73a9dc559091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6da6d9-f345-4c29-a9b3-fc0ceb68c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d717b9c-995c-4422-b605-8aac20a519f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64f4dd2-0e66-4017-a75e-5721fa650455",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ada38-6d9e-4df4-a84b-4cd99e09b733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ed4f2c-b530-4f5c-acdd-ae031b4683ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09559d02-0223-42be-b5c0-a408429f6272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0d6d09-ad12-4441-94ae-80c1d7f08d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c4062e-b547-4916-99ef-d48a67f726aa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a3bee1-aeb8-4855-8cf3-2031f615c20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b461b99c-25e5-4621-a32a-97b8eace527a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698de2ff-4559-453b-96ca-9bb3525b8aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f6495d-9ebd-44da-92cb-097b7020a3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ed2321-2d07-4c09-b6c7-322b9002f4f2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a39eba-dd07-4e5d-8c63-16eee8536a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9bd6fb-6320-429a-bda2-8609fb880e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d94511-baf2-4f54-a35f-c63ce7d60b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f26f789-e578-4e03-b0b2-7862198a7bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be755ae9-f40f-4b5b-bf2a-a68529bfb36d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81d58ee-30e3-42cd-8fe6-19da1200feff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c5e95d-f81e-4722-a5ec-f6595742f567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7daa7f-6e03-4cc9-a374-cf417d0f4e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5c2469-4a14-4632-8108-aed00fdd5831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72297857-5605-4b73-85df-797645eee05e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602d471e-8567-4e35-9384-0b01a49f04a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f8101f-ca15-4ff3-a97b-5f6372a814f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d66dbc-391c-46c8-b046-b3893f70baba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb9ffcb-95a2-4f55-8ba0-cbee9fc14690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3c6042-360d-44c6-8112-bee88f9cd01d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2ae277-97d5-48ba-8ee3-9692a8880d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0ea6b8-c235-4a04-a802-042a2fe78ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610895fe-0c0b-42e0-9fe8-a3cc1499b611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ac9475-c137-45f8-9896-1e79235760b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9954cfe-ea59-4c06-8c84-87239131acd1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a379a996-aff3-4d66-89f0-323db81849d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0168ac2-7e1b-4f44-a5b0-c0fb3a0b2555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1377be88-e4a2-4f81-8ba1-83379b7da397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ff8731-6cc5-4f38-a77a-e894b12070fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fb7697-a3e6-4f5c-9c16-bb4cff6eb0aa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363ea334-fa76-4a57-889b-22b6a3f827f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53b24c5-3997-43ba-bed2-b502a7434e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18c6f5f-bf21-4bdb-b7ad-8cbc85cf502d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cbcf2c-658a-4c59-a00e-4c8265b8048a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19de828c-8cc4-4f7d-acc6-88280324d41e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e699587-f786-4e38-8e32-3a8c1a5ddfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dfb718-d631-434c-9bd7-d7434fb79bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09d6531-d0da-4a03-87c7-74c39c45515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca563763-4f98-4a8f-9bb8-d0bf92b25eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1960507b-fa44-4bed-ad7e-08a08db008c8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b670ece-b677-40cc-a94f-f506e04d1d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fc5a85-1a96-403a-a807-c984ac85b25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e995c-51d5-408e-834b-3dfa0b072171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a5c820-929f-4cba-868d-c11e2e59342c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7294321-a91e-47db-9087-d12d0742fc9e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0729cce-a97b-443d-8bdb-c663e22e176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea6c506-f21d-4b75-a516-888fb9ebf44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe046c2-cf23-40ae-8ea3-7c703735e0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cab29a5-c796-4186-8bec-b6c2a9ed1a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a975da2-8383-45a7-a40d-822e271a37ba",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49257aab-c33a-4d41-92b2-f9c75e4f1421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976a9d7d-b564-4902-93b3-7d080ce26b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1860c0b6-7824-4409-a56e-a95a58dd2400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cf725f-f146-45d9-a93b-ce20a563e9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a195428-a2a9-427a-8d8e-f063d25f29df",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f472505-b6bc-4b46-88ea-84caa093ad73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee5b55d-54f1-4177-b2c0-7ecd7c0fa287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1aa478-1a69-438c-807d-f6789df3a782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "281bbd2f-ecd6-468e-9c94-7d412b78fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f2f24a-970e-4db2-9439-f6ddc63b4522",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30469f87-eb35-400a-84f1-8fab69266cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4e3e71-39f8-4490-b0e4-b5d90ed59b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50da83f-17e9-4406-b93b-2f69c43249e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4877dba-bdc0-437e-b261-ceddcf1640df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cce913b-2010-4b65-9ba6-4e75bbbf7bac",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debd29c0-0918-4dbf-9c1d-36d979279859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541a32a9-b93e-4e29-a046-c393a565c91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ba9f0b-ffb2-4af6-9a1e-766357608f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f05ab55e-ccf0-47d4-92ff-5b0b64e544a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97acfec-d68c-4432-9f17-cc4a51f4a9d1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9132bc77-c3f4-4ddc-812d-8822dafd1c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cac8a9-b364-42d3-85c7-9c6a78a635d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad729bbf-d75e-40af-98c7-0c40f4dfe8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "748f6608-d652-44ef-86e7-6031d33873e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dc9a6e-dba0-4e4e-a2c2-c11e1b40955b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613afdbf-f039-4203-ba57-dd1bbcaff378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f39f21-a124-43f1-9b41-1da9bef962f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce19b067-ad02-4e50-b133-d0d4c9a0c4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d6cd00-7fde-4d72-a43a-124b60c8e963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b508e161-30fd-4dd9-b26d-bd534d04591b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b069c5e1-6aa5-4bbc-8620-2804ccc35f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78ca72a-408d-4e64-8915-82ec7dd3fd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85eed7b0-6387-4d2b-8924-96f3872d3e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "75fa7ac9-11c0-4581-873f-bc3ef49dbc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7caed5-33a2-4252-b668-ca9d03a79fbb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f398b96c-588d-451b-b890-775ee1ff562a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "38983b14-2c9b-418c-bd1b-8c216ec5fc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacf28ae-5134-495e-a3d3-ca99e06e1144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc86e166-9e40-4cbc-be35-41a6678d5819"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3e702d0-7968-4ca3-928f-15818debf791",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d005f37-6342-49f6-adea-82e509dd8f16",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc82943-a6f6-4a80-b713-3e37118f5a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fcea7a1-8279-42b3-a9b6-069fee8e162c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f64c595-52f8-4890-af94-f9d862fba4ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4af172e-a71c-40cb-b9b1-dd29e355f41a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0012768b-baf0-4980-ace6-e017cf41748c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffdbbe8d-4ded-40c9-a849-7b72cb79ac59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ec75878-051d-401c-bfb2-2f4cdf454a52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "106c6153-b8a9-4e82-941a-f4f050b44157"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "98e70329-b80d-40da-8f70-18245218376a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b77e567-27b3-414e-82c2-a619c9f55d83"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7407ced-76cf-420e-a0c6-4594ff3b5863",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fad33468-9a34-40f1-a111-fb78746ab6a7"
                }
              }
            ]
          },
          {
            "id": "b3c6544e-7256-46b2-91be-234be432bc20",
            "name": "Positive Testing",
            "item": [
              {
                "id": "303ed6e4-a0ba-4991-807b-baa90abb03bc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c4b84639-480a-4741-94c3-df4849c1eee6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114e45ea-6d74-4b79-a5f2-6027766ba130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3ed31d4f-7a47-406d-8f0e-649ea03f1825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878da69a-6296-43ad-89e1-a1ad4b7b2111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ef9011-c506-4f20-b8dc-b3fe83483575"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "512346d4-2470-4cec-ba3e-b2c4ead013ac",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "caf7d0ac-7cf7-449e-b856-6dadca140592",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c39c34cb-feed-4dc4-afeb-7ebdba3882e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9cec26c-c855-417c-99fa-653328b419a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8472a1b-7781-4173-84ee-f45929a9808e"
                    }
                  }
                ]
              },
              {
                "id": "2335d0f0-aa3f-404e-a614-de1ae659aea7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "102f121e-aa0f-4fe6-86c5-a539935a58d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad77a9b0-1352-41c9-a36f-d687ea239489"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b183f17c-4d5f-4b7f-8d6c-5241216525a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef22d339-6fd9-40cb-b9c1-3476f13a2c53"
                    }
                  }
                ]
              },
              {
                "id": "e6b00baf-42b7-4bf3-ac38-9b666e8cb6ee",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11f3b280-55fc-484c-bb18-b1877ef41720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "075240e2-d95c-4d39-a7aa-339d8fd60f05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b4977e9-99bc-4aeb-9e78-865402a42b60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04d9fc71-8b05-44c9-9051-901476c05440"
                    }
                  }
                ]
              },
              {
                "id": "65544727-e094-495f-b97d-0e6e1442078f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d76d38b2-2c3d-48fe-ba07-c4f4a5c013cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af5d2de0-862d-4714-8f58-b8b8381bbf16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9befd1ac-4c09-4a1d-9995-34189cb6e079",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "194bab37-641f-48c6-955a-5bb2e2b3a27b"
                    }
                  }
                ]
              },
              {
                "id": "927b0974-8bcc-40b8-a3a2-8d07431cfc97",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7540aed8-7f0f-4aad-b79f-c46f830c1558",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2f50d09-f479-4c49-9a57-40b4163d460c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a2cd1c6-9045-4751-ad71-e0fb4bf79ad3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "94aaf76d-6c6f-4823-8d6c-f219b9ef996f"
                    }
                  }
                ]
              },
              {
                "id": "4404d5de-4774-4ea0-a24f-fa309b1210ac",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "844ca9a4-b1bc-41a2-b673-2099794eb550",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d38148df-34bb-4ea2-9791-559839fbaa27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffea8982-2694-40ff-9a61-ace491b68e35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3dbce6d3-ab95-4bf2-8063-48295ff0c143"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3747aaa7-e0d0-438a-a62d-950bc7dbfc6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c33986b-962a-4f38-809d-4a2b58036e64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f1a1511-17e8-4ec9-8d79-39955bcd7ab8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cbaa5e7-fa50-41ec-b1f6-659ea265a394"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d09ef574-67c5-40b7-9ea3-a12432f77225",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0ba99780-deaf-46a7-8f4a-23c2d353361e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "357c13da-0e0b-4ed3-8e70-53ddf21c7838",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81ea713b-aaa5-4ba9-8660-70bbc0a9594d"
            }
          }
        ]
      },
      {
        "id": "4ab171b6-6c9f-4275-9141-8b9c778b7e02",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "428584fa-744e-4441-aedd-3f818039c89e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aec5a6c9-693e-4b6e-bf45-9f92b676cb86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f95a5b37-c035-4c7a-b7c3-6250b5e69f70",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc54c5f2-bca9-4bf6-b1e7-3eb1e41550e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8149794f-362e-4b05-a0ec-02a54423900a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f0d1eb-9455-4347-9cff-a6502169321f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf3c9f7-12f8-45bb-8b4e-2b6d5d76ac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fec7094-bf0d-4f13-a249-c8c076ac2460",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4290ca-38da-405a-bcf0-7da2274540bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bc15b2-2262-4cc0-bbd3-e693d35a0c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3deb1c2-8785-4168-b316-db9cb26d0324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de0b4e7-a4da-483f-a9d2-1c7428c5b233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eaf57f-6802-462e-9899-a1e9c5bf472c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15303cd-8aa4-4f05-bb6c-b356268cc501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb92d460-f026-4729-946e-6007c6a9be47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9134fbf-7b30-493f-8f38-7a61b5daaa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d700fdda-a744-4fae-b94a-de430a5e7de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0319a6-3209-489e-b2a4-edf9139f8511",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac79c151-9cc3-471e-a88f-146242ff88a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca96ee7-599f-4377-83ca-2ae61b7ec03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12392cf2-a03d-423e-a104-d9bd71dbeabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f977248-b3f8-47d0-b681-578d9bfb5543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d61232-156b-4f20-90c7-97b19b762a8b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3312ff32-87bb-41eb-ad90-8ed721959f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae6ec5c-a586-4982-a345-d1631cb9fccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0516e068-178c-4196-b3d9-fb0461e5222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8084654a-e957-48b5-b384-f0022675731d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4123e6d8-3675-4e80-a02d-025f925de5a9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981700db-7995-45ff-8f6c-ba5d95dde505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d478840d-a371-46d5-9807-c11254df169b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d87425-863f-49a5-811a-be2d33e8a5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "daf6e7fc-93ec-4af3-9d47-956ddadc5024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b234a6-4d65-4343-881d-7bec3ccdb7a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cee774d-8778-45ba-99e7-411c3ff2439a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba83a058-a1f4-4b00-9e34-da9f63bf9f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fc09fb-3c92-4bd4-8326-cb806119be79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "da62bc09-67ce-4ddc-9138-29b82fbd1df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa22495-b66b-4a74-8728-1335e27df974",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142fc272-182e-4884-8017-31c4ebbdc8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8a720a-693a-4d96-a5c3-711f121f6efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c9e16b-f08a-43e6-83d9-7225a6c4e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9cb659-a015-4176-a158-95251f36f799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30174621-fd3f-4d0e-9a47-63074436075c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4075c6dc-8f95-40ab-8296-cd4b365cfd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa32e2f5-f628-456e-9a7d-74b5b8fc2eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17650abd-c3f5-4082-9a8e-169c034d735a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3851f707-b1a2-465a-8130-97ae86ab9b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900807f1-f587-42fb-bef9-7890b975d9d8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aad689-6029-41b7-8b21-77c66700804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35eb6ac-128e-4c20-b801-bd7558f5db5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c3552f-a29a-4a8a-a0e9-0ffc59a4eef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0b2abf-f24f-4b3d-b574-0ee9061e876d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4094e4e8-77c4-4f37-b47e-b542eac3cff4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6883febd-4224-430c-901f-79612e2ff108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecac86ef-7dc3-457a-893c-1f685be021a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cd5c60-492d-4bd2-a4e9-4b8e56c9a03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "64d2ed70-2eac-4d9f-a485-c63ebcfb41fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd2c41b-96d4-4e90-a983-61987cdf4265",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fec356-b9e3-455b-9b00-4485a32b228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770cbcc6-5067-44f3-add5-0bdaed307f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbcd0f2-ebcb-4e5c-a6d4-24a13663a59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0c3db7-33e1-4188-9486-37ed14031788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a0ef6a-5016-486d-9567-30188a292496",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc991f0-239e-4696-8d3b-da93ee58971f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca638d4-1fc3-4b9a-9c2e-50918c07ba70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f443f063-d977-4cc6-b293-18db0af6c5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2989c6-6122-4a4e-8e2b-3933640763c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c0c5a0-d31f-4397-b9a3-75e4dbe2a6c5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441b28ac-ae97-4bff-a595-ed761f4cd4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69729dd1-a737-4ca9-a34a-ef8a4299ea7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fc51ad-6358-43bd-a82a-bac0e41e089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e63eb08-ad83-42ef-a8f2-bbfcf376e04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9f0b3b-dfed-478d-85e9-e5295a5dffdb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfff06c-7133-4c26-a054-259fc5160c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec667428-c8f6-4d84-be8d-593dacc4963a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bd078b-1b3b-4036-99b8-f1b47f89d742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "32eaac53-789f-46a1-8f64-614ebafddb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbc1f1b-4df9-42b4-8b5e-8356bb963c9e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c76261-0bfb-42d6-9173-dbe0ecd52ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6142c7b6-4149-4d5d-8879-e6cec8db34cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e83bb5-7147-488b-9ee1-35d518ffb3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a64a22-6ee3-4107-a213-888d59e43090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1823869a-4d80-4878-8a10-10910d3824f0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b03836-b0ee-4d05-a122-7c9276d4484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5b9e5a-3a04-472b-86ac-53b573c296a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c686ef-ca40-437c-80c5-5ad689a6745a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ce44b1-a4ea-4c63-8ffc-eecceaaf889e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8109bb05-7ae5-4b80-9101-11ab7ef63d64",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303ca16c-fcbf-4c58-a804-99ddeac972fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f55f405-77e7-4e39-b50b-afaa3ac6f8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132c2985-195e-420e-8658-55542f777657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfc1214-e0a4-4b2d-a0fc-32468b433355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faaf8fc5-bc9a-48ef-bd08-fbe29ff3617a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a45b51e-bef4-425b-b690-092a9651a2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6434ebf0-5e1c-405d-a52e-a4e3825af72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00d639c-57e0-471f-ac2b-f36bdb8eee1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ed0084-3867-4cb8-8494-67911d137fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005c3022-1bf2-401d-acdb-a5fe47d03a06",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef0155-6960-4a12-a154-b306e857afa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bffe67-ba2a-4fc7-a53a-c29f82590bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02997c4-4146-425f-b37f-1fcaef561b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc211c26-32a2-4586-bd4c-92aaafd1ea62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b193f08-924c-4888-aa25-9664f8cebe22",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2d8d90-b226-4a16-b915-c6ff65a5ed80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e11be36-6cff-49d6-8636-dac634a4e36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a1da4f-0a1e-4b96-baca-903d51f0f73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b394256-a99e-4103-8864-aeeb3cadd2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda9e3ea-bcd5-4383-a804-78011441422a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600aad05-f1d8-4e55-9f42-f4cd21d838b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31aec090-cc61-4939-af5c-372f9ab11980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d413169-0e1b-41c7-997a-5efc8bf19902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f05ec7-db3b-42f3-84e7-7e863d79ecb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b93738-cf3c-44a1-9c8f-6ce078910d3f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8c7bd7-5222-48d3-b2d4-29be5f5d2a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd84f281-e400-4ba1-ab72-ef3bbea8c77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea77cf7-0785-4e59-8356-1d8e29743fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51637873-1c52-4a72-91cd-4b6ea47723dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4e1d42-f1b4-425e-a1f6-c0b98a42acf7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda7bb5f-16c4-4a8f-a0b4-ecf1141387bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8c5760-5c37-4452-9728-3841d4501416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f68520a-8a8e-45f4-b44a-753df519cd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f38d73-c043-45f0-9ca7-15ecca138290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bab613e-e456-4886-a38f-8173bb3f9f74",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307dad01-3ce2-4827-a086-1b885aa137d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42691e4-f962-48fe-b88a-11a538b5002b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae96e4b4-f5aa-4c08-907b-b63c6b055d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5512a40c-c611-407b-b4fa-392b0360dd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79354a73-9e07-40ca-9352-d40b13f459a8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c92f67-854c-4cd5-a39c-cc158bab8eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3347eab-52dd-4cd6-bbea-7280906532ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845e6dcd-1949-4d86-abd1-29dac6a2a154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14335b3-bc35-4d5d-aa6c-ea96d2f34a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7acde43-fa68-463c-9508-32202929ea81",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca496b-1a83-4bec-871f-7f7f0a2f0147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df599f0-7f25-4d8c-89c0-d33faa8d8618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c15e53-594c-4a85-9802-275a14ff136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a287dc54-a8d4-4884-8b70-6efb2f066398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7494aa-3ca9-41cf-beb2-88bce45fb476",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d89f9d4-b694-4ac2-b134-46a5094f1608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a80c6c5-58eb-49a8-9c2b-03f1b34faed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a2eb0c-e70b-4a36-8c28-abdae1df904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d403bc2d-435f-4e87-b737-4d0c598a64be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ad23d1-3bc3-4e05-9fe4-403b0afc085c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dfa2b3-03da-466b-b227-bc317fb43f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb63bd6-aadf-4523-9c01-7ab9f37c2ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c35881-d495-4bd7-8251-5a02364973e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c41fa68d-9d45-4d0e-bbbb-dd607e9ed04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390a2b12-8018-41da-bebe-93809a7b5b70",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cd41da-af87-492b-a990-29f177ba5612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2c5481-8064-47a2-82cb-aad4bab27653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11b20c2-f592-43ce-9222-c407046872c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88de8aa-e788-49fd-a846-9c5b900a2506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52b7004-15b5-4a27-870e-f90966646c72",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beabbda-7094-495f-8d94-27eb2445ec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf02a9d-e348-4c63-86c7-842dd8284886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4446ab9a-79d5-44aa-8882-1482ecaae332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9474a63-86d0-438f-94f6-0442f88b58ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad015736-18aa-4548-bb95-30e1ef9ecb81",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4433c645-a597-460d-84f5-5d597945089e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506f4482-41a9-4313-a6b8-606da791f464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e23212-8d6d-4177-9408-3c347dec7597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "426194d1-a6f9-433a-bf4c-13a492c17982"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18769db5-a484-4949-ba23-59dfd61eccb6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc528d6f-887c-4fbb-92df-6d6523c1db4b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e944bbd2-d748-4213-84e3-ce7c6191bd22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "db07f6ea-edc0-4f07-a373-233d5fbf1e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9f54f3-02f5-41df-b686-fb4454f2cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc6b9ea5-e0a4-4d4b-9d08-9e07d233a169"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29406f02-4862-4e70-9475-21d2ecb9ebdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05edc88-3b79-4a47-9048-cd34400063ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d08ed8c7-8884-4af7-aa0c-7d321a9997a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24e4057b-f921-46db-be03-c6612fecdb0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a427a44-e859-4d03-8ca8-270df8b8bfca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bdd7ab71-8b52-4e3f-b6b0-9a50cf2f10c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c034eee-4848-4eb1-8969-009b957b8253",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79f0ea80-a5ad-45ae-b57a-007a736ef954"
            }
          }
        ]
      },
      {
        "id": "8262d90f-c731-4423-ade4-06f981bff01b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "308f309c-d3a0-408b-a02e-3937f517ad5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcbe2696-eb23-434b-a89a-831fea5ed19f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90002cf3-4123-4f95-898f-41113d574e74",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076dc292-633c-4ea8-83fc-70fe017e8d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c50750d-a2a4-402c-987b-e08142e6f7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eef603-79a9-4178-8859-acfdc6f32359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "813cb836-8388-4e34-938d-62b54b22ecc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263997ef-f479-4abf-a867-5432dc7e1249",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995756bb-4c7a-4e06-9083-c60292653588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cab44f-7634-4fb5-9ad6-3c942d14477c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9d1e59-b01c-4848-93c7-ae37077fbb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "56785705-6a72-4cb3-b886-e66369877762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923c8044-5f21-4888-a7fc-543e5715dd7b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183f56db-6052-4588-a02f-ae65137f47a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48061aaa-1cec-4648-b00e-17985c855648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a95b9c6-a4a2-4cec-855e-97f368b39d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62dcb67e-f71c-4809-bdd8-843a4cb43897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4e8a49-1075-45af-8f56-6603b86bd53d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adc63e9-399d-42f0-865a-17b4119a5599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9efb2f-d623-4a81-b00f-280321d8ccba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aede2e67-0cf1-4ee5-8078-4ffe7bb0803b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1e8fc3-27b9-4ec7-a0e3-ebd2a27c57ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e655d83d-bf12-4983-852c-fb088d15fec3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d93926f-af5f-4826-8707-f78cee890068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba559a59-12e7-4d49-80ae-04e86adbc99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4731cd-3cf5-478f-b01b-b71f973de804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfef731-bae5-432c-8d62-97dad9e08245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0dd69c-2164-436f-9f6c-071c05cb6a07",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4739cf94-a207-4fbd-bf5c-5fb9a213321f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d209cc95-10a0-4fdb-97c5-490677402eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5894ca-d19d-4492-83cc-f39c8872000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55330cec-ccb9-4af5-9d9d-9eede581c910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b426b421-d1d9-4493-835f-b724d13bba32",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd4c51e-546b-40d2-9aa2-d2a8de6fa8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9794324-28c0-4418-8ea8-89fd9e8c5950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3ee8d6-5a6c-43bf-9cf7-d5ebc792f1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a576d7-34d4-4af5-a6a8-e818bc6527ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e214d09-b8d9-49b5-9489-6a208d680c09",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b649cb-2e87-4f65-8d21-66b68ba3cb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a75816-fa36-4fb1-ad52-43ce0c232e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd49af0-1a6a-458d-95e1-b619f5f8ebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbceec65-b69b-4125-9932-670a921a234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4626b6e-92f4-4e26-859e-f0de77fc7edf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebf12a5-d4c5-4cb0-8076-1e6705141cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c36aa3a-22b5-405a-849f-704d143c0798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1672e8-c0ac-4483-89d9-83bd9883d7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbf4eee-639b-4527-a722-4747a9a63567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aa0940-1c87-4d1c-bb9d-92859e65d72f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e348ed-9f53-4485-abdd-c3203430ca1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8db0c53-7e0e-4680-a129-ba9f3f3b9a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad622b82-e3be-47eb-908d-d7f8b83d8072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60c04a1-5ef7-4caf-a54d-39057a6fa723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818aedc5-0e98-4072-8221-5f44ad756d1a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a0a6a8-8b3f-4a06-976a-433045121714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82808404-eaed-4c3d-b252-2d91bfb86f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973bd806-8cba-4c84-9a8d-7a8b59386c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0d171350-5499-4185-b5ff-2ddd272214d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6ed3e4-6ae5-4b2a-8186-6a7518ca299f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5417248c-8ac3-4943-b1ea-eb02aaf07167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88857c5e-07dd-4935-b70a-e217fa090a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa43346-8e7f-4789-a7ef-e240f6235ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd4eaab-f6aa-4300-ac49-82cc5d281dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ece0c9-8d20-4d83-b536-7463d55fae01",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bd7f6b-be78-4a1d-91eb-1ef8d02cd620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d874616-1b33-4989-b54d-7e1bc1455cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef41f1b2-5af3-4f96-b6ab-b06d3f6ca027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaf01b6-e454-4e6b-9853-70ab295dabde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c83a0b-5e02-4d02-be9b-af78cf493e9b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa72662-df40-4f3d-a788-153c94a863a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae31ca3-f491-4d53-afa5-227abbaf8678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67170d5a-7fcb-4700-832b-8d96e16c1d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0555d4c-69c8-4080-abed-12720b4f8667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a3f1ce-67ae-43cb-9b41-0e9e6b8da02d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b88a82-072f-4a3a-97e8-2b971e61147b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b62122-2ce1-4534-987f-9fb8fc7c59e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8502e415-2535-42f0-b05c-0e76136563bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dab8ab7-f757-4d32-8e75-4d9202da6f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6092ff52-d5d4-4c31-b23d-ae1cb80146ef",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36085198-edd0-48a5-8f88-ec66d2b23da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86e6be0-d07c-438d-9ab6-fdb4ec955036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8836acdc-a496-4e6e-a826-414008bf8986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e961d6b-cd0d-4f76-9edf-04666eecabab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ec0942-f154-4a3e-a3a1-93a395514e63",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3b8b03-a3a3-4999-a6d7-0999b347ef09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67042f3-d33a-496f-b1aa-381dee758642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df65b2b-b417-4706-80a0-42d3927e1b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdbe928-f9a6-4c82-98dc-e64b13752c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a8cbbd-9983-4724-99f2-d5e1bd2bf2e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a1a803-f27f-4737-917a-465827ee5fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74b99bf-a995-40fc-aa55-4d7d5790635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0195cb25-15cc-4c90-8112-62e0763c38a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf02a95a-7468-4b22-92a3-3d8bf23f3dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28b4063-d6cd-46db-a4f1-6418b9a27567",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346b7918-3c82-4ca1-a178-d0586f0d464b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c61e65a-dbcb-4525-85a7-50cc5e9fc602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9479cd30-0b77-4974-9928-f4b3be8e7d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08fc097c-f9d0-42d6-b5e8-c36af5d5bebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b711dd5-1788-4803-a52a-3b3ee1333d49",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edea4ac9-f359-4b11-8c4e-8a3c5b82cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0402668-49ec-4b2f-876b-3ff07173ddc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91955a4b-8fd3-41c7-88a2-68eefd901209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "545249d0-87a5-4cda-ab31-6829c89c857c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5336e0fa-8ed8-4132-bcc3-bb6a6aebdd27",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9d3151-07a0-465b-978d-4ec16c93dc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5eae7d-0e2c-4327-be52-d82ab63064b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a9b4c7-bebb-4203-a2df-3bd62c231aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b7b29c-8089-4c22-8402-57c98c1a50cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486ab94c-c1b7-4cd6-aa81-451a9bebc9d0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ad5718-c2fa-481b-8c35-576a395020a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfecfee-4af0-4422-8ce5-921f3cac98b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78330b1-6e40-447a-bd7f-7dd508eb1437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7dabdde-f052-4cad-85fa-e07b442454f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f14f695-6354-4f92-8208-832bfcda836a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc9f899-ba4e-48e2-a8fd-8fb36554b404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01858cab-b106-4ebf-8e1b-32fc5a060073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33b95e5-05a6-487e-bb8d-0a675802d769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f097b55f-26a3-43d8-8487-f3d1386ee853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fab73b-7682-4a2e-b497-34a7405db4c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a9e3fe-0f72-4c06-af8f-e114c1339c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7724373e-fc51-4000-bd4d-abcd0c3296cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0ba371-d851-474a-b376-e05c3d790fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "396eab12-548a-4459-a7e5-f4ba5f0fb960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebfbf3a-b7dc-4c5a-ab0b-d774b7c77337",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147b0bde-a37f-43c2-9d17-d693bd265660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d4eb67-8b35-490e-8b86-dfbb4b42463d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0caa85-0624-403d-a2e0-d9c9b55dabeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b73f694-a853-4657-b306-0152de420ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61321441-f360-4b8a-89ef-bb6599fc517b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0464eb8-ea93-4b5a-ab4c-8f9c0b504177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d978484a-e611-44a8-b1da-49486c155bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232a19fe-1905-4cba-8018-24641b70f943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b519c2d7-9b6a-4e26-bfcc-d8c8ab0785b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0a95de-c5ae-4026-bdee-9747304def1c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f888f741-2f1f-461b-8812-9063ed631550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb41c0b-cfb0-4f92-bed1-8d27997f2cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32e8c74-a91d-46cd-8f75-a1164d77d3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "554f66d1-3bf5-4ab8-af84-48e6f3ecd581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2855c42b-7354-44b2-9585-c36a06398869",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4f328e-a66c-4407-afcc-65929fe90d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c575e8ec-0b38-4864-ad77-af60ea2539cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f243f80-0ee7-4089-8119-b6f9fba93547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e46132-ee9b-49de-8f22-1c42198a9885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5db6d4c-0404-4555-83a6-2c6bc73112c8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4bd3da-1588-4321-86ed-3706317c596d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d478b1f-c580-400d-9ac5-f90664c2dcba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13889f09-0dc6-49f3-98e2-d67cbf4dbafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2941ca43-4fb8-4b96-995f-63f2bc167b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993d64cc-7362-432d-aef0-12b2535b66ca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72bdb7a-f219-4331-ba96-3e4c39364492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ae9ebd-28d4-47f5-af5a-e5f768328895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16db499c-69ec-486a-8dbb-e96a647bcce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14412283-84e1-4363-8e97-6b53eb0170f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f73586-13fe-4eab-848f-9cfaca8df279",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b6deb3-1f5c-4c6e-9324-1ffe4f88e111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7928b1-36b9-47a3-a07d-a76802661b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f00181-1a4c-49b6-99d4-0f3e72f15f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a222e6f2-040f-4716-932f-727db7ff1fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a523554b-853c-4af2-9e41-d8b5de2867b0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63c869d-60bf-463c-ac63-e86e12bec30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4600f6c-c176-4c66-b480-b981fb54c525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d646e3-7acb-4354-985d-9993be4c3d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "802308b3-a3c2-48d1-9d6d-6f9d3b47711a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76757a84-9b09-45ec-85c0-78c4837d8f75",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff21761-df72-4000-ac9a-9814fa2571e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bab935-d5e8-4f4a-b12d-6616fb246c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249c6c39-0a5f-4ff3-b819-7f5857d2698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18153fad-5aea-4b55-a6d9-c6a34cdbe403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4220d0e9-76f8-4151-a3f5-84027992954f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e436430-c227-46dd-8599-9c4795a1967a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e91312-bad1-465a-a7ca-24addab1c7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3feb3f7-ac7b-42bd-8276-0cef88022583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4df641-2f75-4256-a945-a9f29db6cc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6801fa49-565d-4349-8975-d5eb21fc3b06",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f200bc93-b83d-49e0-a123-8a032b0f74d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b2145c-d043-44cc-9741-c76577dcfa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6acad1-22cc-4e34-ab27-f5711fd8c9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a522412c-0c51-4a11-a921-a6f2c44aff8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32de17aa-1147-460f-97be-9647e5719819",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac4d2c3-9346-4192-8b3d-9db4e5474cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938b5cb1-1409-46a3-972c-b1112525c013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29684f95-4bff-492c-bcff-20122aa804e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9edc1c57-a12c-4e0d-a3c2-d13e72405edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77802e17-ac26-41fb-ab34-559f6e9b4642",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665d7de8-21bc-4148-af98-327d83579f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f348eb4-5fd1-4898-be9f-18133fff7b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4e9656-f8f8-45e3-9431-919fd4e1c3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d4428a-99ca-4f52-b18f-a0edc620bc0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aaa74773-c86e-42e6-8a00-eeafce528d6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdc2e810-5499-4ef7-a930-e89858480b0c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c83081-cb4a-4e96-85c3-c65786894408",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd7902a-5575-489e-a0ca-fa059eae09d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a18bef-2186-4858-805e-89a1a0b09b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87128857-b178-440e-906f-7d18e352f511"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77b34428-b348-453b-98f2-04b54a6ade79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db3bc2cd-8d1c-4710-9bd7-3f175829317f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62b2b360-7f28-4d3f-a4f4-e9bc0d7f93d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2578d186-9d52-4225-80d6-12667040cab3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe2783d5-506a-469e-a7d1-b734587b8d7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "31dba639-e223-4c06-a6dc-089bea106898"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda70342-5034-46cb-977b-d015e017c46f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2333680-2951-4d31-9438-86699cfd3b0b"
            }
          }
        ]
      },
      {
        "id": "dcdcde88-c8a9-4a16-bcf3-cd92cda84959",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d0f4f970-68c8-4344-8dfd-5dc876abb8f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e25acfa4-2408-48d6-8d04-57be3549a819",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6a52fbc-3292-43e4-82d9-3bf8c77c8197",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefb3482-f6f1-4cc1-bf34-458c96e02612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f8ef0a-8b96-49d7-9f3c-8016f4478ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519e65cc-f146-4acb-b987-41da4e49320b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5712156-feba-47b4-b7a3-d642c2d5706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94905de-0c29-4e45-8c6d-4437cb8fe475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d940707e-c179-466d-8ee8-f12233aabc1e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c0bcfe-d531-4f5d-a4f2-d5aacd59fba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a85403d-58f3-415b-afe3-2d3dbb691909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fd4993-79d4-4b88-bd96-2d5c170be7a4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928b0a99-32b8-4c4f-b560-7bcdc7133934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7eaf4f6-aa72-4822-964b-8babaf1028ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e1467b-0847-4053-95b2-4a24724dca5a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46b59fb-a5d6-4ed5-85b9-673080297bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c475826f-e474-44d7-9b03-a9b401d77845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5c4a38-a286-4016-9afc-33eebcc694fd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab840a04-bc54-4d18-9dfe-030f1a391b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f047eb3d-712f-4996-ad07-2157ea9f3c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d39f6c-4c16-4843-83ef-af912bf2919b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e48aa27-c24f-432d-b40c-0184675fa0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ec78bf-fec1-42a1-937a-7d934b07fc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faa69b4-daf3-4a18-b61b-4bdcfbd5dba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc2474d-3373-4124-bfde-69693ddaf4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e64c3ed-5ff0-48a4-aa33-58f73dbe43d8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce7a704-7444-406c-b020-f87bd4230a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a11342d-95cb-43f0-8d5b-1ebc89a1a74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b068c33-3d42-4a7d-b64e-62cc93b8b814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead5ea91-513d-46bb-9add-b6f63744bd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16026e07-3339-4462-bcd6-5ecd086d6680",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60621076-0468-4351-90f9-93cacc894a0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5e59fa-98c5-43da-b029-7eeaab2d4675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d5773e-47cb-4958-bcb8-4f052f4be12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b76f759-85be-4bf9-babe-c87efa7b2b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed8b408-85f3-4e4a-95b4-6e753b83e2a8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbcd326-1785-4336-8bc1-1b33444be02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2ca4d0-2d38-4a47-95dc-9488b9b918e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da87b44-f5eb-48b3-a35f-cf66d0b07ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64231c93-0f62-476d-980e-0ce7eaeace23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1927c400-7e32-4a3c-8e63-d6b9e90bcc14",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f1be59-0265-411e-a3f9-c4785f17483b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2bbda7-1254-4f94-b422-bebc9c370bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf52f51d-bae2-40dd-b96e-b65a26e5e044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6193cccb-6589-434e-89cc-1a5080ba1ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f78f29-ff44-4926-ac9f-12fb96c989a7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd628aa-5ce3-4a1e-be23-a4d87cb8bc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce33c315-65d8-46a9-981c-033772b9a8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e6b583-4c09-4ab3-a77f-365146b51add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b06303c-aa58-4042-8bc5-1d18d2315639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea587f6-7684-4a79-b042-424192ba188d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55fa1e7-0a32-4d3c-87ff-574a4795ab09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae86ebe8-2843-4767-93a3-729858c425ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df83647f-d66c-4993-9af0-07fbdbb0b3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801c24a3-ce78-44ce-a538-94a45aa3f748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954daf4f-2003-4c6f-b12e-81475f92a503",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb188ebd-625a-4b79-b94b-aa5ad44cd03e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "621b591c-fbad-46ba-95a4-72f5750f8ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba072493-4b85-4a08-8fc7-56a305561d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a3a7d2-6a07-4f06-a5c7-1fe8a885de43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bbcddb-bf4d-4b0d-b356-387f418c066f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24961478-3363-4874-9be9-e6237cc45a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4d5ea6-af8f-4601-9683-91b39391afe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0917a450-59c8-4c5d-92b9-999bdc43d524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a716c781-2b92-4d19-91c7-5a393d6a6db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f448efc-90ac-40bd-8c93-1c06832ab885",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e7a315-0be4-4f31-b3aa-afc251a5ad5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc596a9-658b-4099-9127-e5d4b764a103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566d4a1d-337c-47cc-b861-b354759d7fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eded14b9-e5c8-460a-897b-6a0760f6a358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d084bf2-b226-4c0e-874b-74ad0f972503",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09550ae-a6fb-4eab-97f5-d9435f9165ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000e3def-8a4e-4566-9ec7-10d5aaa94f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616f4ae9-1d63-411a-ae1e-e9b3585b289f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6362895e-05bc-4e46-ac1e-847f029a9e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e5521b-1fac-43e2-a108-2b641cefa35f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c754ac-f57d-4507-a707-f18bdc4b9619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7700319c-25e1-4b3e-981b-a261177b8281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4bc697-434e-4d1b-9247-e333e6066d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826dc77b-0ce6-4c56-8c52-0a05937f626a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caf43e7-989d-4ff7-8979-1af661471f18",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b52783-2cd5-4c58-823e-6a0c1cd90afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9243e3-47d8-4b86-ac4a-e8201d4136a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92f5247-b282-4235-8649-89a052ae898a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c90754-c6ff-489b-af35-48ec37dff2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb0d47c-1fd1-43b7-a242-bf7e23a606ca",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c66525-e454-49d2-9825-29e49f3bfab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d3ba9a-5637-4be7-a91b-6580ad212bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6a0b30-ef39-466c-a214-21e33345b86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa90765-6052-4bd6-b55d-6a6584003a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad8941a-68e2-413d-9458-86a8e3a5aee2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00808e25-4921-40f3-b277-9723cd80cabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996bf524-1fe8-48d6-bfb3-2a443d45d9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb5bef7-c802-456a-aee6-2b3b2c888e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4b57fb-7685-4057-8c2b-7a09f36f2c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0581e5c-27e2-4553-8e92-2bc4e527504a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec74fc5-4617-4b77-8cc4-36f7a91fe977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751b3e7d-0607-4d07-a3fa-4e68a00be569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d010d65-0f2d-4917-b9b2-9106b6dcedea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc81ce3-e7a0-43b1-a8f4-d86d694ee308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e3734-b1ac-4d33-86d1-06895a8c9a78",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0b8454-66ab-442f-ae6e-725c5e094d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4039083a-6907-4372-ae11-5f38f150ace6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9909b677-938f-4eed-9ccd-fa6bd4d610f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115f2805-4ac6-4e2c-961d-6ac80023b45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504cd729-4a53-4d96-9100-6968f8136470",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649759e3-daf3-4e50-9e58-b934497a8615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c243b2-efc5-49c8-bae8-e398bb23572d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a5a6b-faad-4bf3-b3b8-9dab93299700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7d45b9-496f-483e-b0b3-673077b3a6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c894ce-d917-47f0-95ef-d615ae60f1cb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9377b3-deb9-44d1-bce9-79650a4dcc1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c24a491-ee7e-4c75-8783-38bea74272c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f887ed-a3d8-42c9-8c41-1977b73f81b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef48091b-aae6-46a6-85a9-541799c7d12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbc3244-799a-4028-87ea-dde78aa061c1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41700700-534e-4581-9b8a-e96d4658f2e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f7f5853-d2bf-498a-a71c-423a2e63cecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c4a86a-2a21-4037-96b4-06330d0a52ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1a0154-5356-4038-bf7e-6b8929337f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb808d4-831e-4fca-b184-79061395808e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed9f76a-ef25-4c9b-985d-0a74b8e24040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9757a0c-d327-4978-8e21-097845142c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f237118b-c83f-48e3-b953-acb94ebb11a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6a2cbf-3b95-4e0a-a9da-04d9a1c4c57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7f99c7-1999-4e78-a143-5a899d9c0754",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33c5c92-69c0-4c7f-857e-f8a3a381fc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ca04a4-8181-4532-bdca-393caa99a700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bea7be-ce2b-4be6-8eff-dbd45998083c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7a93bf-5db6-48b8-9294-f78f3471d18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe169c5-2d49-4a31-8e87-f19d71f1c5a1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3d75f8-fed1-4f78-8135-ef4918e63069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49750b49-28fb-4326-907f-8ac72350d3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a876d0a-e301-49b8-962c-22f47892830a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78595d2-f8e4-4d89-a765-da1467ac6489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c252871-62e0-48c6-bb56-478a53ae6760",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e253f0-f41c-4360-bbad-f846d46874cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d9681b-4b1d-449e-a8ce-230bc2ea5517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c48f971-e229-4733-9e25-5e6d2fd92a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e210b611-3af3-4b37-a255-2c4d4a0a7bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82f38d3-c577-4ddc-94f6-4d43f6ee44dd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f7b798-620a-48e6-bd98-b3d23a5ed3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c222961-3c09-49bd-870c-17cf154e2981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b5f37e-e2e0-42c1-9c80-9aec7233977a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073f3703-e159-41d8-ad70-9a2b76243c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dacf049-9fea-4727-83f7-9bb903f9398c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a262f30b-f9c6-4a87-b1a4-39db199fcc7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd94aac-1c6f-4626-8a77-f30427838838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fe1277-eee3-4805-b2e2-2d36035e7ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fee70e-fa21-4ef4-82a5-fca735d48ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f48764-2efb-48a1-930a-17b8131bb5c9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8428ed6-a82d-4b30-bc14-97a1bd3410f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ece10f0-ebd6-46a3-b559-10d269c2a50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf424de-3a04-477d-9742-995618d6c94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c930481-3c0c-4717-8853-17bf0d434b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434d7afd-496b-45c4-bb64-2495f52fa190",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542fe756-4d18-4bbd-961b-46fefa07905a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc45a449-6683-449a-acfb-b2eeea5e7a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f720603c-7ee4-42ab-96e4-e8e00e8ec9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38712604-464b-4f8d-a747-261cc57cc91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e1cdf5-bff8-41b4-8770-a4a8dddd57f6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3f2d03-000b-4d23-956b-e15ade9e9670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038fe141-4d00-4351-bfd4-86b930ebf136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96d4bd3-62d8-43f8-863c-fdfaee9b2be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a13ed4-6575-4d4d-80ed-e8cbd23cf78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e971ca-fa16-47df-8838-49975b38ae1c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670816a1-2f2d-40d5-bbbc-81c791a31247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec534fd-1aee-486a-8f63-3d0de3d6e94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe562551-4f63-4cd9-a882-70af95a4f10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3b72d6-d8cd-433a-9881-dfb193ba4a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed14a0c-8921-4a7e-bacf-03bf7b3a5ea6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaef4fe-cfdd-4717-b3dc-cd2fc3b35c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effe0f24-6f27-43a3-b0e3-2d5d4f6f3f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510b2c77-c3bc-47da-928c-b520a623791b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef4f4ba-b44a-4b2f-b93f-1c2990ef3357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e995c603-e563-425d-b538-6dfef20f659b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87bb578-fea2-4471-8e84-2df39545d213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e627cc84-abee-4662-92ff-87a46990f9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069e6b20-8215-48dc-9e32-ff2dd9cd1d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528f2c59-1d9a-478b-aada-62375888710b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae26f87-2ea3-4e36-a875-3caa9bcaa174",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b29dbf-7f67-46f8-b8da-322f1eb36bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f0ad33-6d9e-4c9d-842b-387b7c9831a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97576eeb-817e-4334-b5bb-6b39c688b3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed786f6c-d0fa-4856-956a-ba77fb408f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241e4ad1-c4b1-4d7f-bdc2-9545e17a0f51",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66833cf5-0119-4845-8271-20c2e3aec47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a31c6f4-f6ff-46fe-8ca1-cd4bd87d4147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcea28c-a899-4c21-a8fa-4b2cb351fe0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5950f295-5048-4ef8-ad7b-d0b492403c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd2369a-d721-4027-9a83-f059d7492d40",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c44d1df-219b-46c5-aab8-f9371aea8895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c2b573-df9d-4e03-aa3a-5018940ef013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f543a04-d82c-4f60-a309-734a30fedebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affb5162-346b-4a51-9367-5f6b72606114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f36968-f292-42fb-8d5a-6496403acc17",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fc22b5-7c35-4628-86d7-47497b087a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999e11c3-e588-4133-b20a-d1dcb8ab7229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57463b2d-c341-4b9c-819c-775f1b8c93b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b120d574-a489-4f87-9084-ce49935d2110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6fca81-5172-447a-9b54-955bb89801fd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b957b416-3f1a-4ffb-b102-e8b8c1bb4ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0bef41-2b4c-4dd9-b893-bca9203ac835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f0fc64-a496-4881-969e-fb055bf74e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45b723a-fc86-4c8b-a32c-a4a15f1e2faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bb71ff-49c9-4ede-9f96-b5d6ae0fa1ea",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192796de-52c6-4512-acb8-5e088bb83e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cdac92-15b4-4e57-9d0a-5dde7368a6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a057f8c6-e6ed-477a-9353-f39bd061c865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a08adae-1ede-410a-a536-315edf156527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e93467-b0b3-402b-840b-46a33fbbc7d0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accfa336-8e2e-4b4d-8228-c18a41a403c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a271c351-dfc5-4d68-9a3c-76ad65b933e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677d9b6a-ce5c-4151-b12e-98022e34d976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e57ab3-88f6-4eb4-9108-d6b8eef37a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac8658d-9fa7-47d1-a60e-9d8177fda2c2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13c2e20-4744-416e-b8a2-eadc181ad49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0129cd87-0c6c-4a25-93d8-a46f63f1e151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcf9541-4cfb-44f1-9dd4-452ebb907e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138b23ee-305b-489e-85da-84e35b3f641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ea7a23-4fdd-4031-a0f4-15bfa36294c1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20247971-74a8-49b1-9ec2-041452253302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c1d155-66a0-40d7-b23b-352929e91a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1d5821-fa00-4cc3-9a64-330c5ee11eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1dedb7-6f2a-4a7d-9754-27e5d8758df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e80e555-c95b-4b5d-9858-c8de10d80300",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe8397c-0288-4861-a190-c13701ba0239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b593d4ca-0562-44c2-8058-96fa3747be6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf8ca6d-98aa-40fe-a034-c9e1bd4a71c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee10b77-c347-41f7-b74b-ac581a83f9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f697f9c-5d87-4b76-8da6-bc188271842b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3291e1-da72-4980-96c0-3ea43dfd32d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6421b625-2a12-4199-8332-cfdd19be1a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06234f8-7fc7-4377-921d-1887b104f4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83304220-e921-43d2-8aa1-3f7d61a9cf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e7ac81-05f5-4dfd-9928-089cd15f86d9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96e6d20-e678-4da1-a59c-ef058a885da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79bcd40-f916-445a-abaa-37e2ba36cb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fb4769-db3f-40d0-aace-dcfe9b7825d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8ee5b9-301b-42b7-ad9b-b53f6f48e8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde51222-9b80-4c86-90a3-5c425a3b2acd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823e45e6-2ff3-4748-8d1e-6e2ed402d504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3826d67-8f01-4644-92e3-1f73f587998a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d39d88-3c72-4c7d-b212-8d0ef1d21437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4428e1f4-7722-4ca2-80e8-543b18d3e6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4971cf-401a-4ad4-88c5-986ec98ce445",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282fc504-4dff-4d66-8a15-8a92eedc00df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ee88c2-e4e3-4c82-aef3-2fad34c3bbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab353cc-9ba3-4802-987b-7bf58d286447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc3e36a-a737-427a-bc2d-70fdd3c2b525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a166ff7b-d744-472a-90b5-7cc801d9d41c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec0b96d-d9ab-4601-98ff-54e178f0c51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87415648-c1d0-4272-a0e1-fdb5e774813c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bdb371-aa96-48f0-92ad-4c8ef1192a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b95f0c-5455-4fc9-8be9-b46c71e8203b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdf0532-a067-47c7-8da9-691ebeceafd6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e014f0f-3a19-42d8-9943-a22c8b2afe4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a91a38-8730-4898-bb18-8791c5c04532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee62936-5f8a-4ccc-b751-009dc6dd1961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847ea8f0-0879-4534-9076-5965dd169eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ad72e4-c6dd-41dc-9381-c930a281071d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47ed983-ad08-45c2-ae8b-44c71d525770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fed10bd-5635-45a6-8a06-4035f285c5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df96c1a6-81b1-44b1-978e-4a9a2bcfffa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e6b8d8-591b-4943-bfc4-b8e39c39dc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47cfff6-3b2f-41ff-a895-53bb26392e1c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ba6b8-2e51-4b55-b24b-9f4590406098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb0d2cc-b527-4538-b8fa-a8fb19e7c404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118e3a37-852a-4bf4-9944-6dcb940b8693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8766501-3009-4e7f-b14f-a2cab71d9ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e9591f-d4b6-4785-b64f-ec9839ec0be0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e3c8e3-a701-488a-8e92-3db58cc5d3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8a524c-7b48-43b1-bbd8-0cb2cd8154d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac49c82-fb95-4c8b-99fd-19846240f54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7453a9d8-9dbc-4e79-8b1f-258377c53452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e571bf-7b94-4028-9ab0-2599270e8d44",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efe95f4-2328-4204-b089-710bb4d2010d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2796a1-fa45-42c6-90b6-a8178fcafddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea38125-9f62-44b3-b6cd-ab463c197136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5c9ed0-d872-48d7-8e98-d7b0d3eb4b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd283a3-5266-4a33-8dc7-2483cf52fa13",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d10ac8-ba21-4ded-98d4-35e085e527a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f08e3b5-9178-443d-9b65-4691d374e962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078b2d98-317e-40eb-b93c-c1fcfe7d4ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f08a552-9738-4906-93c1-d9c446843a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21d0bf0-f664-4a0c-9203-1eb7f2ccc547",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe110d75-0f67-4017-8711-6e8e1dd801c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce4b372-abe1-4108-8171-baa8b54acb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88ee9f5-dacb-490b-84fc-62a93ee6e1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f87b9c1-e7ee-4951-ab66-c7bd27004d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9b43fa-839c-47e7-aa8d-59f6cc961edd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a4d68e-de0e-485b-9060-b0224abaa875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46466e03-ce5f-472c-926a-0728bf62db9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a13ce6a-7d49-4cde-8f6b-4a1bbfccdb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cbc007-8a08-4972-90e6-c1c10abac04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33fb789-757d-4bfb-8f8b-a2a963376fa3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56a0670-a379-46bb-98d4-c678634efffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622115e4-bbb4-446b-8cc5-7ae05db94dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d111a02-bf22-4c68-8bc7-cb044425cf78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d3ce31-86fa-4ca5-867a-b31d81f66904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc37ee6-bee8-4074-b95b-6246373b9df5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd79532f-8f70-4924-946a-05266b1f5226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ab49e4-062a-4d18-9382-ad740af6a53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368f4b3e-c152-4b5f-8917-0e66c6593527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953c56d3-889e-4382-b8b8-112d3bb6472e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75571561-2c96-4f02-83fe-0f6760ad7a54",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a56e119-ab88-4dec-a4c3-7efeef6b52c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e947f8a-79b6-43b9-973e-03f2472b36b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5e84a1-a8b3-4bcd-aeb6-32a2ff2597a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b414d82-f737-4081-a1b0-d8ee558f2314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a98344-d5ed-419f-931c-82b602300c99",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea40fe29-e4cc-4402-8fad-d9f3bc105970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3894493-a022-47aa-b48e-d02bd556fbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7f7d2-e5f6-45ec-a987-7321f8ffc59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa983027-d23a-4146-9e17-3027c12a303f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cbee40-721e-4cea-b776-9bb5ff56eff9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027fd993-3610-45ca-b3d4-3b4ac4bd4469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2db8d2-02c1-4465-8af4-36f0b2a27932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a63f379-1c3f-4675-86b2-c59bd15cf4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337d8fd6-dfbf-44d4-b632-fe1474f723d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae49fa-d368-4bc8-862b-9f3467172e8c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd673cd-fdae-4816-8c97-10650ced9495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea537a56-eec0-4b30-9655-42fa42e59148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e06cb7-fcbf-4219-9601-6ac520855327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dea0a64-f484-4c46-94dc-0b9416fd9a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2debb9-d9bc-4bf3-9db0-53a4ec18a45a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1143c1a8-c062-4513-9de2-fb728f6fb47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23d619a-5353-471d-bc0f-f8bec534305a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2942afc4-4fcc-46d3-b634-c54408d81af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde19164-c005-4bf8-adf6-14ed421ca90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5903d1a-11c5-4818-aa7d-2967057d5bea",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccfbb4a-6255-4909-9710-e912d90ffb0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc15054c-dd6e-40dc-8433-1466d915ca51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0585608b-7b54-4714-a8b5-365d7c1b769d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e399816f-a821-409b-893f-0fdb5382e663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae151d7b-c438-4d06-b41e-ee4e47b10dd8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e95940-c66f-41e9-9d49-d633a09a4ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bf5539-26f0-426f-bbb6-e6ae671153ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd53d26-820f-4e30-8c37-fa5d31d19ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73a9b74-2a2a-445c-bf74-685d922f86ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67975f8-a48b-4d11-9c75-caaf6e89da19",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbcab8b-eda9-4cdf-a286-3864b298e1d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e81c6cb-2ccb-4cf0-a7ea-344d16169d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33c32e9-fcd2-4832-9c82-24e33ec0d2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16da979b-d1be-498a-8ebc-5e90f436c0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097022e6-1beb-43a6-ac55-76422b36a3fd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2885f7f5-deb7-4a6d-bd15-23327af7cb44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d94f9e-1193-42d4-91ca-5860f39dc750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a217975e-f7c2-4a9c-92cf-92ece2f5509a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286b5f90-6e44-4f20-854b-8540e8f59d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb919986-3bf5-40d1-89f1-7efe92bdecc5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864bf0a6-b45c-44c7-8678-a10b4b548923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac558b4-43c6-400e-9b65-8d0935b49ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d685b19-90b5-4a6b-8166-6435469028c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327dc99e-b0f7-47be-99dd-3bdf1968b0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf885f31-1198-4466-aecb-780f07d6eab7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc6baa6-6dba-4d60-821f-5fed435c72a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab04c3bf-b7a2-4772-b9ee-d2c4f06ce1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff45b88-6f5d-4b86-9e2b-668caeba7af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362a3dc0-a335-4029-a420-b9ba8c37a0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616bdf84-f5c0-444d-b8ae-21a3ff9b0d5e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b895fa77-fd4f-49e0-a493-f55e0a882488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7431d862-5c33-4ca3-89a7-4c6820b7b27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a06a60-0903-4bdf-9277-d36ed71e9f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5075cc8-2f6f-471c-8b3a-16c6659e7fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8629fa26-bd2e-4e84-b452-b7cf0c59fe64",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbb1fe0-f90c-480f-ba76-f5b4ea473a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2acd73ac-5805-4f6c-a490-911abc6c178b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e16ae03-cdb2-4965-8549-1464e68078bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b8d7cf-a80a-4b99-a58b-ab8f0cd5df73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfa0b70-fd3d-47b8-a841-8ef410dddd86",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf7a6b8-950a-4667-ae09-732f806987c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8ce2bd-d29e-48af-93ac-416bf82c4c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9567b6c1-53c4-4814-9b82-d4eb8b066091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781f9429-5bcf-4da1-8d55-15a4740506e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf419996-feea-4bff-8cca-25e29d432a2a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b41eda-ad59-40e7-835a-2ff7de792b29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10e56ba8-eb6f-4dca-baf4-6795146534a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce914016-0529-458d-81de-1b29867aef3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c5bffa-62e0-4cc3-b786-f17c410bd1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d103c7e9-ccf5-4eee-83aa-60a0b01a0355",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c22a0a-3b55-41a0-aa1b-1954874e61ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce3d1c47-3e99-4602-bdf2-220969a9c961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dce637c-ca22-40a2-a687-c8709872cc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b1baaa-94de-4c2f-a4ff-a61711e11873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fec7093-ad1d-4bf6-89c0-16c5e80f13c1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a26f7ab-b1db-4f65-a7f6-8fbfe79751a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7133e5b5-0aa3-4bf3-8b1b-af3892882e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e42f96-7b3a-4eca-b8aa-dd0cf157b3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fe47bb-a2a6-486a-8c79-da6a85886dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350a1e61-f15b-4ad3-bf4f-db575afdb2f2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1def15ff-2b81-4b80-bca0-9e45fe1923ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50aaf7d6-689a-4b04-a0e4-9c454efc5242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca184a3-9fc3-4ed7-85cd-0307b0bb2976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6aa3fd-8dde-43af-9531-149adbd976c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8192ef51-dade-4543-8b98-b346d1bf9377",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a73bb4-96a6-4307-9f5e-7705170a29ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6d9b1e-884b-4d1d-a5a5-e8f4a7db535c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b00b6b-6259-40cf-94ec-74909843c24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e145e19a-6d8e-4c0b-b3e8-1b2e6bde7f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f522464-1337-4aa0-a5d7-62abed1203cd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028b768a-a682-44cf-b04a-9595e90c0ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e60097-b133-4789-a593-2fd44fadf72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2256f50f-eedd-4533-8fc0-6771c5b3ada3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2152c6-fb18-4948-952c-2e520efa0900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc6ae3b-586c-40ed-9018-5b713c9ee10a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46f3a08-2c3a-43d6-9e14-0c19ed5d53cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f43906e0-5095-470f-8f74-1acf66866a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09c37c7-edf5-491e-8f98-a24b533f4ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae39e56-5d24-4879-8197-ee40a62bae6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dd5ff1-8def-4d91-881a-88e6d34706a1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee26f6a6-66ac-44e9-8d88-4332e038905f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "164e815f-6185-4497-9465-335891e7b700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d260196-b4d6-44d4-94c5-97fb67c04620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa191c4b-1d9b-4dda-b473-8f6cc7d9751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af54d20-369c-435f-8fea-25255d90087d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a44c18-3d51-4c10-8f11-46813848ea6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96cb4bc-6d7e-438c-9615-2f648ebf4cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5498d7bb-ac97-46c6-afee-668ff41a3c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bef69e6-13c9-4e29-a075-ad72325fe560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc39908-c52b-42a0-8b93-aa8648b27c6f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b91ee2-04e6-4173-a828-3e40ba46bc6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409390a4-1779-4a6e-b9ff-216f9ce329b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8060e3-f459-43e7-84ae-239963862540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4f58a9-4d3a-4cd7-9c9f-5ea7ffad1d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab346af-6587-4739-a25b-d32d086f6e72",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95bb0f6-a113-42c1-8125-2da588ebe30e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cec875a-b47a-4340-b904-9b85ae1aaa22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53004864-7784-4a81-a6e2-8845f7153b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa2671e-dcdc-44e3-b1f9-1a7786b88ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49c71db-e48d-41a9-b71e-02cadf829aa2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeab7acf-60d2-417c-a182-7efee4783a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee8a551-ef38-4ddd-a183-c88d4f749942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71685442-f47c-4216-bffc-5abc188eaeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c6eb51-0c89-4259-ab68-3260923f041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62655ae2-631d-435c-9e4b-fb7c92c301e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e664e0a7-fc2c-475f-a3f0-88936a0c94e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe66a02-9922-43ad-a3f8-ceffee2f1ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ba4d04-3d8f-40c7-8329-33ec0ef36c59",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8989edb-0cc2-4039-80af-8fdb08102d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3016bc9-e7e8-4142-913a-e67ac457d4f1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21134adc-61e9-454c-bf2c-08236d637945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd837f5-614c-4283-865f-c353ce3d3dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d17657-ef2e-45db-a1a4-ce674c5a22aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d6636e-810f-4762-a033-2fe62d7f602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba75d01-4be9-4692-b1cf-2c83607dd76c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81d0350-aeab-4977-9778-3ee987cda10d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c7ae1e-70ce-4471-af91-4cabfb14d6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274e0971-48e5-4d91-b731-7df0198c0abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd211ac-b7bf-4d8a-abaa-2a80abd97a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c50027-c61c-44b4-9c65-f9b4d97fd9e6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523137b7-41ca-4ccf-b839-4ed68adaac52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a085d2e2-3966-41d1-9f89-96cf27ff5552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d70c807-b843-4391-854d-90eeca74de94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13776581-e71d-4504-9840-ccbbae5d26c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8de95a-c841-411f-b634-c432800b1ae3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7888d99-99bc-48ee-ba81-5f6c3a0061db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4151efda-3bdc-437a-88c4-9c792a4087a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6eeda9d-9981-41a2-bbea-6f9ad111af49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc93653-e4b4-4113-ab48-9d0fa40330b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e067eb-d196-4b87-b7eb-4fc5dc7c4bfa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db88450-f09a-47e6-9934-f609ee285842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8e9c51-f538-4982-a5c3-d48f5e28fc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d474daf-c24a-44fd-b071-0504e8c0b274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b64481-981c-4131-8ddb-93996e520b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53591823-3b95-4212-ad93-0f93ded68086",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec81530-0970-4b97-9fe6-42b23be845a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf24a37-76a7-47e3-8ca8-be96d5f00bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6348584d-bee5-4b77-98a3-21276853e027",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84adce1-ea12-4592-8bef-158230f0d6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c34ade-35b7-4832-9df6-f3a7c9f96acc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d090aaf1-32fb-4004-bef7-2362614339c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225bb905-066c-430c-aa86-e8de615341a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ffaa45-5228-4362-9e30-dbded1046232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54db0bd1-cbd7-46ac-b56f-b8cde856b4ce"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9bb4e6a-c1e9-430c-bcdf-0fe1cea27300",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3933abba-3985-4ada-aab8-60c05b9dc898"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "331605fa-6fb3-47ca-9d43-cff9bbbf07ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cc4c71f-568a-481b-83e2-76a85cdec241"
                    }
                  }
                ]
              },
              {
                "id": "08b7ca61-e914-4cf4-ab53-9f0241de3eb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e063f06f-9e03-4a73-b6d4-681b296f7d57",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20939b8a-69e2-4514-af5e-663dcc40dd7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f8dfaa40-10b5-4a52-97aa-6b129ae31927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98669a62-d91a-4e0b-91f7-5f16bf2e5084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3d1cb9f-8e63-4d5a-88c1-0cfd82ffaf45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77a53d61-cfe2-4543-89a0-dc8639c67d86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f54c1fb7-415f-4b4d-961c-26854c7071cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb4511de-0a87-407d-ae7e-b5a6dc9b4f9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e10c1c2-9093-492b-934a-2993b80c2148"
                    }
                  }
                ]
              },
              {
                "id": "14991dfb-de96-427d-8a90-653a8925fb3e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "80ae9e06-3c7f-4521-b9ca-cf447ccc258d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a74a6d9-153d-453a-855c-37a0d3dd0839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8bfe003f-7f05-4798-9a0d-cf207c037d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84829232-95ce-49b8-9513-a966716fccd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1180d94f-1603-4995-845a-4c371f98b56b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "da4cfd99-093f-4b89-ade9-794fb0540c8c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc837cf2-58a5-450a-a321-147361cc8c5a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3f2137d-4d70-449b-8a58-38c0ca4e7ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "21e5889a-889e-45ac-a3d9-d53b4b268e34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "401a05d8-6f23-43d5-8249-b17a2e0295e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5628a9f8-29d4-4af9-9e9e-e8246df81513"
                    }
                  }
                ]
              },
              {
                "id": "39c26a96-5687-4dd7-a7c9-2adef3c8316e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f02a36a0-a919-4159-89dd-15762de92920",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "03713780-a94d-412e-9c07-96475aff98f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34f84e7f-e19d-4818-9d5e-e482f4cbd3d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eb38e5b-0f33-4669-b3a0-4f6128c1bd20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "040af163-b6bd-4cb5-9d93-f3f0f4b5ebb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "19dac1b1-b626-47d0-842e-e3d908e616ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b835fa8b-ccad-4518-8cb0-807d7acc0885",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "689fdd18-fc77-4ca0-8346-145f6a949e74"
            }
          }
        ]
      },
      {
        "id": "a1f08609-0015-4d0c-99a2-b3e863c71458",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1f766135-3325-4ef5-809c-d730850abf1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "079b43f4-c60f-492b-a516-c532e982e79a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16e589f6-7cbc-4790-b584-bd4a42ec4706",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95273757-5192-4c42-890c-58b061a96490",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "769183d2-b665-4b25-b139-29f2a2024fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a08257-ca2f-4168-aa52-d559e29f4a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d6848c9-8733-4c88-b405-6911a6ea4657"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af00e5e4-300b-4a17-902f-6c3ce1c0425e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f9d65a5-ec2f-4ae6-80d3-6f84d11c602c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f079c25-8914-407a-b0ee-9cecf6bedf3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f9ad23e-f5dd-419d-ab5c-763150a33d4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "370acfd0-cd16-4437-a799-a65b3db2db4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6dcf8e3c-8de2-466c-be7a-526bcfa8e9c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fdc61cd-54a4-45c0-b0cc-c5631aa37608",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cba59348-1685-445f-91f0-b379a5c9c63c"
            }
          }
        ]
      },
      {
        "id": "16f15a4b-815b-44a3-99e2-ff32baa54857",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a63f6213-a49b-4fd2-a9d0-3f997986c019",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8758e6f6-fcaf-4bef-a4d2-ee4a0f666712",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04e07c8e-d03e-45ae-b1d3-14cf0b14d9eb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5475daf-ec90-475f-95e2-867c2d71374d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97483841-3909-4571-a7b9-6adb7d613136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6b5c12-12fa-42b6-bab9-c4a74a9ef809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "910cb724-e363-44c4-a366-c5673ec599f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd4606a8-fb8c-4b6f-a531-4dc63ce1e199",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc66865b-2b10-48a4-9316-d84e84ef9832"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "042beba8-12b2-41be-b247-cf5af95ee198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00e518ab-c21f-4f5e-b896-db9dcd8ce88d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e306f63a-33bf-44c3-ab47-245c075b1630",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b011974-02c2-4785-9842-2d7041a5775c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ad1e554-c414-4645-b30f-a0fbffdf7a26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a332756a-0ea0-4e99-883c-983c9956d745"
            }
          }
        ]
      },
      {
        "id": "d973572b-9c2a-477a-af7e-ea292e698237",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "197cead2-a2c9-43b0-90c6-1d63c88d9d9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a0fb7a9-811f-4609-a45b-573e83c26956",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ce8fa32-a8eb-4c8c-96ff-a15a9416e322",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294b57a8-4f7c-4254-847b-981112358a21",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c51e18c-6c39-4b09-bc8d-c7e1abba867d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270a7709-1794-4728-9bab-395fd123513d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f88824a3-0ce7-492b-ace4-70ea55fe17e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b162f4ef-eb31-49cd-b86c-943ad020cb1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d487c0a0-bb19-45c4-89fe-44a2ccabf5df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7d7101d-d859-467d-8f81-fc4d64ca72c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d0259e0-f569-4b70-bb72-3761abbb1eff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85e6045e-61f7-41c4-b102-2dfe48c5c1e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "96c6dd2d-daa4-4287-92be-80ee26a86f24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63e3eaeb-bb4e-43b7-8190-5bbb36a8d92b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17b0a3a3-f3bb-48be-a44f-e0744df4c99e"
            }
          }
        ]
      },
      {
        "id": "66bda994-8a2e-4be0-82d4-da8efe5ccabc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0d64004-f9f5-49ad-99f7-5a399ec391d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1939e32b-9deb-4eab-aefb-821767be18f6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8f8fe97f-a967-41f4-aa4d-a61296806557",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d75b8f-775b-4b0b-b7d9-412839b3ad5d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ea25580-434b-4a37-84c1-33d4540166d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 118.92982456140348,
      "responseMin": 9,
      "responseMax": 3207,
      "responseSd": 346.8790304156115,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701477276189,
      "completed": 1701477319305
    },
    "executions": [
      {
        "id": "8f91c3db-abc6-4de3-b3da-cd793769b481",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01f8c668-0396-4f39-a091-73cf9890deb2",
          "httpRequestId": "40ff5a0f-de3a-4caa-bfc1-644f24cc1365"
        },
        "item": {
          "id": "8f91c3db-abc6-4de3-b3da-cd793769b481",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a1e0304c-ec93-4dd8-aa1f-514add35ae53",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "89425a9a-fcd1-4540-8618-e17b398b405e",
        "cursor": {
          "ref": "6eb72a3a-e3cd-45a7-bd2b-d2edf2759f07",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5d3ced3e-be09-4553-940c-43f1e9deabf7"
        },
        "item": {
          "id": "89425a9a-fcd1-4540-8618-e17b398b405e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f2643989-8f4a-4fe7-a2f5-01264ffb360c",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "cb541022-caec-493c-9d49-22a501dafb18",
        "cursor": {
          "ref": "646f0ccc-3e3f-4a47-91a0-95b7ad1a85fc",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e5b0c37f-6cfb-4718-8dfd-19472ee34d4c"
        },
        "item": {
          "id": "cb541022-caec-493c-9d49-22a501dafb18",
          "name": "did_json"
        },
        "response": {
          "id": "f9d0cc33-7ba4-4463-8138-ec7550e1e40a",
          "status": "OK",
          "code": 200,
          "responseTime": 772,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ebecf6-b54d-4bb4-b9d2-5acaf4f45a63",
        "cursor": {
          "ref": "5198b06f-11d6-4a65-893b-4c3c5496bc4e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4f9fe4c7-00ed-43df-a514-e86f24e3fe92"
        },
        "item": {
          "id": "21ebecf6-b54d-4bb4-b9d2-5acaf4f45a63",
          "name": "did:invalid"
        },
        "response": {
          "id": "d85e072b-64f4-4df0-8a4d-6e2aee3fd9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ebecf6-b54d-4bb4-b9d2-5acaf4f45a63",
        "cursor": {
          "ref": "5198b06f-11d6-4a65-893b-4c3c5496bc4e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4f9fe4c7-00ed-43df-a514-e86f24e3fe92"
        },
        "item": {
          "id": "21ebecf6-b54d-4bb4-b9d2-5acaf4f45a63",
          "name": "did:invalid"
        },
        "response": {
          "id": "d85e072b-64f4-4df0-8a4d-6e2aee3fd9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f384e8-72be-4daa-ae9b-4d2cd1920efc",
        "cursor": {
          "ref": "f4365e0b-e71a-4f51-be84-bdb727511931",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e27647f9-fb12-41df-b104-31cb2e67a85d"
        },
        "item": {
          "id": "20f384e8-72be-4daa-ae9b-4d2cd1920efc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c5ea9049-3118-44bf-a820-8acc0fea0538",
          "status": "Not Found",
          "code": 404,
          "responseTime": 316,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe21dc8-b39e-4b4f-9bde-455a5301fcac",
        "cursor": {
          "ref": "55fcd2ad-72f6-4de2-b6c4-52d5cc765755",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "344503f8-7982-4cc4-a255-4abe04942c70"
        },
        "item": {
          "id": "5fe21dc8-b39e-4b4f-9bde-455a5301fcac",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "43ffd467-c8ee-4c60-be29-58b48d4b9daa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b134415-3854-4c67-a475-b328cd57471c",
        "cursor": {
          "ref": "138742a5-0040-42bf-ac2d-24e8f36c638e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7077c08b-507e-425f-8905-c944444abd78"
        },
        "item": {
          "id": "1b134415-3854-4c67-a475-b328cd57471c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5b7a5082-e3fd-4c7a-b769-1675d74fb425",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b6d8aa-2275-4fb4-a33f-6d8a93ebf64f",
        "cursor": {
          "ref": "c7256e1a-b105-4448-afcd-22c137f260ff",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "36f117ab-704f-4660-8928-19ba651eec46"
        },
        "item": {
          "id": "71b6d8aa-2275-4fb4-a33f-6d8a93ebf64f",
          "name": "identifiers"
        },
        "response": {
          "id": "623a1edd-2bf8-4c2c-a94e-8f4de9ad48fc",
          "status": "OK",
          "code": 200,
          "responseTime": 313,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35689a0c-2336-4077-8a38-f7980c443978",
        "cursor": {
          "ref": "5b4712e0-d247-4d06-9975-400e9e0734e6",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ba7abf28-448f-430b-8a6e-6b684ddf0b3d"
        },
        "item": {
          "id": "35689a0c-2336-4077-8a38-f7980c443978",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9b276ab2-96d9-4a47-93d8-0cb38d3223f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65faa33c-e006-45d9-8564-d75e15fb641c",
        "cursor": {
          "ref": "d15aeb12-2fb3-4cdc-9ec0-097ffbc0b6fd",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "21207c1b-7c5d-4a94-abd4-89570f540515"
        },
        "item": {
          "id": "65faa33c-e006-45d9-8564-d75e15fb641c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "25f0191d-d078-4ac1-aff6-8289732a00a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069e9eb6-0a01-4c6c-96dd-7da5f4e036c6",
        "cursor": {
          "ref": "0bce1db0-3c05-4d53-8ded-4c6423029e3c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "29f1594b-fbbf-4f2e-a82a-88ab14115b12"
        },
        "item": {
          "id": "069e9eb6-0a01-4c6c-96dd-7da5f4e036c6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fd3a0f08-0445-4485-9b3d-4867a18e03fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36067deb-31fe-47da-9761-249f01a84f62",
        "cursor": {
          "ref": "c5e149b3-3bbb-4045-9b1e-1e84064372ae",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6ab66498-1890-4b44-97bd-affaa58a0ccf"
        },
        "item": {
          "id": "36067deb-31fe-47da-9761-249f01a84f62",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "73296516-695c-45c2-a1b6-0c42e5c197de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5a52f5-d5b6-4e91-8788-216b376a41ab",
        "cursor": {
          "ref": "1f069dce-6250-4a26-a24f-264958734e24",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ca83dac7-ca87-4d89-98ae-ae58a70ac294"
        },
        "item": {
          "id": "2f5a52f5-d5b6-4e91-8788-216b376a41ab",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6d97343f-acca-429a-ac99-f16d06808854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad77af3-a7b3-40b1-9949-408fe4582a01",
        "cursor": {
          "ref": "7ad596a8-144a-4bf5-b548-4c5cc16bfffa",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "341e211a-2812-43dd-b198-46a01ac8d0f2"
        },
        "item": {
          "id": "2ad77af3-a7b3-40b1-9949-408fe4582a01",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ed25aec8-07db-4892-abc3-313f49184bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad40149-7af0-46f6-8ab4-4b3072303040",
        "cursor": {
          "ref": "2276de40-abc8-49b5-9341-42315665745f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "456c2874-c15f-482e-8ddf-0796782b7d6e"
        },
        "item": {
          "id": "7ad40149-7af0-46f6-8ab4-4b3072303040",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "31ca811f-0122-4bb1-b3be-6592b1198f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6c3bdc-edf7-457f-b691-7bc458ddcc15",
        "cursor": {
          "ref": "291b702d-086b-4149-846b-3b754ed227c5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "306ccbad-716a-4ea3-9699-b23e5199f8d7"
        },
        "item": {
          "id": "cd6c3bdc-edf7-457f-b691-7bc458ddcc15",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "283d9b31-8f3f-42eb-b8d9-79e5be067a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5a8c98-7166-473c-94da-8f16f1518ca6",
        "cursor": {
          "ref": "392d225a-1825-45d8-bda1-c915b695aedc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "206763b9-f948-4308-bd4c-c1cb4694231b"
        },
        "item": {
          "id": "cf5a8c98-7166-473c-94da-8f16f1518ca6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4f78d402-7651-40c8-a315-86448770890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5797ef7f-140c-4513-868a-eb9a3878c2d3",
        "cursor": {
          "ref": "c2993495-431b-48df-b51b-bd760c0951af",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0106479d-1efe-4831-924f-e79a6abdee0d"
        },
        "item": {
          "id": "5797ef7f-140c-4513-868a-eb9a3878c2d3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9fbf84a9-d583-450c-82d1-fb39317c49aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046b3fd9-4386-4e5f-affa-5febc2520c45",
        "cursor": {
          "ref": "9c3e794c-51a2-4868-8d58-e935507bf012",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "39b35f55-1f7f-48a1-8dde-6d0a4a87af90"
        },
        "item": {
          "id": "046b3fd9-4386-4e5f-affa-5febc2520c45",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2782a3db-f3f1-4fe3-a671-d251f3f6d526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba20bb2-2f96-4082-a9e3-f4983fa26109",
        "cursor": {
          "ref": "1d868d3a-9b37-4a4f-9e4f-19270d462838",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "acdf12b8-0552-42bf-b0bf-bb3b15eb3938"
        },
        "item": {
          "id": "cba20bb2-2f96-4082-a9e3-f4983fa26109",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cc0bda5b-4f24-4521-b325-032d0db1dc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe9b9dd-2e40-4c94-890a-f05e4e0e431a",
        "cursor": {
          "ref": "4f600f15-0eb3-491e-854a-6096d2d5c93e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cfb52da9-7dee-4444-af99-2542cf635f8a"
        },
        "item": {
          "id": "bbe9b9dd-2e40-4c94-890a-f05e4e0e431a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3f58b40d-fd63-46d3-816c-aa6a828c73ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff9cdd9-ccb8-479c-86cf-00d85c0ac0c8",
        "cursor": {
          "ref": "95c26b63-4e59-4caf-9cc2-0e3844c2d7cb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9ebbc557-ebb8-4d80-8ef1-667a358a3457"
        },
        "item": {
          "id": "3ff9cdd9-ccb8-479c-86cf-00d85c0ac0c8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2f08bb20-4c2b-4094-aa81-72c6cc2bfef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771acd6f-4924-47a8-9f5c-c56c793c2203",
        "cursor": {
          "ref": "45928be7-8e8e-4703-8a30-5afa7a5987b6",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "811a70ea-71b8-4218-a84a-0dea20d833e4"
        },
        "item": {
          "id": "771acd6f-4924-47a8-9f5c-c56c793c2203",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "87b9c83d-95c8-4769-bc4f-490718815b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820cb831-42c8-4dd5-91f0-5e9ed35f65c2",
        "cursor": {
          "ref": "981dc8ff-f830-4cd3-840c-0722fcd168eb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4f4d10df-b916-4194-9192-7fea082f421f"
        },
        "item": {
          "id": "820cb831-42c8-4dd5-91f0-5e9ed35f65c2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "edfe6cc1-2d70-47ff-bb06-e7f1fb84ab3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693b5eff-f31e-4f4e-896f-52dfa3035be9",
        "cursor": {
          "ref": "35c15873-4a95-46e6-ada5-f4b2b6d40cae",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7b3a289b-32c4-4a54-b820-35ef8fe6726e"
        },
        "item": {
          "id": "693b5eff-f31e-4f4e-896f-52dfa3035be9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "33243bfa-8765-41f4-b204-c2e822f4ed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156c3787-cc97-4d81-a027-ad4d3ae636df",
        "cursor": {
          "ref": "45af0005-44ed-4f11-b2b9-25b0565f8839",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "640a7976-f703-4cfb-8d26-2b24003ca4a8"
        },
        "item": {
          "id": "156c3787-cc97-4d81-a027-ad4d3ae636df",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "96e3b09c-2826-4edf-a996-fd67fdb1486e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5414a90a-1d72-41f9-8cab-8db89e7c5276",
        "cursor": {
          "ref": "ffffc88c-17a7-422d-8f4d-eab40aa861c0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f8e2ca84-6938-4511-b292-accae62e64fc"
        },
        "item": {
          "id": "5414a90a-1d72-41f9-8cab-8db89e7c5276",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "51abbbdf-f254-46f3-9ade-001ca98224d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cdb254-fb43-4244-807f-b3a4aec11f4d",
        "cursor": {
          "ref": "3f3bf70c-cb20-4404-ade9-00d00de8dfb4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9f46b719-47ce-483a-9ceb-54ecc53bc63d"
        },
        "item": {
          "id": "91cdb254-fb43-4244-807f-b3a4aec11f4d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "45959be2-3d55-4582-aa88-9b12ebc23dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fbc5e3-af89-4f54-af2b-136b88d265f6",
        "cursor": {
          "ref": "b18baf44-07fb-4b58-9150-6d714a7cc22b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dbfd34ad-b24a-49c0-8d8a-f32b0665e423"
        },
        "item": {
          "id": "68fbc5e3-af89-4f54-af2b-136b88d265f6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "08dc4359-310e-4bd7-85aa-d99c4db47bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437b54a5-d0ba-412f-abf1-a29f8c553e44",
        "cursor": {
          "ref": "a2ec148a-a14f-4046-aaab-8d714863bcf7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2a694e6a-8e8a-4b9e-af11-2a41fd02efc3"
        },
        "item": {
          "id": "437b54a5-d0ba-412f-abf1-a29f8c553e44",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e4c1e159-f258-4977-876b-c207fc0e9f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d54e46-7dd9-4923-9d7f-534fea6d66c9",
        "cursor": {
          "ref": "8c8b5d62-77ae-4a87-938a-1ed05a31e63a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "18b712f8-241e-403f-ba05-2ac33a94a5f1"
        },
        "item": {
          "id": "88d54e46-7dd9-4923-9d7f-534fea6d66c9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1ed3e59f-9f39-451a-9eea-ea1bfbbb564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcc64ec-8516-4e74-8ebb-d6d38be4dbcf",
        "cursor": {
          "ref": "a6d7eae2-8ceb-4547-b1ed-eae41fc32bd1",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e541bb0-5fe6-4263-ae39-34255f6c53f3"
        },
        "item": {
          "id": "9fcc64ec-8516-4e74-8ebb-d6d38be4dbcf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1aad3904-9cfb-4e3e-a5c8-de5e04f28261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffea5a1b-f462-43a6-bad1-05734d84ad48",
        "cursor": {
          "ref": "61ec7b38-a3db-43d7-ba57-b064216640dd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "96ca1447-0154-486a-bce9-dff02d381c15"
        },
        "item": {
          "id": "ffea5a1b-f462-43a6-bad1-05734d84ad48",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fd6f7e61-18e7-4ba5-88fe-0ecabf07affb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f55a1d-9974-4d3a-a78d-a25fccdd4b41",
        "cursor": {
          "ref": "be716496-65c8-4c64-967e-f3e4a7e73ac4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "56f927f3-ef31-43e5-910f-e2214f21912c"
        },
        "item": {
          "id": "d8f55a1d-9974-4d3a-a78d-a25fccdd4b41",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e7edc2b9-b629-4f11-aba5-c96f8df018ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a669a2f6-ce7a-4397-8e4a-319a90c8619f",
        "cursor": {
          "ref": "2028fe2b-e324-4dc5-b3e5-f1a1884a094d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "07fb1fc8-f4b6-42b9-a36b-e87e6debdfb0"
        },
        "item": {
          "id": "a669a2f6-ce7a-4397-8e4a-319a90c8619f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ff211d71-3eab-40dc-a1d1-8e21e2a307d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46ae42a-8e4e-4e2f-91d1-2ae45e5e1669",
        "cursor": {
          "ref": "05b64cf1-d38e-46e5-8340-f279cce49457",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a5784e59-975a-47e2-943b-4ec6f4cc5f54"
        },
        "item": {
          "id": "f46ae42a-8e4e-4e2f-91d1-2ae45e5e1669",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "65b693f9-bef4-4528-92f4-8a875c5b7df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb29ce68-923b-42e8-a805-d57c30a778c5",
        "cursor": {
          "ref": "8661f9e8-8124-4036-83c4-0c34527c4328",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5b05c6e7-d0b9-4eb4-a7df-46ec2a8c5915"
        },
        "item": {
          "id": "eb29ce68-923b-42e8-a805-d57c30a778c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ca217dec-07e6-4ba4-8449-9a00a7593a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276f45de-cadc-4fc9-87d3-e3b61031439e",
        "cursor": {
          "ref": "b8c10443-d798-4c52-a359-cb986ed685bb",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "944996c7-42c7-46a5-b404-85daaca9602a"
        },
        "item": {
          "id": "276f45de-cadc-4fc9-87d3-e3b61031439e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9d1e72b8-aed6-43ac-8dbf-381c0d2774f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82387cc7-bcfc-4011-a794-bcfed56ee6c4",
        "cursor": {
          "ref": "ea6869d0-7cc9-4568-b46d-5946348123cf",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2b1cfe3f-9b9d-438c-88f4-4ce209c2a564"
        },
        "item": {
          "id": "82387cc7-bcfc-4011-a794-bcfed56ee6c4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9c1c9ee5-8da0-488d-afe7-7d518d0df8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4864f876-355b-4f46-a4be-15e0289ef201",
        "cursor": {
          "ref": "0502f87b-bd41-4163-8079-36c945f1a932",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77a9c810-3b17-4b28-babd-eba85c7dcc77"
        },
        "item": {
          "id": "4864f876-355b-4f46-a4be-15e0289ef201",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3ed067ce-85ba-4846-a716-f033fa4ec56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7baf9d6-af89-4dec-a2be-7c88202a9297",
        "cursor": {
          "ref": "9ac40459-9995-4d37-90a6-ce41d6391198",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1386e2ab-4d12-4602-93af-2659e78e0c46"
        },
        "item": {
          "id": "e7baf9d6-af89-4dec-a2be-7c88202a9297",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "966c3dff-0f55-4c74-bcf4-77b33b0f8415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb7bcfc-966f-43f0-825e-e16cf38c6593",
        "cursor": {
          "ref": "52c403f2-58bd-4d94-bd95-df4fe2e87649",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "acafb8a3-18c2-44df-a826-783d555b977d"
        },
        "item": {
          "id": "8bb7bcfc-966f-43f0-825e-e16cf38c6593",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dbafb0fc-0d91-4380-be76-acb8887960d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b067a56-5e2e-4046-b1bd-1b809dac02fd",
        "cursor": {
          "ref": "417bb79b-deae-4587-a1be-d2ec46650c01",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3599186f-4d35-496e-b89d-14191ce70e2a"
        },
        "item": {
          "id": "4b067a56-5e2e-4046-b1bd-1b809dac02fd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ad423a9e-e239-47fd-9367-87d4a5b05824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfcc1f8-dbe6-4247-9b58-b9113fc630ff",
        "cursor": {
          "ref": "196e01c4-c4ba-442f-8f03-812e7b161475",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0a5452b3-cab5-4f68-b88b-3aac768e3922"
        },
        "item": {
          "id": "fdfcc1f8-dbe6-4247-9b58-b9113fc630ff",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ba6a846e-d82a-4611-8c64-7078966fcc2e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 356,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2030b47f-a7ae-4203-9911-6a797101b2cc",
        "cursor": {
          "ref": "a3c4caed-7fff-475c-9f05-243e1cbd9903",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "64730cdd-c2c2-4f84-9be1-eee31e738cf0"
        },
        "item": {
          "id": "2030b47f-a7ae-4203-9911-6a797101b2cc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b0decb65-cfb4-4fb0-8e5f-715e42452af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ea1fe3-636c-4d59-9956-5ec2fef5136b",
        "cursor": {
          "ref": "007e57df-41bb-4bff-9e0c-64607af319b8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "601612d5-6133-4f7f-a82b-249659b22773"
        },
        "item": {
          "id": "79ea1fe3-636c-4d59-9956-5ec2fef5136b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f8d85b71-ee7f-4722-afb6-7efd9b91cce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbcc71f-1735-4cfe-b72b-8b10df024088",
        "cursor": {
          "ref": "51278986-706f-46a9-8102-8be91eed583d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4a38bc71-75fa-48b1-a32e-eed269047188"
        },
        "item": {
          "id": "2bbcc71f-1735-4cfe-b72b-8b10df024088",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c9fcd113-5a48-482e-a330-c4782e26a89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f6f5e6-3eea-47ee-8ff5-bae571ed04d5",
        "cursor": {
          "ref": "9f67a8fc-edec-40ec-8bcc-65e1f73e8125",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e7469891-47fb-4d80-8990-73ee3adb7eea"
        },
        "item": {
          "id": "b6f6f5e6-3eea-47ee-8ff5-bae571ed04d5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "77146bad-5c7a-4c7b-b762-3e2f73fd37bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017bd2f9-d33e-4634-883c-049cf387fa4c",
        "cursor": {
          "ref": "82d31b9d-0862-4b77-9339-8c3c68eae50b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "36ac35af-7740-40a4-b6c1-606dfa589b05"
        },
        "item": {
          "id": "017bd2f9-d33e-4634-883c-049cf387fa4c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ab287423-e438-44f9-a339-cf53a180d5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6f0e13-87eb-4c52-8880-d1f1a6180ac3",
        "cursor": {
          "ref": "5939ce1a-0587-4343-94c8-0e9a9f231d57",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a5e80977-d1a3-4ed9-b94c-5e4d26819143"
        },
        "item": {
          "id": "8a6f0e13-87eb-4c52-8880-d1f1a6180ac3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a883a3ab-1e89-45a0-9b6e-f8d12672a84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b1129e-1d61-4e09-9978-3ef61fc0b03b",
        "cursor": {
          "ref": "b7025f20-0217-437c-a5b5-48bbbd90ecdd",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8ae8d071-0e66-44e8-bd62-de766d006e8f"
        },
        "item": {
          "id": "83b1129e-1d61-4e09-9978-3ef61fc0b03b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4270503d-ea56-4ba3-9790-00a9d0b79ce3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b885af-0ac5-4dae-aaae-1caa6fa337de",
        "cursor": {
          "ref": "be2a5bcf-7d16-47ba-b28a-0b5b8e60e118",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ec0cd66e-2878-45ee-91b1-43c7ee4c1df5"
        },
        "item": {
          "id": "48b885af-0ac5-4dae-aaae-1caa6fa337de",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "431dffe6-9e8d-4fb5-8f2c-4736ab346cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241cbeee-093c-43a2-83a2-a69c731914ba",
        "cursor": {
          "ref": "77a0f97f-288d-479f-92da-76f8c449f978",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6ecf6987-55cd-4f17-963a-f6cf0b5ed5a5"
        },
        "item": {
          "id": "241cbeee-093c-43a2-83a2-a69c731914ba",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b804aef8-383d-4d5d-960a-20a065214caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8121e3-bc4f-4605-b60c-5303bd11950b",
        "cursor": {
          "ref": "6d28f476-584e-4b97-a73b-c3505c01af37",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd4798e9-c6da-4312-9ff0-7c51ec288b17"
        },
        "item": {
          "id": "2b8121e3-bc4f-4605-b60c-5303bd11950b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6821ff37-b465-4dc3-83e4-1172b98eea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5239878-e275-4510-bd06-fdee8b8c35de",
        "cursor": {
          "ref": "d1718971-e70b-41d4-ab96-795bd6a80766",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "69c82314-4cf8-48ed-9997-d08e2317b9f8"
        },
        "item": {
          "id": "d5239878-e275-4510-bd06-fdee8b8c35de",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "093920f0-e653-403e-a5a6-bd0eeed3f6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ab32ca-be8c-484e-9d1c-c3f362a5a9f1",
        "cursor": {
          "ref": "3c000ffa-772f-4458-8a68-e477c239ede0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "819259f9-e2ae-4044-a4a7-c3e62985784e"
        },
        "item": {
          "id": "25ab32ca-be8c-484e-9d1c-c3f362a5a9f1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "020ef3a8-4695-486d-9f60-517d73493698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cd9b7e-4ee3-4a0b-add7-c9988bd96085",
        "cursor": {
          "ref": "c5c0c8d3-820e-4776-9835-72fb6cdcb6d3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "114b9992-1e86-4ad6-9f27-fb3d13bdf938"
        },
        "item": {
          "id": "31cd9b7e-4ee3-4a0b-add7-c9988bd96085",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1b278521-ba34-49ad-bbc7-5ae707735359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a97f56-a8a3-4429-8c34-7c3ee19a0091",
        "cursor": {
          "ref": "926364f9-43e7-467f-bd9b-11bc158e7730",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "61e25b0e-4c11-47de-8b54-703c3a423a0e"
        },
        "item": {
          "id": "d2a97f56-a8a3-4429-8c34-7c3ee19a0091",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dee919a7-f866-4b71-8304-066041c9220c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fada9f-1187-4783-a925-eed65455f9b5",
        "cursor": {
          "ref": "ef6ad908-311d-429c-b7c0-323d6d39142c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5766ba2e-1c8f-499f-aa03-527c62a2fe4c"
        },
        "item": {
          "id": "12fada9f-1187-4783-a925-eed65455f9b5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b17106a9-c210-4da1-87d2-bd68a8dc3bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c936b3eb-a532-4942-a15f-8a8c244826cd",
        "cursor": {
          "ref": "16a143ab-f8f3-411f-bb9c-5d16dbcaf7f2",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c6b13817-0148-4594-88bf-d9184cbf147b"
        },
        "item": {
          "id": "c936b3eb-a532-4942-a15f-8a8c244826cd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "265cbd9e-f46f-4896-8edb-f84b4e0123ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62d1eab-b63d-4769-8c89-e53f141705a2",
        "cursor": {
          "ref": "faedf4c9-54f5-44c1-bf8e-1d7aa446ff58",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "72549a5e-72d5-4c94-b278-b499be86c188"
        },
        "item": {
          "id": "f62d1eab-b63d-4769-8c89-e53f141705a2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bc25448b-cf36-4223-a4ab-7ecb044c3a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73449be-a98e-4039-8cd9-7456c241a962",
        "cursor": {
          "ref": "8dce61c5-2411-4ea0-935d-2dc35a491987",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eff2c5fc-c2a6-4432-9f7f-5a4fdb16eb2a"
        },
        "item": {
          "id": "d73449be-a98e-4039-8cd9-7456c241a962",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "85973a57-2b44-4a1a-aab2-4eccc17bfcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cb1e1b-30b7-437d-9273-cbc00a0f8032",
        "cursor": {
          "ref": "9f0af11a-95a4-4384-9f63-74a79fe41b5a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c7735540-c907-4149-9f51-1a71fad41d5c"
        },
        "item": {
          "id": "f6cb1e1b-30b7-437d-9273-cbc00a0f8032",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e8cd5442-c974-451e-95a8-bc48a7b8078c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca80f8c8-45ec-47d5-a888-daf319a027ac",
        "cursor": {
          "ref": "ceb12fa8-04df-4a63-a63f-3cc33a5f2d93",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "37e2af53-7d6b-4258-96eb-cb2ef15e134e"
        },
        "item": {
          "id": "ca80f8c8-45ec-47d5-a888-daf319a027ac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "11572f83-740f-4dc7-b2ec-e4065c4e4be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcbcb02-1615-4628-942f-1525d727f4e7",
        "cursor": {
          "ref": "05b483b4-c761-4d21-a425-f19fb61bb06b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e90c5f63-5acc-4057-b870-133408eb03fb"
        },
        "item": {
          "id": "2dcbcb02-1615-4628-942f-1525d727f4e7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c748e095-4ec3-4e01-b599-27b14c208bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6b9dd1-b9d3-4e31-9b7c-ab391a9fbca2",
        "cursor": {
          "ref": "681f062c-22c1-4bfa-a275-d629791e3e40",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ce2e2367-4c4c-4774-a54a-d6c141549616"
        },
        "item": {
          "id": "bb6b9dd1-b9d3-4e31-9b7c-ab391a9fbca2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "02353db4-1e45-4fbf-ba59-9bcab3a2a2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c06d67f-a72d-48ba-b93c-856b50a1e309",
        "cursor": {
          "ref": "87d1cd07-6a9a-464e-8b0c-b583ef20ce10",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7117e054-16db-4ded-83c2-b986d3687c01"
        },
        "item": {
          "id": "8c06d67f-a72d-48ba-b93c-856b50a1e309",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8b233024-a5ff-43e6-a597-cca6592d3ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c142f3eb-8c71-4233-b6a1-51fc6ee4648f",
        "cursor": {
          "ref": "e315db1b-127b-434c-b1d1-d425d98b5617",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "caf8291e-06ce-4f22-a818-5e5b8ea6fb1c"
        },
        "item": {
          "id": "c142f3eb-8c71-4233-b6a1-51fc6ee4648f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "687bd533-c406-467a-8b99-fa247239a66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245cdae8-5ab5-4ee9-9e07-43f13a93dd9f",
        "cursor": {
          "ref": "5cf64dfc-be66-49e4-89c7-2260b9691dbc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "16c43d52-7c50-4a24-9a15-433655769d83"
        },
        "item": {
          "id": "245cdae8-5ab5-4ee9-9e07-43f13a93dd9f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c0f0ca5c-a321-443c-9f43-62aed2007038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8180c284-6f34-41cd-b9cb-690081d44aa6",
        "cursor": {
          "ref": "bbdecfd8-cecb-4b7b-bf75-d1a8c0d5b4cd",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "da1d2769-7ffa-43ca-a08b-8367013de826"
        },
        "item": {
          "id": "8180c284-6f34-41cd-b9cb-690081d44aa6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5994eed3-4f18-41da-8a74-9267a2913486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3d8d9e-b2a0-4a2e-aeab-61ed4014e508",
        "cursor": {
          "ref": "2216d8c9-d7d3-4d07-ae73-160c0d1cc70a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bc079e05-af33-4fb3-b283-cfd729b67cfa"
        },
        "item": {
          "id": "5d3d8d9e-b2a0-4a2e-aeab-61ed4014e508",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c907e4da-a34c-4537-b38c-7a60e917b23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17314670-70bb-4631-b204-e470770653a2",
        "cursor": {
          "ref": "3ab12196-6944-4aae-96e0-78b68729ffcc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "99fa2944-ef4c-47c6-827e-1d97929085af"
        },
        "item": {
          "id": "17314670-70bb-4631-b204-e470770653a2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a55c1c17-c642-4608-ab0e-df81d64957b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4634a3-0af4-4849-8c5c-32943cab173a",
        "cursor": {
          "ref": "722f44c0-348a-42d2-a1ae-b2093adaac96",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2a61eb75-f770-4b71-9068-eadc2f64215c"
        },
        "item": {
          "id": "fd4634a3-0af4-4849-8c5c-32943cab173a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8eac3b33-5530-4f07-9e34-777a4680aed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c135cb-6f78-49a5-946d-fd6591c47117",
        "cursor": {
          "ref": "55536697-fb7d-4f88-aaf9-eed2096d942b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "61ad4749-3cba-4d7f-a431-db5898315eff"
        },
        "item": {
          "id": "f5c135cb-6f78-49a5-946d-fd6591c47117",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c814bb5b-2bfc-438c-9803-35261be8f58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68a2b5a-9dfa-4a01-9a49-2b1d49cece0f",
        "cursor": {
          "ref": "ea08d40e-40ae-439f-a90a-aebf73466e4a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "81e9e690-447c-4d68-851a-93635026a26e"
        },
        "item": {
          "id": "c68a2b5a-9dfa-4a01-9a49-2b1d49cece0f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "48d29456-e7c1-4067-a1e7-0ed23e3e8aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b9a7cb-f73e-4f19-8b80-c976a98868ba",
        "cursor": {
          "ref": "bd59ac49-5053-41aa-ad35-08bb28747c5b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5b859c40-e5dd-4b13-8ba8-ca17803ed2b5"
        },
        "item": {
          "id": "f2b9a7cb-f73e-4f19-8b80-c976a98868ba",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e3c14bbd-2e4b-429b-9be1-c673a7c25a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1673ef7b-1a1c-43c4-b12b-2a6ceace903a",
        "cursor": {
          "ref": "df47b26e-6e62-4ca4-9085-534843cc05da",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4e9969db-8bf1-4249-b2af-d577837be525"
        },
        "item": {
          "id": "1673ef7b-1a1c-43c4-b12b-2a6ceace903a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "be547b26-de0e-474f-adc5-2eebf61d8388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30dea13-3238-44e0-9757-24eb25768939",
        "cursor": {
          "ref": "7cf630a8-e192-4852-a295-f2e82f1fcdef",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "933fd04a-b9b5-42bc-bee0-d4ce22a63c0a"
        },
        "item": {
          "id": "d30dea13-3238-44e0-9757-24eb25768939",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3c8f6c44-a0a8-44b0-97a5-f5ef42e3a4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead98a27-15cb-49a5-871d-c07dada5faba",
        "cursor": {
          "ref": "61de8a37-ca15-4a82-b908-fb2fef84d0cb",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "12fdc102-a1c5-47fe-ad0a-993c1e56ec88"
        },
        "item": {
          "id": "ead98a27-15cb-49a5-871d-c07dada5faba",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b3fef2c4-a0da-4f9a-92a6-55b9a877042c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ab9e22-d34a-4a4f-a937-4ef31d178dcd",
        "cursor": {
          "ref": "3b3618cf-d8d4-4179-ac10-836bd73e65d7",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e8b9339d-d308-418a-977b-2ee4d86d3433"
        },
        "item": {
          "id": "63ab9e22-d34a-4a4f-a937-4ef31d178dcd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "af7f605b-c69d-4691-b749-a7531b75b694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07237fc8-283c-44d6-a429-ccbf9848ac5c",
        "cursor": {
          "ref": "2975391b-d979-45e0-9aa4-c7aca6bdd8ae",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6848f756-9f52-40b9-b49b-2734a617b779"
        },
        "item": {
          "id": "07237fc8-283c-44d6-a429-ccbf9848ac5c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b0848c83-233f-426e-8ea1-9c6b97d5a88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64f4dd2-0e66-4017-a75e-5721fa650455",
        "cursor": {
          "ref": "f692d05f-602a-4042-9ec6-78b5f48abc2f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9cb4d9b0-fa45-4348-8eb3-ed8db3fd660a"
        },
        "item": {
          "id": "d64f4dd2-0e66-4017-a75e-5721fa650455",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "af725d7f-20ac-44c6-ab2e-2f7813c4fabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c4062e-b547-4916-99ef-d48a67f726aa",
        "cursor": {
          "ref": "550ad82d-2625-45e6-ac0d-e424e5dae9dc",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ec7f07bb-cbee-4bba-9629-97884bc9f02b"
        },
        "item": {
          "id": "67c4062e-b547-4916-99ef-d48a67f726aa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "87a6c710-f12f-47f8-adda-594b95c35e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ed2321-2d07-4c09-b6c7-322b9002f4f2",
        "cursor": {
          "ref": "8667e89c-1b5b-4a1b-839f-ce20f1e3ea3c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1a30f3c5-c284-4cb0-9646-192a4f67b856"
        },
        "item": {
          "id": "38ed2321-2d07-4c09-b6c7-322b9002f4f2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5c5f2639-200b-43f8-a6f8-249a3f57ea33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be755ae9-f40f-4b5b-bf2a-a68529bfb36d",
        "cursor": {
          "ref": "b20a8a4c-b88b-4b8b-b793-28304f67930a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e407ed56-c9c8-47ab-be4d-e34eb5ae0326"
        },
        "item": {
          "id": "be755ae9-f40f-4b5b-bf2a-a68529bfb36d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "746e0cca-8f08-47d1-8f37-0b8b28044694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72297857-5605-4b73-85df-797645eee05e",
        "cursor": {
          "ref": "c4c10a78-1370-45ee-bb73-291165ff97c5",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "06b6cbd1-4d34-4abe-81f4-37fd04a15e1a"
        },
        "item": {
          "id": "72297857-5605-4b73-85df-797645eee05e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3a7e96ad-643d-4ee3-a510-71fc05b3ff44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3c6042-360d-44c6-8112-bee88f9cd01d",
        "cursor": {
          "ref": "740f716e-4880-40b7-9905-97ac2e9d8e2b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "be27e359-9a10-4411-a47f-d5d8d5bb7381"
        },
        "item": {
          "id": "fc3c6042-360d-44c6-8112-bee88f9cd01d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c48bceab-e93e-48d8-a5ec-0578f3f14508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9954cfe-ea59-4c06-8c84-87239131acd1",
        "cursor": {
          "ref": "1e78e8cc-54f8-4a2a-a7ef-f37bdd8af5c3",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4b508031-76d1-4b98-993a-307fab73af23"
        },
        "item": {
          "id": "d9954cfe-ea59-4c06-8c84-87239131acd1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1c95d137-085d-454a-a1a7-6c9db6f5cc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fb7697-a3e6-4f5c-9c16-bb4cff6eb0aa",
        "cursor": {
          "ref": "a41e6174-43bd-48eb-8455-099c24743c40",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dc473545-f5f8-48d8-9345-84d1a794630a"
        },
        "item": {
          "id": "d9fb7697-a3e6-4f5c-9c16-bb4cff6eb0aa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c4e7890c-6cf5-4653-be21-360f1423563c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19de828c-8cc4-4f7d-acc6-88280324d41e",
        "cursor": {
          "ref": "b55c0fe4-1be8-4654-bb2b-cd1b2c2f6e19",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1c5dd881-fcf9-4c25-96d5-529e9e36fca1"
        },
        "item": {
          "id": "19de828c-8cc4-4f7d-acc6-88280324d41e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4b178293-9899-4df6-aa26-618efebe845b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1960507b-fa44-4bed-ad7e-08a08db008c8",
        "cursor": {
          "ref": "ca4de765-0a78-4cca-955c-03d44e4e5bf1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "64253981-e5fd-49e1-8916-3eec0f3ef2de"
        },
        "item": {
          "id": "1960507b-fa44-4bed-ad7e-08a08db008c8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f19e9335-0c79-4c72-8c6a-c5a310c1970b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7294321-a91e-47db-9087-d12d0742fc9e",
        "cursor": {
          "ref": "d1c71aff-3c36-44e7-9ed6-826811cd35af",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7530ecea-abb6-4729-9ecb-1c87c10affea"
        },
        "item": {
          "id": "a7294321-a91e-47db-9087-d12d0742fc9e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0ec599c5-1529-428c-816b-d098356edb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a975da2-8383-45a7-a40d-822e271a37ba",
        "cursor": {
          "ref": "6dc59eac-9fe4-4d12-8a76-212964092d11",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "28a7165c-b83f-44ff-8ec7-516eab6b52d3"
        },
        "item": {
          "id": "9a975da2-8383-45a7-a40d-822e271a37ba",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5ae2da4e-bc89-400c-8d85-6ae324fd0976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a195428-a2a9-427a-8d8e-f063d25f29df",
        "cursor": {
          "ref": "c845a161-8a05-4bd2-8099-947726a1d7d9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f49254a5-8e86-4519-8763-d08bf7e952ae"
        },
        "item": {
          "id": "8a195428-a2a9-427a-8d8e-f063d25f29df",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "49252543-13dd-45c4-8d0f-4136f96247c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f2f24a-970e-4db2-9439-f6ddc63b4522",
        "cursor": {
          "ref": "5c8f183e-f00d-4864-8080-0a98d7699c6e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "78ff3f04-b062-4698-ad81-9959882243d7"
        },
        "item": {
          "id": "28f2f24a-970e-4db2-9439-f6ddc63b4522",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8db51c30-a89d-41bc-a2aa-1edf9beedfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cce913b-2010-4b65-9ba6-4e75bbbf7bac",
        "cursor": {
          "ref": "96155163-2292-40cf-ac67-1c09d502549f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f93c6222-3464-40f1-ad05-7e419b6c8cbe"
        },
        "item": {
          "id": "7cce913b-2010-4b65-9ba6-4e75bbbf7bac",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a868511b-9067-42e0-a41c-70010db5d58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97acfec-d68c-4432-9f17-cc4a51f4a9d1",
        "cursor": {
          "ref": "f8125694-e601-48cc-838c-dfafeb64c745",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "52d6b5fc-572e-478c-a6e3-f035af283bd0"
        },
        "item": {
          "id": "c97acfec-d68c-4432-9f17-cc4a51f4a9d1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8a0c01d5-a5de-4834-b0e9-63810a9232a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dc9a6e-dba0-4e4e-a2c2-c11e1b40955b",
        "cursor": {
          "ref": "c6512a6d-bd37-4939-8bbe-76179e25d036",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3dc183da-5c32-4ac2-8db0-9510bdb8a916"
        },
        "item": {
          "id": "d0dc9a6e-dba0-4e4e-a2c2-c11e1b40955b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f6b43542-b358-456a-8368-b70ff0799c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b508e161-30fd-4dd9-b26d-bd534d04591b",
        "cursor": {
          "ref": "9eb93901-84e8-48e5-a436-bd9c87324402",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7f86ca81-ed56-4c70-bf6d-0d94439561e8"
        },
        "item": {
          "id": "b508e161-30fd-4dd9-b26d-bd534d04591b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "729a9254-f64e-4e80-8448-5572f8231c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7caed5-33a2-4252-b668-ca9d03a79fbb",
        "cursor": {
          "ref": "abb66316-6614-4012-a4fd-f6569f6277db",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0e172dfa-4e46-4cdb-8ee8-e5fe593a2eff"
        },
        "item": {
          "id": "ef7caed5-33a2-4252-b668-ca9d03a79fbb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "950873d4-556e-48ea-a78c-6bc72cb97407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d005f37-6342-49f6-adea-82e509dd8f16",
        "cursor": {
          "ref": "8d0f4541-48a9-4676-9b0c-2fe341edbb07",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b3aabe91-e99c-4cf4-b793-bfac31e02c01"
        },
        "item": {
          "id": "0d005f37-6342-49f6-adea-82e509dd8f16",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f91ed9c4-86ca-4798-8da5-5671de0d9a0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b84639-480a-4741-94c3-df4849c1eee6",
        "cursor": {
          "ref": "1100522c-6fae-4e07-9551-a27a0c0de2b7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e6eaad06-018e-489c-8227-2b384069be28"
        },
        "item": {
          "id": "c4b84639-480a-4741-94c3-df4849c1eee6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e7db3bb5-55f7-4e5c-901b-233dec13574e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "512346d4-2470-4cec-ba3e-b2c4ead013ac",
        "cursor": {
          "ref": "a1181046-6f44-4ac1-92ad-1373b3e018ba",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d4665edb-c574-4760-a84d-65a71bcdf1c3"
        },
        "item": {
          "id": "512346d4-2470-4cec-ba3e-b2c4ead013ac",
          "name": "credentials_issue"
        },
        "response": {
          "id": "89be6cda-6108-4136-b7b7-90f08f83d9f6",
          "status": "Created",
          "code": 201,
          "responseTime": 3207,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2335d0f0-aa3f-404e-a614-de1ae659aea7",
        "cursor": {
          "ref": "aa8d500a-fa03-4696-b27f-4a5936e7f613",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "73d56e00-a869-404a-b897-02e4ad8b5afb"
        },
        "item": {
          "id": "2335d0f0-aa3f-404e-a614-de1ae659aea7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3c2e9456-6898-4199-b0b7-07dc1d153f16",
          "status": "Created",
          "code": 201,
          "responseTime": 2642,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b00baf-42b7-4bf3-ac38-9b666e8cb6ee",
        "cursor": {
          "ref": "c8193445-f080-419b-a7aa-4f50db42b0a2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3646242-96e4-4154-b437-5e37a65cfbf9"
        },
        "item": {
          "id": "e6b00baf-42b7-4bf3-ac38-9b666e8cb6ee",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "61a6f220-4a5a-43bb-af5c-7192bde0d3aa",
          "status": "Created",
          "code": 201,
          "responseTime": 2270,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65544727-e094-495f-b97d-0e6e1442078f",
        "cursor": {
          "ref": "6cace2c6-0fc7-4a06-9174-45a03fb4bc82",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4d654475-1667-444c-9d17-2c7487371afa"
        },
        "item": {
          "id": "65544727-e094-495f-b97d-0e6e1442078f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "243bf1ce-3c4c-47f0-a6de-7a55d5fdfd83",
          "status": "Created",
          "code": 201,
          "responseTime": 1971,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "927b0974-8bcc-40b8-a3a2-8d07431cfc97",
        "cursor": {
          "ref": "90138e1d-2bcc-48c7-94d4-807b289a0230",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "36a75062-17d5-4479-8e77-8630d4d31ae5"
        },
        "item": {
          "id": "927b0974-8bcc-40b8-a3a2-8d07431cfc97",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d7c59a19-e270-49b9-9096-e9cc7b133a0e",
          "status": "Created",
          "code": 201,
          "responseTime": 2480,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4404d5de-4774-4ea0-a24f-fa309b1210ac",
        "cursor": {
          "ref": "0681f07c-2b4b-43a9-adf0-08569175c5b2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9eb34932-24c9-4cba-bc8c-63e32e6c16e4"
        },
        "item": {
          "id": "4404d5de-4774-4ea0-a24f-fa309b1210ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aebd45d4-dda3-46ba-8a71-9f3b9ff6ca80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f95a5b37-c035-4c7a-b7c3-6250b5e69f70",
        "cursor": {
          "ref": "8fc9fc4d-b7d2-4a3c-b5b1-24daebc96c21",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "721910d0-7313-4024-b765-ba2bbdd71976"
        },
        "item": {
          "id": "f95a5b37-c035-4c7a-b7c3-6250b5e69f70",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a559cbe3-2901-4e00-92d1-25dfeb8cd5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fec7094-bf0d-4f13-a249-c8c076ac2460",
        "cursor": {
          "ref": "27471bb9-cba5-4036-9bd2-1d57263cb5a4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a32fb5f5-526e-424d-a19f-d04eb2ead073"
        },
        "item": {
          "id": "3fec7094-bf0d-4f13-a249-c8c076ac2460",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "496f9a63-236d-426a-a373-d9a918c66763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eaf57f-6802-462e-9899-a1e9c5bf472c",
        "cursor": {
          "ref": "a4509b8d-fc6f-4844-a277-97e8df359c21",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3abc1493-80c4-43d6-be20-2cae0f19fc24"
        },
        "item": {
          "id": "83eaf57f-6802-462e-9899-a1e9c5bf472c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "378a8218-da12-4fdf-8dc9-c38b2b62c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0319a6-3209-489e-b2a4-edf9139f8511",
        "cursor": {
          "ref": "fd616c97-34a3-43f8-9802-6f510c768860",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8aa5ea53-7ed0-4fe9-8c98-7f5662786b30"
        },
        "item": {
          "id": "3d0319a6-3209-489e-b2a4-edf9139f8511",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "59a6f1d0-68dd-4693-be2e-81fc0dd46fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d61232-156b-4f20-90c7-97b19b762a8b",
        "cursor": {
          "ref": "f51b3621-597d-4b8a-9887-d067cf772252",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c77dbd22-eb49-426d-978d-13c637e488e0"
        },
        "item": {
          "id": "35d61232-156b-4f20-90c7-97b19b762a8b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "04b01c9f-fad6-45d1-9136-fb7022b9bb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4123e6d8-3675-4e80-a02d-025f925de5a9",
        "cursor": {
          "ref": "cc69b9f0-2684-47dd-b354-fca69326b449",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f965b75f-4d78-43c0-bde0-7d2f8460d33b"
        },
        "item": {
          "id": "4123e6d8-3675-4e80-a02d-025f925de5a9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c040aa6e-d05e-4208-afa6-de0b91a85a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b234a6-4d65-4343-881d-7bec3ccdb7a0",
        "cursor": {
          "ref": "77ae0201-2ca0-44e0-bdf0-21b6497418b3",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a1ea1ae2-6fa7-4d4a-8e34-36027ad0c411"
        },
        "item": {
          "id": "16b234a6-4d65-4343-881d-7bec3ccdb7a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5458b656-fe5a-4d51-8b7f-1f37de26caf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa22495-b66b-4a74-8728-1335e27df974",
        "cursor": {
          "ref": "0e551fd1-cb48-46dd-91ce-d0d2f35dbde6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "34725251-4ac2-484f-8403-9cb6fc1d5ba4"
        },
        "item": {
          "id": "8fa22495-b66b-4a74-8728-1335e27df974",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fee6e40e-b516-46a1-87ff-480d7f788a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30174621-fd3f-4d0e-9a47-63074436075c",
        "cursor": {
          "ref": "07a5dfea-c86d-4720-a3bd-4dcee45cac55",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4102efde-ed2f-4c07-bb23-5fe2dfbefde7"
        },
        "item": {
          "id": "30174621-fd3f-4d0e-9a47-63074436075c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f938dfb5-0c9d-4933-ac6f-6b86367c9c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900807f1-f587-42fb-bef9-7890b975d9d8",
        "cursor": {
          "ref": "4618149f-9ce1-44fb-9103-9f67cd3f2a21",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "01f30ecd-4143-4967-9b99-5dae05fd6149"
        },
        "item": {
          "id": "900807f1-f587-42fb-bef9-7890b975d9d8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "07cd0e34-c6b5-4d2b-93d0-3fe9c9d96a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4094e4e8-77c4-4f37-b47e-b542eac3cff4",
        "cursor": {
          "ref": "5d409e58-fc54-4b92-b365-5e0663ddaa20",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cd32ba0d-b97f-4c8f-b075-f2dd397510bb"
        },
        "item": {
          "id": "4094e4e8-77c4-4f37-b47e-b542eac3cff4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6c01cf65-93be-4bb3-b82c-e2cd2da9dea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd2c41b-96d4-4e90-a983-61987cdf4265",
        "cursor": {
          "ref": "56dc359c-da93-4c6d-a739-3033e1da1b4a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cc68a8e3-85b9-494a-ae34-5caa7062cdaa"
        },
        "item": {
          "id": "1cd2c41b-96d4-4e90-a983-61987cdf4265",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4737bcd5-d112-4d57-9100-5878d830ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a0ef6a-5016-486d-9567-30188a292496",
        "cursor": {
          "ref": "a35f292d-08a2-4990-a2d2-754199983aa6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f3394523-3409-4abf-a830-6cccb85c29b2"
        },
        "item": {
          "id": "29a0ef6a-5016-486d-9567-30188a292496",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4900853c-06a5-47ab-b5ed-680c82e6f524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c0c5a0-d31f-4397-b9a3-75e4dbe2a6c5",
        "cursor": {
          "ref": "0d30d791-c963-4d73-9b93-541c893270cc",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "905d45a7-0741-4fed-a831-4e7e7f2e6ad6"
        },
        "item": {
          "id": "82c0c5a0-d31f-4397-b9a3-75e4dbe2a6c5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e87ef4f6-8545-4084-804b-ec8ca58cd3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9f0b3b-dfed-478d-85e9-e5295a5dffdb",
        "cursor": {
          "ref": "b35104ce-1079-482c-908c-691d5b1e8604",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2406e37b-ec47-4f11-910a-59aa540673c1"
        },
        "item": {
          "id": "4f9f0b3b-dfed-478d-85e9-e5295a5dffdb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "62abdd0b-377a-4390-b60d-90dd1bde493b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbc1f1b-4df9-42b4-8b5e-8356bb963c9e",
        "cursor": {
          "ref": "fe3ddff3-303a-4205-b350-272224a94676",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a292435a-f81e-40ed-9a62-8054f14387c1"
        },
        "item": {
          "id": "5bbc1f1b-4df9-42b4-8b5e-8356bb963c9e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3d1a0a20-0150-48e8-a772-e0569835539f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1823869a-4d80-4878-8a10-10910d3824f0",
        "cursor": {
          "ref": "86a74b6f-751b-41d5-b666-955e5f6a93ba",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0d2b7a74-460e-42ea-becb-f1069d926270"
        },
        "item": {
          "id": "1823869a-4d80-4878-8a10-10910d3824f0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "27681b4e-3b27-4aff-b33c-9b4736fe54b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8109bb05-7ae5-4b80-9101-11ab7ef63d64",
        "cursor": {
          "ref": "01c1a239-38b5-4b45-91da-3776dfb7fb9d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "14b9c49a-81fe-4dc8-9828-e45c5c1cdb70"
        },
        "item": {
          "id": "8109bb05-7ae5-4b80-9101-11ab7ef63d64",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4d90f813-1a2a-4066-8824-a02aa519e588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faaf8fc5-bc9a-48ef-bd08-fbe29ff3617a",
        "cursor": {
          "ref": "4dd2e334-473a-4dae-adfe-d4d540a3a198",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fe86d856-5a65-4350-8a9d-9493ad54a594"
        },
        "item": {
          "id": "faaf8fc5-bc9a-48ef-bd08-fbe29ff3617a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "89076e10-cac3-4544-a931-ffa9a4677c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005c3022-1bf2-401d-acdb-a5fe47d03a06",
        "cursor": {
          "ref": "058821d5-fd9f-479e-8781-7f1da67a59cd",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1ecec288-73f7-4f67-a3f7-bbeb184b5594"
        },
        "item": {
          "id": "005c3022-1bf2-401d-acdb-a5fe47d03a06",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2b79c0ad-eb44-4b66-9572-aeca06053b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b193f08-924c-4888-aa25-9664f8cebe22",
        "cursor": {
          "ref": "27aef844-fb7d-4e36-986b-4b5dc7acc6da",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1b0b2fdc-2349-4d12-84f4-aba1914bc33c"
        },
        "item": {
          "id": "0b193f08-924c-4888-aa25-9664f8cebe22",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ffa3dca9-74bb-45c1-a727-14bca65d5fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda9e3ea-bcd5-4383-a804-78011441422a",
        "cursor": {
          "ref": "e5d350ea-b782-4750-aa8b-f54a0f56d8e1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "806ca0e2-ebfe-4b99-b923-ade321ffd7ec"
        },
        "item": {
          "id": "cda9e3ea-bcd5-4383-a804-78011441422a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bed74967-c1a7-4e6c-bfa5-1f5236977db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b93738-cf3c-44a1-9c8f-6ce078910d3f",
        "cursor": {
          "ref": "c7a8c683-18ff-4270-b296-667951d94074",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "11c60530-0c0e-453e-b73d-12b035c62474"
        },
        "item": {
          "id": "c5b93738-cf3c-44a1-9c8f-6ce078910d3f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6eac2abc-67d0-41d7-9975-b47e1f7d98c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4e1d42-f1b4-425e-a1f6-c0b98a42acf7",
        "cursor": {
          "ref": "d3270d85-acdd-4f27-9a60-c0aa6132f53a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "82f47db4-7d44-45e6-bb14-d9d13e26703a"
        },
        "item": {
          "id": "cb4e1d42-f1b4-425e-a1f6-c0b98a42acf7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "66f835ea-bf04-4f64-bbf1-ab42d93b54bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bab613e-e456-4886-a38f-8173bb3f9f74",
        "cursor": {
          "ref": "ce6b90e0-edb2-4dc6-8b80-a5f39e43041d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6c61db8f-f576-4d1a-82b1-84e1ea94efd3"
        },
        "item": {
          "id": "2bab613e-e456-4886-a38f-8173bb3f9f74",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c16e05c8-6e8b-4430-9d89-e7c931c449d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79354a73-9e07-40ca-9352-d40b13f459a8",
        "cursor": {
          "ref": "555d5658-9762-4309-9b23-254c46a81d27",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6f7367c5-f9a2-48f6-a13b-1e1f2cd40ba5"
        },
        "item": {
          "id": "79354a73-9e07-40ca-9352-d40b13f459a8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1b8b2f75-5256-4d90-a514-0070c0c77d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7acde43-fa68-463c-9508-32202929ea81",
        "cursor": {
          "ref": "f076be98-c9b7-4225-bdb4-37df09972da9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2c55a3ab-b71a-4aa1-b667-bae6668a0486"
        },
        "item": {
          "id": "c7acde43-fa68-463c-9508-32202929ea81",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c5d6c76d-cfc5-4f5e-a679-b4612442cd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7494aa-3ca9-41cf-beb2-88bce45fb476",
        "cursor": {
          "ref": "4976eef1-5a70-4c62-86af-69a6afac5fcd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ddb084c6-096e-4e03-aceb-7ecc43c2e4d8"
        },
        "item": {
          "id": "6a7494aa-3ca9-41cf-beb2-88bce45fb476",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39649549-a29c-4f7c-8c54-170673d9ccee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ad23d1-3bc3-4e05-9fe4-403b0afc085c",
        "cursor": {
          "ref": "e098e120-31b7-4e44-bdbb-84ec4217190d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "390ef1a8-caff-42cc-96e0-9c5ef47d5b42"
        },
        "item": {
          "id": "05ad23d1-3bc3-4e05-9fe4-403b0afc085c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c34ea0de-c147-4cf0-99eb-1758e8048935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390a2b12-8018-41da-bebe-93809a7b5b70",
        "cursor": {
          "ref": "9aba19ea-0141-43b3-b365-15b635699813",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b4acde7b-20be-4a2c-bb6c-e7551f4696af"
        },
        "item": {
          "id": "390a2b12-8018-41da-bebe-93809a7b5b70",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ec7be12-ec71-43e1-b384-b1e9ebf6a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52b7004-15b5-4a27-870e-f90966646c72",
        "cursor": {
          "ref": "09965699-b1da-4fd5-9748-408cf3b1a4f6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "52555ece-909c-4a41-a838-e6ccbbc223c1"
        },
        "item": {
          "id": "e52b7004-15b5-4a27-870e-f90966646c72",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3a818bb9-d25b-4472-b3e9-b2257cf4909f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad015736-18aa-4548-bb95-30e1ef9ecb81",
        "cursor": {
          "ref": "af59eb99-8e7a-4f29-b5cd-b59a77c2161e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "09be852d-ccc3-44d1-a612-45a85338e43e"
        },
        "item": {
          "id": "ad015736-18aa-4548-bb95-30e1ef9ecb81",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ec1e08dd-e454-4ed7-8524-9a006eb62faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc528d6f-887c-4fbb-92df-6d6523c1db4b",
        "cursor": {
          "ref": "124c5363-0972-44e7-bd75-e10c6760ac23",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e1e3c1b9-a6d0-4c99-9339-1f53f03fbefb"
        },
        "item": {
          "id": "fc528d6f-887c-4fbb-92df-6d6523c1db4b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a2533f9-7d69-4221-a73e-6a36accac8a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90002cf3-4123-4f95-898f-41113d574e74",
        "cursor": {
          "ref": "77253764-fdc3-4d9a-86cb-1713603528c6",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f46f6ab1-4270-4cb7-a922-ed5b8d59932f"
        },
        "item": {
          "id": "90002cf3-4123-4f95-898f-41113d574e74",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8059c95f-115f-4597-a4ff-ae0ae3e27267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263997ef-f479-4abf-a867-5432dc7e1249",
        "cursor": {
          "ref": "a1562bed-cbee-4382-b5fd-833b9c13a5ad",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ed0eb07f-cc45-4d15-908d-7be867130ca1"
        },
        "item": {
          "id": "263997ef-f479-4abf-a867-5432dc7e1249",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76440f15-fc20-4c31-b547-557a09c1a994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923c8044-5f21-4888-a7fc-543e5715dd7b",
        "cursor": {
          "ref": "6bd0f4c4-5b77-4de9-aa49-823f9b28ac04",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "37577318-e83a-4670-a52a-ebd6e62ce87b"
        },
        "item": {
          "id": "923c8044-5f21-4888-a7fc-543e5715dd7b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a3e857ee-e268-44fa-b479-e33ce23c7031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4e8a49-1075-45af-8f56-6603b86bd53d",
        "cursor": {
          "ref": "d22d59a7-06be-4ace-9c27-2ab0ac506382",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e8ed4ddc-5b95-4c7e-8f4c-2eef91baebd6"
        },
        "item": {
          "id": "2a4e8a49-1075-45af-8f56-6603b86bd53d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "16392156-e81b-484d-91f1-b3398fc9c76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e655d83d-bf12-4983-852c-fb088d15fec3",
        "cursor": {
          "ref": "a221f61c-f244-4e76-8882-2b71f88dcf16",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2e6972df-5c7a-4e8f-828b-881a47249318"
        },
        "item": {
          "id": "e655d83d-bf12-4983-852c-fb088d15fec3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c9f2f7ee-8aa1-4fbc-b691-3dd0914ce74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0dd69c-2164-436f-9f6c-071c05cb6a07",
        "cursor": {
          "ref": "19d0e5a6-ac1f-4680-bcff-f9df1738239a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f0be7652-49a0-4232-903b-2c71e7b8ae1c"
        },
        "item": {
          "id": "9f0dd69c-2164-436f-9f6c-071c05cb6a07",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c17f4449-1f42-475f-9fad-40279e67611c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b426b421-d1d9-4493-835f-b724d13bba32",
        "cursor": {
          "ref": "7677bfba-5ae6-475f-9656-8e2f1e088a1c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d2eeae25-4fd6-4c3f-9b41-0d6d9c3adeb0"
        },
        "item": {
          "id": "b426b421-d1d9-4493-835f-b724d13bba32",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0ef0053b-c3e1-423e-b044-517287676034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e214d09-b8d9-49b5-9489-6a208d680c09",
        "cursor": {
          "ref": "35376910-6d84-47ab-879f-58a32325b094",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5f5773e3-ef8f-4d75-ae23-fb86042ecb03"
        },
        "item": {
          "id": "2e214d09-b8d9-49b5-9489-6a208d680c09",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c75fa1c-6ee2-48b7-badd-f0c6128a25fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4626b6e-92f4-4e26-859e-f0de77fc7edf",
        "cursor": {
          "ref": "6625136d-eebc-4696-8f9f-80b0fb6f2e6b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "903c7b4b-b237-46c3-921d-abf9062074cf"
        },
        "item": {
          "id": "e4626b6e-92f4-4e26-859e-f0de77fc7edf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f386f25c-766f-4a18-be1a-c339de434f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aa0940-1c87-4d1c-bb9d-92859e65d72f",
        "cursor": {
          "ref": "2fe021c3-7982-4717-9bb3-c027d78e50f8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "acec00ea-d7e1-4830-9a5e-c4ee0af6cfff"
        },
        "item": {
          "id": "89aa0940-1c87-4d1c-bb9d-92859e65d72f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bc91560d-77b5-4b48-9241-5ed14d9987f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818aedc5-0e98-4072-8221-5f44ad756d1a",
        "cursor": {
          "ref": "f50ee06a-7c39-48c5-934f-9baa8a7bfe95",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2cc3f784-e835-4e87-8524-f93a4070f1ed"
        },
        "item": {
          "id": "818aedc5-0e98-4072-8221-5f44ad756d1a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e5367b0c-a889-463d-9592-f6b5be3d09af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6ed3e4-6ae5-4b2a-8186-6a7518ca299f",
        "cursor": {
          "ref": "64fe5a39-3fc8-4f51-b83a-08e32484b5e8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "39c5ad94-a0a5-4a6f-ad90-2e3fdaf7ad5f"
        },
        "item": {
          "id": "8c6ed3e4-6ae5-4b2a-8186-6a7518ca299f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b4feb9a3-a88c-4bb7-912b-481da48429d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ece0c9-8d20-4d83-b536-7463d55fae01",
        "cursor": {
          "ref": "0019505e-dafa-45c4-ac28-d326c2d0a424",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3d0197ba-a2ea-4ac0-bf8b-4f49599caae1"
        },
        "item": {
          "id": "e3ece0c9-8d20-4d83-b536-7463d55fae01",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "868a7e44-8158-4b78-976d-b1d23a2842b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c83a0b-5e02-4d02-be9b-af78cf493e9b",
        "cursor": {
          "ref": "6a9aaa25-e131-4f93-af08-6e49436e1557",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "922b9bc7-1747-4a41-9f78-8be83fad220a"
        },
        "item": {
          "id": "b9c83a0b-5e02-4d02-be9b-af78cf493e9b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2b3b245b-8684-489b-8089-7878bab25ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a3f1ce-67ae-43cb-9b41-0e9e6b8da02d",
        "cursor": {
          "ref": "a5a4dc62-52e0-4a5e-b0f2-1b8e01230957",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a1e41904-ab80-4416-8bc7-3e5c83a6b1c3"
        },
        "item": {
          "id": "84a3f1ce-67ae-43cb-9b41-0e9e6b8da02d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f8f99686-78c0-40d4-b380-4167a254738f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6092ff52-d5d4-4c31-b23d-ae1cb80146ef",
        "cursor": {
          "ref": "92b0f77c-6484-4c87-9a52-1ad8cf1790e9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "00a2517b-ccf0-4f84-806a-acdd7d129a0f"
        },
        "item": {
          "id": "6092ff52-d5d4-4c31-b23d-ae1cb80146ef",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bb7079ec-cbcb-4d0b-b494-cb9f204cc101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ec0942-f154-4a3e-a3a1-93a395514e63",
        "cursor": {
          "ref": "ffc0e815-94ce-4129-98d4-50270011a9b4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "73f7946c-95f2-45b0-8b45-1d056426a5e7"
        },
        "item": {
          "id": "83ec0942-f154-4a3e-a3a1-93a395514e63",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1bdc1099-24d3-48e2-81d0-5268c0f3541e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a8cbbd-9983-4724-99f2-d5e1bd2bf2e6",
        "cursor": {
          "ref": "6b4dd899-63ac-4b9e-aa83-4bff463bbd57",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3077d76a-57a5-40a4-ac8c-a483add593c8"
        },
        "item": {
          "id": "94a8cbbd-9983-4724-99f2-d5e1bd2bf2e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "798ffad1-30ca-4aaa-9621-fb8dd2510133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28b4063-d6cd-46db-a4f1-6418b9a27567",
        "cursor": {
          "ref": "52aeb592-a2ab-42f8-b3df-e30110bc8ee0",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "50b329ac-3758-44c4-addb-0a7ed289358f"
        },
        "item": {
          "id": "f28b4063-d6cd-46db-a4f1-6418b9a27567",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a030cfc-d088-4ed0-b21b-7dffa68e603b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b711dd5-1788-4803-a52a-3b3ee1333d49",
        "cursor": {
          "ref": "38959308-79a4-40fe-b662-b9330962cdf3",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cf6c4eda-1218-4320-bcce-9837d54709d3"
        },
        "item": {
          "id": "9b711dd5-1788-4803-a52a-3b3ee1333d49",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9268c838-6514-411d-9615-2ae72de0534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5336e0fa-8ed8-4132-bcc3-bb6a6aebdd27",
        "cursor": {
          "ref": "dff11545-c74f-4071-88d2-088050b365ea",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0d26591d-2cb7-4cdd-85d5-47fbcc82c7e1"
        },
        "item": {
          "id": "5336e0fa-8ed8-4132-bcc3-bb6a6aebdd27",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "732ebb66-caa2-44e5-b759-7f747ee636a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486ab94c-c1b7-4cd6-aa81-451a9bebc9d0",
        "cursor": {
          "ref": "28d837dc-582b-408c-ae78-a740542cb2f7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fa23b90d-f256-4d47-9747-96e130722681"
        },
        "item": {
          "id": "486ab94c-c1b7-4cd6-aa81-451a9bebc9d0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a60bc7f-4ab2-4038-95e3-8570ba116557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f14f695-6354-4f92-8208-832bfcda836a",
        "cursor": {
          "ref": "caf60381-6125-4ca0-bcb8-5c043c419e0d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "18b3fcd3-ef60-4fd5-bd9c-f0caf3060b5f"
        },
        "item": {
          "id": "8f14f695-6354-4f92-8208-832bfcda836a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eee7f0c0-a303-4a9a-8c68-62a24aeb62b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fab73b-7682-4a2e-b497-34a7405db4c6",
        "cursor": {
          "ref": "f88abd09-70b8-4517-9a02-52193b652906",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d5e0db3e-a2e1-4cee-920d-3414c37da887"
        },
        "item": {
          "id": "34fab73b-7682-4a2e-b497-34a7405db4c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "84cb825c-9b56-48ba-9ede-aaa13d6516b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebfbf3a-b7dc-4c5a-ab0b-d774b7c77337",
        "cursor": {
          "ref": "3bb19615-e086-4b84-ad48-a3ee5f346fe7",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "09deea55-c7c3-49ac-9061-ce6c6f9b2a7c"
        },
        "item": {
          "id": "7ebfbf3a-b7dc-4c5a-ab0b-d774b7c77337",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a25829a-5e4d-4d1a-9626-aafcdcb7687d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61321441-f360-4b8a-89ef-bb6599fc517b",
        "cursor": {
          "ref": "a1622cda-ff13-4cda-95e5-1816536e2d0f",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7d4f5bcb-1351-49c9-a2c1-e39ca19a24ff"
        },
        "item": {
          "id": "61321441-f360-4b8a-89ef-bb6599fc517b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4dae88c5-0b5a-47d0-9350-7cfaff51addd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0a95de-c5ae-4026-bdee-9747304def1c",
        "cursor": {
          "ref": "6ee8b066-f96f-42b5-ab0d-223024809f17",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "800eda0a-ec9c-439e-9af9-e7eb8cbbce0c"
        },
        "item": {
          "id": "8d0a95de-c5ae-4026-bdee-9747304def1c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "28657409-1a1d-44ab-9eb4-bb78f8b64bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2855c42b-7354-44b2-9585-c36a06398869",
        "cursor": {
          "ref": "f03adeea-b5ee-482b-880f-6cf2be92a953",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "364fc149-8a4c-4b80-909e-b409db414042"
        },
        "item": {
          "id": "2855c42b-7354-44b2-9585-c36a06398869",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7800cca2-c65c-4815-b173-1515372f0f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5db6d4c-0404-4555-83a6-2c6bc73112c8",
        "cursor": {
          "ref": "1abf82eb-d171-46a2-a305-736f3fff3837",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1e973b2b-eeb3-437a-8a3d-61946e2b9d15"
        },
        "item": {
          "id": "b5db6d4c-0404-4555-83a6-2c6bc73112c8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "393ea8f7-2d47-4a4f-abfb-9f1908b93a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993d64cc-7362-432d-aef0-12b2535b66ca",
        "cursor": {
          "ref": "a2ea1f4f-dd92-4108-b6d7-e38ba5f5d6a6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c1a17941-9d27-4bd9-9263-c34cba8143a7"
        },
        "item": {
          "id": "993d64cc-7362-432d-aef0-12b2535b66ca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c55354ba-3310-4fff-ae78-5882a8685d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f73586-13fe-4eab-848f-9cfaca8df279",
        "cursor": {
          "ref": "b1ac41c4-0ed9-462e-ac97-677e7cb484ad",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0ab7b20a-9a96-464f-ab14-98a4b6ec0139"
        },
        "item": {
          "id": "f9f73586-13fe-4eab-848f-9cfaca8df279",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bb667403-b391-4cb4-b40d-ef56f1a90da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a523554b-853c-4af2-9e41-d8b5de2867b0",
        "cursor": {
          "ref": "86bca161-39b3-438d-9061-04ac304440e1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2bb303a7-6408-412c-8a75-a2a89e8ddcd0"
        },
        "item": {
          "id": "a523554b-853c-4af2-9e41-d8b5de2867b0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "751eb825-a692-4a1c-b5c1-7775c87b76ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76757a84-9b09-45ec-85c0-78c4837d8f75",
        "cursor": {
          "ref": "31401b01-4949-4a28-ad7b-1b8e0d2ee8de",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b6ab1e02-d6e1-46f2-b461-6d4342e56e5f"
        },
        "item": {
          "id": "76757a84-9b09-45ec-85c0-78c4837d8f75",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "193491d6-5ad7-499c-a90e-60b9fe1cc377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4220d0e9-76f8-4151-a3f5-84027992954f",
        "cursor": {
          "ref": "47739035-ff9c-4979-8eef-e8c4543e5f36",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2b969ed9-ab96-4ea1-b309-d4909e52c075"
        },
        "item": {
          "id": "4220d0e9-76f8-4151-a3f5-84027992954f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "09830193-809e-4fca-a808-b42abb1eca0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6801fa49-565d-4349-8975-d5eb21fc3b06",
        "cursor": {
          "ref": "83687cbb-06ec-44fe-8f95-deb16553cec6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5944c35c-5c92-4d6c-bc75-c4e033fd3801"
        },
        "item": {
          "id": "6801fa49-565d-4349-8975-d5eb21fc3b06",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0007cb5b-2e32-40d9-8f73-8c15799c118e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32de17aa-1147-460f-97be-9647e5719819",
        "cursor": {
          "ref": "f7b81ac7-c63b-4b37-bd77-dc4656e97a6e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2f269c6a-a707-49c3-afba-f4eeb2d49037"
        },
        "item": {
          "id": "32de17aa-1147-460f-97be-9647e5719819",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2a2da8f4-eb64-4fd3-ad0e-f35d3272417f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77802e17-ac26-41fb-ab34-559f6e9b4642",
        "cursor": {
          "ref": "923237df-e503-4607-ada6-51d1799142e2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "18b955ae-cf12-455a-a801-b2ccfcc96ab7"
        },
        "item": {
          "id": "77802e17-ac26-41fb-ab34-559f6e9b4642",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "92272baa-a707-4564-b27c-8100c70e22ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc2e810-5499-4ef7-a930-e89858480b0c",
        "cursor": {
          "ref": "f7084d55-64f4-4500-a1d9-03be121fe734",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bfcc347d-d954-49bd-a5a0-65f3190ba5d7"
        },
        "item": {
          "id": "fdc2e810-5499-4ef7-a930-e89858480b0c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "50a70f6c-b247-4dda-83ce-183bb5c4e9f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a52fbc-3292-43e4-82d9-3bf8c77c8197",
        "cursor": {
          "ref": "94156c0c-727d-4019-9c9c-df6e99b6edc5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "46d66541-febb-4d4b-adef-3da093f7c573"
        },
        "item": {
          "id": "d6a52fbc-3292-43e4-82d9-3bf8c77c8197",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "abc587d4-de88-42e8-abb9-1a82a5cad2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519e65cc-f146-4acb-b987-41da4e49320b",
        "cursor": {
          "ref": "924b52a4-e977-44e0-a318-a367593f1091",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "423512cb-e6b2-4902-9d64-afefbca5c228"
        },
        "item": {
          "id": "519e65cc-f146-4acb-b987-41da4e49320b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b93056ed-c348-4485-afb8-5fd7c3561857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d940707e-c179-466d-8ee8-f12233aabc1e",
        "cursor": {
          "ref": "60d4407d-e869-4143-8978-3d9f97a817c1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "21b329ac-3418-4197-b839-3e8a54cce4dd"
        },
        "item": {
          "id": "d940707e-c179-466d-8ee8-f12233aabc1e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "24a49346-8695-47cf-a465-a563cab6a330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fd4993-79d4-4b88-bd96-2d5c170be7a4",
        "cursor": {
          "ref": "875bd8cd-5b5d-473a-acb4-9847dd935516",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "525b6828-5a43-4a1b-99f6-733eb7aead5d"
        },
        "item": {
          "id": "b1fd4993-79d4-4b88-bd96-2d5c170be7a4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c8d076a3-ea4a-47dc-8d30-f1b885886428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e1467b-0847-4053-95b2-4a24724dca5a",
        "cursor": {
          "ref": "a4673af8-9f04-46d8-b0ed-3095c2b152dc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "24c1a604-0951-4b41-89e0-0be0888db1a7"
        },
        "item": {
          "id": "37e1467b-0847-4053-95b2-4a24724dca5a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7114ddad-d8a8-4922-a4a4-e9345b40d12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5c4a38-a286-4016-9afc-33eebcc694fd",
        "cursor": {
          "ref": "74a344f4-bb34-4725-985c-9d1d4455f9b9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9270fb68-13c0-430f-ab0d-14f1909a4123"
        },
        "item": {
          "id": "aa5c4a38-a286-4016-9afc-33eebcc694fd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "52a2e5eb-9f92-4c40-a481-e3776d0fc1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d39f6c-4c16-4843-83ef-af912bf2919b",
        "cursor": {
          "ref": "88c1f606-ce8d-4719-8f41-4cc95511003f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "587db711-6017-4c29-85b0-2bb3fc9a0432"
        },
        "item": {
          "id": "e8d39f6c-4c16-4843-83ef-af912bf2919b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49fb4466-537d-432d-8ee1-a8e3b33af00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e64c3ed-5ff0-48a4-aa33-58f73dbe43d8",
        "cursor": {
          "ref": "a125502c-4c38-43bf-a8aa-d210a32f2b6d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "06fe331a-977b-43e6-9646-461027e1465d"
        },
        "item": {
          "id": "0e64c3ed-5ff0-48a4-aa33-58f73dbe43d8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bf1cb5d9-90a5-4f1f-a67c-c69c6e70b289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16026e07-3339-4462-bcd6-5ecd086d6680",
        "cursor": {
          "ref": "44de6b47-5640-4ff1-8e81-c6458d74f9e2",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "57d7538a-9530-4e11-8f17-aef70230f41f"
        },
        "item": {
          "id": "16026e07-3339-4462-bcd6-5ecd086d6680",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7a1be8a7-42e0-4379-91a6-0aa9d536f10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed8b408-85f3-4e4a-95b4-6e753b83e2a8",
        "cursor": {
          "ref": "0cc63f85-045a-4938-9e5c-958087475ecf",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3e75b7e6-cf5c-41fa-8fe4-189f4ee3543b"
        },
        "item": {
          "id": "9ed8b408-85f3-4e4a-95b4-6e753b83e2a8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "39456626-2519-4bc4-8b67-1d3a78e9d2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1927c400-7e32-4a3c-8e63-d6b9e90bcc14",
        "cursor": {
          "ref": "2bc1a71b-cebc-499e-a188-11ac9e232e3b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "208e1a70-361d-4c41-8d60-4630d1da1a0e"
        },
        "item": {
          "id": "1927c400-7e32-4a3c-8e63-d6b9e90bcc14",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0e4bf96e-9578-44af-ace8-e98bd632e265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f78f29-ff44-4926-ac9f-12fb96c989a7",
        "cursor": {
          "ref": "2d65a9ec-80d6-47f7-9902-00382640a46c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6796abfe-bb95-4510-835d-40cad39a4ee6"
        },
        "item": {
          "id": "37f78f29-ff44-4926-ac9f-12fb96c989a7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "525b970c-823c-40fe-94b0-e785fee2f1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea587f6-7684-4a79-b042-424192ba188d",
        "cursor": {
          "ref": "fcf0e986-8565-4f60-b191-0599e4ac7e6c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "55f4ea49-28d7-4b39-b731-05da62818c25"
        },
        "item": {
          "id": "aea587f6-7684-4a79-b042-424192ba188d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d8d975a5-4aaa-4058-b184-dbee24231988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954daf4f-2003-4c6f-b12e-81475f92a503",
        "cursor": {
          "ref": "365c3812-011c-45b4-98ae-29f5ef59da22",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2162db30-7fa3-45a2-a706-83364e36881f"
        },
        "item": {
          "id": "954daf4f-2003-4c6f-b12e-81475f92a503",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6ee7c0d6-b18b-4b96-9243-94d632e2f93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bbcddb-bf4d-4b0d-b356-387f418c066f",
        "cursor": {
          "ref": "929f1f19-9699-4513-ae9a-a603cb177e79",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fe741358-34a3-46a1-87d0-e7e1080a6b40"
        },
        "item": {
          "id": "68bbcddb-bf4d-4b0d-b356-387f418c066f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "de54b84e-3dd8-4be5-8cae-f90c0eb08bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f448efc-90ac-40bd-8c93-1c06832ab885",
        "cursor": {
          "ref": "6d79e7d2-16b2-4fa6-90bf-c4d1c8d1ce74",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "954ae922-9313-44d6-9c4f-a6f5155088d5"
        },
        "item": {
          "id": "6f448efc-90ac-40bd-8c93-1c06832ab885",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "554b37b0-69f7-4d1d-94a9-a62986f04bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d084bf2-b226-4c0e-874b-74ad0f972503",
        "cursor": {
          "ref": "f9216fba-fa9e-4fd5-af1f-71dbc40f22d8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b6f6b359-617a-4f07-a306-fceb9ba926c2"
        },
        "item": {
          "id": "7d084bf2-b226-4c0e-874b-74ad0f972503",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4b654787-dc93-423f-9475-d523c70d4a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e5521b-1fac-43e2-a108-2b641cefa35f",
        "cursor": {
          "ref": "260379e9-4eb4-4840-9a5a-4c673039e783",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3b6778d2-e456-42fc-92a9-e9bcbbfae531"
        },
        "item": {
          "id": "05e5521b-1fac-43e2-a108-2b641cefa35f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4e85896d-194f-416c-b376-1d1ab4b74911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caf43e7-989d-4ff7-8979-1af661471f18",
        "cursor": {
          "ref": "4a42d19e-5550-4221-b895-bc3b6b032973",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "677770af-c465-4069-a462-cfde6dd8b6aa"
        },
        "item": {
          "id": "4caf43e7-989d-4ff7-8979-1af661471f18",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "01439881-bf1b-4c41-ad59-d44a84422fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb0d47c-1fd1-43b7-a242-bf7e23a606ca",
        "cursor": {
          "ref": "947a5c35-9f90-445a-a529-6e7cd7461aa9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "942c3bee-7e29-47e7-ae4d-c0e3158f5d95"
        },
        "item": {
          "id": "cbb0d47c-1fd1-43b7-a242-bf7e23a606ca",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c7966bbc-35e0-4dd1-a022-959a3ce307c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad8941a-68e2-413d-9458-86a8e3a5aee2",
        "cursor": {
          "ref": "c864cf9d-4e81-4d5b-b084-62ba71eb1740",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a7112755-ad12-4a40-97a6-57dc4385c469"
        },
        "item": {
          "id": "dad8941a-68e2-413d-9458-86a8e3a5aee2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d8c5a37b-5b25-4012-99d4-ae21648e0135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0581e5c-27e2-4553-8e92-2bc4e527504a",
        "cursor": {
          "ref": "efb79bc4-d061-4a40-b4a3-8a7e8b6a36e2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "51b7c0eb-bad5-48eb-b56f-57950a7f0df1"
        },
        "item": {
          "id": "d0581e5c-27e2-4553-8e92-2bc4e527504a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2d20e9c6-a855-415a-966b-42191c4bb088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e3734-b1ac-4d33-86d1-06895a8c9a78",
        "cursor": {
          "ref": "f1d139c5-c6a4-41e6-b086-2d1655276167",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8e5aaae6-b2f9-42fa-b8a6-94039e2de407"
        },
        "item": {
          "id": "6a6e3734-b1ac-4d33-86d1-06895a8c9a78",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9f3c5214-2c1f-4773-87ac-13815d6b3d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504cd729-4a53-4d96-9100-6968f8136470",
        "cursor": {
          "ref": "7b60daf7-0972-4348-bc58-b9386aef63a2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ad9c158b-a4f2-48ed-86ec-96cc51bd46e0"
        },
        "item": {
          "id": "504cd729-4a53-4d96-9100-6968f8136470",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c5f5b23f-6789-43dd-b7bd-680ae1fc8477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c894ce-d917-47f0-95ef-d615ae60f1cb",
        "cursor": {
          "ref": "cdab9c73-f57a-4f57-a15f-0d94c6153d56",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6ca8c644-e672-4040-8abe-0a49660c3b98"
        },
        "item": {
          "id": "b4c894ce-d917-47f0-95ef-d615ae60f1cb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fe5affb9-3295-4f4f-a213-cae8ebd0cf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbc3244-799a-4028-87ea-dde78aa061c1",
        "cursor": {
          "ref": "dd3c3949-a493-46e6-85d2-0244a53f049e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b83f9ef6-3c0f-4d2c-995a-2a0c6243187d"
        },
        "item": {
          "id": "3fbc3244-799a-4028-87ea-dde78aa061c1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "82d5401c-09f8-43d7-8d02-1877ac583b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb808d4-831e-4fca-b184-79061395808e",
        "cursor": {
          "ref": "688c2f96-948f-4858-bdef-43e1b24cae08",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "72b1cb0b-9b86-48b7-8847-2dd57b56e904"
        },
        "item": {
          "id": "0cb808d4-831e-4fca-b184-79061395808e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "26895ceb-2eba-4af4-a64e-dc4a8ac0d890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7f99c7-1999-4e78-a143-5a899d9c0754",
        "cursor": {
          "ref": "4e54df6c-741f-4571-a493-0646a2303d32",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a5aa01ed-162c-4b7f-8ff1-385def9477e9"
        },
        "item": {
          "id": "3f7f99c7-1999-4e78-a143-5a899d9c0754",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5ad0800f-9529-4768-acef-99ccb7ef6012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe169c5-2d49-4a31-8e87-f19d71f1c5a1",
        "cursor": {
          "ref": "a366a0f2-fccc-4538-8564-cfda6fbe002e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a19cab5a-d1b6-4630-95d0-ac809dd21b2d"
        },
        "item": {
          "id": "bbe169c5-2d49-4a31-8e87-f19d71f1c5a1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "682c79c6-2a07-4954-8f49-eb055dd1cecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c252871-62e0-48c6-bb56-478a53ae6760",
        "cursor": {
          "ref": "6417ecd9-a77b-4552-95ee-142eb5378b12",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e5864861-2741-489b-8c34-8abba8511c11"
        },
        "item": {
          "id": "4c252871-62e0-48c6-bb56-478a53ae6760",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9377de1a-6c0d-4024-8149-1d4d13ffc655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82f38d3-c577-4ddc-94f6-4d43f6ee44dd",
        "cursor": {
          "ref": "1b36c464-78d5-4d7d-abdd-c0cc73d24938",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8e67c7b4-00e5-4c7a-81d7-4e3f397f2b4f"
        },
        "item": {
          "id": "c82f38d3-c577-4ddc-94f6-4d43f6ee44dd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "430780a2-567c-4e78-8e2a-d99d4df891a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dacf049-9fea-4727-83f7-9bb903f9398c",
        "cursor": {
          "ref": "b3cfe53b-a9e7-4917-90d7-5ab693baec55",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4c9ba416-e89e-4152-8637-7b926b58e648"
        },
        "item": {
          "id": "6dacf049-9fea-4727-83f7-9bb903f9398c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "df74539f-89b0-4220-b628-8f347b79fcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f48764-2efb-48a1-930a-17b8131bb5c9",
        "cursor": {
          "ref": "0303ebd4-17fe-48d7-8fc2-8e9114123999",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c413a371-7c68-41c3-9b82-e04e2317c7ca"
        },
        "item": {
          "id": "43f48764-2efb-48a1-930a-17b8131bb5c9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ee27ec1f-c5f5-49d4-9789-4b5c0587ec26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434d7afd-496b-45c4-bb64-2495f52fa190",
        "cursor": {
          "ref": "1921fab5-de92-4ef8-a02f-64211a22b666",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3ae88e54-6265-4a0f-800c-ffcc5d29aec6"
        },
        "item": {
          "id": "434d7afd-496b-45c4-bb64-2495f52fa190",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5d21d01b-da7b-4961-80fc-f659a21ccd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e1cdf5-bff8-41b4-8770-a4a8dddd57f6",
        "cursor": {
          "ref": "1dc6ec95-0853-437d-95a8-516e1ec94e91",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bb73c8b4-a32d-4285-bb08-98f7269fc198"
        },
        "item": {
          "id": "12e1cdf5-bff8-41b4-8770-a4a8dddd57f6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "25303e7c-5283-4f61-9fca-d56f1b3aa4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e971ca-fa16-47df-8838-49975b38ae1c",
        "cursor": {
          "ref": "10b78d55-5117-445c-820b-64750e081731",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "46ebdfb3-358b-404d-b252-8339f54b748f"
        },
        "item": {
          "id": "b7e971ca-fa16-47df-8838-49975b38ae1c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "941a882a-5e16-4afe-9e97-988e13413f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed14a0c-8921-4a7e-bacf-03bf7b3a5ea6",
        "cursor": {
          "ref": "df3de99b-e0c9-4c14-9306-28526ab35598",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3d903e66-5dc1-4c98-8622-803f7b9c9cb6"
        },
        "item": {
          "id": "4ed14a0c-8921-4a7e-bacf-03bf7b3a5ea6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d63d808e-4056-4f05-91f6-34d829e36b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e995c603-e563-425d-b538-6dfef20f659b",
        "cursor": {
          "ref": "d3a24f6d-f5d2-499b-8c27-7bf298c88a87",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "55294dd2-e08e-45e5-859b-ac9a3f2db4fb"
        },
        "item": {
          "id": "e995c603-e563-425d-b538-6dfef20f659b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d920b78c-dc4b-4191-98f3-1fd9dea0ef96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae26f87-2ea3-4e36-a875-3caa9bcaa174",
        "cursor": {
          "ref": "3f57f06b-329c-4aeb-8b0b-6b5504228589",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ec57bb0f-dac2-49f6-b13a-532ad5a3e8a7"
        },
        "item": {
          "id": "eae26f87-2ea3-4e36-a875-3caa9bcaa174",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "65387764-e1be-41fa-af6e-8a9808297fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241e4ad1-c4b1-4d7f-bdc2-9545e17a0f51",
        "cursor": {
          "ref": "cd4f5f67-1a36-4b33-8c5f-5c0bc6b42123",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c70d85f2-cb8a-4346-8d79-128cad9c2764"
        },
        "item": {
          "id": "241e4ad1-c4b1-4d7f-bdc2-9545e17a0f51",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5579c958-5d82-4712-a2c6-b97d3b8962c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd2369a-d721-4027-9a83-f059d7492d40",
        "cursor": {
          "ref": "d5bb8223-a237-4af3-a352-194b13317071",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "97be1014-032d-4222-a0c7-d6965eb5dd7d"
        },
        "item": {
          "id": "0dd2369a-d721-4027-9a83-f059d7492d40",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ec3424c3-f32a-40fd-a342-3f7fa3464fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f36968-f292-42fb-8d5a-6496403acc17",
        "cursor": {
          "ref": "3a461713-581b-466b-b80d-f34b69c835b3",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fdeb3dc2-1a67-426c-9a3e-1fa86cfa376b"
        },
        "item": {
          "id": "95f36968-f292-42fb-8d5a-6496403acc17",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d683e12b-4805-457b-8c7e-49ea36fad4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6fca81-5172-447a-9b54-955bb89801fd",
        "cursor": {
          "ref": "da4d05fb-9a3d-4ddf-9265-d729b354fd54",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e0b6d00c-5f29-496b-b6bd-0497dfb8f06b"
        },
        "item": {
          "id": "ac6fca81-5172-447a-9b54-955bb89801fd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "59b64dfb-165a-4fa0-bc6e-c591f8a243c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bb71ff-49c9-4ede-9f96-b5d6ae0fa1ea",
        "cursor": {
          "ref": "d67b43a3-21c8-455d-8d19-406eeb64a192",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6fc263b5-f7eb-4c85-a36d-2b0e2515e978"
        },
        "item": {
          "id": "72bb71ff-49c9-4ede-9f96-b5d6ae0fa1ea",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "12b4c47b-7681-4f9d-9ed6-83fc8b230faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e93467-b0b3-402b-840b-46a33fbbc7d0",
        "cursor": {
          "ref": "69f5c4fa-fef3-4c75-8220-28ec9d5117b5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bc736170-0fdd-4083-b5a8-aec5218f6c6c"
        },
        "item": {
          "id": "e9e93467-b0b3-402b-840b-46a33fbbc7d0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fd01af64-4952-4cb7-9e52-cae825b358ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac8658d-9fa7-47d1-a60e-9d8177fda2c2",
        "cursor": {
          "ref": "434a96e3-63ee-4ffc-ba10-7737a9be79ee",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c8e12c34-e2e1-4f84-915f-841d3fe29933"
        },
        "item": {
          "id": "4ac8658d-9fa7-47d1-a60e-9d8177fda2c2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8f017933-0581-4f3c-9c4b-c98fe643a486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ea7a23-4fdd-4031-a0f4-15bfa36294c1",
        "cursor": {
          "ref": "9ee1b2d3-e700-4ed6-9ee7-cf5a0475b201",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "094d7f06-7319-4fe9-8318-623a14bdd82b"
        },
        "item": {
          "id": "c4ea7a23-4fdd-4031-a0f4-15bfa36294c1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cbc52f3a-64bd-4d3a-b005-c02c7d765768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e80e555-c95b-4b5d-9858-c8de10d80300",
        "cursor": {
          "ref": "687363a8-1aa8-4b27-9409-1cc5b186cce7",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e85ac03f-8243-4275-b161-ea52e7ddc8df"
        },
        "item": {
          "id": "6e80e555-c95b-4b5d-9858-c8de10d80300",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "189dd300-29ae-4776-a59f-6a29ea0cb897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f697f9c-5d87-4b76-8da6-bc188271842b",
        "cursor": {
          "ref": "a4fc781e-a222-4c30-a0a8-7ce6b2a575e5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "50366cf2-9e2e-47fb-964a-29a376284dad"
        },
        "item": {
          "id": "1f697f9c-5d87-4b76-8da6-bc188271842b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "49f75cd0-3c15-470c-ac1c-a71f5521d0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e7ac81-05f5-4dfd-9928-089cd15f86d9",
        "cursor": {
          "ref": "6f9d9e1d-9fd5-4376-8236-2bf44b25a778",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e3d7f01e-feb2-4dfb-b120-3a8625b7f505"
        },
        "item": {
          "id": "43e7ac81-05f5-4dfd-9928-089cd15f86d9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0da4e3f6-695a-4377-b14c-dc585f4ddddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde51222-9b80-4c86-90a3-5c425a3b2acd",
        "cursor": {
          "ref": "f55c4375-812f-460c-aef7-e26c8671e9b3",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b4d01575-92a6-4402-b562-1f46cc6234e2"
        },
        "item": {
          "id": "cde51222-9b80-4c86-90a3-5c425a3b2acd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0bc603b0-8d0c-4a61-a123-748c2a4a09ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4971cf-401a-4ad4-88c5-986ec98ce445",
        "cursor": {
          "ref": "d6beaa93-4ed7-438a-a42a-d3b75a24632c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fae89904-4504-4f3e-98a3-3bea046cd56d"
        },
        "item": {
          "id": "1b4971cf-401a-4ad4-88c5-986ec98ce445",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0c94f25f-1a2e-4c32-a887-e11ba0580521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a166ff7b-d744-472a-90b5-7cc801d9d41c",
        "cursor": {
          "ref": "9b1a5763-fcc5-4dc5-a646-d86d761dc9e5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cdf079f9-65ea-460f-ab9a-e07e8751d8a5"
        },
        "item": {
          "id": "a166ff7b-d744-472a-90b5-7cc801d9d41c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a0409224-36a7-4c27-b5b6-d235a46ce148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdf0532-a067-47c7-8da9-691ebeceafd6",
        "cursor": {
          "ref": "54345d9f-78d4-4d2e-af94-00b27e4abe8d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1d529ae1-65e4-4eb9-a8aa-81eed0aebc44"
        },
        "item": {
          "id": "cfdf0532-a067-47c7-8da9-691ebeceafd6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "254abf6f-dd8f-41de-ba73-faf20152045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ad72e4-c6dd-41dc-9381-c930a281071d",
        "cursor": {
          "ref": "3b705ebd-574c-4dd7-83c3-143bf8ad39d3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c9f8263c-908a-456a-a9c9-a78040be8ea4"
        },
        "item": {
          "id": "87ad72e4-c6dd-41dc-9381-c930a281071d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "06a744c0-6bbf-4e1e-9f03-e2f188f2e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47cfff6-3b2f-41ff-a895-53bb26392e1c",
        "cursor": {
          "ref": "015077a1-cdc6-4432-92a8-f9973a1a03a5",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "50b0c5ea-13c3-4c64-b364-9c5e9c0ef5fa"
        },
        "item": {
          "id": "e47cfff6-3b2f-41ff-a895-53bb26392e1c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "84827c10-e7c8-402d-a2fe-ff841725fa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e9591f-d4b6-4785-b64f-ec9839ec0be0",
        "cursor": {
          "ref": "dde19aef-cf0a-4c5a-83de-9aa34706a681",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0ac2a815-569a-4a2f-bcda-ad992ec86dc6"
        },
        "item": {
          "id": "88e9591f-d4b6-4785-b64f-ec9839ec0be0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f1bae9df-2500-42a6-8e9f-72d08464d5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e571bf-7b94-4028-9ab0-2599270e8d44",
        "cursor": {
          "ref": "b3a26731-cb7b-4279-ab9d-7263775a1c50",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "af556676-b332-4e56-b2d8-6f3af15fe674"
        },
        "item": {
          "id": "49e571bf-7b94-4028-9ab0-2599270e8d44",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3d50aa23-d698-47fa-9608-9fa6c0f94943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd283a3-5266-4a33-8dc7-2483cf52fa13",
        "cursor": {
          "ref": "3b90ab6e-8bae-4dc7-af5a-92a203feae67",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a5df7d3d-d5e4-4aac-a57c-9a6e03e428c9"
        },
        "item": {
          "id": "cfd283a3-5266-4a33-8dc7-2483cf52fa13",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "07db7c61-4340-464e-8727-009ab22cd447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21d0bf0-f664-4a0c-9203-1eb7f2ccc547",
        "cursor": {
          "ref": "d30a5e59-959b-4aee-bd39-9e82a3cfb43b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4c3c5622-ff4d-4558-bc2a-30813af20ad6"
        },
        "item": {
          "id": "c21d0bf0-f664-4a0c-9203-1eb7f2ccc547",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "45bdd22f-140a-44c1-9109-e1439801ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9b43fa-839c-47e7-aa8d-59f6cc961edd",
        "cursor": {
          "ref": "1fa868f7-4f37-49df-9bc8-1227c14862e2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f2a2aea2-2b7a-4c9c-af62-c828d91393d4"
        },
        "item": {
          "id": "5c9b43fa-839c-47e7-aa8d-59f6cc961edd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "60105392-9f71-4f89-86a3-f2a16191a778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33fb789-757d-4bfb-8f8b-a2a963376fa3",
        "cursor": {
          "ref": "04b6e1ec-25d9-4a77-ad47-19d7ce91d889",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b587d09-9437-48a5-9f43-0fe72ec3098e"
        },
        "item": {
          "id": "c33fb789-757d-4bfb-8f8b-a2a963376fa3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5d79aea3-9710-4e64-ad86-c0b414d3834e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc37ee6-bee8-4074-b95b-6246373b9df5",
        "cursor": {
          "ref": "5297eade-38fa-46c2-9401-e91d21c4d734",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0b6c35c8-74c9-4d49-b251-f08ba313c6ae"
        },
        "item": {
          "id": "2dc37ee6-bee8-4074-b95b-6246373b9df5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e77e5382-e366-453b-8507-b8be76df64ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75571561-2c96-4f02-83fe-0f6760ad7a54",
        "cursor": {
          "ref": "23bb78fe-316e-4500-b8a6-26d294c0ab36",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0ff0ec9b-9ae9-4b84-9d6f-0c4f302a8769"
        },
        "item": {
          "id": "75571561-2c96-4f02-83fe-0f6760ad7a54",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e7febd2d-2cce-4d4e-88fe-1ae538ccaf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a98344-d5ed-419f-931c-82b602300c99",
        "cursor": {
          "ref": "ff7c412a-37f0-4b1a-80a7-e9889ae10f8b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "157c85fa-7cdc-4f33-b927-6e1b070268dd"
        },
        "item": {
          "id": "c2a98344-d5ed-419f-931c-82b602300c99",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7d7aa3d6-2b44-4ad8-acdf-5eab72f85ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cbee40-721e-4cea-b776-9bb5ff56eff9",
        "cursor": {
          "ref": "56d00cda-c502-4542-afbb-42daeee07e72",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "453d1168-9347-44b5-9bb6-65ba5babe147"
        },
        "item": {
          "id": "83cbee40-721e-4cea-b776-9bb5ff56eff9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "763070bb-443b-4579-87e1-c845d6d79405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae49fa-d368-4bc8-862b-9f3467172e8c",
        "cursor": {
          "ref": "b6cfd1d8-36c4-409f-9c05-66eda8e00484",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a71adcec-63ae-4f50-a8a8-08476d6d915a"
        },
        "item": {
          "id": "afae49fa-d368-4bc8-862b-9f3467172e8c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "78bc41df-8677-4b22-9d0f-b31a053014cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2debb9-d9bc-4bf3-9db0-53a4ec18a45a",
        "cursor": {
          "ref": "992a4eac-1a5a-4dfd-ac98-0c706dc82035",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dca6cfb1-9281-4283-8316-f2427aa8a3e5"
        },
        "item": {
          "id": "ff2debb9-d9bc-4bf3-9db0-53a4ec18a45a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3906ce7f-09b6-4be3-ba7a-c3922ac60a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5903d1a-11c5-4818-aa7d-2967057d5bea",
        "cursor": {
          "ref": "a656fa70-4321-42c5-8ed8-db7997a2ac8b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "afac48fd-1054-48f1-89c2-ec8fbf1c50c8"
        },
        "item": {
          "id": "c5903d1a-11c5-4818-aa7d-2967057d5bea",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "791766bc-80e5-491a-9658-19ec34069d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae151d7b-c438-4d06-b41e-ee4e47b10dd8",
        "cursor": {
          "ref": "c13a2ca2-32c6-4b9e-a851-d83fbb6193cc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "820a0f61-0cd0-4419-884b-7f1a245998b5"
        },
        "item": {
          "id": "ae151d7b-c438-4d06-b41e-ee4e47b10dd8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1792620b-812d-45a8-9af1-0e1e0bf6d617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67975f8-a48b-4d11-9c75-caaf6e89da19",
        "cursor": {
          "ref": "a15a2378-7162-4012-85e0-97d5c7f2a459",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "95398eb8-f9bd-43a2-af02-da1aac8b338d"
        },
        "item": {
          "id": "a67975f8-a48b-4d11-9c75-caaf6e89da19",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b07bcf8d-7bab-4252-a159-06376c88fca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097022e6-1beb-43a6-ac55-76422b36a3fd",
        "cursor": {
          "ref": "addd50c7-bc30-4f6d-9805-c40c6fdfa7e7",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2f83e7b3-3374-4473-8052-e8e0e997af4f"
        },
        "item": {
          "id": "097022e6-1beb-43a6-ac55-76422b36a3fd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "be27d60b-021f-4336-8b1c-b3e984ccbeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb919986-3bf5-40d1-89f1-7efe92bdecc5",
        "cursor": {
          "ref": "aea5411d-63dc-4127-a122-c786cae1d974",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2050b217-36c3-484b-9f06-110fe9ded4fa"
        },
        "item": {
          "id": "eb919986-3bf5-40d1-89f1-7efe92bdecc5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5da630e8-248c-4634-9fa3-1bcd9b641ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf885f31-1198-4466-aecb-780f07d6eab7",
        "cursor": {
          "ref": "bf7a5767-1bfd-44f8-9bc6-a25aa2cb0667",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6c481659-088b-4c70-a5c8-f39db4f6f01e"
        },
        "item": {
          "id": "bf885f31-1198-4466-aecb-780f07d6eab7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fa33e1e4-0c28-4a28-8cc9-c964264cf6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616bdf84-f5c0-444d-b8ae-21a3ff9b0d5e",
        "cursor": {
          "ref": "9a1ffef5-0426-4bf8-9f5c-13ec047e9d03",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "12301356-6310-4660-a062-c276e45fdbda"
        },
        "item": {
          "id": "616bdf84-f5c0-444d-b8ae-21a3ff9b0d5e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "50577d6d-aa36-48f6-9040-84ca166c4031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8629fa26-bd2e-4e84-b452-b7cf0c59fe64",
        "cursor": {
          "ref": "83e73f17-678c-4bef-8c79-bc8ae2970acc",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "84bda384-a842-41ef-b22a-c81565354ca0"
        },
        "item": {
          "id": "8629fa26-bd2e-4e84-b452-b7cf0c59fe64",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e1f4c2bf-29f1-4bbb-ab35-624b94f309db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfa0b70-fd3d-47b8-a841-8ef410dddd86",
        "cursor": {
          "ref": "30a89874-fe89-409a-b560-73463597598b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "da113438-6f5d-44aa-80b4-5d62a5f3b374"
        },
        "item": {
          "id": "fbfa0b70-fd3d-47b8-a841-8ef410dddd86",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "454da836-15c7-4c91-9e39-60ca4ccb3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf419996-feea-4bff-8cca-25e29d432a2a",
        "cursor": {
          "ref": "7474456f-e2fe-46f9-a397-965f0fe58610",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "006ab5a5-1fb2-4b44-962f-190f9d1c5e0d"
        },
        "item": {
          "id": "bf419996-feea-4bff-8cca-25e29d432a2a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a6692c8c-7cee-4bc6-abce-220ff9736754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d103c7e9-ccf5-4eee-83aa-60a0b01a0355",
        "cursor": {
          "ref": "7d0fdbb9-2be6-4e59-a013-768ae73c1f6d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d42baffc-0faf-461f-b7e5-ec0acf68e806"
        },
        "item": {
          "id": "d103c7e9-ccf5-4eee-83aa-60a0b01a0355",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "46e07490-a50f-48e6-87ca-eed50413c2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fec7093-ad1d-4bf6-89c0-16c5e80f13c1",
        "cursor": {
          "ref": "2f17a36b-a2c4-492d-805c-92075f93b1c9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3aca0206-072a-430b-baf2-200e61912613"
        },
        "item": {
          "id": "5fec7093-ad1d-4bf6-89c0-16c5e80f13c1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "174c23bf-3b0d-49d0-9751-fc9c50fbbf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350a1e61-f15b-4ad3-bf4f-db575afdb2f2",
        "cursor": {
          "ref": "4252c7d1-dbdd-4fcd-bc0d-4bbffec63a95",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6b01e6ea-054f-42e3-85be-f64ce0d22894"
        },
        "item": {
          "id": "350a1e61-f15b-4ad3-bf4f-db575afdb2f2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "31a65d2f-1aaa-48a4-84e1-badf75ae318e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8192ef51-dade-4543-8b98-b346d1bf9377",
        "cursor": {
          "ref": "a58f3cd6-e5c8-4102-b92f-4019eb92a28e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "eff6faaf-c1c7-415f-ba05-a639f425d907"
        },
        "item": {
          "id": "8192ef51-dade-4543-8b98-b346d1bf9377",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "439d8b72-276a-49e2-a738-e59b71cae928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f522464-1337-4aa0-a5d7-62abed1203cd",
        "cursor": {
          "ref": "c26cd8a5-b317-4087-b7c5-c2d47869f11d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bee14c26-93fb-4464-96a6-6014e8539130"
        },
        "item": {
          "id": "6f522464-1337-4aa0-a5d7-62abed1203cd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d4789d2-e7fc-419f-8004-e71e2fac8fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc6ae3b-586c-40ed-9018-5b713c9ee10a",
        "cursor": {
          "ref": "eec5a2f7-4228-49ea-b993-d30833345758",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8762390c-df5d-4663-aa3b-34d1d02bd570"
        },
        "item": {
          "id": "6bc6ae3b-586c-40ed-9018-5b713c9ee10a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "271dbcb0-4410-467f-b7ca-ea975b1ef6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dd5ff1-8def-4d91-881a-88e6d34706a1",
        "cursor": {
          "ref": "2c06f0f1-cb4c-42be-9a06-ff49df1a2c53",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "eefa144a-5c76-4596-9a45-028dfa9b5de3"
        },
        "item": {
          "id": "f5dd5ff1-8def-4d91-881a-88e6d34706a1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4e1fee74-23f7-4891-9b8f-3083ee1c4132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af54d20-369c-435f-8fea-25255d90087d",
        "cursor": {
          "ref": "e4054635-2b3f-45f8-86de-55b803d5bd88",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "984f3670-eccc-455e-a15e-d0d39e4400d5"
        },
        "item": {
          "id": "7af54d20-369c-435f-8fea-25255d90087d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "104c249a-03a5-482e-9c0d-e5a210f06745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc39908-c52b-42a0-8b93-aa8648b27c6f",
        "cursor": {
          "ref": "e427876c-9b81-41d8-879f-b9e8dc67ae02",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "27391b36-e8f2-43b6-9248-1ece208dc5ac"
        },
        "item": {
          "id": "0bc39908-c52b-42a0-8b93-aa8648b27c6f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ab49c429-1b54-4e51-a775-f0967b2aafe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab346af-6587-4739-a25b-d32d086f6e72",
        "cursor": {
          "ref": "476c23d3-0e98-4983-8ff4-aa4d6119d011",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "232d141e-341c-4e17-92d7-f248219b4c8a"
        },
        "item": {
          "id": "4ab346af-6587-4739-a25b-d32d086f6e72",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8fa51486-b6a3-4b7f-9365-f859e3020df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49c71db-e48d-41a9-b71e-02cadf829aa2",
        "cursor": {
          "ref": "f9f4c4ea-f1a5-430e-b07d-8478832d8481",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1de4606e-87b9-4790-9d24-e0bb4058767d"
        },
        "item": {
          "id": "b49c71db-e48d-41a9-b71e-02cadf829aa2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9d8004e2-9757-46a3-b0ef-23e30a2da5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62655ae2-631d-435c-9e4b-fb7c92c301e7",
        "cursor": {
          "ref": "8025aa7b-6722-41a0-8d30-06c7ba4964f2",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ffed5711-4144-42c6-9094-7c7343fb935b"
        },
        "item": {
          "id": "62655ae2-631d-435c-9e4b-fb7c92c301e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "991488b4-dbce-43cc-89cb-3f2b4c080d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3016bc9-e7e8-4142-913a-e67ac457d4f1",
        "cursor": {
          "ref": "8fbbe45c-494d-4363-92b8-876d1710e069",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a5e99792-0f35-4898-8220-cfd5240638db"
        },
        "item": {
          "id": "e3016bc9-e7e8-4142-913a-e67ac457d4f1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5eb851fc-8557-48c7-b0d4-e8065582606c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba75d01-4be9-4692-b1cf-2c83607dd76c",
        "cursor": {
          "ref": "f7d3e1d3-ff81-4afd-8d87-7a228f5c8dfc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1930f324-04d2-4181-889e-e3892fce0a69"
        },
        "item": {
          "id": "0ba75d01-4be9-4692-b1cf-2c83607dd76c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1af59bd9-dc28-4f20-90ba-32388910e408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c50027-c61c-44b4-9c65-f9b4d97fd9e6",
        "cursor": {
          "ref": "63fe8b08-2c33-4496-a053-51db519e9523",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0a7f5e44-15ff-42ce-8fdb-695107e2fb9a"
        },
        "item": {
          "id": "29c50027-c61c-44b4-9c65-f9b4d97fd9e6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bd258884-806a-4a84-9b2e-432761caa9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8de95a-c841-411f-b634-c432800b1ae3",
        "cursor": {
          "ref": "0803ea70-4428-42c2-b86b-13cfc99d93ee",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0ad975bf-653e-4c70-b656-1e5dd9eba621"
        },
        "item": {
          "id": "5b8de95a-c841-411f-b634-c432800b1ae3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7adf73d4-4b2e-4215-a3e4-0238b8dfbd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e067eb-d196-4b87-b7eb-4fc5dc7c4bfa",
        "cursor": {
          "ref": "ed086dcc-074a-4eff-8f90-06169f298882",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "78212385-14a7-4da8-a6af-d3599da43d8b"
        },
        "item": {
          "id": "f1e067eb-d196-4b87-b7eb-4fc5dc7c4bfa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f859ab8b-5d61-466f-a672-759d5e34f61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53591823-3b95-4212-ad93-0f93ded68086",
        "cursor": {
          "ref": "dbda5243-6bb6-4477-b847-c23a0e16635a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1d287b06-fad0-4b31-b0ce-bfbd4c9b9d7d"
        },
        "item": {
          "id": "53591823-3b95-4212-ad93-0f93ded68086",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3033cc08-80c1-4019-a358-94cabfc04ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c34ade-35b7-4832-9df6-f3a7c9f96acc",
        "cursor": {
          "ref": "a2ef0877-b637-4350-9501-6503846ffb2b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e46506e0-4c1f-4e96-84a7-6a9850b29ca3"
        },
        "item": {
          "id": "17c34ade-35b7-4832-9df6-f3a7c9f96acc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "46f1bbab-6a1a-471f-ada8-5d80ad8e6f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e063f06f-9e03-4a73-b6d4-681b296f7d57",
        "cursor": {
          "ref": "2d9f073d-081a-4fa1-a61a-845c264c21a3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a74338a0-30fe-453e-a82a-28348b9b1b8a"
        },
        "item": {
          "id": "e063f06f-9e03-4a73-b6d4-681b296f7d57",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "22b5ccf1-9d53-4851-849d-395566c40953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ae9e06-3c7f-4521-b9ca-cf447ccc258d",
        "cursor": {
          "ref": "6d587592-5047-47ef-8a81-8ba22eb84d53",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a327f83a-49f7-4129-854c-83bae4a3f24b"
        },
        "item": {
          "id": "80ae9e06-3c7f-4521-b9ca-cf447ccc258d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ad658398-1c3f-4c2d-968f-5911f25fd41c",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc837cf2-58a5-450a-a321-147361cc8c5a",
        "cursor": {
          "ref": "410ee3ff-70a0-4445-a5a2-b6dd21260eaa",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f9aab5ce-c9fd-43ed-bb9f-2aece7068afb"
        },
        "item": {
          "id": "dc837cf2-58a5-450a-a321-147361cc8c5a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6c019965-d0cd-4979-8955-ea69b2f00603",
          "status": "OK",
          "code": 200,
          "responseTime": 1226,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c26a96-5687-4dd7-a7c9-2adef3c8316e",
        "cursor": {
          "ref": "f0afbc83-0dd7-4a2e-8ba1-df99a2ccc9ad",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "23dc99b0-88ac-46e8-80d5-675572e3e2d6"
        },
        "item": {
          "id": "39c26a96-5687-4dd7-a7c9-2adef3c8316e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c9141489-e190-4dde-9416-d762ed730d95",
          "status": "OK",
          "code": 200,
          "responseTime": 1375,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e589f6-7cbc-4790-b584-bd4a42ec4706",
        "cursor": {
          "ref": "96bd4b37-f98f-4cab-9535-2c50f36490d3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dcda38ac-81a3-490d-b7ef-ae0b3cd82915"
        },
        "item": {
          "id": "16e589f6-7cbc-4790-b584-bd4a42ec4706",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2518d6ec-36a1-4e74-98df-f10b9aa3f4ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e589f6-7cbc-4790-b584-bd4a42ec4706",
        "cursor": {
          "ref": "96bd4b37-f98f-4cab-9535-2c50f36490d3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dcda38ac-81a3-490d-b7ef-ae0b3cd82915"
        },
        "item": {
          "id": "16e589f6-7cbc-4790-b584-bd4a42ec4706",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2518d6ec-36a1-4e74-98df-f10b9aa3f4ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e07c8e-d03e-45ae-b1d3-14cf0b14d9eb",
        "cursor": {
          "ref": "56ebddba-e1bf-428d-86cc-9cbe8278387a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "63b0e364-8741-4ed5-aaa4-45d729ee8fd6"
        },
        "item": {
          "id": "04e07c8e-d03e-45ae-b1d3-14cf0b14d9eb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "78117411-880e-4579-886b-9042b99c5cfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce8fa32-a8eb-4c8c-96ff-a15a9416e322",
        "cursor": {
          "ref": "14af47e7-5b55-4d20-a1a2-96f8f8986a0b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0cbdf99b-5423-4057-b89a-7bf59b5ed40e"
        },
        "item": {
          "id": "4ce8fa32-a8eb-4c8c-96ff-a15a9416e322",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "93d73444-192b-49a4-bb1a-dcfbd9eff3b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}