{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e20c2215-9db2-49cb-a3d8-cc29d8a8c5d4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "93f0d019-4a93-46ea-9bed-e777c9d55993",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d08b1b52-6158-467f-bc70-6c6d1750bb1e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6016bcaf-a306-44ed-b5b4-89f94a7f221c"
                }
              }
            ]
          },
          {
            "id": "aa687035-f870-4442-8a5d-2b251fd4d6d5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23dc9791-87e0-4239-8588-e63d3e28851b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a59c94b3-c18a-4b98-b093-c006967f6a67"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9f2068cd-cd79-4138-9d01-fd3594c3fb23",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4a88d6cb-08a6-42e8-9337-427553ba7a8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "88b54d83-dffa-48b2-80e9-566f5cf97c55",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e013ab05-0ca3-4247-b64a-825b4430aade",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "813dbc82-bdad-4473-9c97-4ea15c7704df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5612c531-b290-4028-a587-00d52ec08747",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf5264f4-d372-4e73-9869-75cceeaf5fe6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5888a111-1784-4347-85fc-3dc4bffa5cc1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de5c01cb-7cbf-4b48-af95-350b4c8dfdbd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cae0c683-aef2-443b-ac21-36a095f331cf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "66ee5bcc-4719-481c-8fe1-b646c0cbc4ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff8f8013-cf39-4eb2-8885-a72314888437",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd96617a-b296-446c-9c48-c41622f8bee0"
            }
          }
        ]
      },
      {
        "id": "abfb95e1-4263-4e51-9364-94eef03dc240",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8d1e8d34-476d-473e-9c86-ef5bc4691aa1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ba0010c-cc32-4891-a2b9-78a5a88da270",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "088ba2a4-adb9-4150-812e-322829bb294a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639a637e-d64f-4ab7-b3f1-2b945902395a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b71b9d54-be8d-423a-965b-565bc50cfb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2fc102-93c9-4854-9fd1-3a25e1073029",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d7846c-0796-4c11-9ff8-25b597bf425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "480de254-a6f0-4c84-b914-6bc2c90dfd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a2b381-3612-4e3d-84d5-d9a30abf2856",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e037208-28cd-4da6-ab39-712d9aa72571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbf5e319-31a7-48d4-a7a7-17cf3e11c9da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68968269-15fe-4bb2-ad50-9d6c55c17014",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73ef11f3-a268-4607-8f14-19a9e85db92f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ac5470-474e-4c2e-b91f-ab1b0eb49651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39db0de2-9e0f-4b2b-adc7-f418815c7142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33d71b7-fa9f-46db-a9ac-0d6275a6a6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614deeef-099b-442b-a314-71c8c7187360"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "583d87c5-b9a7-437f-bbcd-d58ea34b50cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2602f591-7e80-45b5-a236-91d3e4e65dcc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2ebd56f-d0b7-480b-9b86-79cc44a97fcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e171935c-f947-4754-a96b-4997315f6bab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3eae4f2-35f6-4c93-8933-1c5c79e5e09d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2cec4705-c332-42b8-8f82-189afadeb64b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dc3ddb4-2297-4cfd-967d-dfb25c07851b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a647ae3-4f18-46cc-8f68-4d7c165d53be"
            }
          }
        ]
      },
      {
        "id": "7ba805ce-04a2-462f-9857-f4e5aa4284b1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "90880b05-eeeb-4168-b1ce-e9128caa98a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "566dbd51-2f12-4dfd-a5fe-0f412e707146",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3dbba62a-d480-4fa3-9be7-e844d4ffab94",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f4a32-26da-46e2-a9c4-7e52bb32750f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb60bc6-421a-4481-8acc-9a1c82b2d49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba98860b-91f2-4611-85eb-9d8355e1762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e79d0097-8864-4b8e-924a-735ae283ae1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50914f93-167d-42ca-bb5c-45a82250005c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba97ea65-6a99-4a3e-8c8c-ea43eac08385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00e76f8-cd8f-4906-9b62-1bbf8ed6c530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86826233-acc5-4846-9cd9-f23e2ec73bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8fc6eeb-94a8-4e95-a74a-e1bbbfbc9c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2790b70b-9bf0-4853-8bab-6a6a11334e99",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110b9f9c-50e6-47b2-bd29-fb798a2e5600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0924568-51db-481a-9331-d9dad269f265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5249ec-c4d5-4601-b7ce-bda35efb48cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eadcbc68-fb95-46f2-8eaa-c13778535169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd12f46e-bf4b-456a-99cf-faaf998cb984",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01a530b-c6e0-42ad-9853-e6cb1b21db35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cea6f94-c901-4fab-803f-cf6e879ba228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0268d28-d547-4472-9d60-5e326d8a1c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c6ef2e9-4099-4f31-b4be-bbf6898bebd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5e076c-fd74-4f05-b59a-7202a8b2e4a0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370bc138-f750-41fc-810d-46df1b0acd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb85d658-7318-4220-a9e0-c221815dc65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faee091-7e56-4d2e-b50b-2d5ced9fa153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd613e15-f420-4be9-95b0-cb04dae39a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbfbc92-a0bf-41a0-b829-3f55c758edb3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bec88b9-7e3b-458f-bb21-685303dd5416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca95116f-2953-448b-ab05-2a1e9a808d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1604c54f-6593-449e-9dde-00177e1c8f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29cf9b99-2f06-4f79-895e-f22fb7bab494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29431ac8-dec1-4ab0-b81e-5832db1120c5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896616fd-e8a5-429b-9366-c793dfce2c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff55c11b-02c4-4f1b-bffa-ae0fec474d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b89129-0373-40b0-ab41-68586de35f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdf94d33-2d07-4b31-9713-f60d485e2d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2107caab-7f95-4668-87c9-6b4d862b9865",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc633ab1-184d-4cac-991f-3ce200639c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ada0c17-3f6d-464b-babe-f02cbbe0095f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dfdc69-7320-418a-a152-2b88450e24c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6023fcc3-0ad1-401d-a4b2-5675d5117ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4cdc6b-827e-41ad-84ee-f48223ac4f7b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2afcac1-b49e-41cb-a2de-f1354e6d351a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27067f4-b512-4ac4-b9ac-e686b4ba516e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9be14f-3102-4473-bae8-a587f0c55029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5441f9f-baaf-4b1b-a42a-c9a4c4fc5a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5861a0a7-e3af-4979-a01b-2e8533dfb504",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64957fa-717d-4f59-b6e6-7cde219294e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c790a6-9b11-4a23-807b-2603bd0f1f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319efdbd-fc75-4a13-8f2f-c71d79474dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b032ea9-aba5-4d59-b9a4-07e7c43b6200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593349a3-7eb3-4292-bb00-1ffb00917c17",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b749a436-8611-47f0-aabf-f375c0a2854f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354b43cc-3569-44a9-8929-e9bcfcb38758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36fa647-1ce9-47fb-a0d7-519d3df82d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29648449-5dcd-4467-8ec4-f95ca4fb68d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8226dbd0-b202-4a92-baf7-b3ec78f0a10b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02c2468-3607-459b-8294-dc6933f36a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89970b67-8150-41d7-9706-fb6157d9cc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524a0fa0-e443-425a-b247-35aa3050120b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c004516-1dcf-4cc3-9026-50caa3b3cada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cf4e03-c333-4ae9-942a-adf1b2ea5bd9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2eaadd-7f61-44de-a052-6b0f68817759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4b47c7-4b01-4977-828e-d7c4a6c9886c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54ce8c4-50b1-45da-959f-4707887af342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09036f07-3e66-43bf-938e-a1478f8db879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84260ef-1f63-43e9-94e6-de87dcfdb8ba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042d1c7b-f354-402e-b3f7-44fe09771a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37890f89-9b1f-456d-a734-328011746cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c170d1-9a84-4189-8950-1df64059ace0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a1739c8-b750-4fbc-a962-92c9c3277b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9397c4f9-98ce-488a-a80a-fd28320dc864",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4215daf-95c2-430f-98a4-5e23cf01f176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3823983-64b2-43a2-8522-2397dd753f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef756d3-5bf8-490b-9ef2-2e5626048c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81334412-2223-42a5-920a-f3e815ef683f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6fa417-e947-48a7-9172-4d7c676aaa5d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b9d987-ab1a-4c94-b17d-c83b200dfbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec121025-f825-4093-aad7-6d25af20de88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596c5fc6-f312-4bf0-938b-567f95e75ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4624c67-0933-440b-a75b-d0e9c9d09f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb78e3b-2bdd-4bd8-9b09-2a1079a45037",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c5e30d-cf68-4a65-8ecb-f786d4c415ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7825997f-a260-4722-a8df-eb7f5892f319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c569b681-c540-4dc1-92c7-d46dcaf718ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61bf90aa-7616-4757-ad59-584a1b02d094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4179a3-3717-4eea-a161-4ec7aa709368",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4682bd-782e-4df2-a5d2-5722ae7b3187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a10d4a0-c49f-4535-ae10-8f7ab53b4ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacd5e8b-794b-47bf-ad4f-885386dfae4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "892b1123-2971-4180-a437-4d5be09742ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d2cffc-8c58-45b9-b289-4330bbf98b2f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c12fcd2-ec2c-470f-84cc-f9aa0aa6b44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6ac7d8-3f8f-4786-94b5-3d5e5469f31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3112f7d-0432-400f-a8f4-6460d46295a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28af4da-e487-4ff4-b1fa-0e6e14b3a740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb283053-10c8-49c8-b958-5b18ce7d6807",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c991c7b-2519-4247-94f7-7391f102e226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b809eb26-6e6f-4c0d-9dfe-305a07312019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d97a00-f7e8-4fd8-8bac-0003c3b6ccc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46f60780-f2d9-4392-86e9-573f3ca272b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f1a230-4ef4-4731-9eac-f77030876217",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b30c9c-b8b5-4eac-84ac-7abcf54f12e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5ef25c-23a4-48b9-8dc2-caa7b5ae00b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b882fc6a-68ab-4106-91e9-b6e39a6c6972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c417dde-bb60-4318-8c31-db62b4392aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44911ead-3880-431a-9a0a-24193e8b8b76",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0ddeab-f377-4844-af90-d58d8d78f62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3763accf-a211-46fc-acd5-c41b0201b984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0d2ce2-f682-4446-be70-4ef480eb3074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe24b2d7-64a3-4da9-af44-5b30a0d69bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b39d83-a8e9-4d53-a67d-011cc2d291e8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315fa662-844c-4a15-96cc-d9c37cf471d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141b5bb0-2b55-4050-8f2b-67122d3fc69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c31e55-c699-41af-a5d7-9b8c8b6d0b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d24e8501-9384-474f-a209-45b5040608d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc04e3c9-20f9-4cc6-a5a7-0b2697a8f1d9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff8d165-f647-48c9-869b-4a410b34b49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d6cd41-4477-41c6-80b8-8f3d47af9a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7994119-9122-4740-87a9-a40e58b1444f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f20283-3b10-41fe-9078-704388802349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d67618-740b-4108-adc7-7db898f652f1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5671c8cc-1ec1-4ee8-b8fe-75bd4ef29a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6175f713-217d-407b-9a48-53930efbe180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5f569d-e16d-4acb-991d-2cb597c2046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a248dd9-edcc-4bc2-8c96-75686af99736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d414499a-001e-43fa-823e-8951186eae9c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4d78ff-dfea-4857-93c6-c90f994cdae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0349705f-c003-427b-820b-95e4677d59d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f17e691-0f14-4578-b07e-b3613fc2fda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc0ba5e-a0dd-4c6d-a790-fc5822854cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e4b639-350c-4949-a528-35ff03d6ad45",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01edc8ee-a36e-4635-b0f7-4192c403b361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b7502-84ff-4bd2-8ee1-a812d84454b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf89a2b-9552-4e11-9307-5e0eae0fde77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8fac35-c183-4a72-b1c6-46bd8007a643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b5286f-33ee-43c2-9fa0-541c2e3515ca",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceff51d-c630-4084-b0f2-19d24865b623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53d9dc4-7328-444c-9848-688634c77356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065db90d-9685-4e55-88af-4292d3c823a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a29d00-9d25-47fe-bbaf-86c1de59bf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af4bc19-20e2-4d89-b0ca-6be938435992",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0459e97e-e62f-45c7-b35c-81f08685adf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4621e54-3072-42c1-a254-bcc1b0ccc39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f6b7ab-3a4a-44d4-8388-d7d10cf9fb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db268d1a-be5f-4850-bbcc-fece20f94001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd82880b-0609-4791-a68a-9a2bfcf861dc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dd9722-d181-45ec-b399-66687b59fde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2ee8ca-b062-4093-9684-4c046d5d5483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9fb64a-33a1-44a9-93d5-e22eb92792d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00ec133-1116-4097-8637-86cbceb3c070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed8742e-9d80-4f5b-ac28-68e80e0320df",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5ac8fc-af9e-4d0a-9cc3-fdaa129b7485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286044ff-12ab-41a9-8cb5-50b846897495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b715e8-91ea-4cb1-880b-8dc1baa64273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c831e1-14b0-43c7-b66b-178ca56be9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7400ec24-5231-42ea-91f1-f72a813aa6a7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c00be60-6051-4ff6-931c-28311f199457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98f12a3-4bd6-4470-bd27-20449740466d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be0f451-41e0-4032-8508-57362a4c9247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88e2ec6-07e8-49fb-a258-39d8adc24d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d37ea3-65e6-43dd-802f-68ccf680c24d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055f38a3-5b50-45b1-8f23-eb3080befb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59994f1-cffe-43e2-852e-67a7599c1748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5404e466-5f35-4603-985d-8b1b1db09027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2a6bdc-f82e-471b-84b4-6364109c472b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cec15f-0ee8-491e-8da6-e54efdcc416c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df05c174-f9a6-46f4-a8d8-981064311be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8775fc58-b379-4088-899e-ebee7bca8350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82a8c06-fc79-444c-87e2-9097e13765c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb32960-dd74-4987-bb15-0b9f8fe56d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8f6985-3e05-4ca3-89ea-582e82654b1d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8c2540-1a0e-4a67-add7-3b578975ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956bb48f-a3cf-4362-9784-124dfa1ff106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4839fe4-b06e-4f08-8f58-6345c9a80587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2cfb53-1a85-4e0c-91d7-5c03a1854ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d24f62-e2f5-4faa-aa1b-326ac1b82c68",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64adc78-298a-453d-ba8a-cb0394ccd4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a36847b-42be-4fc3-92bd-c1ac4512ab88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79514dd2-ea11-4f88-b45e-0e759a2913bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83c91e5b-9792-444a-a4d8-c34081daee05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2f5673-0206-422d-af85-5d9c90994f9e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167e9792-df8c-474e-af33-1a95fd4a598c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab749e9a-30ef-4a86-b115-ca918d2ed327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3445abe9-39e9-4dc2-bd96-64e51084d2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eccfec34-d8f4-4ab5-8f38-b016fa8e65c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5d5b1a-c939-40b1-bf05-6c972e4a4898",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f67755d-4c01-4c2c-a242-6696fee8ccf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fa1631-b7c4-4148-9f1d-e81a6b7c304e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30911e15-f5bc-4f13-ab14-202b976191f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7423e6-8e8b-4d7d-a404-5fac279c1052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4eafe0-9bff-40cf-b317-d80d5404f39a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1773141f-4685-42e9-a8dd-cad25762f58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3329b1d-3627-447f-a8a3-a5d43929e959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28be133-c208-433f-af83-b5f3f35d99f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aafb21ae-30c6-4175-8cf8-7dd42a282c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c2ddc8-85b8-4236-ae8e-04bdc51fb00f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cfe771-4e23-4d7b-9aa6-157d14b962b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676f039e-87e8-4b20-8015-cd8ac5985f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbb27ef-dd49-48de-b9c6-778b88cebe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67faebc7-eade-4b8c-ae84-83c239bd3fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c0c51-39e9-4a84-836b-fa051bfdbdeb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95b3468-fb60-410e-be82-11be583eac61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbfb775-b275-483c-a9cc-77a52b243214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace40679-97ab-4fe5-9f94-5f21f3b0003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d93ad3a-4adf-402d-94f0-f1d08e54e3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c8ac1a-89f1-415c-a017-c0913e8429b0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3933ed-a585-4633-a491-f697d8bd0b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36239be8-af84-48e3-95bc-c0791ff9a504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66329c8-f5be-4cc6-9da7-7c5ec2211b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ebfd6f-bd56-48a6-9f84-2e6ed5fe54ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994a6bdb-840e-4cbf-ba69-9e945d258c83",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc87d9-ad73-46d6-aabb-ee0591b66574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3384cc09-f1aa-4ed2-8ecd-31cdb9570fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0f6358-9052-4f6c-a3c1-26713f61a11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "202926d1-df1b-419e-91b1-73a5746c0033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f278b9bf-cc40-4709-9f38-b3b82798ada3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644dc9f6-27ba-4ac4-ae8c-f3b07a5d3124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2260e0c-ad5a-4b99-a3f3-eb46b285aa43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033d990c-cf82-4023-8ca2-e7b1cc6aebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc493ef1-2e1a-42c5-9063-53b90b8d9244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40c58e0-fe0b-45b7-83db-3f28c32f992b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bc62d8-9da1-4939-b9dc-2c31d6a7a607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce186331-42af-4cf1-b801-f4fc4ce7a33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea6c4a3-7d08-49b7-9acd-ffdc50bfce9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fbe432-f699-42be-97b0-99e6a0493dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4c6bfc-1e43-4848-8a84-c905aeb3e271",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863281c6-6ef6-4d77-889c-17caa6172d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170d884e-99fa-49b2-a919-0bb04ec3fb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cd5710-f289-41f4-bdba-1ecc203abb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e218ca3d-b1df-45b8-8796-95da894e0883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec01fe35-24f8-4421-8a9b-561a89cdf734",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a71cc0-67df-4b7d-86b4-d9f9b3d6a74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa311891-578f-43e9-ada0-c73300237000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e4acec-922c-4507-ac9f-f5faa09594ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f626452e-a008-4117-a845-e09b6c0e2784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc84bb7f-acb5-4155-a89c-1eaed9387e4a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dd1c6e-539b-4b08-a7c5-fee3c4ed2c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769d7689-5e63-4c71-8f8f-5504e6c41e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bf6773-ac8f-4372-8e79-bfbc2364fa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bfadde-7894-477a-a106-e172f713aca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77daafc-442a-458f-b862-be561b845b52",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc385b45-332e-4a6a-a90c-1b486b842d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce4d357-267d-4aa3-9768-8685da13c3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e458f7-6ae7-4998-b597-f3798bd4a05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6557ceab-3efb-4cac-8dd1-50a3bb5b4f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657237c1-73bd-412b-92fa-ca6346fe91b0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f26c48-c2ad-4dfa-9944-bca21c465faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a037d4-6b2f-4bbd-88d2-d3c1ec2150d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcac189-81b4-4569-add2-7d10697dc42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fca2d254-ac58-4106-8ef2-3f2127c328d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028fd0c6-2e6d-4aab-971c-42e99d5e4728",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9a852c-13d7-47ec-96ee-d6772f58ea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64575b85-cd78-4763-be28-8ec85c1afd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f478e2e-a81f-4230-be51-b702a2990681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6435d186-1bd0-4bca-810b-e8daf6413527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9cdb72-6c6f-4aa9-abfb-ba308a8f6b24",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63ba0b8-69bb-4a26-963f-d95f23a250ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4aeb5a-b4d1-4fa0-aa47-4c5ea834ed2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7211c33e-dd57-4dcf-87b6-1f1b74bba3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dccd91a-0349-4162-bbed-9498387cefd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1250d52-e463-40cf-a409-faccbbcbdefe",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e39ad8-c10e-4d09-8fe6-f6ab7c63f59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f19842-9ff3-42ea-8799-993a01939b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b7a1a8-3cc1-4dd5-ae1d-593973ec0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a1b435-03cb-4500-9f84-4b6e62df7f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b4b6d5-0d3b-4689-bd35-395ec2da05d0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceae989-0517-4e2c-a343-872fe6168654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d829296-425f-4310-9a58-4789d1bdc7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a954f3-7842-478d-a319-6223d637836d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ef7be5-ea84-4964-bbe8-f1d4899e46ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301c9871-c01e-4c2d-afd5-f6169fb1a47e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c0eb1f-5a77-4a3e-ac1d-0b342f43b4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e8c9ef-dcae-4bda-9f06-87bdb64b617f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea4454b-6ee1-4615-bca0-2949b4e258de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "896a0379-039b-49c9-8611-4ce4e92ae19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19fa57a-38c6-4620-b4c7-7362cf4d017a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589a4438-b64c-4f00-b6b8-6dc4a1e4d28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69051280-475f-4e37-af39-76858ea0f162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ad2e9f-1e14-4962-b35f-ee29c39c2f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3570bdcd-8f53-45ea-9c5f-5e0125fc4e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7d0f28-445b-42c3-b3f3-85cb38fcd98a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224b3e97-fd82-469a-bae7-bbe40c49c6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152a9f04-43e5-4284-afbc-b9fdf2977c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dda63ae-855f-48c6-be21-d62ab2e4751a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83bf64f8-0f61-4db6-8acf-548af55df42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2e88bb-cfbf-4d11-ac3f-ae8ee1829a25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f4a3c6-8d14-4741-9949-5aab10906c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67db4a90-894d-47e2-8686-63fa605a506d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdb48ef-aa53-4ea2-aed3-74cd9635ebc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8675955b-8b78-40ee-888c-fcc2e4472f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c510b3c-b37f-431d-ada7-d805e87a5664",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27266ad-72bf-4d5f-a3bb-f3ed65c66012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1849f8f1-8a59-458f-81bb-a262590b6714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bcbe8c-159c-4c37-97c6-7724c8dac900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5abdb114-b217-4273-8555-99c5cb4a25c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39843d66-1877-4d60-9ae7-df92bb5d62f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06ba5da-dda5-4d2c-8c2b-2eb13e609c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de64448a-c92e-4e7b-bf8e-0b1818dd9973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b85de8-be1b-4cdb-a7b9-03ec3844e9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1c35c5-924b-4373-82cb-37342ea799d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6292555b-1b20-45fc-9de5-288ae8372ca8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f439fe7d-b5ab-4be1-8a61-353665991ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ee183b-ecaf-4d90-b40e-58fe6995af15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb25188-26d5-4b3d-86c9-035e503f3540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "60aaef5d-afcc-4a03-a862-633b693913bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96433e9-9527-4579-927c-ad1a64362d16",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3cb163-31b2-4130-a8a3-a84b2004e655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e245768-1ead-4c16-92c7-5f093cad2b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a42290-a9ce-4771-8307-4fbd0f7f0eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4298c02a-a311-4ccb-86a0-748e999df1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3946e3e2-b163-4881-8cfa-4d3452cdd273",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f185ab7-9dac-4dac-b219-40567fc089ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e805a7da-b204-408b-a15b-84ce41735f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980b2d3f-a042-40f8-8ef5-b5857aeb945a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abaf5f2-dd88-4b4f-82f6-24bcb5476271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5c1122-0c2c-4d30-9a0f-748df186a63c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa00c805-7d09-47ae-bba4-972ab52adc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f39480-f73c-42c7-8cd4-af4b9def096f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7416ac-4bc4-4373-865d-525c54f93e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07053139-3a9b-42ab-b07e-e032858d7d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab407c2-feaa-49eb-b92c-9027cc669898",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbe0a70-c3d1-4a64-b222-5ef091657264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b09ae51-eda8-4084-9e15-5b0dcc90e9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b62af70-7c6a-456a-9335-57a0282a97f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d1ac77-4ce0-43fe-a5cc-db1c8a067ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fdff9c-dd38-4fbe-9124-fc8f7e5c6bac",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bb6700-0985-4c7d-a7c1-144b2beedb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551eee15-49c5-4b22-9c8c-21964b3980ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ab7ca1-7ae8-4364-bdc6-52a5bda7cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5988b807-2d86-4454-971b-56bab73d9042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12530c14-ba5f-43b3-b68f-3d45ab11ea0e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed57485-f0b9-4edd-966b-f976c9c6a5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff81550-c970-4a53-b54c-c6247e82b1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0264b52d-0815-4392-8a01-0f8b73e0c2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95ea316f-e072-4946-9040-71c7ca8b1b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6243b9-84e0-42f2-82ce-78658e49ea5d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf21ec5-6dc5-48b1-beba-6443e31e3f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c376299b-fbba-4f91-a3e8-035aece46289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b827d27-d724-46a8-b077-c8b1ff1d3a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8683c855-2288-40e9-8deb-ea7d28593eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1467179f-bcdc-4de3-bfac-19b0465bc398",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27df02ee-9a84-44dc-a3ae-4a597d0a1936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88280355-7861-44f1-a395-eea54398a0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda51973-fbe0-426f-b070-41d1777d0697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f393e145-089f-4333-97e6-40f24cd1ee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e32bb2-b461-4300-bcd6-9ada0ef8c44a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5d85ea-98f6-4bd2-b665-9f35e19a7b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4810ec36-6b92-4059-a266-025057b9fe5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4edfb3-7f30-4872-b1a1-f867bbcf1672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a544ba-c069-4bbb-bf15-53122960adf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402e71ab-d890-43f3-9351-36bb4622a50a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f8f243-0265-46c3-9361-e0701a14067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77c78af-35b3-4eaf-94a5-881e291f16ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59d39bc-99c0-4266-a439-82ff75050cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5645db96-7925-4362-bfaf-0c763f4813c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a75d17-98fb-4a00-ad98-005808053ff6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f48a4a-a96a-44b0-bcc7-8c5a20840cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31be79d-0a59-4d00-97cc-bf1d227906be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecbfca3-9417-486d-924c-35dee6eb36bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7759e747-0dfe-4776-ad06-7cb8ed85f3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9688765-b278-4434-b517-bd8f028f386c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df53d6f-8f06-4b9b-b2ba-0b9ff117aff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dbe6c9-b3de-4061-bcbb-1af9015fa72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce7787e-a96d-479d-b493-d7ed70d0e2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65fdfc7a-1b11-4451-a65c-e0a5b003fffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c667a15a-4eff-4c96-8384-f0e7a1629b4a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63fbef3-56e0-4450-ab4c-a4fc1793752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470cae3e-ac9f-4206-9f85-0f7af4076893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d29b5b-e33e-48cc-b69c-3e865d2a8b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eecd0165-6ef4-4d13-9bb3-55cfcb4b18bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93bd8a2-b802-4f09-940c-bb415d7eada5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e93fc41-e799-4dd5-941a-32b4804e984a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ebda1b-c4b1-44d1-b488-8751da092d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f3b1ba-91fa-4fef-9ac8-26c3660b1962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a24b64-9b06-414a-9ea5-5b92996613f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34236a0-15dd-49ee-b362-c3d9147e917d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85704ae-079c-4fbf-90a1-036ae7bf1804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24486ed5-7d84-40fe-9e89-cb9e78b98e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e56cdc-346a-442a-8f1e-f2b994a846c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f24834e-4eca-42ab-8b65-8fc34ba89cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd86bb7-8a7a-4e2c-b3af-6baf34715d63",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06234b4e-555a-43aa-aeec-4349e1528ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196d89b0-ff81-4b19-8e97-c5fabd02728c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c95769-85b9-485a-aa62-25eadd8cf375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "997cd3c1-8b10-4080-931d-793f7204b1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c67410-8b47-447e-a0cc-b3a80e5358c8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f307f-071c-4e03-92a4-cac9cf1bb1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37ee0d6-0488-4511-872b-356927f05ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761b2fb8-31ca-46b0-ba51-00e4f4070a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e330b23b-628e-4be6-a614-14c61cc76f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9835dc8-a686-4908-9be1-edb644292dc5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5d1b0e-e5ac-443c-a407-ef3673c2a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda94d8c-4ef0-4416-8f32-9ac41ae8e803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327fb0cf-7172-47f9-b768-b76e855dfdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67ab9b68-435b-4e72-8731-6725c57c13f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368ea026-f88e-4230-aa30-02f7ec99e669",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18982a43-252c-4447-ada9-ae9d5cea20cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c137d5d-111d-4bb4-a4dd-dc801e003636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06bd87b-4cce-4276-bc29-3d0767dd05e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2a96c8-08e1-428a-9b21-49296dc22e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3d639c-b731-4379-b9ef-84fbfb681ee5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e17ad43-96ff-4f67-8a72-9e3afd8699bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0fdb7c-a88a-4162-816f-57692b26f5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2409c80-a674-4449-8ae9-77d0acbf5e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f3e2d6-54f9-43f4-bc82-409f0056ba20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373bdeaa-0a93-4a1e-8dcc-491df38fc7c8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682f82f7-2f24-49c3-8a04-636dfbd931e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b851ee-ff47-4507-a75a-983f675ef02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726739ea-767a-4d93-aac2-2c08c542b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab93a9c3-7eb4-4fd7-8f82-0bb9d26264c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6099b4f1-dd6b-4427-a9c4-d61b1b84c59f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345a1cab-eeb5-4128-8b6d-b0a56cd31cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30c6414-b3ae-4ad3-be31-a45d089af82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef2e3b5-0283-4d9d-89f6-299734aadab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53737f61-25b9-4bde-b2ae-ed76df1de87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bd917a-5021-4601-ae6a-169e2f3c7291",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98718b3c-3241-4331-9e3e-4b81b82d994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce97319a-7e97-4936-872d-86040ea9316b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4ca9da-a868-4e4e-bca9-ae47e1c0e884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5dc814-5228-408a-9bb7-165578269c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1aac4b-da14-4f23-867e-f08ae640fab5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be5b86f-3e23-42f7-b438-6ca6f195e522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7512d59-ecd9-4aeb-aa82-3eff50396839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453246d5-82a1-401d-9eda-de8b4e54a5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbfd85e-f924-42d9-87e0-dfede67a851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579235b3-1a29-4414-b0e2-6b694b6094c7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac31c948-8cf1-4419-b44e-19f1f37f60c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39e03da-dcd0-47df-beea-26254f518b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0a38a4-1a66-431e-b6f7-e78d1d967d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddf886c-7cc7-4205-9605-62d125fc60d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62820690-4c0b-4b32-bec5-2682bc4a988f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef999096-fbb0-402c-afa8-c063b150059b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8a7651-47fb-4186-b33d-1a6321301620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df0af2e-4f9a-4e24-903d-bc1f665dbbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9be5036-bb76-4828-8b0a-67fba00f9114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021f7aef-39f8-4e3b-b20e-3972378ec342",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abca931a-44d0-4940-bb65-3e6b9e63eb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ac7cd8-8204-4f0c-adf2-b0562ee37592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f839d75-62df-40d3-8c28-216c60f437b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59266f69-fa5d-47b0-a656-38741ceb8745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540d1d1d-34cc-47f4-9b2d-1add2ef56729",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65c55ae-91d4-424a-9a5d-dc1580f6df0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a88ce6-2854-4085-b706-07e6ab79a024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b25aba-15e3-4448-a8c7-036ff6c9d282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a612e266-6e16-4aca-9ed6-fc0018febc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eea8b7-b730-4d97-9652-04e74c74d0db",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef2157c-f528-4c8c-9cd0-cdd4930b0ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65b86db-40ad-4ea8-9b87-03e02f679e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4379fe6-9714-4815-b4f5-14c5a888fdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "727390b2-3c40-4d0c-9c40-d9401b70aec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b23999-70c0-47be-a2b4-acc42ef3d9f5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e4ba3d-0f30-4ff0-8228-17217212de19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f98b484-1f22-4f95-859b-09a3b931648d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af097898-cf3f-4592-85b9-013a4a776b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac15425d-77f9-4e7e-9aa1-cae13f3af67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17517bc0-686d-4c65-bf2b-03a93591cbb6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349ab6e0-7c6d-4f6d-a57f-a7155818a66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d3fd351-bf9f-4784-ae16-2c0b534ce15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc16a7c-1672-4fca-8f7f-f466fbaa62be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d292b1ec-eed1-424f-9d6c-37c4eed6dee6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18364913-4ac9-4c5e-a0c0-7810cf10b0c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e4468ba-45f7-4e7f-801a-b46f656fc0cc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b7ed3e-18b2-4ecd-9430-8348e1f8b76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6206958e-03e8-4e9c-b746-0adab0fa3217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f00e92-cb3a-492f-8698-b40da2b8898f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9db5d515-313b-44f3-960d-64ded012c8d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b23a2420-fac9-4239-bf60-79be00b12ce5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fd370e9-1e23-42a1-b7cf-8a101a7cff2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc285fa1-e3db-4356-b894-42ddeeca1c03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e68373cc-7559-4c8b-b9e3-2ad024d2d5e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48ae103d-400e-4510-9cf6-353e6bed97a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03e70cf6-5fa4-4866-8120-8f3c5179e8c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bfbfca3d-d156-4dbe-a39f-22098c1b858d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f15178ee-8e6b-4a31-b24b-5161427e7473"
                }
              }
            ]
          },
          {
            "id": "13074002-38db-4e57-a117-1744c4fb1030",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58b02b76-c5cd-44fe-b9e3-93e187531af9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "42abd19f-baf6-49d7-a77b-33af0a1b257a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82933cc4-a40d-4b7c-ac4e-75c1e24aa309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7ee89f4-3834-487f-a540-f2add9ef341f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c989a-8a48-4fd7-9e55-f21c8c718bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e12c6a1-846a-407b-af4a-17aee7e40e55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "622a130f-114d-4353-85b5-b3db923b3576",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d06ada4-94f3-4b4c-8454-c4ea37c3eb37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34cf70a4-650d-4e97-b8b2-12eaa0725e59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "776ff88a-e664-4f21-a24d-d6374e39ed2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b47c616-a472-458b-944d-24e8201952a3"
                    }
                  }
                ]
              },
              {
                "id": "c75ce334-9156-4842-85a2-3ba3f04ebab2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f993e53-603a-4c53-9bce-c5954eaf019f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8e4236e-8993-4179-a6f2-3c64edea77d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "622e5d95-fac2-40e1-8478-4dab367bcd89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e616684d-d986-4522-8f33-2f85656317c5"
                    }
                  }
                ]
              },
              {
                "id": "d6e6625d-33f4-418f-91fa-ff7330e5cfca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e721f2ed-1835-4e3c-acb4-f996548beab7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c4d46e5-df50-4570-9e29-4b664820cb9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5281fbd7-a77d-49c4-8aea-ab5ad4f5f386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f1d3ecc-0bbe-4b34-a025-512f8ab1c1ab"
                    }
                  }
                ]
              },
              {
                "id": "951ba8c8-7cce-4360-9683-39f17a687fb8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49083443-c11f-4a4a-b56e-9154fa838128",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67912d43-7ecc-4723-8d8e-cc679c4ef1f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bef7823-4b61-4772-9e51-1e9f1d9a429e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0e59d659-d7ba-4d20-97d8-cc416f6465f9"
                    }
                  }
                ]
              },
              {
                "id": "892576f2-442c-4c7a-9eb0-f4950f80b55c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cbee2c7-2e53-4dfb-9eee-92adebcb46a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "189c5c26-20cc-4d2d-9f96-1f1d172ceb21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b5b7232-8bc3-4962-a606-13376829c17b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "551d1797-d536-4460-b6a0-c5a803b0408e"
                    }
                  }
                ]
              },
              {
                "id": "48a86726-0c83-45aa-8d10-092d87423272",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4247f3f7-fedb-4b77-aa34-419f526532d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e198fc7-260c-43f6-a34e-0b5e26b74b1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3f2506a-c90f-40fc-af51-a5af0e48d712",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c67069e4-24ce-49cb-b454-10471653553c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1a41502-5172-4bdb-8e20-b7b8f9e7ffcb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b14b1431-78ec-454c-a7a4-2818f13568cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "03db3337-d886-4009-8833-bc260106296b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "731f0af1-3fca-48e4-97f8-44e88ca8f087"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fadf57ed-06dc-4382-9423-8bb4a4954ed7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7a38bd23-e4ea-4867-b647-2c2560f8a450"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f78d9ef-d3b1-4677-a9f9-745e9a3ec29d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec156402-7b46-4431-86bc-0774204d8612"
            }
          }
        ]
      },
      {
        "id": "94b48cde-4b2d-4469-ae63-4ef3bb51277d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "28d53cc5-82b3-4c89-8cf7-166bd16c2d34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83a9948b-26a0-4ba6-8f08-ece6a518f25c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b242d797-fcff-48f3-84e8-037c90d32bae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edfde7f-860c-41a1-b510-0b2476a9f0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74f1ae9-29d2-447a-ba39-68c399bca868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27963a27-1951-416f-b9c0-126efcd35710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf310c23-aef4-431a-97c0-a0388df34100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7261cfda-2989-4b08-99e6-642ec66fda04",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc180ecc-8eb5-4df7-893b-73f32be0b9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cc263a-897b-4cf3-80c7-8f5f4ba3e13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c97d37-ece3-4502-b177-68f29c10a74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb2ea78-7a46-4f63-8700-892d3c504109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a1e0a3-edc0-4d4e-ab17-a27b5d24b6c7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942e1181-e906-44a3-8439-d014118d7bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c71ad0-ae27-43dd-9ea4-a86a1e2d5839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beca600d-54c3-42b4-b854-28e847ec5b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f20b8b-4997-487d-8b05-107426e3dea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c67a792-01ba-47e3-9dba-f12c4a782879",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200f837e-2b5d-47c1-b118-d20ef2f52564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22552271-ee49-4b54-971b-e8b4d6d0fb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3721e9-3a29-4311-9f58-ece2c135969f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ccbf94-d6d2-467b-be61-0acef0c0a66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd34ec2f-dfea-4f65-847a-45636c7ecfa8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bca602-2686-46cf-b03f-5c1eea4b24a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1393cfbf-e8c8-4a8b-afeb-94c7cc4a64cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a82920-0cb1-4b0a-8d24-fe5f39ae36cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c294ab2f-5be6-45b2-99c9-db7919132e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd034cf-1e7e-4b25-8adc-0dac01e5f6b3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9804880-0ea7-46ff-b40b-935738f522f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031c8446-7b09-442e-9f16-c39cdac2ecd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cf21a4-f377-4322-b282-4894f425d0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89b2f724-7f92-4e1a-b5c8-3294bac6f0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da81cc1-b034-4edd-a83d-c35af3b54502",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c5acd0-edf0-4870-85e4-c0367c6eed39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935cdddb-28fa-4f2d-9416-e5d77d658677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa9c1de-bb61-43ab-9696-e1d36eb38b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0debc857-6722-4a69-a761-bfcfbbdef951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11867b08-10f6-4891-9f2d-dd1f10374453",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8f816a-ee4e-4171-be9f-e1a1ee44de7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce615e18-86e9-40e1-ab1a-de796f9bcdbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821f51dd-f069-4f13-ad09-f825111bcb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22500b6-5646-4fe7-90f0-1ef05331853f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b09f785-fb63-42ad-9470-fa5b30b08299",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95712922-378c-4faa-b3d9-c309daadb061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef10cba-3443-4561-b771-2d5ab2dc2057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fe8f9f-b02a-44d3-8364-082882da2dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50e4e08c-010b-4dd9-b4ed-6fa148652109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6754aff3-0dda-4ec0-aec8-f44708d2bfa4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09179fb7-0dbf-44c5-8707-099f531d74af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b5ca1c-15d8-487e-b438-59052ace718d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569c51ea-17df-4dd1-a0e8-3079acf6ec89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57529eea-d556-4c0c-9686-69533a5db344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2607629-681c-402e-8e84-0a65438cf120",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e433bae-b0f7-4dd6-bedd-ff3551a8a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba43654-b753-4081-bb6b-7970249efa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a06a4d8-9e29-4f3b-af33-24f474c85d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9dddd8-f5dd-434b-85bf-c86c2dfc46ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a35af09-b099-45d2-b512-2da638025c6f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f311c0-4615-49f6-b3a0-0633fea5d242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03a0b1d-f721-4826-aa31-2ad1f8dfa00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7389683b-0feb-4b2a-8160-9c007abc6f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb20d41-2792-448d-a187-5c6f44229ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2423eb46-e5bb-4aa7-8527-6990adec9b8a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd08432f-69b6-40b9-8a19-3d81c319cffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091f75a5-4395-4e09-9488-242aeaaa1b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb76866-3365-47f7-acc5-5fa31d0428d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ab036b-581e-464a-aa76-2f64db053c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858ea273-204b-474e-b1ce-2a4f37344cff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb94b5e-4923-4787-8fa9-9426f4184eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e525db91-db28-44f3-acb1-091c4654e4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85120315-2e96-472b-8e41-60ae737cb85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8a68b6-d671-472f-99eb-a99ae54204e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a94aa1a-7c14-487a-8d23-d01600b6c4c1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71a1973-e602-4ada-aed0-0cb697df5d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e572c4-4a1a-48cd-8998-205cf56e0779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340b52e9-c571-4d09-a18a-35a8bc0f803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "41ddd4f0-1e13-4c02-b257-a7d202c796ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ae7197-fb5d-48b1-8e94-fc7313fa4833",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cb59a0-b7ba-401c-8f12-99aa96a7f490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f5ec27-1676-4e0f-bc05-a3b9233e586e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b7d340-95dd-434d-b7a3-b1120da72615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1259ec03-eb28-4627-8fc7-b024a8d6f5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b057f0-67e9-49d2-ae07-dcb59be13455",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d302c22-0717-4352-89bd-19f5e9e3e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47b2e71-ef5c-401d-9b28-69e95fc6beb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c0f50d-9ad0-4bca-b877-448236fe34a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bee90a-afc6-4056-be08-1dc14723a0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd19a8d-240d-4e98-a1aa-1105a1714f88",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb336350-c080-4e94-8007-8d7887a94b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d181b40-2e92-4b6d-a3ff-e58f82b418cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a7db1a-9a92-45a7-96bf-565659df8ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c03aa3-1451-42f9-a279-673826c62b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0964690-114a-4878-99d3-157c8e175d1f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5026f670-3571-4f32-a943-71286867837f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d969619b-ad27-4641-a9d2-b8cfd2f26d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea0a1b7-72a5-40cd-a87e-d3b5132c2119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e436e2e-0211-4d35-99a3-c133a49a53b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a934f7-d871-4257-8b1a-a62666616dd1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a3bc3e-ddb9-4800-80f4-b5147abae469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd60bcb-1b24-40a4-847a-d41234f603a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b4c432-7bbe-4aa2-9333-28c1f67c3c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46b0520-9f79-4529-b64d-8cd8c4a09902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815002f3-2369-4d01-b89a-4bbb71a43d0f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501db26f-f7a1-42c6-8a32-2ae063a93878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a095e4-0885-4c6a-a4e8-8491046ad9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e1fcb2-08f1-4db0-91c7-627d87be198c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41c7ca7-ff1e-422a-aac9-2b7c8fc52029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8aa46f7-2811-4038-9811-236b1df900f1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a832e9-99a4-42ef-80f0-e354afef3ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02424bf0-d324-4505-b7bb-ffdfc45ae554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1469de-86c3-4031-90af-9a74e7477577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26dc9dca-f46a-415c-9500-8db14d1f15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4d4f18-18c6-4c37-82ad-16cd7baf34ea",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1da511b-368f-4f34-93ac-2f27a9f67c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071b75c0-855d-4351-8e56-add288ce8545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd04140-972e-44a3-8117-046ff30bff6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5310ce1c-672f-4f0f-a45f-861a496a6b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae682e61-5b2a-4238-a9fe-f698ee8efc54",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a85265-f106-4ac9-ad85-ea01bbbbd6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3020008-bb63-4e37-be46-67a3f9755c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ef5430-5e3f-4b2f-8646-b40fb2b8ef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8ea293-f723-43dc-b636-82c85c261051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65d2c6e-f4e9-4404-a869-a2504e44f81c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae4acb2-fbdf-4a1b-a362-0a9fe3d72133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c793f3-95b1-478b-8f36-8d5b19fb07bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179e3484-138c-4d51-8c52-53e80624a6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac64ae91-f28a-483d-b0a5-1e3d63c382fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89be07c4-8a3b-4d2a-afb9-400ee186ee2b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68111942-c28f-4242-8ab1-623661376408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad4b07e-7dad-42eb-a355-eec225288422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6b9bde-21fe-4c42-9a68-49c14989accf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "288638fa-a2b1-499c-abe5-8690c1088bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0873332b-6ad3-4b3e-8e54-d750634a565b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708f4360-5b64-4562-9762-4e820d33bb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c615a2b-719d-4731-8cf4-6afb7f2ee9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7e1857-4df3-46e1-b575-6eaed3e9faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "717ff824-cfc3-4587-b3c6-03c4d04d581b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccd1eaf-414a-4b52-8f11-3d3c63337ae7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33b95b0-83bf-491e-baa3-072e2140fcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e02561-d1c6-4d74-8b72-fc9ac7e64fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b687c558-0d80-4622-b5b7-36d54b489d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "552eb67e-c94a-4c58-9e7a-1fa7f7e4e348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa41ab30-0fce-4d08-8ee0-06ffa3dced88",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9e3a91-68eb-4d62-a182-785b905632f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88be2043-04cc-4bb3-8126-5d7748f3cfed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ac93cf-ce21-457f-85f1-a23f9f7ef07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97a13c3-3556-4b57-ba0b-1a808ff5890d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e8a66f-0bdd-4021-aebd-aab72cb95a89",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b762d3-169d-4028-afe0-be6327c15e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c41cfda-9413-437b-879c-16572d51f938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df87d021-4935-43ef-a8ac-12c4b7ad11e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f687d3b-9b46-4bb5-b004-9a1ff8448898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eda01e-9074-4e68-a2e3-14e07053debe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f253459-86cd-4a96-9ca5-e665e9c3aa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0780f843-d797-4ff9-b934-d971e719af01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b693cb5-aa32-47b8-afd7-40912f986ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2849fc14-9a9e-4113-b76e-d641fca57c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0f0127-b244-4c60-b1c3-ed45a5c753a5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe61a71-415d-48f8-b5f3-412d135b0a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735899b2-2d68-47c0-93ac-411d37e38cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbe46ba-2608-4f17-b08c-f1d81b386312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f04d912-dc89-4921-99ad-cc51c4df9afd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53b901c5-2a17-4c2d-8b73-19d51fbc4433",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c56ab21d-3a88-4b18-ae0f-821aa25c037d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ad22ff-3564-43fd-8bdc-76d1d7a84f6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ba591782-9f65-4243-83c3-af5fd8229b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cb0cbe-6fe8-4b6c-9453-8166be6f4781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52096d72-f657-469c-aa05-6fdead2fd50e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "103aa36d-d15f-438a-9cf3-495eee9c6fed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d1890a0-47df-4317-acf0-db9c313d38ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f27ca5-836e-4619-b066-0fa27d541f4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9deca49d-7312-4ee5-90bc-d0ddeaf2c1d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dc9526c-5c61-482f-9c61-1af11da1db03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a15c60b3-d3b8-486c-979c-183d34f597a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a6cd590-29b5-430d-877c-5394209f1d8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea843c2a-c1df-4b90-8b44-fbd7c33d3dbd"
            }
          }
        ]
      },
      {
        "id": "b74c0585-3ca2-4f9b-a5b9-62c9566ab985",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d508bd07-015b-448d-83eb-7564970d8998",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f681988b-1e0e-4698-879e-4cb4f7547465",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2ceeb92-2e6a-43c5-8ea8-e802fbd29bdf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1ffc32-c30d-49ed-ac64-569a868ef5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fd286b-a31d-4843-8f1a-4d9edf77d37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4a1e82-8fb7-473d-8250-ce06d7715cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "542a838c-28ac-4390-a7fc-b2c8dfbe2bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfcc89f-3679-48d5-acc5-fe6decd0ddcd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4d7f52-8963-46d0-8dc6-a2f599396b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afca7a1f-0c49-485e-a016-c645f1636450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4305f1-a4cd-4486-ad40-a51428967495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01862476-8952-4fe9-9293-dbfa06542ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2999679c-bae4-46c8-b05c-e9af980ef6da",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c91b89a-5a70-49ba-bf54-f00e81c0de78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829cf15f-14cc-4211-b9b5-d7e59b9a7897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86d9fd3-d1da-4a8c-8af3-ed24b174d1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d17dcd5-e557-4c5d-b5bb-6990e818663d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ff4400-9fc8-4e49-a67f-c2abdffc0287",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81389b76-bd35-4089-84fb-3ae4338d5a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1729b4ef-2ce4-4be6-9907-6a8f2310c523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a674d4ef-9e41-4e99-8ede-c861e9aa95cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d190b0-1901-4998-b3e9-95c6d178b7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55265b07-705a-47d2-87c5-7b61a4d1603f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b86421f-d0e3-4d5c-b97f-98b2190dc650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1a2c9c-c220-4c97-a080-2f77e4a0493f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3cee6b-81b0-4929-9838-e5a11aa22e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e676b3ae-0318-45e0-aa70-49e0805ae9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3e1ee6-0d30-4829-8bb3-400f3aa423f2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce1965d-bb9c-4e96-a41e-994bfa4599e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35951b8a-d85e-4e98-825f-675ba9da8a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b20661-58b1-4e81-bf76-c448ce435819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a23513fb-def7-4516-b80d-345855a67e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ddbda1-897b-44e6-bd4e-917cd126977a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9e4741-edec-421c-bcdc-cb4c469488df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8275e6c7-9aa1-49b4-9924-c5cab2664e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a92c18b-b3db-4832-9fb0-6b1c915a72d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb4c392-5fb0-499f-9341-564f0114dda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4d0074-0a5d-4764-ae1e-c43ce219bb3b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ba684e-4a19-4261-8dcd-d13b06e8c6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24e8c6f-cd3c-46e2-8486-39fc8dab9fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017d5ad1-1c27-4895-b45a-6cf389d7bf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9246410-1f79-4998-9cfc-e44da381341b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdf6f79-f11d-4611-81c6-d012a6259135",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556d7de3-8c1b-4a13-bfec-576f6c70e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf78980e-15d4-41cf-9976-663aa6b21b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae1f79b-107d-4559-aae9-c1d90e104c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8cf7b1-de62-4f92-ab80-d45194d3cedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebeb0ec-96c1-4ddd-8ce6-a048bd599e7b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff154d77-be4d-4581-ac7f-d4d58a36bf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be8ed20-e660-4e99-a809-1b3c958453e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc6943d-4302-420a-b50f-85c337472a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6465a6-fe7f-42b3-88bb-ac6a09b9509a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb42080b-e551-4260-b91a-24d356f0e30a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030f0593-685c-47c2-a512-2dc1ab84201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7178f1-bdc8-4114-bf03-6e97cc19da1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2920e5a7-79de-41a0-be74-2d117b2735f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b3f138-44fb-486f-b2ff-8e71ac32bfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6b30f3-7f80-4175-8a81-170e4b38713a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880d1d6e-7eaf-437f-94bf-705606e51e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9231aa71-0544-4c2c-b888-9f2d4412c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baebfd1-51ac-4e4c-855a-e31b9574df3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcdac62-3e76-438e-b671-243686965bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162c102a-8334-4538-ad32-103e56e137d1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d182f5a2-c63f-4777-a718-ab21a7c4599b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2897efdc-ea25-4cbf-9258-cef612592255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1716fe-fd84-4810-ae53-71e84bd25874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "514781d4-504d-4b4e-bacf-86d45053bf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da57a202-13ea-496e-83cb-c84d1d21d9eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6e9482-5f0a-47fe-9410-2671b02e4abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098b6d2e-8864-44e0-9f00-1ec130ad3ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0dff71-a249-42eb-bd5e-33c2251e886b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3c2f6b-16b2-464a-a176-a8f46aa923aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d7bab4-6ffb-4d8a-b554-8b77d912e42f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8302ffd-5d9b-45b6-8dc3-1456b0fe24ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d532d96f-9ec8-4e78-a78b-3544bc5ab0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8370a80f-57a2-44eb-9e7c-61b43651168d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f690a6-adef-4517-8611-ac9365ec3eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd6b7d4-8ca7-4996-805a-e3b29532d473",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a4832e-b54f-41a1-97c1-37f99fdc0287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e064a24c-3c83-491d-88be-0cb51a3661c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55515154-688d-4871-8253-ff3f284b207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d835f22-783e-4d59-8ae5-12c8c3cf04f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1247cc4d-b9bf-49c1-82c0-d447b185cbd3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3ddce7-4e01-422c-bebd-912d3b00c2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e8264c-bee9-441c-b1be-0d66ff48b881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bfad50-7b67-453b-a98c-54575d0f7e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "795e7614-ed22-415a-a28d-ef3be7d88a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eeadb47-e4e4-40a6-a48c-8b8af750aa07",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e514ac-6310-42d4-8c2d-83a707e6346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1815bbb4-2143-443f-ae3f-b26a7fe6e4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5343b1f2-109c-4651-a59a-eeddc4e24d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "89eb160f-7b81-463f-a3f8-f59dc648806c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1729d7ca-a588-48bd-b6f4-9a29e1ec9506",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4413f664-ab0d-4b63-8025-5e4f55b6fd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c416fb-252c-4433-b4ab-82478d064553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616d03bc-149b-492e-a497-61e854762945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7da397f-aa3b-40ba-a36b-45b1467eec99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1801fa5d-bbbb-4da4-bf92-e8b0ececfff2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13533127-f300-4191-b308-dd5b25770e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9b8df1-81c6-4c39-a772-27fdc24320c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2e0738-f33a-4854-9020-0c273f6928fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1371cb0-7c4c-48c3-a9ee-e23e030e1530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d619e118-1acf-4acc-9d18-9fbd5b86fa69",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a701d03-af92-4f11-96ce-7bbccc183bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7702784d-35b5-47cc-b3ae-4640d9e183fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acee453c-0731-471a-8f06-16c6452e3ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8484d8d-665c-440c-8a4b-de5803cf001e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b07ae5-4189-46ff-becb-dde2f516d9af",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c338ef98-abe2-4b22-a806-9a66093d0966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35157f49-dbec-4795-a5cd-f618529d5648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186824a2-e181-4629-b964-a2ed0975c1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a91deff-0d16-47f4-8751-a32e71ff5402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c199ac93-580d-4c90-9db8-a159134238bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dfd521-db7d-44c0-89d8-121283f2d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e03739-420b-4b87-9091-7da5e18ddd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf1aa70-8011-400d-92bb-cc0d2caf3692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be8a4560-42ba-45b3-a908-a9a469ba790d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4793282f-25e1-41d9-b515-55635f25c573",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dc5cbe-35b9-49ec-97e1-2c7388cd70a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40543c91-33dd-40af-8d29-9ce235272573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a616605e-66f6-435e-9e8e-06478cf59370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee9ae37-02da-4710-bf6b-d9959b98dbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f943da-d9bd-460c-b96d-5fb14924f3de",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29517233-abfb-463d-9601-f057cbfa1058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94694e6-fc29-4bbc-85c2-84e3e5c7a49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dc6579-c6f0-4559-a999-86e6ba0c97d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "518fb6e4-de89-4476-b61c-1f28d5c943f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dce120-9871-44e5-bb2b-5eca386e381a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11a1c99-b767-41e2-a215-f5a2a9aff36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8635ac74-c992-4b98-ad32-1b8807371674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318c6503-f702-4abd-9f8b-a6e83d47d4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8816c8-7f9c-4d17-bad7-9edba6dd2bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b042bc-7e99-46d7-9573-f79850a1a34d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984fc15b-d219-4c62-9ece-85a8fe4b4071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a5e168-4097-4864-979a-defc499556b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1c5f75-e444-4998-b80c-427e46475231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f18509-5515-44aa-bc41-dfcc3088402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34ac498-67e1-45cc-b6b9-a97ed438e7cf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee362b8a-af6f-4c9c-9c0f-19039de224cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aaa173a-283d-4351-88d7-8650347aee15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d5d3b-2e2f-460f-8e6f-45bd4e176b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0467ac7c-210e-47e4-8b74-694c5437e3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a9b195-48e5-4d90-9e87-3288608c0826",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9cc5a2-c81e-4740-bf12-61beb84f30ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7268d9-3fb9-44da-8ef4-bb9fd8aae95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3febaee3-84bd-4542-9027-6199ecfadec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54aeeec9-a57a-44f2-af38-6898782c7816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f026b1-ae28-4107-87f5-04ec1dd4f17f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d90553-7f7e-471b-bda4-00287a588cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b362450-5958-41dd-be6c-698ea0d8df0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2605b380-69d8-4611-9896-81b3e05650ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5afff87e-9d74-4f4b-862b-4a21f1c5ce58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05de1481-8e08-45be-8818-c292de45aaab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4580b47-eee5-459c-8487-5b6de1047d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046c82f5-414e-4266-a9e3-6908729bc1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08216113-295a-48fe-8732-ba32655a214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366758d0-2266-4ab5-8db9-0aab33b19c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b5cca8-c884-453f-9ea0-d984b565ec89",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0934d35-f399-4493-8660-db45e82bb0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e763ebd-0e0c-484f-98de-842211d1347f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97053a0c-8ecc-4c6d-b17b-1fdc8a338487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8814e3a7-ec7a-4575-a46a-95fea7c73f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832d814-187b-4787-b0e5-ca5e6f61421d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04daca9d-2f36-4e06-92b0-0a841b2a4329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6e9da0-3a05-4c2a-95fd-6fcc784704e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b107f6b-b838-4cc2-a4ce-09e6d64fd85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3bcb7b-7ea1-43da-8789-da029096f826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60c6a0e-1360-40d5-a28f-58e3dd1d89e0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2795a89-539b-4b47-8e8c-5811a4ed8274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b118801-9dd9-44ed-98d0-262c580147bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a51e5c-ebbb-405a-a669-05f0f6370e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d031911-94f2-4f8f-81f9-51d3ebdff1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f9fc31-0c7e-4095-b540-bdb347a0ffc1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6596bc-f6b0-489a-a67e-d8fce04dc625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410324cf-67ae-49f0-a6a4-36c82bb9a4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e39929-7a26-4411-905e-14b6159c1dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e206e7b4-3abf-40ef-ad2f-4a61c0234eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f1d159-8e5e-40d0-b980-52c8708981ea",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12100975-693c-4ced-b24d-0d051ef0364d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e32ffe1-92db-48a4-9a23-44a891d730f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49afdaf2-47b6-4330-a216-23a5cb146f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81fd1a46-9071-49b2-9882-df44d9037c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c2b7bb-de9d-45c0-b3ba-e59340c9b0a5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0288a467-5798-4620-8c46-a365fc706940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133b6a4e-72f4-4d64-bf5c-9f62b5a96e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4333847-b6ba-4cdf-8e6e-4d6d9c34d258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70797f24-1598-495f-8295-942d14e13d9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a570c760-d15e-41e6-80f5-912b6ebebb49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cab31bb-cf6d-4673-b7e2-cdc415634b23",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d82b26-bfb4-4cef-a18a-db6664b30bab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4cd0a7-c49a-4604-92c0-421187d08283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42454b7-0ee3-4294-bf5e-a943884e340e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8ab4a2e-9a54-493c-a441-535ebcf0c5bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d6ee0b0-5304-4c65-81a2-2f23058d2bd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e8c8c38-7acd-41aa-b886-e55800fa3484"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3da8106b-35f3-4501-a0af-3a9946096659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f1d6528-f4d5-41d0-a5dc-97686bd02050"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78d6f50b-9e67-45f8-ae2b-d16e2649a60c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab6c7ba5-456a-433c-ba9d-e11dfc1b1d4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "849dae7f-b463-45ec-9599-8fe0ae35ddf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "917c8bd9-d483-4cf2-901d-b281713a662d"
            }
          }
        ]
      },
      {
        "id": "c92c8847-3d2d-4a4e-9561-42779ade3c4d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "76e3e3d6-88fe-4dca-853a-1fa37b703cd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85648b05-1127-47b7-8835-5b2fba3cf991",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd59c373-f1b9-4a3d-87db-72f81c9535fa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49052a6-47b1-4e2a-a6b1-d22c9c78a0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c524ec0-5d9f-4685-9bd5-6fae8173c706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc28fcf8-e55d-4a11-bbd6-571949ab8888",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5262e5-05d9-48c0-9580-cea17cc49364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c2e730-e77a-4707-8150-2dca7f6db75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75da19e9-f1a3-4071-bb6a-24f1d14016e7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51177eb4-1b8a-49bc-8535-92ce8ca4a971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b1da4-8c03-4940-bfa9-02074349a540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a41867-1e00-4d80-871a-48c421079399",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca24cca0-4d7c-4ad8-8fb8-91e9af7b1266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5a8434-9350-464a-bb0a-41b88ac21abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af105339-488b-4b08-9a83-b442a99b3602",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90001f79-4015-4f00-9dc5-9188e6c2491f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51957163-05cd-4413-a5a0-5a50c49dbb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda1d0e9-df39-4752-8395-dcedf2b50c4b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc19e79-48b0-4fe4-8df5-aaa4bfbbac59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd275a19-2c66-47b3-be74-ed10e203fccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f6feef-e526-4e5c-95ab-11ffc8f2521b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5b55d9-6ecf-40d2-9114-73acfbf31ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212801c3-80eb-4987-a2ce-2becadf47ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f4ab5a-fb15-45c8-9fa5-d01d1ebb79a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9607698e-9b07-4ee7-baa1-1082327a8e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a2f986-b75a-4c8b-bca6-914b44cf30c5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09675f6-69fe-42bf-b24f-df013712ee25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027c2ab5-f4e4-4ab2-bbde-98333976ff26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec0390-346e-45f8-9457-16afe4fae1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec8a849-e459-45f6-8763-03b2fbfd4e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbbe423-c2b7-4a23-89d8-a4a9f8bb6970",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cb749c-b51e-4492-976d-196c5b4b7372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0847e96-03d9-4d68-a906-ca0e0381a5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fce8a0-8341-4d2a-9dd7-d8936a2b60fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c64460-e0d8-4fdd-b7f8-52c84141c341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3badbe-5f6d-4284-b6b9-831496fe3788",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ae85dd-9a46-4c45-b56e-c75cf80fda55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49cc850a-2b6c-4fe1-a16a-5c214d5d2e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0dba09-2f7e-486f-a78c-c8b59514b9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc542a0-5ef7-486c-9fc4-4af729ad9d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfe3a81-bdde-404b-aafe-8e69cadf5c50",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56764b6d-35d7-47ad-bd0f-e7122be3080f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae54f06-4067-4ba1-88bb-3f9500cb5edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1569c916-e68c-4cbb-bf39-1a999dc2751d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9253d8fe-280f-4977-a418-052582f57b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6381920d-8c83-4445-a283-4430be65b86a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd41a9fb-7eaf-439d-8858-6f0df0fa3a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a931db-b24c-409f-9c47-9f0a257f5724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f211c18c-1aa1-4f1d-aa41-40a8eda15122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38938b22-b466-4283-b1a5-28ffe7810be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f884dea3-1649-4712-b851-5ffd3792833b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49799c2-a5fe-48d0-82f1-9d9ed1f7046e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e1794c7-a47b-48bd-b29f-ffca1346676a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a60150-b434-410f-ab01-78da4542865d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed020050-52fe-4fac-b3fc-8263521ce691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10415c13-5a33-463d-979c-d29a7d1192d5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4180aea7-64ef-4b4a-9d60-3e4d3c6504bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f3d33e-85e0-40cf-aa19-24db0c96821e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7643a492-d211-4a1c-865d-a96566307913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd607714-0442-47fe-b3ad-4c0d246c8486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3b03b6-aab5-4020-befe-438c67a58332",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fd6740-31d5-4410-ad28-94be86bc484d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798edf10-97eb-4dd8-906b-fd81b6317771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7f2aae-48b7-415d-a3d0-0c46a1dfa20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4d984c-73c8-4d24-a30d-118a6fd9fb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cdef14-d5c7-425b-94a8-2ce8651f7f05",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605bae30-3f6d-4882-bbc5-5db4d7e09e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f23b24-9d2e-42ec-b11c-50d525ab8ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9831ff-a2d6-407e-b105-c341d9a2e519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffa3f1c-e0c7-47fa-b1b3-c4ada4b234cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f1b9f0-4aa9-47e1-a326-2c39879e2463",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea3524-4a95-45f0-a19f-fc853fa92b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc1eb27-6044-471a-9c89-047bf3411a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2759ff05-3817-4ebf-98e4-36b97f17daa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40b3d47-f51c-4d74-b804-efcb8c282e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2467cb-5b23-4514-bc84-b6554a876f2f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f318ce7-b36c-4df7-ac53-99cf33bc8640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2503ff9-3583-48f8-b0f1-d3fdd86b83d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca151db-69e4-4472-9d87-581cf66a2e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0636db-6196-4d9f-afc8-be55ea1f607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8e9829-6059-4636-b072-1b87863e5198",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17289e1d-1ea3-4892-92dc-f31c47eb2855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc34439-2172-4855-9df5-f097920685da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8b18a2-62c1-478d-93a3-6008c80cad43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc22826-2c3e-49ab-9902-7385a80dc62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9679a7c3-e0ba-4de4-ab3d-63709131b045",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a93fcd-eb28-4448-b5a8-0dabd74ee551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49d60af-c2a8-41d2-a4f3-26fe4314027f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9774265a-98c8-4eaa-b73b-a8cb9688536b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ded389f-45b4-4b5b-98d5-304c6f164fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ae3ceb-8f13-4c4c-903f-da800a0194b0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2fdb8b-1ae5-4ff1-8f4d-4f2fe1c0ebfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e961732c-4979-46ef-a51c-bd839abc634a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2ab9c2-510e-46f5-b73d-e7124e15708c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2ed84c-7439-4223-b69f-9bc26503d939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc464cba-1f50-43b5-920d-f23cb57f736f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a278cb85-3750-4dcc-b928-b7a0f3708ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18044ac3-9d45-4fb6-b166-f5a33d0665f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4094674f-104f-4479-9387-2b293cd3518d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47d6138-6c9c-4b3c-afdd-8554f4693960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97cc58d-63b7-4e12-9ca7-a15320103e99",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b32279-c3d1-4dc7-b41e-c33a78c6552b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c5ad30-ed51-48be-8b49-ee3521647138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b862aa-8ca4-42a6-a528-15c46750cf98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674fca9d-b680-42dd-84c3-6bf07faab491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f22a89a-3832-4752-aaec-3381e96d26dd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa0150a-c69b-4dcd-ad94-3d1fc4ccb7ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3b4e360-d605-4a03-ae36-3f73f744f44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c824d3c-d849-4a09-9555-4a00c8f1e7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b693355-2b81-41a7-a462-3be05b40cc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec7e7c6-6507-48c0-917f-6b12c8caf382",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaba89e-12a7-4cd2-bbf6-c9c7deded4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "785335e9-e7d4-4d44-8671-413ca42a740b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912c5195-849a-4304-8828-7a6e611543a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc52a67-7a41-4640-9af6-4d2cbe4f3bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf88c55-ba8e-4c72-b82c-a93f31466494",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e06b50-08e1-4e02-acdb-e3bd86158a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01cb1965-562e-4775-bcf4-60238b761ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f328697-f8f9-4537-a0e2-439d8474e4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c828aab7-7fa3-4e9f-9445-d8d2c2c843b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfce544e-0a17-4805-9b4a-be732e71a2ff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0add9b64-f5e0-4466-9688-8cf82b98f8c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c4b680-483c-4630-b276-1142032073dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a28055c-b9fc-415b-bf9f-6d9d3f362626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5066e4-5864-4b59-b40e-567bd389788f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16336ec-b04e-45a3-aa0c-4ec1c8af4943",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5aa53e-efb0-4990-be0a-190b54e90acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c156d3-1f85-46d4-8aab-a569973092b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02545f67-50c4-49fb-b291-ad7ce16709b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed09f5e3-d12e-4ec9-9c7e-bdd7356103d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e8e4a9-8b70-4a31-b1e9-2eaa674a6839",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e336cd1-1a4e-4ac1-97d0-f0fb6ca6cee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea7d758-363e-40d7-97e3-d242914ab1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca627afd-9416-47dc-ba09-196a84f39d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de27268-9c8c-459d-af97-aa4c9533e9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f571e8a-ac2a-4fcb-9957-b9f359d1ade7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cb1709-0e14-46d9-a5d3-54bf5ded9e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a278f65a-1c5d-4211-889e-427f1d0f517d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42771637-38e9-42a4-aa34-5bfb3ab17183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b4d498-7e44-497b-a810-650b440ea6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafabddd-74e1-466a-b133-d3fe8625a90c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bf8d64-772a-4422-9b40-adcb0801c232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d42d95b-0a72-499e-a782-63794db0e687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f7b000-38d4-4afc-aece-d8d5c91b7ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b439d6da-b602-4c70-8300-472fa480b7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1c474b-7246-46e0-93e5-19a1f4a102fc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bc1481-5770-4284-a2b0-117fdc8df3e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e27eb10-bd67-4a81-ac99-86645c401a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb4b574-9cdc-420c-92a4-d718d3656602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b9ca47-c443-4829-bcae-5c13b8b157c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c8090c-2bb8-48e7-a3c9-75d1c84d9d5c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d71a6a-8363-4088-94ec-fae472cf8c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057a3a08-2c87-450c-81d8-f0dcae655263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1455e36-4f8c-4b9f-845c-b1f87e54b2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d31e8db-1e7f-464e-a7d7-8db5bc5def70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218ccdba-d9cc-43f7-9f43-a5dd52a5b42b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0e7660-9805-46eb-9f1e-d50e0905b097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddfc391e-ee0e-4a4f-a69c-61e701611ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634d407c-97aa-40b7-bf31-b3a6a2c0f827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce69f85-3c74-4163-9802-4035e9a14a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164b4cbc-8f2a-48fb-aa77-b265c257afbb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7186e7-698b-41e0-8141-a09bdb8ff483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9d8ac1-852f-4101-a352-e884646cba3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798c3158-a9c7-4812-b5d9-193ab0161181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d73964-01fc-4dd9-9fd5-fdc4a397ac70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07984b19-f015-462d-8a7a-1d951ccfcaf7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9b96a7-c5c4-4756-81aa-54b59c10bd41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e7e304-2381-4b31-abbb-96eacd3ff004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa82f182-48d3-4b5c-b5a9-ba9cd952b1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62339d1-6638-4cc2-92dc-5dbe6a6a0907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c87f4b-89d1-401f-b41f-053d96fdbe9e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff74a99-5094-4929-afa9-5d4514f7206f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9266ec3c-9ce3-490b-a3e5-20258d48160c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80707134-ae06-4f29-ad70-fad01ce35565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522e2285-8b83-4cd8-9a88-b7439f3e27aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179fc20c-8165-45eb-bf12-ad4360462eb4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb247f7a-954b-48be-80ca-4e75380f3781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15589331-9a3e-4c77-a7ba-0ff6da858d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76377395-ca6e-49cc-b10f-be105130e7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c4e58d-bbe7-4871-81ab-57224ed19182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059683bb-7946-4119-9311-3d914cf68e52",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a82de8-9ba0-442d-9734-d30511d92752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8976dd-d2a9-4a99-8fc2-52fe5d597416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222df218-59d9-4677-afb7-ffbe8f3946a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033ef96e-0dd6-4d9a-b012-c5daf45ab092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc5a371-8dd0-49f7-a6d1-28b0042d181e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8be645-a717-4147-bdb3-d3caa3422e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f98620f-e7bf-4aa6-bd6b-3842db9c4a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14c7ba5-320d-4e84-9736-7fbcc701ba1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590f32cb-04f5-4bfd-9cc2-59e51fa3cf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4826987-3785-4456-8ec9-bf617ab2fd4c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7080537-d408-4bca-ae05-f4a734e839d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d9554d-21d5-419e-b2dd-d748427ea574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157a7452-1fd5-4252-bd8a-828bb6f46f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8962c3f8-9428-4b89-be89-628e35112f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64ed48a-afd4-4fa1-840b-8141a8bb7065",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afff0c1-abb6-460e-b225-4ab5ff6dd824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087de35a-2a16-489c-89de-1b747c35b964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade08500-2550-4ad9-a631-28fc90278d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3e7291-fe52-4b91-ad1f-ef8dfb9ba47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5494fe30-459d-44b7-a8dc-e2bd1b357b01",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc72cff-c701-4929-a6a5-ba8c03e179ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9454c526-a2b0-4735-8daa-8243e29f3b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b51316a-31b2-4b52-9fa2-fcf83036afe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f60af97-68de-4af9-92e2-b38f343bd149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3144466-5bf0-4d4d-b6e1-3c9f56cbbf0b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b17b3cc-9d7a-4dc2-9201-8d107f7485ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175007fc-21fa-4e1b-8a70-53839dc87a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e73c3a-e4c1-4853-b0c8-758e5d35801e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89dc379c-6ca5-4e2d-b765-b6d5c240a723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048ac9bf-b566-48f3-b056-716552e21815",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f03b90a-29b2-4b1f-825b-de1820df68e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dda492-5483-4209-981b-0061c2c7772d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfd752b-004c-4176-b4c6-13c0c7fd23e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99bd763-faea-4c99-9315-4665c877359b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d80460-cc0d-4841-a2f8-da191f16f7ea",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc45ff0-f6e6-41a4-a562-ee8456179c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6172cd-6e62-46de-8fcc-093af75d9d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17245b94-b41d-45e7-91d7-195e09c1448c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0848e193-32e7-4ced-9fc2-9d8ecf1ba874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea848397-f5a3-4284-af20-ef466211f1ea",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde1bdc3-7630-4b0b-abce-567a39f570bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bab6b4-a69d-4fc8-96eb-176e23be32e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76479382-c44a-46bb-b993-722e87a59a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f066606d-748f-4fdb-ad55-7b3694df3d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775bb468-86d8-421c-a347-a753ff27e196",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9290a9c7-6698-42ff-be19-e3dc16431953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031a3364-7558-407f-979b-3f5a3b8b76f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1accf631-dd04-4da5-9d29-7e867c87dfb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5072cd0-9eb4-4160-acda-4349a3fa5104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf33fb0-c7b0-4b03-bd94-ba40a7eb8709",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3182895-08c7-49d5-b953-bc3b306b3462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5606caea-a8b7-44d8-9b92-ad149201cc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f988e8b-2a9c-410f-b47b-7d1db1456d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c9e433-bb34-4769-ad7a-741d2b0a9195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0e9251-316e-47b7-ac34-158d15275f23",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef9f1e0-09fa-4bac-a7e7-0526a082890d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a749b11c-5027-400c-994d-db682bb30dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fec6470-a8b9-441a-883f-729c4c51aa28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72de3e59-6390-442a-8e48-59e3f3934e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51d2df3-8df2-4f65-bb6b-4c61a05f48fc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b2ac88-a113-4ae6-b93f-c67970774dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0b436c-1751-4c27-8578-dff45ac9cf8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78722810-257e-4bf9-a161-a53a32488e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5573a7f-55b4-4fcd-b934-a71950466f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca49b9b2-03e0-4e30-bab4-25eecc4fe58e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f397b43-86a9-4092-bdce-c3c0260daf15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e46b52a-c824-4b2e-b9f5-feeec5e52824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ac2f93-4f1e-4238-9428-423be60489d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c2ee1f-4511-4c08-9a16-0a45caf152f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da5c1e6-d68a-494b-bfff-090d408956f1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087a7afa-6197-4be8-8930-c861d8178e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc598a9e-98b6-4e77-97d6-c814f3f26360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212ff52e-7de1-4f71-9f3c-3a17a11206b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcef438-a20c-4eb8-8719-98bfda796772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5198af-e515-4d33-9025-11a881637b3d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d89b7e1-f43c-4bbf-865b-ca647390880d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb22027d-d60d-4138-ad30-fb645eaf1304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6c3da7-2412-47ab-b5d3-b3d8f9b4b632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9caad07-29d9-4517-8112-e3ac06b8c0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b505803-c0c9-4d14-bf4b-3e1b976bfd8e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb61fd3c-5c7c-4da3-9078-ca8b64358bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e264a602-27ef-4af3-87c5-e2042bfa677a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c787fd-1962-4e96-9081-7e7e194d1ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7949df-062d-4ca1-8b29-5a54662a15fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a7c271-a06b-471f-8de8-0e3d09235005",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3121c47e-6eec-443d-b70f-0f225102640f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e71dfa8-d46f-4a4a-b650-b09f15a84b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236758dc-23a2-4169-980d-22cda6fb2848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb6eeb1-73fd-4c39-8244-de3e89deea00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edd9828-fe23-48e8-acd4-b5bb4a02b149",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b585acb-1d33-456d-9f86-27c34637e0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56a3b09-8fb3-46fd-8811-1e98340cb9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83c6088-3315-49e5-a339-9b8bd5ddff42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c81a9ab-b066-41e9-9964-f721c5d5eac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00768980-83dd-4a21-affa-39759eea4541",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cde0c2a-a921-4215-884c-25afb69804cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabac656-614c-4474-9fd2-6b385ec80e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c35c232-60f8-43a9-a5e3-79e7b53e2e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26811bc5-a3f4-4e79-87f0-e7a8ca147cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db6df4a-2257-4ffe-aeb5-c97dacd8a757",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf57d25-ebbe-485a-a74a-a4ff081d212c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c54e68-4ff3-43a4-b556-afe00d2b56c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b2b408-0de6-4e3e-8d7c-fdf0abb64dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e133de-5da1-4996-b205-959fb48e2fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f59539-5816-477e-8325-ea67bd4800f4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e684a25-a04f-4040-8a57-c8198eb04f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaff769-83d3-4846-ae33-2f0107cd5d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0769fff3-578d-482c-b904-e85ce5399d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868f2802-81bf-444e-8a9b-ee6cdfc80907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edf3dfe-a727-4a28-b18b-db2ae9883bfb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1283795c-934b-490b-b507-e14fb574b183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131de220-d4b5-4f9c-bc6b-41a3122ac039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e011315b-0892-43d9-82c0-c41aa83ff026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a009acaf-adad-4bf9-8dcc-5d356ff0cc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828a86a3-fba2-486c-8cbf-89c1f23bafbc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73ab721-1260-45e8-ad14-10bbc317eabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfc760a-53cc-4c5c-8319-875b9b89253f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46953999-3f65-4312-9b0c-3f9551a4a8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad562d0-0eff-4104-8aff-9aeff8731511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a65bee1-b7ff-4d2d-b699-37a0e13632d0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88f7725-19e4-4102-b850-62986cf99897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e53e350-628e-4b7d-a7c0-06943f2357d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051e1a6c-dae7-47e7-b72b-1e93d171cd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedd808a-16c9-4ff0-8a08-ed6ceacd3252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4863e997-13f4-4855-8b77-b54f0ab4a938",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06f200e-d4c9-4982-a848-7c56aa3d4739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787b26ec-e7c6-40de-b31c-5009748a0c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43fc5c2-b04d-4258-b2d1-4508e49f615b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63123e0f-859c-4d9e-a297-d2287d87d7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ce0ebc-2e29-4800-8ee8-ff5222a76ff1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2fe884-9ad5-4380-ae2c-d0fb1a9ff1db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4decf2fc-7df3-41a7-bd19-05206ac15fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767bf029-5b53-4f0c-b4a8-cb5a15961ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6861fdf3-6e8a-47a9-a19c-e062aa63f9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9c0b48-92e8-4897-9f23-d6c178360e80",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a14c26-b31f-4501-b157-7f67ae695c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66153c26-d508-4847-8962-e5732c62d10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b41c2f-d6cc-4986-86a6-1b3179f01731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db142bb-56d3-4d24-b882-bd1c4a3f9aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10734dd-1d7f-43d3-b0e2-1102478ba7a7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6f0a74-7925-41ed-9ac6-c13e82870391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3215442-f472-4b34-aecd-aa4717293a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c22d910-f3a8-4fe4-a133-d267de7141a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9664e0-653a-442a-b87a-d731638e9304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fb04af-f9d1-4679-a336-4a06a1feb4de",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb49cdb-83ae-4d04-8987-1e8761dfe95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eede74da-cda9-435e-bfdb-8d176f9d9dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8defa0aa-474f-4339-8cb5-3efab77cb565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2e52b8-05a7-41df-b3e4-96276ff220d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1ac36b-846a-480b-b95d-1a76183a30b9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042b4978-25a3-4ab3-8e27-53b899eef556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10a6ddc-fd00-4e27-b76b-5aeb4505245b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f68ff3-71a1-4ffa-8275-c2b77101d1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7bdfb3-339a-457d-b0a0-92727c0a7d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97faf923-a4aa-495e-b0f9-66c9b67acc0e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c705ac8c-54d7-46da-b687-b7420f3f5cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900e0e5d-4b67-4a9f-81cf-128b9c6cebb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b5bdb3-73c9-4b72-96a6-3b6f2201014b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b0057c-4869-4515-9a70-67882333e7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d3923c-8a9c-4433-a9ca-ed41a5e1d894",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aabb247-1cde-48ff-be1b-ffe1213497de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04222e3-2c0b-4a8a-b668-2acf0bdb1d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214e9e11-aed9-4713-ae40-e163034bdf3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95966a4c-2687-418d-8195-e3c3b414c5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3448b5d2-aeec-4d30-bab3-5412065c051b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70337405-65ac-4a3d-abde-1413b1b2ac9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1326a742-da0c-49c1-88c2-34724fcadb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aa86ae-25cf-492a-a793-e39a5c429e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a8b0b8-5841-41bc-b46d-2ed110994dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a39b4c3-f19d-4bff-9d15-51de0ac7c59a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbe45b7-6ad8-42c4-8665-eb0fd967cf17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3f9fbb8-65b6-44c5-a1f4-bb35a8dd3e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744b1fac-6db8-4102-b8aa-4bae9d31bb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6318eb-7fa9-4cad-8cc9-9d27c63575bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fc969a-4542-48b2-9db3-e82cf278cf34",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ad40fc-950b-4695-9445-71b396515760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19bdbaff-bb9a-48e5-bb7d-10d369f5ff5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d42da20-e133-4514-b56b-2845742b740c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ee22c7-a9d2-4817-b677-5ea9ca31859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8e8f63-9e89-4d86-bed3-f79f403b1823",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a166b81-af0e-45f6-8892-aeb1d4c84549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94fda6e-a8ba-49d0-8bd7-906e70b4cd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03a4159-abb2-47ea-be08-76f45c810e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a63e6d-c3be-4e22-a09e-bf65f97fa3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae1c3a8-160a-44c4-9d17-5d15aff0357d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fa65a1-7985-4d97-88d4-750f26343754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b1f387-a6a2-4bc8-8ee1-6d720945032d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a584cf5-9d18-45e0-9abd-b02f700b4377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68ba1a4-6a2f-4017-a5bc-165cf92f27c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eb7efc-527e-446e-98f1-a06f4b0b2ec8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c5fa05-0bf0-437e-b14b-677de5134ae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2f8727-d4bc-4f9f-8f8c-cb6142763e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092ee26a-ba60-4e35-ac09-3460feb69e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed34ac46-1e1b-4143-bac0-0964c523e06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aec93b0-e2a9-4b68-9133-788d0e31b617",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1db8450-1b8b-4d35-b6d1-dd521a6e153e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "386f8059-5da3-4734-a3eb-db088432fc61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410637ae-f9f1-4735-8f45-7e2808a57ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fb7c52-1730-43d1-9c7d-1c73d06d1ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ae8b0e-f4d5-4fca-926b-a22239d67f05",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28390075-29e4-4234-bd5c-05f7858b233b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be5f9acf-0965-4868-b62b-0339e548800d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1277c03-dd4a-47b8-9d02-40ec905e2a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a2049d-c84e-4857-84b0-8336c972edb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba61483-e40e-4994-970f-a929b905eb1d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f20eba-0d48-43cb-8dd3-34425202ee1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b2fd65-d859-4e83-bd9a-481055378bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a09b53-943a-4129-b67f-feb3700da7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5523913-e3bb-4ab3-8228-ac90d8ebbaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be72d62-0951-490c-a4fe-771d0c455a42",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e7f82e-6a87-44ae-b521-498b6dd907ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc3c62ff-fbde-4682-ab73-48de145fde92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25407013-a7f1-43e5-9d34-a453ed4ab006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb48fe99-3f7b-4716-9237-d35f9444123d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955afbe1-0632-40aa-b536-91a9c82aab14",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd762d3b-40ec-4fe3-b2a6-fbad142fe2b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf1d830-755a-437f-82d8-8b7102d71659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b958d657-4bdd-47d3-b66f-9ffddb214d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19adbd78-975e-4572-a53f-e4266ab9b9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c482389-0399-4cb0-9a12-5f07b58afa73",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990d3fa6-9329-4994-9ec4-49b509fadb2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec6b70b-1c60-4b81-8063-6df339eab2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366d4024-7cf6-4d62-8e55-5fd2cc002ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b14968-3146-4c98-82b8-a4913841820d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb12c469-9152-4e04-b95b-3083325f797d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1363ba-dee0-407c-a0b5-e3b2901e9466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a756eb-ace6-4bbf-b245-ee0a3a843db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40a376b-baee-4dcb-a1db-8216c481c2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9e79a3-9e79-47b1-9d2a-f15f4a346c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18af26a-16e7-4be5-92da-bce8617ef1fb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c74113-2b49-44d5-aa4d-4c42eafaf79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "829ff6aa-007f-4ac9-848f-8160464514da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e52543f-258a-4ede-9e01-17f8155e987d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9001f0a1-28a2-41c3-a76c-cc354d8fcaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be0e68b-c000-4ae0-8a7b-3153b6edbff3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f590ab-6165-4c82-898a-23b4205d9747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba887dd-afbc-40ec-9e56-ac7506908421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26e6990-ef34-4b36-ae0b-82a696782dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5f9bba-b849-48f4-b0c1-3ee95e22c25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258bda90-419d-415f-8f57-430e92c01517",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac032e6f-bf73-4213-a256-635287e39590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569f1376-9f26-4888-a9cf-be2e2052ba54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65adfd45-6c8d-416f-ad93-ee5fc73ab3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f2d636-01d3-4034-b856-546e0fe70fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618c333b-6ac0-4f4e-aae7-8aa228b87dd0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae72c6ef-d305-4379-bec3-dbd8fc461617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea72f8bf-2405-4821-bd43-248d7896b2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bafe28f-b114-42b2-9a0f-05fe1258aa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794f57cb-79da-4c74-86c3-151a82fed8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb87b9a-eb10-4add-84cc-9a1535a3b8e8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3faf7e5-14de-4410-b904-d29af0aeaaa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36098d46-1390-4086-ba4e-e57ad4e215ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39c55c8-62fa-44aa-8297-0a51abdd61ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b520b2af-f5dc-4431-b031-1ad46d507692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b474301-ebde-4ab7-ab7f-8cc9cbe8b577",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7fe5fa-f921-4808-b6b8-72495e96e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c81d91a-dd80-4af2-af29-9474c438b758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04275ec4-8625-4dac-883c-3c13db2e2e34",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0346943a-d715-4d40-a102-01f91feaaa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90b2cee-3b7b-4e01-aa8b-37be8e4bd544",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4c3a7a-79c4-4a38-b380-20c18487d44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22291a92-1ff6-4a99-93a6-247f9fde4caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea9aa78-ad3f-41cf-9d90-177e8c86992c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2eb5c0-da61-4016-97a9-0489bdef8e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f382c2a-c6f4-42cb-9f45-1d514d6b6b7d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11178fb3-246e-42c7-9e68-2d7562b580c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8acedb-273a-4d97-a307-b4e98e015c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb299662-e9c8-4e52-adc5-95875031c24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b571437-ddb0-4abe-acb6-79f76ac442db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4db785-46ab-4c34-bc5e-1b7cf50e1c19",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bde2dd5-88f1-4d89-a6a6-0f534153d07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eefd057-e6de-4f2f-9ba3-b542b5364e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468ed121-fcf1-4203-ada4-4e460b6def1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e747840-31fe-47d7-8612-76b33ddbae60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aba96d6-5df4-45af-bf6b-e9fd6dafe837",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62e63f9-c65f-474e-b11d-2df1e3e1cdcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0f144e-e553-48f5-8afb-6990ad3b6bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444d97ea-0f23-4f1b-b3ca-d9951668a3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dffae4-5ec0-426d-a3f1-ff3c8643285d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e88dd0a-999a-4b05-84b0-5930bfc1ab14",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad8a824-4a84-449a-873b-a46bae4b10b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9cbf41-bd88-42f7-a940-ed3a2d150833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76871633-1693-4185-bbc4-d905dcdc302b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71aa672-7089-4ecd-968b-e0fac832fa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9291bb69-2241-4aeb-819f-207dd8d70574",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fd565b-d704-49d4-91ca-b3db04a8c546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3fd294b-da98-4aee-b7fb-fb9523d0e68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08663109-7123-4f79-a106-6097e9a47c12",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47336d14-3bc9-4724-ab38-4061e0a27098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf25b8b-ac1e-471d-8089-c5a3f5ab0f3b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e62bae-5b84-43aa-ab45-6fe9c87a0983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17d7a4e-0469-4ae8-ba18-0f992a570e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f71c427-d76f-460b-89f9-af89ed2a5765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f922ef-ee3d-4406-987f-d5a24218456e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fc52f97-709c-43e3-91cf-e879496fe882",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c50b4a04-43e4-4d02-8d34-8683a77f95ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cebff05-7000-4cd9-be90-df8be62f3293",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a17bf655-6a7c-484c-8711-f8087242ba7a"
                    }
                  }
                ]
              },
              {
                "id": "fbe2ac22-e83a-476f-8609-0ccd56e7b5b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a78586e-7df6-4e80-a80d-921e3f401ed4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712a0fa5-55cb-4369-8647-0e05118e3f90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a52c71c5-eb1b-42bc-9cb5-831f8c4da7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420c8161-888c-4bc3-ae00-69ad20bf20ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28f1d928-e4e2-49d0-89e1-2b6277e8a481"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6a07e4c-b863-49dc-b5f6-2891f25c4e69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d229e33-ea33-44dd-a489-ef3769d1e21e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b16d3593-bbac-4b4e-b160-4a29115b55dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cc7d028-b37f-4506-af5d-085034e576eb"
                    }
                  }
                ]
              },
              {
                "id": "e7317138-b6bf-4a78-b071-d0430e33506e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "faf32d57-fe3f-4f61-8da7-c711a9e47128",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161652e4-bad8-4eaa-8828-80f5fbbcc4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1fa83c2b-972c-44e8-a21a-584f019bb031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d4aafe-b304-4d16-960e-f6ba18d154d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9741f80c-073a-47c1-be0f-1a9310107805"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1f1fb521-0a69-43a8-9086-796be5c497f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fbe0f23-5669-4c0c-94c0-9a3ec8c72deb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ef6a43d-1e5e-4985-8361-0e31999b121f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dc53b367-26f4-4fb6-81af-155e357e1fe5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "485fef1e-4bb0-44fa-ae40-405113fc9fb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12f3595a-2302-43e6-8f50-b5569118b077"
                    }
                  }
                ]
              },
              {
                "id": "2fa8339e-48b7-4bdf-848d-4d37fe8ea4ce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70a5db0d-1a03-427f-b7ad-d2e42259c867",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9bd6600d-ec8e-4185-a7f4-de251bdabd92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "258dd0b6-c4b1-4cac-a31a-be4df53c55d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93d3b846-1d49-48ea-b06a-22ee083e6dda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d136d692-71b5-4645-abd8-662cf29b808c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3a244b8e-a1b7-4a9e-b9dd-4789d30a34bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f236a1c6-1c1f-4bb8-9c7b-84b23e49ef25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58972c99-7ce4-4209-bff0-76ec3b2972d9"
            }
          }
        ]
      },
      {
        "id": "a8a8e162-09f5-41b7-9219-36f80c439a6f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "768a6aaf-ca0c-4794-9817-31f2f202d756",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e2ed871-67e2-4988-a569-1d958c2b6b90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13a5e3f3-eb3d-4303-b6e2-bb69c6254167",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11e48bd-e4f6-4ddf-b81e-dca39736ef60",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "70de98d3-a590-41ab-9d8b-26e6d292f61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dbda2a-090a-45e3-8d44-f463761c7302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "785e7f99-1f05-4b40-beeb-781dc94a83a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0f06f10-de7c-4705-b3de-bdec126f294b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "868fbef9-004e-4a8c-9df7-cf464e806b20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9edef6b2-d980-4a87-8031-3f55fa75f2b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44aed507-d842-4028-a1a1-dbde08300fc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4fed7c1-c4af-4e17-9daf-2dd89858a0ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "81558fde-f349-44a1-8bff-8d79401c1d4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "319e6fcf-37a1-4a94-915a-e60821884020",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e6b3b3a-b2a7-4835-8ccf-7684cce63311"
            }
          }
        ]
      },
      {
        "id": "d23d3b45-c31a-4d01-8a48-b0fb28c93a21",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c0da806b-e1b2-4c5b-8762-c4fb84d8ecda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87fa8b09-328a-4b26-a140-410c748af51f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b16c25e-638b-40e6-bf56-8e13ec414b82",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d64b5f8-f2e8-4bd2-bc61-1816dac0e652",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6840917e-2d8b-475e-ba0d-3365dca7b09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96239d1-864f-4991-8b49-ddd4696878e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea01e9d8-d8c4-4f29-a51f-c73a25c59a74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51c6acdd-7e89-4ccd-864f-4184027ae602",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a71ff4b4-90b4-4e4c-a08e-777a9b189ab2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c63809c7-7b97-43bc-8600-343f5d314072",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b3e1997-7de8-4b81-8f72-0db40ab6ec5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "013652f5-abf3-4c84-bc0e-d90c8dd56b98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "364d0ff6-b082-4ecd-ace3-dcf234c8732a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75238b5c-c9b9-4d37-8ab4-bb4e4710c3fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8b59f86-801d-42d6-b1a8-52e13b4ff22f"
            }
          }
        ]
      },
      {
        "id": "8515dc44-9263-448e-898f-6d86af7f89e2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd262719-f82b-4c02-9020-3731ff867704",
            "name": "Negative Testing",
            "item": [
              {
                "id": "693cd440-59e9-4d2c-a2d2-0b23ac395846",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b28f35e3-d7f6-4198-893f-c19c4297713e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ef0545-60ad-41f5-b336-5a96de006f07",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed22562c-4fe1-4b73-bec9-b41596a09409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7275c8e3-fdea-4610-977f-ce714aab78fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcd2c9b1-ed37-42ca-932a-a22c4d0939c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84b88184-83e8-4ad7-99e7-1ec5d8327306",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52189232-a002-4291-a50d-cbec4017b572"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de6a8666-e285-491a-84ae-8c346fde3f06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44ea8f1f-cf01-426d-81d2-622594bfdb5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bcc2ff2-064b-47cb-9c38-acb5ae73dabf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94fe3c74-756b-4cd4-b6aa-5fb9bc4cbe66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "317b1bc1-ae98-4002-906c-a7a39f4fb323",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "391ad063-4711-468e-ae50-150c101a479f"
            }
          }
        ]
      },
      {
        "id": "6d0c4da0-13ba-427d-a357-685ffd0cc20c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0344996b-95d2-49f6-8db3-49d9ff64ea5c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c4f6ce9-6790-499f-b861-e5e08f7a12e2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bf2c5688-79ce-4dc0-b0a5-d4fbc742ce7f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "277474d6-b367-4fa8-839a-3c9dec72e685",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e39453dd-f675-44fd-a190-76b8454ac603",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.550877192982457,
      "responseMin": 2,
      "responseMax": 348,
      "responseSd": 24.45364481717533,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700872427309,
      "completed": 1700872438293
    },
    "executions": [
      {
        "id": "93f0d019-4a93-46ea-9bed-e777c9d55993",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "381f9b68-489c-4e46-8478-ec9ac21c7cb3",
          "httpRequestId": "7f98b0c7-be78-4690-9004-91df01ca806c"
        },
        "item": {
          "id": "93f0d019-4a93-46ea-9bed-e777c9d55993",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "136f2ee3-105b-4a79-887d-1d7667ef76bf",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "aa687035-f870-4442-8a5d-2b251fd4d6d5",
        "cursor": {
          "ref": "ae919b11-b39b-4307-8180-196820603e6b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "287ed16f-28fc-43da-9335-a5ecccfdbae1"
        },
        "item": {
          "id": "aa687035-f870-4442-8a5d-2b251fd4d6d5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "525ba55f-ee96-48dc-ab78-3fe999013474",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "88b54d83-dffa-48b2-80e9-566f5cf97c55",
        "cursor": {
          "ref": "d9ca6dba-b38f-4cff-a4bf-936c0a70ff91",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a8822ecf-d19f-4186-9a77-4215f20603c0"
        },
        "item": {
          "id": "88b54d83-dffa-48b2-80e9-566f5cf97c55",
          "name": "did_json"
        },
        "response": {
          "id": "192dd534-9aea-4e8d-a73f-a538b8bbe3a6",
          "status": "OK",
          "code": 200,
          "responseTime": 192,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088ba2a4-adb9-4150-812e-322829bb294a",
        "cursor": {
          "ref": "e95fad91-3f4b-4ae0-9efd-827474f58b2c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f723449d-d30c-4440-9ce1-74e6a9fff1a0"
        },
        "item": {
          "id": "088ba2a4-adb9-4150-812e-322829bb294a",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c53a61d-ebb7-4e5a-a787-e2a07d052a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088ba2a4-adb9-4150-812e-322829bb294a",
        "cursor": {
          "ref": "e95fad91-3f4b-4ae0-9efd-827474f58b2c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f723449d-d30c-4440-9ce1-74e6a9fff1a0"
        },
        "item": {
          "id": "088ba2a4-adb9-4150-812e-322829bb294a",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c53a61d-ebb7-4e5a-a787-e2a07d052a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2fc102-93c9-4854-9fd1-3a25e1073029",
        "cursor": {
          "ref": "c0811b75-3548-4e40-a307-19ab4ff290d5",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d3b01262-9804-4d63-9e95-097912b9944b"
        },
        "item": {
          "id": "ea2fc102-93c9-4854-9fd1-3a25e1073029",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b3d051d9-c24f-486f-bd31-776c334e380c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a2b381-3612-4e3d-84d5-d9a30abf2856",
        "cursor": {
          "ref": "d47e190b-471d-4c2b-b296-3ea2bd1c3b36",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bee19250-e86c-4cb1-a9de-3da40249df79"
        },
        "item": {
          "id": "35a2b381-3612-4e3d-84d5-d9a30abf2856",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "43f56ddf-9cd2-4415-80ce-36911165f170",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ef11f3-a268-4607-8f14-19a9e85db92f",
        "cursor": {
          "ref": "e5b03223-326b-438c-9419-aaee045e5196",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ec0a73dc-b4de-4f87-aec8-97d82a6337ee"
        },
        "item": {
          "id": "73ef11f3-a268-4607-8f14-19a9e85db92f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a7bbcc37-a10e-4aa6-aadd-1922263c2dd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2602f591-7e80-45b5-a236-91d3e4e65dcc",
        "cursor": {
          "ref": "55e1fba0-bd30-486c-afb8-0dee6c82da54",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "00bf6fca-b3af-4da9-a1ea-1784664068b6"
        },
        "item": {
          "id": "2602f591-7e80-45b5-a236-91d3e4e65dcc",
          "name": "identifiers"
        },
        "response": {
          "id": "5fa1c3ac-4c74-4e54-ac9e-9ed368189a34",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbba62a-d480-4fa3-9be7-e844d4ffab94",
        "cursor": {
          "ref": "2fa2394c-3b65-4ee5-ac6f-8ad6b0cec384",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fe8ca46f-2f3c-4809-bc50-e6e44feecc8f"
        },
        "item": {
          "id": "3dbba62a-d480-4fa3-9be7-e844d4ffab94",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6111b109-e924-4061-bf83-6522861579c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50914f93-167d-42ca-bb5c-45a82250005c",
        "cursor": {
          "ref": "4cf77af4-8892-4ad9-b6c3-ba0ee2a016a2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5b542ec0-065c-4933-b55b-55ccb2f14c61"
        },
        "item": {
          "id": "50914f93-167d-42ca-bb5c-45a82250005c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d835d3f5-5c79-44f8-88e9-2d41fb711640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2790b70b-9bf0-4853-8bab-6a6a11334e99",
        "cursor": {
          "ref": "f75c4025-606a-410f-8325-88999c9031fe",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1365c7b3-8bb7-4f42-b1e1-9395cbedd9d0"
        },
        "item": {
          "id": "2790b70b-9bf0-4853-8bab-6a6a11334e99",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "beee9ce4-9fb8-458a-8468-975988024b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd12f46e-bf4b-456a-99cf-faaf998cb984",
        "cursor": {
          "ref": "eb71b0c4-0fb9-471f-8de0-08ec7456c773",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e8093902-d9fb-41a2-9ee6-998626a5f9c9"
        },
        "item": {
          "id": "dd12f46e-bf4b-456a-99cf-faaf998cb984",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9157dc6e-44d6-4e69-9a14-efe913b489d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5e076c-fd74-4f05-b59a-7202a8b2e4a0",
        "cursor": {
          "ref": "5b8bd8b3-8af1-4515-a458-3e451c8c8bdb",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "91c48685-292f-416e-829f-9d6137978b15"
        },
        "item": {
          "id": "3a5e076c-fd74-4f05-b59a-7202a8b2e4a0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "45c07c8a-1054-4093-a0e2-ccabc76b165c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbfbc92-a0bf-41a0-b829-3f55c758edb3",
        "cursor": {
          "ref": "76f6e50f-8d6e-4f3f-8ef0-7872c1b13992",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9b1bd6c4-a3dc-4973-a24f-1c4b662b43a9"
        },
        "item": {
          "id": "ebbfbc92-a0bf-41a0-b829-3f55c758edb3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f604d856-2cfa-42bf-896d-ab00ec75bc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29431ac8-dec1-4ab0-b81e-5832db1120c5",
        "cursor": {
          "ref": "68a6871f-06fc-450a-b863-6dcc94b5b682",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "608dbca3-dd0b-4915-a68a-853e5ec8c173"
        },
        "item": {
          "id": "29431ac8-dec1-4ab0-b81e-5832db1120c5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "180c5a43-b10c-4d2e-9a00-a195204cabea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2107caab-7f95-4668-87c9-6b4d862b9865",
        "cursor": {
          "ref": "59de1e46-d7ff-4089-b2d8-6182653beb93",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cfd8a090-603e-4bdc-8c67-248ef0802772"
        },
        "item": {
          "id": "2107caab-7f95-4668-87c9-6b4d862b9865",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "16e34e21-9651-4cda-8a6a-11cc12b6e9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4cdc6b-827e-41ad-84ee-f48223ac4f7b",
        "cursor": {
          "ref": "538d6e62-6e1a-4dcd-916f-f77ef830907c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "afabb25f-a150-480e-a62b-46345ad00ffe"
        },
        "item": {
          "id": "3f4cdc6b-827e-41ad-84ee-f48223ac4f7b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3f0b4bb6-d369-46d9-b794-e1b5bb6efc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5861a0a7-e3af-4979-a01b-2e8533dfb504",
        "cursor": {
          "ref": "cd9d2761-c14e-49d6-8564-599dcf38ddad",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "430382ff-6c55-422f-b084-db5b98f7c471"
        },
        "item": {
          "id": "5861a0a7-e3af-4979-a01b-2e8533dfb504",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e7fa16f0-2942-4785-995b-3c54481380d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593349a3-7eb3-4292-bb00-1ffb00917c17",
        "cursor": {
          "ref": "f7672c57-a6e9-41a2-878a-c3f762fa436c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "56abf009-acf7-4225-9b83-3c8373dd2fae"
        },
        "item": {
          "id": "593349a3-7eb3-4292-bb00-1ffb00917c17",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d6fd12aa-7995-4d36-a4ca-49392d9eeb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8226dbd0-b202-4a92-baf7-b3ec78f0a10b",
        "cursor": {
          "ref": "38afe061-1c94-4361-b051-ce9dcc2d3f7f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7644bc75-0abf-4ac7-9360-52e6af856627"
        },
        "item": {
          "id": "8226dbd0-b202-4a92-baf7-b3ec78f0a10b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "18d394c9-42dd-4e18-8c25-fed4b3a07de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cf4e03-c333-4ae9-942a-adf1b2ea5bd9",
        "cursor": {
          "ref": "f0ef0fae-9293-4b1e-b0ef-ea4469343e1e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c8667c9c-f7a6-4516-a291-0405b292e57b"
        },
        "item": {
          "id": "17cf4e03-c333-4ae9-942a-adf1b2ea5bd9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e73c74c7-d5ca-4828-bb15-4ddea13913ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84260ef-1f63-43e9-94e6-de87dcfdb8ba",
        "cursor": {
          "ref": "06e7ac38-ef8f-4257-8a81-29758837b36a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0eee1633-690a-42da-ac7e-c73325cc053f"
        },
        "item": {
          "id": "b84260ef-1f63-43e9-94e6-de87dcfdb8ba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e40ec6c5-fa38-43b0-b2da-345f17caf4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9397c4f9-98ce-488a-a80a-fd28320dc864",
        "cursor": {
          "ref": "03cf44ce-3969-49b9-9515-3120085c8cf1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "404ca5e7-458a-4f18-83a4-e0935a87d927"
        },
        "item": {
          "id": "9397c4f9-98ce-488a-a80a-fd28320dc864",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aa9579c0-1cb9-4e65-9b39-1752558e7fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6fa417-e947-48a7-9172-4d7c676aaa5d",
        "cursor": {
          "ref": "061e9381-d1da-454b-abf4-a90f9304ca7c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3410f11f-6c0b-4785-a75b-c2082b621473"
        },
        "item": {
          "id": "9f6fa417-e947-48a7-9172-4d7c676aaa5d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f7cdaf46-d10c-43f1-b55f-e65756a93666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb78e3b-2bdd-4bd8-9b09-2a1079a45037",
        "cursor": {
          "ref": "d6860ab0-569d-4ec6-864b-c0af30dc391c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "685e481b-dde7-45c6-a43c-be95022e9550"
        },
        "item": {
          "id": "0bb78e3b-2bdd-4bd8-9b09-2a1079a45037",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "af14035b-523d-42b6-b0c5-69127cafd7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4179a3-3717-4eea-a161-4ec7aa709368",
        "cursor": {
          "ref": "c61c199a-b389-44d0-8107-911a8f7a32dd",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8d2cff9c-1106-4a1c-8bf7-b390574cb39b"
        },
        "item": {
          "id": "4c4179a3-3717-4eea-a161-4ec7aa709368",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "46debd39-2c84-4ae9-b7a7-467f2e2f2afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d2cffc-8c58-45b9-b289-4330bbf98b2f",
        "cursor": {
          "ref": "10307fc1-6661-48f4-8174-db117fee9da1",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "44f2f88f-560a-4fdf-b801-e3ab558dfc11"
        },
        "item": {
          "id": "39d2cffc-8c58-45b9-b289-4330bbf98b2f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a9b42d61-6f11-431b-a382-fbd1b074a60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb283053-10c8-49c8-b958-5b18ce7d6807",
        "cursor": {
          "ref": "289bf84e-67f9-4f48-ac21-6971703c1be0",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2857d509-7eaf-499a-91e1-403a599897d8"
        },
        "item": {
          "id": "cb283053-10c8-49c8-b958-5b18ce7d6807",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9728fa23-51b1-40d1-91c3-ee94fd2081b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f1a230-4ef4-4731-9eac-f77030876217",
        "cursor": {
          "ref": "e1a4251e-f5f1-48c6-8cea-7fdefa5b44f0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bb277339-4c36-4aca-afb3-d73639a7df93"
        },
        "item": {
          "id": "d6f1a230-4ef4-4731-9eac-f77030876217",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ad467145-5e5d-4629-aeb4-2c995c4a3270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44911ead-3880-431a-9a0a-24193e8b8b76",
        "cursor": {
          "ref": "1355a62a-cba2-43c6-a548-9cdea334ff19",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1008b7e6-c873-420c-a602-b04f2802bfeb"
        },
        "item": {
          "id": "44911ead-3880-431a-9a0a-24193e8b8b76",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5cdc689f-178a-4aa5-9e7d-7095e50d4b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b39d83-a8e9-4d53-a67d-011cc2d291e8",
        "cursor": {
          "ref": "afb87013-f368-45ef-8c60-f0f2679ccdd5",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a2165d07-cc7a-423f-be98-624a4cd53a65"
        },
        "item": {
          "id": "13b39d83-a8e9-4d53-a67d-011cc2d291e8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b4a2e5c5-7ff9-4386-964a-fb074984c3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc04e3c9-20f9-4cc6-a5a7-0b2697a8f1d9",
        "cursor": {
          "ref": "9480d3ee-9fce-4a4a-8266-66634ac0ab84",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "35321619-38e5-43f0-9eb5-c33848ed1eba"
        },
        "item": {
          "id": "cc04e3c9-20f9-4cc6-a5a7-0b2697a8f1d9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cd7aa194-45f5-4b1a-97a8-5dcf44ed9543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d67618-740b-4108-adc7-7db898f652f1",
        "cursor": {
          "ref": "de38533e-b343-4c56-9f5a-114d1951adde",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e6df3fe8-9de0-4408-af1f-70f3f03c2e1c"
        },
        "item": {
          "id": "a0d67618-740b-4108-adc7-7db898f652f1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6c2e25c6-d406-4984-9bc9-91bb57ca4567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d414499a-001e-43fa-823e-8951186eae9c",
        "cursor": {
          "ref": "9b2535bf-f5a9-438d-a3d7-9a6a7bccb59f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "37486679-8d39-4abd-b27f-c35951d164af"
        },
        "item": {
          "id": "d414499a-001e-43fa-823e-8951186eae9c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dcecbc84-4363-45cd-814e-6d8bfc6b2e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e4b639-350c-4949-a528-35ff03d6ad45",
        "cursor": {
          "ref": "ce76b67b-d1d6-4c0d-9d27-8d3b8d054b8c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d46a555b-bdfc-4db6-bfb4-add050b6d160"
        },
        "item": {
          "id": "d3e4b639-350c-4949-a528-35ff03d6ad45",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ec2f04c1-999f-4d7e-a948-7fb4a541873b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b5286f-33ee-43c2-9fa0-541c2e3515ca",
        "cursor": {
          "ref": "31bb4ab3-b1b2-4853-8cb9-75ffb77d5d4a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "663ce3ef-b987-4389-a3c9-e83a2c933ec1"
        },
        "item": {
          "id": "51b5286f-33ee-43c2-9fa0-541c2e3515ca",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "912cd2ff-f8eb-428f-a9e4-8fa21435ed4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af4bc19-20e2-4d89-b0ca-6be938435992",
        "cursor": {
          "ref": "7cfdc9c0-b0d0-4cce-b0e3-a47beb0ef20b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "37f91912-2dc1-4529-9791-35d20084540f"
        },
        "item": {
          "id": "0af4bc19-20e2-4d89-b0ca-6be938435992",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4d17d41c-931b-49f0-8b26-cbfb8c7c2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd82880b-0609-4791-a68a-9a2bfcf861dc",
        "cursor": {
          "ref": "91b7a1c2-b73e-49b3-b869-1705a3fac616",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c1e52b83-4bab-4935-b11c-1a5d8351327e"
        },
        "item": {
          "id": "cd82880b-0609-4791-a68a-9a2bfcf861dc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0127dbbe-23ff-4261-9a68-df7d23930f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed8742e-9d80-4f5b-ac28-68e80e0320df",
        "cursor": {
          "ref": "ec53a7a7-4139-4532-9ae7-eb2fd5c9cb8d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6b721001-ad79-4589-a983-59a4fdc28a82"
        },
        "item": {
          "id": "3ed8742e-9d80-4f5b-ac28-68e80e0320df",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b99debc4-a389-495a-8f07-e655e57c3728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7400ec24-5231-42ea-91f1-f72a813aa6a7",
        "cursor": {
          "ref": "6d160657-daa5-43f6-8043-a95ffd8fc464",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "42e8d39f-5d13-4f8d-854d-38a97dc615d8"
        },
        "item": {
          "id": "7400ec24-5231-42ea-91f1-f72a813aa6a7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1c713cee-0749-454d-a009-d2a9cfe7164f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d37ea3-65e6-43dd-802f-68ccf680c24d",
        "cursor": {
          "ref": "79dc5a3e-1f2b-4b81-8b34-d8d7ef876eb9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "069dcc7a-4bff-4ca1-9dfe-79c4ef95106d"
        },
        "item": {
          "id": "01d37ea3-65e6-43dd-802f-68ccf680c24d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f5135428-9de7-4fee-949e-a1dec6494175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cec15f-0ee8-491e-8da6-e54efdcc416c",
        "cursor": {
          "ref": "c870cd08-e544-412c-a627-1f81b521144c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f37ef12f-f912-4288-8ebc-d737de5f0546"
        },
        "item": {
          "id": "06cec15f-0ee8-491e-8da6-e54efdcc416c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2e37261e-782c-419e-a9bd-087aaf39dd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8f6985-3e05-4ca3-89ea-582e82654b1d",
        "cursor": {
          "ref": "5bb0a7b5-03da-442f-96e4-af7fa6439edf",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d50133be-4b66-48af-a6fd-f4d7ac11fa6a"
        },
        "item": {
          "id": "ab8f6985-3e05-4ca3-89ea-582e82654b1d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dbceed3e-9db3-45fe-a486-c95b9e110c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d24f62-e2f5-4faa-aa1b-326ac1b82c68",
        "cursor": {
          "ref": "0ab6f5dc-1218-4243-a306-62930fe9fb8c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d3517384-7ce3-4354-9e33-e025ac10e514"
        },
        "item": {
          "id": "14d24f62-e2f5-4faa-aa1b-326ac1b82c68",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dc2ef11a-5156-44c6-989c-a60579816905",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2f5673-0206-422d-af85-5d9c90994f9e",
        "cursor": {
          "ref": "f33d5b7b-b348-415a-bd75-bec851edd5b5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "14540318-6cb7-4c06-83ee-4db7db8062e5"
        },
        "item": {
          "id": "6e2f5673-0206-422d-af85-5d9c90994f9e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1fb0b72b-1df0-4f10-8e0f-5b7d1b8271a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5d5b1a-c939-40b1-bf05-6c972e4a4898",
        "cursor": {
          "ref": "3dd4e666-b6ca-4634-842f-4a730ac039d2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "664db4ce-8450-424d-a45d-7cc28610ebc1"
        },
        "item": {
          "id": "ba5d5b1a-c939-40b1-bf05-6c972e4a4898",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1fccb706-6206-4662-98b1-d734d3d4dc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4eafe0-9bff-40cf-b317-d80d5404f39a",
        "cursor": {
          "ref": "1b86d710-0daa-4fd4-ad18-b376a119a002",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ca312091-5948-427b-86c1-5208220be61b"
        },
        "item": {
          "id": "dc4eafe0-9bff-40cf-b317-d80d5404f39a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8d05d2d0-feb3-470d-8c6d-3bf681816f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c2ddc8-85b8-4236-ae8e-04bdc51fb00f",
        "cursor": {
          "ref": "fa8234c9-d912-4012-a51a-61aec7947fff",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "35693667-0971-41ff-a65b-32eccd6da3d0"
        },
        "item": {
          "id": "31c2ddc8-85b8-4236-ae8e-04bdc51fb00f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "77caa37f-1c71-4a49-be34-56cb74c91500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20c0c51-39e9-4a84-836b-fa051bfdbdeb",
        "cursor": {
          "ref": "25b7a3d9-4172-4b8e-9aae-3d903f3e6bd4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "84537e8f-499c-4b1c-a052-592a98b41881"
        },
        "item": {
          "id": "f20c0c51-39e9-4a84-836b-fa051bfdbdeb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "012d82e5-f1a4-4567-a278-2577cda92332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c8ac1a-89f1-415c-a017-c0913e8429b0",
        "cursor": {
          "ref": "ee3bba2c-7b75-4aba-a440-f72ca6447467",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "09b075e2-1b42-47b4-916c-773f6cfc45b9"
        },
        "item": {
          "id": "c7c8ac1a-89f1-415c-a017-c0913e8429b0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b8c1e79f-3f4e-4477-bdc2-877b397890b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994a6bdb-840e-4cbf-ba69-9e945d258c83",
        "cursor": {
          "ref": "851eea3a-48b4-4205-98a6-b81a39208c8e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7f54d847-a275-4d18-b519-aee2172e52fa"
        },
        "item": {
          "id": "994a6bdb-840e-4cbf-ba69-9e945d258c83",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6fc3b052-21ea-40b9-9d25-50665303daf4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f278b9bf-cc40-4709-9f38-b3b82798ada3",
        "cursor": {
          "ref": "49897940-e9f4-4e2e-8a3c-cb5e3ed61a0b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "36417f83-e21f-4e3a-a09b-41b0fd1850b9"
        },
        "item": {
          "id": "f278b9bf-cc40-4709-9f38-b3b82798ada3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ab4ff608-e11e-40bc-9d25-34b50786c4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40c58e0-fe0b-45b7-83db-3f28c32f992b",
        "cursor": {
          "ref": "643c5316-f9ae-4bba-a2e7-de8edc874ed3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d6ab4ac5-bbda-4cee-8940-214afc76ebfd"
        },
        "item": {
          "id": "d40c58e0-fe0b-45b7-83db-3f28c32f992b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "779c0560-fc3f-49db-91ba-206285cb7767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4c6bfc-1e43-4848-8a84-c905aeb3e271",
        "cursor": {
          "ref": "67464c73-b7a2-45bc-8c0e-ca53633ffe88",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bc733ce6-2a41-422f-81d3-606f39f12827"
        },
        "item": {
          "id": "0f4c6bfc-1e43-4848-8a84-c905aeb3e271",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dce4ae42-dff0-496d-ac45-f26025ab20f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec01fe35-24f8-4421-8a9b-561a89cdf734",
        "cursor": {
          "ref": "f78091b7-1325-4ac2-8839-7c9e910ba2ad",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "441a531a-b4a8-4fec-ac91-aef323bbe451"
        },
        "item": {
          "id": "ec01fe35-24f8-4421-8a9b-561a89cdf734",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4b1dd62a-2356-4865-88d0-006891f1a189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc84bb7f-acb5-4155-a89c-1eaed9387e4a",
        "cursor": {
          "ref": "23006be5-b469-4079-bc76-539856677435",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "65afc45d-d2ca-4afa-825d-e6c3e825e8fb"
        },
        "item": {
          "id": "dc84bb7f-acb5-4155-a89c-1eaed9387e4a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a9063bf2-248b-4109-a390-a1ac27bb88a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77daafc-442a-458f-b862-be561b845b52",
        "cursor": {
          "ref": "85249c24-c65b-4d11-9ffc-50412f925471",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "20cdb9c2-2b20-4c14-a06d-cbc66f3a7984"
        },
        "item": {
          "id": "e77daafc-442a-458f-b862-be561b845b52",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e4bd6e1d-556e-4752-9df0-b397eb717160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657237c1-73bd-412b-92fa-ca6346fe91b0",
        "cursor": {
          "ref": "3baf6b7d-13ae-4f51-8f38-dc64eb72a031",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "13f198cd-eeba-4f20-b7ca-04efe79e5144"
        },
        "item": {
          "id": "657237c1-73bd-412b-92fa-ca6346fe91b0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "38ee81a2-d28f-4256-bb1c-f4d0e9b332fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028fd0c6-2e6d-4aab-971c-42e99d5e4728",
        "cursor": {
          "ref": "fb0270a7-9c9d-4ebf-9214-4292b539c097",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d373a29f-a983-49fa-9597-16596465f574"
        },
        "item": {
          "id": "028fd0c6-2e6d-4aab-971c-42e99d5e4728",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b223286f-18d7-499b-9894-8c1d24fcd1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9cdb72-6c6f-4aa9-abfb-ba308a8f6b24",
        "cursor": {
          "ref": "a81cb4da-c1f6-489a-9d8c-4368ff593c5b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5c1f9c40-804a-4b63-a57f-ee536ba7567e"
        },
        "item": {
          "id": "3e9cdb72-6c6f-4aa9-abfb-ba308a8f6b24",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "803f28aa-ddd0-4c2d-bafc-691d96ef143e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1250d52-e463-40cf-a409-faccbbcbdefe",
        "cursor": {
          "ref": "b84059fd-6add-4a36-a585-1226f38a78c9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a445b944-9fab-437f-a113-bca940c76230"
        },
        "item": {
          "id": "d1250d52-e463-40cf-a409-faccbbcbdefe",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "22026db0-d12b-4ff0-b6d4-2eda0f4a57c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b4b6d5-0d3b-4689-bd35-395ec2da05d0",
        "cursor": {
          "ref": "69f92a45-81c9-4f0f-9faa-7c4c50cd1c0a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2d79a058-29ad-4fb0-beda-d96d49a21d68"
        },
        "item": {
          "id": "e8b4b6d5-0d3b-4689-bd35-395ec2da05d0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cf4c65a6-08dc-43b0-8064-5c48a019394d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301c9871-c01e-4c2d-afd5-f6169fb1a47e",
        "cursor": {
          "ref": "5e18d714-17e0-4d2a-a2db-8db571cff2ff",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fcba2813-5132-438d-a5b5-d70e8f39a133"
        },
        "item": {
          "id": "301c9871-c01e-4c2d-afd5-f6169fb1a47e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4e5a45f1-78c6-41f7-8116-1dada01c1eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19fa57a-38c6-4620-b4c7-7362cf4d017a",
        "cursor": {
          "ref": "ef9b7b83-bae3-4a57-8e5b-01e0ea24544b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0acef8ad-90a3-4666-8fa4-4f234c2b3277"
        },
        "item": {
          "id": "a19fa57a-38c6-4620-b4c7-7362cf4d017a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b9960738-6a6b-4773-adf8-7e7d65a8a7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7d0f28-445b-42c3-b3f3-85cb38fcd98a",
        "cursor": {
          "ref": "eeb1cf17-7fe5-4491-a78a-bef7071d75b6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "08c62fc9-638e-49ce-a9de-10496c53d65e"
        },
        "item": {
          "id": "aa7d0f28-445b-42c3-b3f3-85cb38fcd98a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1ecbe7ac-7205-42ac-8f85-2143aa152692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2e88bb-cfbf-4d11-ac3f-ae8ee1829a25",
        "cursor": {
          "ref": "c21640f4-e660-473e-a0b5-f9d82c8ad6bb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "51c8e228-5fe1-418f-b9fe-b0d3c84fd721"
        },
        "item": {
          "id": "7e2e88bb-cfbf-4d11-ac3f-ae8ee1829a25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "85f9e4d9-d142-4358-9d8c-d6ffa78350fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c510b3c-b37f-431d-ada7-d805e87a5664",
        "cursor": {
          "ref": "2612404a-4aa6-454a-b2d4-a9a6a9a84299",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b8fb09bf-d05c-4aaf-82bc-66d0f9ea3e1a"
        },
        "item": {
          "id": "3c510b3c-b37f-431d-ada7-d805e87a5664",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0b6eab75-4633-470f-b146-fe5d519f4a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39843d66-1877-4d60-9ae7-df92bb5d62f5",
        "cursor": {
          "ref": "94dda44d-f31d-4a5b-b4ae-fbaa0983e5ab",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "101bdf1d-433d-4f9a-b225-a5893352f4de"
        },
        "item": {
          "id": "39843d66-1877-4d60-9ae7-df92bb5d62f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "04e9fc49-1e79-4cfd-9e2e-f4d799e69073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6292555b-1b20-45fc-9de5-288ae8372ca8",
        "cursor": {
          "ref": "e214e184-192d-4639-bedd-2f4ef46a0ff9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "acb06636-6735-4156-ad0f-400673435d2a"
        },
        "item": {
          "id": "6292555b-1b20-45fc-9de5-288ae8372ca8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "247d28b9-4fa4-4920-a27d-baee84e61d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96433e9-9527-4579-927c-ad1a64362d16",
        "cursor": {
          "ref": "b9cb6c77-849a-4487-b6c1-36eb10122140",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "22c4a39a-1e13-4956-9f1b-18be7f5499eb"
        },
        "item": {
          "id": "b96433e9-9527-4579-927c-ad1a64362d16",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5175844a-c423-4de9-bd65-850d9a075acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3946e3e2-b163-4881-8cfa-4d3452cdd273",
        "cursor": {
          "ref": "51866e14-e571-4bbb-80f9-aab58e2f0f3f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c0b1eb45-789f-45b2-bffe-b1b95f19ce36"
        },
        "item": {
          "id": "3946e3e2-b163-4881-8cfa-4d3452cdd273",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4b35fc37-59f0-4c6e-a0a8-cfe6b352f833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c1122-0c2c-4d30-9a0f-748df186a63c",
        "cursor": {
          "ref": "8a0d0b7b-4e66-468c-a32e-d0538c74282d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f8bb4998-5ed8-42e4-9219-cd0791f9eb84"
        },
        "item": {
          "id": "4a5c1122-0c2c-4d30-9a0f-748df186a63c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d8eeaa8a-fd7d-497d-8a81-89f03541b8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab407c2-feaa-49eb-b92c-9027cc669898",
        "cursor": {
          "ref": "078802b5-f19b-4087-9da9-89d2371e9067",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "18faa495-a2cf-4a59-8498-eaec1f06cbd4"
        },
        "item": {
          "id": "3ab407c2-feaa-49eb-b92c-9027cc669898",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a6c1cbce-abe6-4073-a373-6f46582e7b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fdff9c-dd38-4fbe-9124-fc8f7e5c6bac",
        "cursor": {
          "ref": "de0a3af5-d5b3-4439-8953-0ccd595df7a6",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7f23955c-55b4-4b09-8a72-2dc1be42f45f"
        },
        "item": {
          "id": "37fdff9c-dd38-4fbe-9124-fc8f7e5c6bac",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d375ae07-439e-4915-b92b-0c64d6c75f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12530c14-ba5f-43b3-b68f-3d45ab11ea0e",
        "cursor": {
          "ref": "998c1137-ca42-45ad-8464-44d5f36c176a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5ecae5be-0ea6-49bb-8bcd-4e63872dc000"
        },
        "item": {
          "id": "12530c14-ba5f-43b3-b68f-3d45ab11ea0e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a4fe75e4-a85f-4fc1-bf2d-1c0a0923999c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6243b9-84e0-42f2-82ce-78658e49ea5d",
        "cursor": {
          "ref": "a27bc47b-3d09-4b39-b1f0-ff43dfd9660d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ec802b13-cd8b-43c5-b097-a72b03709fd2"
        },
        "item": {
          "id": "7b6243b9-84e0-42f2-82ce-78658e49ea5d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "64b6d376-6118-4e48-bde4-19e5539519c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1467179f-bcdc-4de3-bfac-19b0465bc398",
        "cursor": {
          "ref": "82bad50c-0303-4cc2-9d65-147928778b8f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "83612b1d-6c14-4dc0-b708-249d094ce336"
        },
        "item": {
          "id": "1467179f-bcdc-4de3-bfac-19b0465bc398",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "77593e1e-2110-475a-8210-3439ff0c799a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e32bb2-b461-4300-bcd6-9ada0ef8c44a",
        "cursor": {
          "ref": "93c7d357-9827-4bc7-aca3-c7c2fc9b49e1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ee3a3c09-559a-47f6-bf7d-d31982ac845b"
        },
        "item": {
          "id": "52e32bb2-b461-4300-bcd6-9ada0ef8c44a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2fc8fb9d-6f26-42f7-a896-ae6b1d6135d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e71ab-d890-43f3-9351-36bb4622a50a",
        "cursor": {
          "ref": "ad14de85-692c-4e23-b7d7-f0330ae4bdf0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "36a79b59-361a-4fd3-b5d2-046080badd9a"
        },
        "item": {
          "id": "402e71ab-d890-43f3-9351-36bb4622a50a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "41c29cc2-969f-4b1c-b3fa-5a6414ba1740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a75d17-98fb-4a00-ad98-005808053ff6",
        "cursor": {
          "ref": "d621a1d4-efcf-4280-9c48-c570c69e7034",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dcb22d41-4246-4659-99a6-1317703fd973"
        },
        "item": {
          "id": "57a75d17-98fb-4a00-ad98-005808053ff6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aa7f4e89-2fc3-42a0-be09-57bb576e409b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9688765-b278-4434-b517-bd8f028f386c",
        "cursor": {
          "ref": "4610c32c-0ffb-4b60-83f6-675c4d03c1a7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "58718704-3c25-4e8a-b757-ca4820915cee"
        },
        "item": {
          "id": "f9688765-b278-4434-b517-bd8f028f386c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "79acdf64-2c74-421f-a1c6-0d5091a8e849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c667a15a-4eff-4c96-8384-f0e7a1629b4a",
        "cursor": {
          "ref": "14c968ad-6cc3-4102-a025-d8e7ed2e17d7",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "49e5abdf-8a9f-42e3-9531-f81f6f2e23d6"
        },
        "item": {
          "id": "c667a15a-4eff-4c96-8384-f0e7a1629b4a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "82b47ec7-4b24-4c3d-a123-ac5f4487db0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93bd8a2-b802-4f09-940c-bb415d7eada5",
        "cursor": {
          "ref": "a2c4a067-549a-4609-8340-f44df6331cc7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "017872c9-0044-4d1b-b6f9-7ea77867e27a"
        },
        "item": {
          "id": "c93bd8a2-b802-4f09-940c-bb415d7eada5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "53ce3143-2039-487b-89c4-32be185d5505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34236a0-15dd-49ee-b362-c3d9147e917d",
        "cursor": {
          "ref": "30a64393-ff07-426c-ab11-4ec9ada745fe",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "71cd3f48-a4ed-4d02-bbc6-82bb78c48375"
        },
        "item": {
          "id": "e34236a0-15dd-49ee-b362-c3d9147e917d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eedd5623-91e1-4d03-b3cf-83430e17e422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd86bb7-8a7a-4e2c-b3af-6baf34715d63",
        "cursor": {
          "ref": "70f5f83b-de1e-46f4-acf9-3e008ce37a91",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4f321dce-7695-4817-99a8-e79ebb68fe07"
        },
        "item": {
          "id": "ccd86bb7-8a7a-4e2c-b3af-6baf34715d63",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d6180fa2-ed5b-496d-983a-efae77dd4d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c67410-8b47-447e-a0cc-b3a80e5358c8",
        "cursor": {
          "ref": "907d3351-51f0-42bd-b21f-c9b3817009c8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "50176bab-1aa9-4e6e-8e15-fa3eeb274a29"
        },
        "item": {
          "id": "97c67410-8b47-447e-a0cc-b3a80e5358c8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0e9ec3b1-669d-44f7-90be-d2e737b1f546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9835dc8-a686-4908-9be1-edb644292dc5",
        "cursor": {
          "ref": "6150559d-5377-4ba1-ad83-a2021f9136ed",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "49bd8f4a-7284-45b3-a757-64e9d599d7b3"
        },
        "item": {
          "id": "d9835dc8-a686-4908-9be1-edb644292dc5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "15b9509d-7e9d-416a-b6f2-53a8fba721e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368ea026-f88e-4230-aa30-02f7ec99e669",
        "cursor": {
          "ref": "3278834f-3da6-4778-9adf-7aaa0aac31c5",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "238bcea5-a268-4dac-8cd5-3c399bea99f4"
        },
        "item": {
          "id": "368ea026-f88e-4230-aa30-02f7ec99e669",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ed7ce348-b12d-4cfd-a1ec-240d7f79a31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3d639c-b731-4379-b9ef-84fbfb681ee5",
        "cursor": {
          "ref": "5fae5473-367e-4eff-8b01-cfb5ffdd3fb9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "987703e8-e31c-4ef3-8c05-a363a95fa273"
        },
        "item": {
          "id": "7f3d639c-b731-4379-b9ef-84fbfb681ee5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0f0e94d-f2b3-4cd5-90cf-4f865b83bbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373bdeaa-0a93-4a1e-8dcc-491df38fc7c8",
        "cursor": {
          "ref": "e24cdaa7-5f7b-4ab6-86bc-5c0ae7b83664",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e1b5881e-3565-4ccf-a0d9-fd225d74ce3b"
        },
        "item": {
          "id": "373bdeaa-0a93-4a1e-8dcc-491df38fc7c8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e46b0aa1-e681-4d63-997b-73671dbe46d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6099b4f1-dd6b-4427-a9c4-d61b1b84c59f",
        "cursor": {
          "ref": "c7e872e1-6f5e-4fb3-9096-550e9fdd9635",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7df1f790-3907-4bd7-9b29-358384cc2c53"
        },
        "item": {
          "id": "6099b4f1-dd6b-4427-a9c4-d61b1b84c59f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c1f596a3-fa0c-4b87-96a8-0ac56e314f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bd917a-5021-4601-ae6a-169e2f3c7291",
        "cursor": {
          "ref": "3a596a2f-29b7-499b-abc8-3ded1bc78278",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "86d6e1c1-e2f5-45cb-a06e-8c09daa2ee2d"
        },
        "item": {
          "id": "d2bd917a-5021-4601-ae6a-169e2f3c7291",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bceacc61-24e3-4bed-8b9d-2b45bf178fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1aac4b-da14-4f23-867e-f08ae640fab5",
        "cursor": {
          "ref": "c01152b4-0263-454e-8eaf-daa6bd33ca31",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dea7175b-8ade-448d-9852-968c0d6a631f"
        },
        "item": {
          "id": "4f1aac4b-da14-4f23-867e-f08ae640fab5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4b9e31a1-840d-4277-b1dc-f11a0fe096f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579235b3-1a29-4414-b0e2-6b694b6094c7",
        "cursor": {
          "ref": "b359da72-aade-4df4-856f-6ccdc38efaca",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "00111bb7-1a53-4c8e-b51c-4f237557a8cf"
        },
        "item": {
          "id": "579235b3-1a29-4414-b0e2-6b694b6094c7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ddc47c4c-de36-43c8-8383-924150d7993e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62820690-4c0b-4b32-bec5-2682bc4a988f",
        "cursor": {
          "ref": "70f80cad-7dcb-49f6-a322-729604745927",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "93158ba8-2e73-444c-a627-d7c59c6562db"
        },
        "item": {
          "id": "62820690-4c0b-4b32-bec5-2682bc4a988f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "17850475-b3bf-41bc-928e-90d929813296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021f7aef-39f8-4e3b-b20e-3972378ec342",
        "cursor": {
          "ref": "c4b32e21-803f-423a-bb89-fba7a5ca2c62",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "480f182a-bd30-4dac-8d5e-bad66f26f88a"
        },
        "item": {
          "id": "021f7aef-39f8-4e3b-b20e-3972378ec342",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "daa7ce30-f93c-48bf-a049-15cdbf9d426e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540d1d1d-34cc-47f4-9b2d-1add2ef56729",
        "cursor": {
          "ref": "3c748ab7-bb8d-46e6-947c-b7800c1b9c18",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e431379-077a-47bc-938e-4d53ddde2587"
        },
        "item": {
          "id": "540d1d1d-34cc-47f4-9b2d-1add2ef56729",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9905173d-451b-4b3e-9375-4ff20feb102b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eea8b7-b730-4d97-9652-04e74c74d0db",
        "cursor": {
          "ref": "e0052994-c581-4576-b95b-a0a238177233",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0bf7d422-3a13-4fbc-9a77-36686d565280"
        },
        "item": {
          "id": "f9eea8b7-b730-4d97-9652-04e74c74d0db",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ecbd844b-00f1-4b7b-a211-f7bec6b24eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b23999-70c0-47be-a2b4-acc42ef3d9f5",
        "cursor": {
          "ref": "bd81ea7b-5069-4ed6-acf7-0832c2d934fa",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b686ed84-f17b-4cb9-ad51-cd8dc8133354"
        },
        "item": {
          "id": "04b23999-70c0-47be-a2b4-acc42ef3d9f5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "618d83f3-a264-4396-b1a5-b47f3a98cbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17517bc0-686d-4c65-bf2b-03a93591cbb6",
        "cursor": {
          "ref": "ac56d733-211d-4a78-8af0-4e90538798d4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6e634f04-7ee4-45ca-836c-de6d42ac1fc0"
        },
        "item": {
          "id": "17517bc0-686d-4c65-bf2b-03a93591cbb6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "98bd2194-dc5e-4bec-b8b9-5093a7ddb18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4468ba-45f7-4e7f-801a-b46f656fc0cc",
        "cursor": {
          "ref": "6ac182e4-3750-43f9-9c5c-ff2933d2ef8b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5075cead-0a5c-4d05-97ef-a95a2cdf6393"
        },
        "item": {
          "id": "0e4468ba-45f7-4e7f-801a-b46f656fc0cc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2160fb25-7c0c-4e57-a85e-43cc1d44bbed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42abd19f-baf6-49d7-a77b-33af0a1b257a",
        "cursor": {
          "ref": "e558aa37-b521-450b-a6c7-5c1a93238af8",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "62367ca8-39cf-4245-b172-ae6c6d43bcec"
        },
        "item": {
          "id": "42abd19f-baf6-49d7-a77b-33af0a1b257a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "087dbab2-2511-4431-be31-e0ee6c5512e0",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622a130f-114d-4353-85b5-b3db923b3576",
        "cursor": {
          "ref": "58e342e7-e3e1-4d38-a76b-35c5e78f2657",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6ddf08b4-ca18-4ce3-afa0-b208ed1daafa"
        },
        "item": {
          "id": "622a130f-114d-4353-85b5-b3db923b3576",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0f74571a-0df6-4828-bd6e-340663438280",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75ce334-9156-4842-85a2-3ba3f04ebab2",
        "cursor": {
          "ref": "7e15f3bf-7e46-4931-80eb-ec652422553d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7e55768f-1393-4005-90a5-b60a78ee615c"
        },
        "item": {
          "id": "c75ce334-9156-4842-85a2-3ba3f04ebab2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "02972227-f74d-4063-a2d7-911bb9cff3da",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e6625d-33f4-418f-91fa-ff7330e5cfca",
        "cursor": {
          "ref": "8ef918a3-5d2e-4d79-808e-354bab2ceaa8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9fac7f11-4bd9-42a4-a373-1d5e96b95a49"
        },
        "item": {
          "id": "d6e6625d-33f4-418f-91fa-ff7330e5cfca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "eee3fbb5-3b24-49b2-901c-6fbb0e73990b",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "951ba8c8-7cce-4360-9683-39f17a687fb8",
        "cursor": {
          "ref": "82632fd5-39fa-4356-b80c-0688b53a40af",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2e4680c1-c8f1-4049-bd9a-6e0756dabcdb"
        },
        "item": {
          "id": "951ba8c8-7cce-4360-9683-39f17a687fb8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9389b2ea-b5c7-4d52-85f8-71169cc1f2a9",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "892576f2-442c-4c7a-9eb0-f4950f80b55c",
        "cursor": {
          "ref": "1f58ca6f-7263-4a38-8ff1-926ee05240f0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3cceecb5-2e47-4e0b-833d-1832920e3238"
        },
        "item": {
          "id": "892576f2-442c-4c7a-9eb0-f4950f80b55c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e6e78f25-11a5-4ed6-83c5-6cca2ee91ddd",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a86726-0c83-45aa-8d10-092d87423272",
        "cursor": {
          "ref": "6a02cdb1-8da9-405f-aeda-a333a0c917d0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "936dd09d-7002-45a8-a14a-6b5a2ae3d7f4"
        },
        "item": {
          "id": "48a86726-0c83-45aa-8d10-092d87423272",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4b7dc79e-42a1-409b-8272-1b1d07949ab2",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b242d797-fcff-48f3-84e8-037c90d32bae",
        "cursor": {
          "ref": "e516a237-6e4f-4ea0-a34d-dbf83a1c52ba",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "14631e62-02c4-412b-bc28-182303f5ab0a"
        },
        "item": {
          "id": "b242d797-fcff-48f3-84e8-037c90d32bae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "89520865-aba0-495d-b237-d67097b07599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7261cfda-2989-4b08-99e6-642ec66fda04",
        "cursor": {
          "ref": "8e2a3ec7-6c33-477e-8121-e8b10ba91027",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "45c78986-bb62-477c-b82c-c802bf4d3f49"
        },
        "item": {
          "id": "7261cfda-2989-4b08-99e6-642ec66fda04",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7f3e960f-0761-4a47-960b-75feee27def8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a1e0a3-edc0-4d4e-ab17-a27b5d24b6c7",
        "cursor": {
          "ref": "a8e40e89-d036-44dd-95da-d2192671b7cf",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "10bf65be-14e8-47f3-bf25-9edc89ba4f43"
        },
        "item": {
          "id": "e8a1e0a3-edc0-4d4e-ab17-a27b5d24b6c7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "68c48333-b2f0-43d4-be3c-398613fc76fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c67a792-01ba-47e3-9dba-f12c4a782879",
        "cursor": {
          "ref": "b5821f82-2ec6-4951-91f9-13272754d7ad",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fc1496ac-4298-457f-aff9-92f096e97ccf"
        },
        "item": {
          "id": "8c67a792-01ba-47e3-9dba-f12c4a782879",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "03d7a028-a009-48b4-b80c-6581c9e3df57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd34ec2f-dfea-4f65-847a-45636c7ecfa8",
        "cursor": {
          "ref": "11ce5895-ba1a-4b7d-855d-6474b8113426",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7d106d57-521e-4b35-b20f-89fdef90f0a2"
        },
        "item": {
          "id": "cd34ec2f-dfea-4f65-847a-45636c7ecfa8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9abc9a64-0c1a-486b-a442-c6414c31a1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd034cf-1e7e-4b25-8adc-0dac01e5f6b3",
        "cursor": {
          "ref": "a9850b4a-07cd-428f-887b-7aa437125e1a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "de88c074-2c3c-4552-87ac-72fd0a1b50bb"
        },
        "item": {
          "id": "9bd034cf-1e7e-4b25-8adc-0dac01e5f6b3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1510217c-ec05-4338-bfc4-be4de3b61d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da81cc1-b034-4edd-a83d-c35af3b54502",
        "cursor": {
          "ref": "223e02e7-cc78-4a2d-8ed2-aa199dff53fb",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6477e12f-1ddc-4107-b42d-4507915cc19d"
        },
        "item": {
          "id": "4da81cc1-b034-4edd-a83d-c35af3b54502",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3ae93f5d-39ea-4030-a9a6-4aaaf112d79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11867b08-10f6-4891-9f2d-dd1f10374453",
        "cursor": {
          "ref": "d630ae84-bf38-450d-9cc7-619f6b1e1ee1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "311a3f3c-3d49-4fac-b392-7e8215fa6d20"
        },
        "item": {
          "id": "11867b08-10f6-4891-9f2d-dd1f10374453",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f14144d5-b653-4d8c-9a49-ec79b5ac5038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b09f785-fb63-42ad-9470-fa5b30b08299",
        "cursor": {
          "ref": "3aa64aba-ed22-4cd5-9864-2672fc66d27d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7e34985e-71a7-4942-827d-085829a008e7"
        },
        "item": {
          "id": "0b09f785-fb63-42ad-9470-fa5b30b08299",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1bca0305-1aad-4655-af4d-753ea69eea86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6754aff3-0dda-4ec0-aec8-f44708d2bfa4",
        "cursor": {
          "ref": "4a87e8dc-365f-41e5-afbc-9bf5205bcd14",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e6491321-3fb7-4ae5-bde4-18cb0a5d140d"
        },
        "item": {
          "id": "6754aff3-0dda-4ec0-aec8-f44708d2bfa4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "64b2d703-4088-40a2-b60b-d8e32cb6139d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2607629-681c-402e-8e84-0a65438cf120",
        "cursor": {
          "ref": "1b709918-2d75-4193-b4b7-153d7d4155a4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e015b034-4059-483c-8cac-213cf9bff301"
        },
        "item": {
          "id": "a2607629-681c-402e-8e84-0a65438cf120",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c43eae2e-3539-4057-8665-c580ecc5451d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a35af09-b099-45d2-b512-2da638025c6f",
        "cursor": {
          "ref": "8537f461-3afa-429d-a7d5-37ff4594f24d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2ef5789d-2084-4b6b-8757-323d6674710f"
        },
        "item": {
          "id": "0a35af09-b099-45d2-b512-2da638025c6f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c88fe83e-22b7-4128-8580-62ffdbb4324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2423eb46-e5bb-4aa7-8527-6990adec9b8a",
        "cursor": {
          "ref": "da9346d5-c14d-492e-8aec-2f79dac44c48",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "42a05777-4e3d-498c-8fd2-4d3c1d677294"
        },
        "item": {
          "id": "2423eb46-e5bb-4aa7-8527-6990adec9b8a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bed2755e-4170-4c5e-a5ba-0335964bda63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858ea273-204b-474e-b1ce-2a4f37344cff",
        "cursor": {
          "ref": "36fadf85-4fc2-4217-b1c1-8016bb364d2e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "58ca4942-08be-4627-91b4-57baeccbbaef"
        },
        "item": {
          "id": "858ea273-204b-474e-b1ce-2a4f37344cff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae95699c-e8bf-4b22-9807-b55af4bdbf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a94aa1a-7c14-487a-8d23-d01600b6c4c1",
        "cursor": {
          "ref": "693abfa0-1599-485a-bb96-510e2f37d0d1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "96b4da98-08c8-4f34-b283-4e7fea6ffacc"
        },
        "item": {
          "id": "9a94aa1a-7c14-487a-8d23-d01600b6c4c1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "53c0a969-3398-40aa-b6aa-656135652f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ae7197-fb5d-48b1-8e94-fc7313fa4833",
        "cursor": {
          "ref": "a1f96462-6e32-44a9-b43c-7f145e464d66",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bb9ee105-a112-4a3f-8fa4-ac8923ad4de8"
        },
        "item": {
          "id": "19ae7197-fb5d-48b1-8e94-fc7313fa4833",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4c0adf41-795a-460a-a019-80221f00710d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b057f0-67e9-49d2-ae07-dcb59be13455",
        "cursor": {
          "ref": "8ee1d153-500c-4563-91ae-cf83154ab91b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "58a863c6-65a6-4c8b-a576-a6655cc2ce98"
        },
        "item": {
          "id": "65b057f0-67e9-49d2-ae07-dcb59be13455",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "86798927-6d83-4ace-b46f-e64b2bf39237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd19a8d-240d-4e98-a1aa-1105a1714f88",
        "cursor": {
          "ref": "16f7fb2f-fa53-417f-9170-5acee00a55d0",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "550f82f7-4dce-4dc1-87d7-631cd64be021"
        },
        "item": {
          "id": "1cd19a8d-240d-4e98-a1aa-1105a1714f88",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fe9c5e7a-4648-4f30-87ee-e072b23c87bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0964690-114a-4878-99d3-157c8e175d1f",
        "cursor": {
          "ref": "244b00d9-d44b-4dd1-8a51-7c194cd214c4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "92c190bd-8430-4ea5-b4e2-063fb6529dec"
        },
        "item": {
          "id": "f0964690-114a-4878-99d3-157c8e175d1f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "033d7ff2-a8b9-4e42-b173-7e0195baf5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a934f7-d871-4257-8b1a-a62666616dd1",
        "cursor": {
          "ref": "4e2dfe45-9530-45e5-ade2-49ba4897e634",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "02ff2ea9-7cca-439c-b661-d7690516635f"
        },
        "item": {
          "id": "92a934f7-d871-4257-8b1a-a62666616dd1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c41da507-7728-452a-8728-51082142b1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815002f3-2369-4d01-b89a-4bbb71a43d0f",
        "cursor": {
          "ref": "3294e039-542f-4dea-b961-ab9f090c3040",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aab4ad10-fce2-4b56-a046-072b42d73fb1"
        },
        "item": {
          "id": "815002f3-2369-4d01-b89a-4bbb71a43d0f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "079b1813-081b-4ae4-9f0a-f65d09109968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aa46f7-2811-4038-9811-236b1df900f1",
        "cursor": {
          "ref": "08486d07-e8d1-48e0-a4e9-cf978934a667",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bc1acc98-5585-44ca-9670-ad8ebe010635"
        },
        "item": {
          "id": "a8aa46f7-2811-4038-9811-236b1df900f1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "46ae55bb-c4a7-46f7-aaf8-9f13379f0c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4d4f18-18c6-4c37-82ad-16cd7baf34ea",
        "cursor": {
          "ref": "e058c4c5-5568-46d1-889d-0e6c2da0b51b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "50e53ac1-c768-4a5a-898b-34064416714b"
        },
        "item": {
          "id": "7d4d4f18-18c6-4c37-82ad-16cd7baf34ea",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa1f70a7-4eaa-438d-ac6a-e5bdf06069b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae682e61-5b2a-4238-a9fe-f698ee8efc54",
        "cursor": {
          "ref": "8df58962-9e7c-483b-910a-95d6ed72518d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eae9e8fd-b4ab-4c30-baa1-692ffd4f3586"
        },
        "item": {
          "id": "ae682e61-5b2a-4238-a9fe-f698ee8efc54",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "21f79140-c650-452b-b184-df01a9bdd421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65d2c6e-f4e9-4404-a869-a2504e44f81c",
        "cursor": {
          "ref": "fc5aa17e-dd22-47a6-8f5e-35fb84bf6135",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ab03d4ad-a11a-49be-8354-67eace398b48"
        },
        "item": {
          "id": "f65d2c6e-f4e9-4404-a869-a2504e44f81c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b1a76780-bd13-4634-b577-8a5f184137d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89be07c4-8a3b-4d2a-afb9-400ee186ee2b",
        "cursor": {
          "ref": "0112914a-f9cc-4318-863e-ea3781b108d9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a8d584ef-09c0-45fe-9395-941550c19f58"
        },
        "item": {
          "id": "89be07c4-8a3b-4d2a-afb9-400ee186ee2b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1a9648b6-f905-40ba-9b58-977e42a735a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0873332b-6ad3-4b3e-8e54-d750634a565b",
        "cursor": {
          "ref": "3f1d86ab-de41-44a7-99bc-f6b3a41568e9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "965b395d-3f9f-4299-99b3-78a1fe170b8f"
        },
        "item": {
          "id": "0873332b-6ad3-4b3e-8e54-d750634a565b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bca4d12d-5245-4a85-a336-ba1bff0b9ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccd1eaf-414a-4b52-8f11-3d3c63337ae7",
        "cursor": {
          "ref": "97729c30-4c2a-494f-a780-59512e0d7d2c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4943b2d9-f978-47c5-bf32-3d831d65a097"
        },
        "item": {
          "id": "8ccd1eaf-414a-4b52-8f11-3d3c63337ae7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "03b81e8f-84cd-4ca1-8bab-b11c39a3010e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa41ab30-0fce-4d08-8ee0-06ffa3dced88",
        "cursor": {
          "ref": "ed3bffeb-bf61-4a96-bd97-c0b5ce568602",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dd44cfbd-c24b-47a7-ae78-e083520e959b"
        },
        "item": {
          "id": "aa41ab30-0fce-4d08-8ee0-06ffa3dced88",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "331ea14d-3f19-4a43-b88d-49dc0e7d482e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e8a66f-0bdd-4021-aebd-aab72cb95a89",
        "cursor": {
          "ref": "68384732-0403-444e-8c9f-391d0e893703",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8fcf6378-3e02-4cd7-926e-991ca0a43742"
        },
        "item": {
          "id": "00e8a66f-0bdd-4021-aebd-aab72cb95a89",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a54fbc6f-3d86-4d81-ae64-560b49990061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eda01e-9074-4e68-a2e3-14e07053debe",
        "cursor": {
          "ref": "ff2778a0-bdf8-41ad-a455-24a5de2990e5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0c4c6375-8084-465b-8e8a-7cc0c6360771"
        },
        "item": {
          "id": "c4eda01e-9074-4e68-a2e3-14e07053debe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1d1d924f-d3c7-4be9-99d9-4d483b35df6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0f0127-b244-4c60-b1c3-ed45a5c753a5",
        "cursor": {
          "ref": "4ddebf51-4c1b-425d-9237-a6bf232cedda",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b2b1036a-d450-4e1f-b765-5c94eb5dc8ca"
        },
        "item": {
          "id": "8d0f0127-b244-4c60-b1c3-ed45a5c753a5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8ea879d4-9d41-48ad-b3e9-1ce3e28ce9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56ab21d-3a88-4b18-ae0f-821aa25c037d",
        "cursor": {
          "ref": "8852ffe2-8bbf-4111-a95b-264e14abf7ed",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2c6b6b57-d426-4505-9a32-cf11ee3b1daa"
        },
        "item": {
          "id": "c56ab21d-3a88-4b18-ae0f-821aa25c037d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c1c8c21e-ad20-4207-ac46-1f72e1b7fb5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ceeb92-2e6a-43c5-8ea8-e802fbd29bdf",
        "cursor": {
          "ref": "b69edb6a-84dd-447d-b670-cfc057e7541e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0d02abbc-f7e1-4751-91f9-7f02b5de5b0c"
        },
        "item": {
          "id": "e2ceeb92-2e6a-43c5-8ea8-e802fbd29bdf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1faa8570-528c-4800-a488-8a7470e5e7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfcc89f-3679-48d5-acc5-fe6decd0ddcd",
        "cursor": {
          "ref": "f9fd95d8-4e6a-4410-9c94-23463e5b1f6c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3892832b-1935-40a5-b3a5-7054a1a654e1"
        },
        "item": {
          "id": "1bfcc89f-3679-48d5-acc5-fe6decd0ddcd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8b2c3923-f2e6-46e5-851d-4c6470764ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2999679c-bae4-46c8-b05c-e9af980ef6da",
        "cursor": {
          "ref": "e1a39fda-7234-4d79-b26b-509df1a4b8be",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "094831ca-af5d-4eb6-adfc-a778644e72b6"
        },
        "item": {
          "id": "2999679c-bae4-46c8-b05c-e9af980ef6da",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "946104e7-8680-4b92-944d-e5e4fc568abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ff4400-9fc8-4e49-a67f-c2abdffc0287",
        "cursor": {
          "ref": "24c0ff93-a963-418e-a314-c6dcf6ece8aa",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "34d7362e-200c-4505-974a-455502b644a7"
        },
        "item": {
          "id": "63ff4400-9fc8-4e49-a67f-c2abdffc0287",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "97e244be-21d9-4abb-be07-f7c8df3c1e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55265b07-705a-47d2-87c5-7b61a4d1603f",
        "cursor": {
          "ref": "7a19ed7e-05a8-4615-a172-d1bd11f7ca01",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e153e962-391a-4377-b64c-9e2c772289d8"
        },
        "item": {
          "id": "55265b07-705a-47d2-87c5-7b61a4d1603f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc5e96ef-4fdb-41ce-8b0f-74fe31c3df2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3e1ee6-0d30-4829-8bb3-400f3aa423f2",
        "cursor": {
          "ref": "750d8748-2a42-4265-b363-7561f726691f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6c361a1f-df74-40f1-adc8-bde4adf5a40b"
        },
        "item": {
          "id": "ce3e1ee6-0d30-4829-8bb3-400f3aa423f2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1a0f704a-d5c2-449c-965d-67d644a02c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ddbda1-897b-44e6-bd4e-917cd126977a",
        "cursor": {
          "ref": "bcdb10f1-acd2-4f13-8229-2a3604dec39f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ab6a6af3-214e-4574-b43f-9a7c99629daf"
        },
        "item": {
          "id": "e2ddbda1-897b-44e6-bd4e-917cd126977a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ffab8682-f631-4de3-b00a-9e58cd40730c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4d0074-0a5d-4764-ae1e-c43ce219bb3b",
        "cursor": {
          "ref": "25c265b9-b448-49c1-ae71-6c1bd5fd24cf",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a8043be1-eedd-4b33-980a-f6ff0f9a7da6"
        },
        "item": {
          "id": "ac4d0074-0a5d-4764-ae1e-c43ce219bb3b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0341c7eb-f7c0-4d46-bcb1-fe15b07e9eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdf6f79-f11d-4611-81c6-d012a6259135",
        "cursor": {
          "ref": "dfc998f0-33c0-486e-b7fe-6cdd6b9977c6",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1e8d20c5-f631-4c53-803f-ed2a3e69b2bd"
        },
        "item": {
          "id": "fcdf6f79-f11d-4611-81c6-d012a6259135",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "12f28436-37ae-41e1-84f9-aead533b7630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebeb0ec-96c1-4ddd-8ce6-a048bd599e7b",
        "cursor": {
          "ref": "1d20a97f-a707-41f8-8f23-c5880940990e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "75a7da9f-8712-48c5-9ab8-e10770919000"
        },
        "item": {
          "id": "aebeb0ec-96c1-4ddd-8ce6-a048bd599e7b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "115dc757-b1ea-4955-b349-ea8773a5be47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb42080b-e551-4260-b91a-24d356f0e30a",
        "cursor": {
          "ref": "091ec29f-1359-4f7e-9fb7-786282c0b646",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2f35d35f-628f-4b33-9723-71fbd6034e43"
        },
        "item": {
          "id": "fb42080b-e551-4260-b91a-24d356f0e30a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "05051b2a-a09b-493d-a617-0dfdd5e8a452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6b30f3-7f80-4175-8a81-170e4b38713a",
        "cursor": {
          "ref": "c2e5bcc8-09b2-4edb-8c95-72194d75cc02",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c7f927d2-d470-47e1-b733-93b5cae46f8b"
        },
        "item": {
          "id": "9e6b30f3-7f80-4175-8a81-170e4b38713a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b1d667b2-aebb-4dd9-a27b-5051db220ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162c102a-8334-4538-ad32-103e56e137d1",
        "cursor": {
          "ref": "72ed8fd0-e228-4b31-82d7-5f17acece82f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ac1b0788-818d-43d2-9301-e1495b878e25"
        },
        "item": {
          "id": "162c102a-8334-4538-ad32-103e56e137d1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ca26fa8-8ffb-462e-914f-a6ddd580cd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da57a202-13ea-496e-83cb-c84d1d21d9eb",
        "cursor": {
          "ref": "18895ba8-016b-4604-8a7d-8b185449f607",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aba2c9d3-55fc-48d0-8fbf-e7b7df0b7f6a"
        },
        "item": {
          "id": "da57a202-13ea-496e-83cb-c84d1d21d9eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c4c5f4e-ab7e-4d83-84da-5ea88465bc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d7bab4-6ffb-4d8a-b554-8b77d912e42f",
        "cursor": {
          "ref": "d1d2a5c1-2e10-41fa-a426-24049c6359c7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ceee8aef-bc92-40ec-adcc-ea163c10d573"
        },
        "item": {
          "id": "92d7bab4-6ffb-4d8a-b554-8b77d912e42f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "70da472d-37ff-4eeb-a17a-c1f7a4095f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd6b7d4-8ca7-4996-805a-e3b29532d473",
        "cursor": {
          "ref": "82eff307-4bfa-4bcf-a4fb-bd6b8c366489",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c6b57574-2150-4fe3-ac3b-7cc038228db7"
        },
        "item": {
          "id": "0fd6b7d4-8ca7-4996-805a-e3b29532d473",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3d38697c-c093-47b0-b6d1-4c5d6e492b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1247cc4d-b9bf-49c1-82c0-d447b185cbd3",
        "cursor": {
          "ref": "dac96026-8b1b-4302-8a46-554363bae21e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "43bc62ae-2655-483b-ada1-1942abb36e0c"
        },
        "item": {
          "id": "1247cc4d-b9bf-49c1-82c0-d447b185cbd3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "af6ab31b-e2dc-4b1e-8913-ed2a4e9d44d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eeadb47-e4e4-40a6-a48c-8b8af750aa07",
        "cursor": {
          "ref": "0b2b74ab-247f-4a5e-b5aa-2f3edaaf3d0e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6cc697a8-971b-4e00-ae0c-c11d9838f9b8"
        },
        "item": {
          "id": "2eeadb47-e4e4-40a6-a48c-8b8af750aa07",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "690a46d6-e87b-4316-8fc5-c2e70a93646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1729d7ca-a588-48bd-b6f4-9a29e1ec9506",
        "cursor": {
          "ref": "83b32389-8a4b-454a-bd70-28e4402aac10",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4688c5e9-8a96-4bd2-a021-3b854b98d10b"
        },
        "item": {
          "id": "1729d7ca-a588-48bd-b6f4-9a29e1ec9506",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "25ffbbc4-7cfd-4754-9397-fcf8a9227377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1801fa5d-bbbb-4da4-bf92-e8b0ececfff2",
        "cursor": {
          "ref": "ac58d130-ca1a-46f7-9174-67a4b21ab195",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f2932d30-bac4-4db6-bf4f-757d1337005d"
        },
        "item": {
          "id": "1801fa5d-bbbb-4da4-bf92-e8b0ececfff2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4201ce14-6132-42ef-b79e-0bb44b40dcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d619e118-1acf-4acc-9d18-9fbd5b86fa69",
        "cursor": {
          "ref": "c0a79c81-cf00-4205-8553-61c2dbbefdd5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e647768e-fa6c-428b-a9ac-88702a5c1122"
        },
        "item": {
          "id": "d619e118-1acf-4acc-9d18-9fbd5b86fa69",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e36e9360-09bc-4215-b5c4-c9a624ea2e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b07ae5-4189-46ff-becb-dde2f516d9af",
        "cursor": {
          "ref": "6acf0798-0c24-4615-a11f-cff9c3744498",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "379a7a66-8889-48e9-9244-03974c66426b"
        },
        "item": {
          "id": "e1b07ae5-4189-46ff-becb-dde2f516d9af",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0686afcc-4f92-41bf-aa39-3a6251dcb280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c199ac93-580d-4c90-9db8-a159134238bf",
        "cursor": {
          "ref": "e585c049-bc06-4d0c-9870-5b17feccecd7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "068bb294-9417-47fa-862f-17eeb00a5fde"
        },
        "item": {
          "id": "c199ac93-580d-4c90-9db8-a159134238bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5d9a102c-4e3c-459a-ac59-32b700dad9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4793282f-25e1-41d9-b515-55635f25c573",
        "cursor": {
          "ref": "6e597b63-b8c5-4a85-a5ed-c7af76889cbf",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ed46084e-42f4-43ca-8dc5-51e5ae0c4b25"
        },
        "item": {
          "id": "4793282f-25e1-41d9-b515-55635f25c573",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7ab18120-1f21-4dfc-9928-cf697b25bce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f943da-d9bd-460c-b96d-5fb14924f3de",
        "cursor": {
          "ref": "2f28c0e2-5771-45ea-bfa8-e3e1ce2093bb",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e89ac00f-67af-4912-92b0-a7e943b485a9"
        },
        "item": {
          "id": "86f943da-d9bd-460c-b96d-5fb14924f3de",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c549f65a-b514-4fe4-90d4-58f7800bfc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dce120-9871-44e5-bb2b-5eca386e381a",
        "cursor": {
          "ref": "295bbbc0-ea9b-4304-844c-351071f760ef",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c6ebf63c-9b29-432a-8865-925e124fa1e8"
        },
        "item": {
          "id": "d3dce120-9871-44e5-bb2b-5eca386e381a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "66e0dbaf-5ae0-42bb-b5c2-cdc3e76eb2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b042bc-7e99-46d7-9573-f79850a1a34d",
        "cursor": {
          "ref": "b3940b36-cbff-40c3-ba5a-b5ae43f86a8b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "41c8a136-0641-4f84-9653-3ca6773e5e56"
        },
        "item": {
          "id": "91b042bc-7e99-46d7-9573-f79850a1a34d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c3a7f199-c1db-483f-a812-31f6fe326b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34ac498-67e1-45cc-b6b9-a97ed438e7cf",
        "cursor": {
          "ref": "adfdc456-f462-47b6-b629-7d8c26188df9",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d4fe0b8d-8ab1-45c5-bcab-fcd3bfa1e5c1"
        },
        "item": {
          "id": "e34ac498-67e1-45cc-b6b9-a97ed438e7cf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9f7e43d4-5b84-4b74-b1e0-d04f1c9b4c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a9b195-48e5-4d90-9e87-3288608c0826",
        "cursor": {
          "ref": "6166add4-51ef-4b1e-b5c5-9ac71c80f4c9",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c8627f22-cd83-4cf4-a3af-f80f48119e22"
        },
        "item": {
          "id": "f2a9b195-48e5-4d90-9e87-3288608c0826",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "739a6ed2-59af-44ae-8551-e92f71382b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f026b1-ae28-4107-87f5-04ec1dd4f17f",
        "cursor": {
          "ref": "99301119-15cc-48d8-8b41-9d30b648ba7c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "070ae22f-e131-4a41-b810-70448624d100"
        },
        "item": {
          "id": "77f026b1-ae28-4107-87f5-04ec1dd4f17f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1899cb2f-74fd-49a4-ae54-5fa61a76e572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05de1481-8e08-45be-8818-c292de45aaab",
        "cursor": {
          "ref": "932d5564-ff40-4994-977a-f7bd8454c02d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c5f3a454-c410-48d5-88fe-4b427f85ecdc"
        },
        "item": {
          "id": "05de1481-8e08-45be-8818-c292de45aaab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c6414f0-654e-4faf-a488-4e0b52f49bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b5cca8-c884-453f-9ea0-d984b565ec89",
        "cursor": {
          "ref": "be55de91-82f6-4e42-bb7f-4d2b6bb3bf33",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "82281441-8cf2-425c-85f2-83f0564f15fc"
        },
        "item": {
          "id": "c8b5cca8-c884-453f-9ea0-d984b565ec89",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "979c0401-a4c4-4bd8-96a8-34c5254019ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832d814-187b-4787-b0e5-ca5e6f61421d",
        "cursor": {
          "ref": "c0bc6749-f1f4-44dd-aac7-d12c0c01ce80",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1d6cf2d7-f26b-4e6f-b375-779e88a948b9"
        },
        "item": {
          "id": "c832d814-187b-4787-b0e5-ca5e6f61421d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f493262d-0360-41da-b635-b2dd30401d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60c6a0e-1360-40d5-a28f-58e3dd1d89e0",
        "cursor": {
          "ref": "fda4e995-9f14-40ef-821e-282be0a899b9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b652c74d-7f50-4b25-b33b-f7ae7bdb9eab"
        },
        "item": {
          "id": "d60c6a0e-1360-40d5-a28f-58e3dd1d89e0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "46a63bda-d28f-4509-b7f8-deafcdb4131f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f9fc31-0c7e-4095-b540-bdb347a0ffc1",
        "cursor": {
          "ref": "699ce0b1-cd2f-438e-8a2d-f1300294662d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bc1447b3-b01c-48d7-bd78-e63a02da6068"
        },
        "item": {
          "id": "d5f9fc31-0c7e-4095-b540-bdb347a0ffc1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "91597a3d-ede5-47a0-af89-a10b112fbf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f1d159-8e5e-40d0-b980-52c8708981ea",
        "cursor": {
          "ref": "b0405a3c-c51a-4894-a7e4-b3e9755c228b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a9ef9515-ae32-469c-ab67-1d51fa6a308e"
        },
        "item": {
          "id": "d3f1d159-8e5e-40d0-b980-52c8708981ea",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "14c212c8-c626-4b90-a29f-7a00dc283382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c2b7bb-de9d-45c0-b3ba-e59340c9b0a5",
        "cursor": {
          "ref": "cf3be87d-5da7-44fd-9f86-3de2fd8d2a4a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ee269382-efc1-456d-aef4-e8facb0c8792"
        },
        "item": {
          "id": "60c2b7bb-de9d-45c0-b3ba-e59340c9b0a5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bc09323c-c875-45a2-b958-4cf4f322efad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cab31bb-cf6d-4673-b7e2-cdc415634b23",
        "cursor": {
          "ref": "0eab2710-03b8-4c6f-891a-7b73bb095ce2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4ae513b2-b0c7-4008-9830-de42736c3b40"
        },
        "item": {
          "id": "5cab31bb-cf6d-4673-b7e2-cdc415634b23",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7db9e742-d2bf-4031-9b39-e816a6eff36e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd59c373-f1b9-4a3d-87db-72f81c9535fa",
        "cursor": {
          "ref": "6a374666-84e9-43c3-bf23-c6e7f591735b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9ddeff39-9e41-49dc-8ea6-887b0ec2a570"
        },
        "item": {
          "id": "cd59c373-f1b9-4a3d-87db-72f81c9535fa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9422d82e-990a-43b9-8127-ae786b768043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc28fcf8-e55d-4a11-bbd6-571949ab8888",
        "cursor": {
          "ref": "14c7a662-8b7c-44aa-98e3-b9e155bb2490",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a4f3acd0-f15c-4709-b66c-0b8a86906f92"
        },
        "item": {
          "id": "dc28fcf8-e55d-4a11-bbd6-571949ab8888",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "05a8ba90-d688-4fbc-9f33-5291f6fb56fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75da19e9-f1a3-4071-bb6a-24f1d14016e7",
        "cursor": {
          "ref": "49617c39-2443-46b5-813c-804498ab7306",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8106430b-ba30-4e97-86cf-115a1221ac4c"
        },
        "item": {
          "id": "75da19e9-f1a3-4071-bb6a-24f1d14016e7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "af1d6903-d9c6-4745-a7e8-b0c0bcff2487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a41867-1e00-4d80-871a-48c421079399",
        "cursor": {
          "ref": "02e25073-3d7c-4b67-b498-b3c13cafcd45",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "66091baa-3ca9-491d-a841-24284569292e"
        },
        "item": {
          "id": "12a41867-1e00-4d80-871a-48c421079399",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a20be7e9-19d3-42ec-88f8-b7056f9c791f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af105339-488b-4b08-9a83-b442a99b3602",
        "cursor": {
          "ref": "84724e55-1520-4922-8e8c-36d6e662d2c0",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7a09ed4d-db38-40f4-84cf-3b9fdccdc244"
        },
        "item": {
          "id": "af105339-488b-4b08-9a83-b442a99b3602",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1b632e69-9a68-41fc-9202-7b1c35a888ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda1d0e9-df39-4752-8395-dcedf2b50c4b",
        "cursor": {
          "ref": "708c8a88-b3cb-4182-b586-fc835af59008",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "06f827bb-c713-483d-aa54-5363421ca48d"
        },
        "item": {
          "id": "bda1d0e9-df39-4752-8395-dcedf2b50c4b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dbeb448b-f4e7-4d2b-b019-6e4b54817262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f6feef-e526-4e5c-95ab-11ffc8f2521b",
        "cursor": {
          "ref": "1b9aa4d6-6364-4d7b-8db1-a44ef4e6412e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "93838880-146c-4bd8-8a68-89d76440e20d"
        },
        "item": {
          "id": "49f6feef-e526-4e5c-95ab-11ffc8f2521b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b854b2ec-33e4-4191-a9d9-50d8dd1357fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a2f986-b75a-4c8b-bca6-914b44cf30c5",
        "cursor": {
          "ref": "2fcb29fc-7e85-4213-b1ab-854e2fab1f5e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7e8850f2-f2e0-419c-b3e2-5957b8e6708e"
        },
        "item": {
          "id": "87a2f986-b75a-4c8b-bca6-914b44cf30c5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0a62bf3c-13a8-4faf-848a-d7cc0ae07260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbbe423-c2b7-4a23-89d8-a4a9f8bb6970",
        "cursor": {
          "ref": "c949b38c-8637-44f9-a598-5549a83dd81e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "04f55b5f-4639-48f2-8bf6-d0446909dda1"
        },
        "item": {
          "id": "3bbbe423-c2b7-4a23-89d8-a4a9f8bb6970",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "02cc6317-c6de-4781-9d4d-3cdcffd48d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3badbe-5f6d-4284-b6b9-831496fe3788",
        "cursor": {
          "ref": "899333dc-b187-4748-86fb-a3b72226485a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d4b1c361-76fc-4cd9-8c59-8b84b5f1b145"
        },
        "item": {
          "id": "9f3badbe-5f6d-4284-b6b9-831496fe3788",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8bdb6e65-2fdd-4849-9670-2814e35ff9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfe3a81-bdde-404b-aafe-8e69cadf5c50",
        "cursor": {
          "ref": "3d5ca1d5-7637-4f4c-85f9-db60d62bf3c5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "99e8220e-27a7-4491-b1df-71909260ba31"
        },
        "item": {
          "id": "bcfe3a81-bdde-404b-aafe-8e69cadf5c50",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d687a632-d175-4aa2-80f4-1fdffe6e7aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6381920d-8c83-4445-a283-4430be65b86a",
        "cursor": {
          "ref": "8266acd9-f631-4309-8bc0-16f75d3f1db0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "aaf552fe-c130-449d-8f0e-92e519d872ac"
        },
        "item": {
          "id": "6381920d-8c83-4445-a283-4430be65b86a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "157882ef-be3b-4650-8c26-0dac5f44d6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f884dea3-1649-4712-b851-5ffd3792833b",
        "cursor": {
          "ref": "0a0371a7-4814-4b7e-beb3-183e007a5deb",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f8490476-5c58-45d1-bb49-b27f4a0a5b7a"
        },
        "item": {
          "id": "f884dea3-1649-4712-b851-5ffd3792833b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5e2a1fa0-8e3a-484e-802c-db5742d41981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10415c13-5a33-463d-979c-d29a7d1192d5",
        "cursor": {
          "ref": "bacde96b-7506-4e6b-99b1-979bfb211101",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c6189a38-18ca-482b-9816-dec55c14e49e"
        },
        "item": {
          "id": "10415c13-5a33-463d-979c-d29a7d1192d5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bf5f8e5a-0be8-4fc4-a77d-c7660dbd3452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3b03b6-aab5-4020-befe-438c67a58332",
        "cursor": {
          "ref": "a4f8ad0f-d143-4c3b-91cd-42a028b189f5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e7e3dc24-a899-4ba5-84f2-e41ddeecb3f4"
        },
        "item": {
          "id": "9d3b03b6-aab5-4020-befe-438c67a58332",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "82631925-891d-4242-a74d-bf398282adfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cdef14-d5c7-425b-94a8-2ce8651f7f05",
        "cursor": {
          "ref": "5bf38660-d964-47eb-ad69-356dc4ecec37",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dd90fe69-011c-4fcc-aa1c-4c0fd80b4ba4"
        },
        "item": {
          "id": "28cdef14-d5c7-425b-94a8-2ce8651f7f05",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b5b7d48f-20e9-46cb-b86c-081e1460bd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f1b9f0-4aa9-47e1-a326-2c39879e2463",
        "cursor": {
          "ref": "fb1a4f68-5719-48d8-92f6-f0ecb2b1b1ef",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "806bc5c4-573a-4d09-834a-2b7934e5070f"
        },
        "item": {
          "id": "27f1b9f0-4aa9-47e1-a326-2c39879e2463",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6de5cc10-f488-429d-9012-460b244aca18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2467cb-5b23-4514-bc84-b6554a876f2f",
        "cursor": {
          "ref": "275278a3-3ddc-4cf2-b5a6-4038f470a6d8",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7f9a8bab-ba60-4752-8db3-472ff29faeef"
        },
        "item": {
          "id": "5c2467cb-5b23-4514-bc84-b6554a876f2f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "719e3247-5b39-4ac2-87b8-2a47b05dd25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8e9829-6059-4636-b072-1b87863e5198",
        "cursor": {
          "ref": "e8eeb6aa-7cef-4fb1-883b-128885d04703",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "710b9da0-bb15-4a47-901c-6919c1770ef3"
        },
        "item": {
          "id": "8c8e9829-6059-4636-b072-1b87863e5198",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "440225f6-8365-4161-a575-21cd0e751739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9679a7c3-e0ba-4de4-ab3d-63709131b045",
        "cursor": {
          "ref": "1c8eef11-70a2-4dd2-85eb-3dfcd1ab7d37",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a570311c-7a12-45c7-96af-255cc37ece41"
        },
        "item": {
          "id": "9679a7c3-e0ba-4de4-ab3d-63709131b045",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8f10e85b-4c0d-4314-a723-0790751b2a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ae3ceb-8f13-4c4c-903f-da800a0194b0",
        "cursor": {
          "ref": "30abf835-4054-4792-b620-d5e2097b6082",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d5ff595c-77b4-406e-bc7b-7d8858b123c3"
        },
        "item": {
          "id": "f7ae3ceb-8f13-4c4c-903f-da800a0194b0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "32dbabeb-c108-4de4-aff8-c80891d4f8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc464cba-1f50-43b5-920d-f23cb57f736f",
        "cursor": {
          "ref": "5a2645f3-502f-4255-ab30-afbdff4c970d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "af6f10dc-30ce-452c-b228-88af071c5f68"
        },
        "item": {
          "id": "bc464cba-1f50-43b5-920d-f23cb57f736f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "43df1d24-e82e-483e-b715-ac431f23dfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97cc58d-63b7-4e12-9ca7-a15320103e99",
        "cursor": {
          "ref": "8fc43695-eeca-455a-ab25-0d390efeef14",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1fce8150-2280-4b60-92c4-a1019a3850a2"
        },
        "item": {
          "id": "b97cc58d-63b7-4e12-9ca7-a15320103e99",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f2c7db97-a31e-4db9-b326-5b13c3b4e893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f22a89a-3832-4752-aaec-3381e96d26dd",
        "cursor": {
          "ref": "7e88126c-4e5e-42a4-92c4-1cd9a5df66e3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5ae5dd1a-ab54-44d0-b998-6abd60a8b6c0"
        },
        "item": {
          "id": "4f22a89a-3832-4752-aaec-3381e96d26dd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "38a4348b-0045-457f-815c-b63eb1331412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec7e7c6-6507-48c0-917f-6b12c8caf382",
        "cursor": {
          "ref": "8dfe13ab-7b44-4b96-88e6-8bba9bc57807",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c3b39dad-9541-4d08-acb1-dcc93ab39c1f"
        },
        "item": {
          "id": "4ec7e7c6-6507-48c0-917f-6b12c8caf382",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "066309bc-313c-4e58-b4b7-7aba39d2277c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf88c55-ba8e-4c72-b82c-a93f31466494",
        "cursor": {
          "ref": "ccc8d0a5-9c58-4afe-9888-23297402b5c2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "474eda44-86a1-4ca2-a8eb-896567e045b8"
        },
        "item": {
          "id": "daf88c55-ba8e-4c72-b82c-a93f31466494",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dd5b95f0-9f75-4309-bf5a-fa0c6a2db15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfce544e-0a17-4805-9b4a-be732e71a2ff",
        "cursor": {
          "ref": "d4f84729-eb58-4a1c-852b-4ce014db2c43",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e96ec7d2-5179-450d-b9d1-ec8efb64c5dd"
        },
        "item": {
          "id": "bfce544e-0a17-4805-9b4a-be732e71a2ff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7c22ec64-ef88-48d6-b923-db785946ad09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16336ec-b04e-45a3-aa0c-4ec1c8af4943",
        "cursor": {
          "ref": "2b2042f0-e113-4e9b-95d7-d72fb5bf4daa",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "94dfba23-759e-440e-8990-a04c763ba876"
        },
        "item": {
          "id": "d16336ec-b04e-45a3-aa0c-4ec1c8af4943",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f78dc0b6-b035-4d65-a634-9752d55c9423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e8e4a9-8b70-4a31-b1e9-2eaa674a6839",
        "cursor": {
          "ref": "8858c8c3-947d-40ae-a8db-b9b3c9740f80",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f7cc956e-aca3-4ee1-a0cc-f0bb319f4622"
        },
        "item": {
          "id": "12e8e4a9-8b70-4a31-b1e9-2eaa674a6839",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e562130b-a8c6-4674-a304-3aa3b597e8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f571e8a-ac2a-4fcb-9957-b9f359d1ade7",
        "cursor": {
          "ref": "6142a621-950f-4ad7-aa49-59a8ac16e27d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "69808d43-b5d1-4ba9-9e9d-260dbe770887"
        },
        "item": {
          "id": "7f571e8a-ac2a-4fcb-9957-b9f359d1ade7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "03dc5e6e-0f1f-44a9-9e53-9231821d15ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafabddd-74e1-466a-b133-d3fe8625a90c",
        "cursor": {
          "ref": "04c25dde-a71f-47a6-afa4-5fa06308aa60",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c89678ac-8063-433a-89b8-ad1582d43410"
        },
        "item": {
          "id": "fafabddd-74e1-466a-b133-d3fe8625a90c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d6f690cb-4a2f-46c3-99ac-74b8b283dbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1c474b-7246-46e0-93e5-19a1f4a102fc",
        "cursor": {
          "ref": "3fb4dcdc-f779-47b3-9c04-7d06db7a978e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ca308022-76cc-43d9-b44c-96d1bbf126c6"
        },
        "item": {
          "id": "ca1c474b-7246-46e0-93e5-19a1f4a102fc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "36be70a8-4b28-47cc-b45a-ea9753c6889b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c8090c-2bb8-48e7-a3c9-75d1c84d9d5c",
        "cursor": {
          "ref": "cb33643d-485f-4a31-b637-405936ecc296",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "286763fe-8cf0-4b8b-8063-8c5627e587ec"
        },
        "item": {
          "id": "b1c8090c-2bb8-48e7-a3c9-75d1c84d9d5c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ef53dc38-9a49-4e92-bf36-3e7e70f2edf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218ccdba-d9cc-43f7-9f43-a5dd52a5b42b",
        "cursor": {
          "ref": "af122082-5981-4385-a166-f8f14ac14f53",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8378c83b-a263-47ba-82cd-54017ba58c19"
        },
        "item": {
          "id": "218ccdba-d9cc-43f7-9f43-a5dd52a5b42b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c2d4c43a-9bac-440e-a321-c9f53d7bdc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164b4cbc-8f2a-48fb-aa77-b265c257afbb",
        "cursor": {
          "ref": "6da49fb4-aa01-4fc4-8764-b5acd4d05c92",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "063be63d-f001-41b3-a873-32af46e80802"
        },
        "item": {
          "id": "164b4cbc-8f2a-48fb-aa77-b265c257afbb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e6a24625-f92d-4433-93ce-1eaa99f9e284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07984b19-f015-462d-8a7a-1d951ccfcaf7",
        "cursor": {
          "ref": "441dce82-fb04-4cfe-a271-a3a3a1a2ca10",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "550ea5e7-7ab9-4cf7-b3c5-e49fbd2d0271"
        },
        "item": {
          "id": "07984b19-f015-462d-8a7a-1d951ccfcaf7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f89de8fe-dc08-4f3e-b014-6f8932c9e582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c87f4b-89d1-401f-b41f-053d96fdbe9e",
        "cursor": {
          "ref": "9b177cd7-4691-4404-a1ba-9e4d30143093",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9630e681-8a98-47fd-aa73-18200fea97c0"
        },
        "item": {
          "id": "79c87f4b-89d1-401f-b41f-053d96fdbe9e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "240799a6-2f2e-4100-a235-24a0f87df751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179fc20c-8165-45eb-bf12-ad4360462eb4",
        "cursor": {
          "ref": "6099c878-b0d2-447d-bb1f-eac38446f493",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "33b34140-0e57-49a6-9f22-0afe3fec84b2"
        },
        "item": {
          "id": "179fc20c-8165-45eb-bf12-ad4360462eb4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "503f62ea-2488-4b29-a6b0-ec0e4773e9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059683bb-7946-4119-9311-3d914cf68e52",
        "cursor": {
          "ref": "61438014-e0f1-47e1-ac23-dba800f791be",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1dd7c915-01d0-457b-9398-a279b37e54a6"
        },
        "item": {
          "id": "059683bb-7946-4119-9311-3d914cf68e52",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ee16a4d9-4078-4f61-b51d-05553f4e7053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc5a371-8dd0-49f7-a6d1-28b0042d181e",
        "cursor": {
          "ref": "ee74a8f8-57cb-407d-817f-2d08a9a26400",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4979d1ed-93a9-4981-ae51-081d08e7a710"
        },
        "item": {
          "id": "abc5a371-8dd0-49f7-a6d1-28b0042d181e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f12575bd-609e-47cb-bb8d-714597375509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4826987-3785-4456-8ec9-bf617ab2fd4c",
        "cursor": {
          "ref": "1240493c-4fc3-4f20-a189-911a652c2482",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "53867c90-71db-4ce2-af31-1ae844dac678"
        },
        "item": {
          "id": "b4826987-3785-4456-8ec9-bf617ab2fd4c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "aad24764-8c61-43fb-8957-1b0cb20d518c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64ed48a-afd4-4fa1-840b-8141a8bb7065",
        "cursor": {
          "ref": "ce9e4ca6-85d9-4880-b2c8-214ba4f3e35a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8bc197f9-8e3b-4354-90ba-803ec9d3d188"
        },
        "item": {
          "id": "b64ed48a-afd4-4fa1-840b-8141a8bb7065",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "18c803ef-59e5-41bc-be38-92a634719839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5494fe30-459d-44b7-a8dc-e2bd1b357b01",
        "cursor": {
          "ref": "a6716357-69f0-4e9a-81e0-95966e4367d4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "58542d2b-1d13-4758-9ab6-cb97e24ef2c3"
        },
        "item": {
          "id": "5494fe30-459d-44b7-a8dc-e2bd1b357b01",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "01649d45-2d5c-49c3-ad36-d1f4d55c6083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3144466-5bf0-4d4d-b6e1-3c9f56cbbf0b",
        "cursor": {
          "ref": "a64c7d2f-34fd-4866-9e9a-f296c4494134",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d85bc225-b962-4704-a9dc-967a80c56352"
        },
        "item": {
          "id": "a3144466-5bf0-4d4d-b6e1-3c9f56cbbf0b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8486d758-f259-426c-b407-65da584c102e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048ac9bf-b566-48f3-b056-716552e21815",
        "cursor": {
          "ref": "f91ad109-e01e-4b8f-b761-32b0308a2b43",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "835ec945-0a43-4aa2-87f7-3bc01dbe4eae"
        },
        "item": {
          "id": "048ac9bf-b566-48f3-b056-716552e21815",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "29effc8d-3593-421f-ad28-c2bf47730e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d80460-cc0d-4841-a2f8-da191f16f7ea",
        "cursor": {
          "ref": "7b366902-f896-4d30-9a59-558d6de3df5a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8e5546df-15fa-4a2a-aafd-ea559ab1cbc6"
        },
        "item": {
          "id": "09d80460-cc0d-4841-a2f8-da191f16f7ea",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cf92df4f-da8f-44b3-b444-ac0c561064dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea848397-f5a3-4284-af20-ef466211f1ea",
        "cursor": {
          "ref": "b0cc8ce6-316d-47c4-96f3-b36729583a3f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "75e37635-9a1f-4664-bb46-f33cee3d5c27"
        },
        "item": {
          "id": "ea848397-f5a3-4284-af20-ef466211f1ea",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ea175be4-325b-4ddc-ae89-d79e53ac6ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775bb468-86d8-421c-a347-a753ff27e196",
        "cursor": {
          "ref": "36b56df2-deca-4f1a-8794-e3c81c5f97d9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3d4af79d-6ccd-45a5-9dfb-d96e34a0b25e"
        },
        "item": {
          "id": "775bb468-86d8-421c-a347-a753ff27e196",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0b20b80a-5860-47fc-b0fd-a067f37f457b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf33fb0-c7b0-4b03-bd94-ba40a7eb8709",
        "cursor": {
          "ref": "53b60bc4-47cc-4447-981d-9b995c9c8fb3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3c53ff90-6840-4a4d-9fa2-b29ede8d3b45"
        },
        "item": {
          "id": "1cf33fb0-c7b0-4b03-bd94-ba40a7eb8709",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a357b9ef-3d56-4c00-9992-65a4b6a3db1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0e9251-316e-47b7-ac34-158d15275f23",
        "cursor": {
          "ref": "1bd4551f-55df-442d-b5df-037333cc51fc",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "80e4fdc4-1eb4-46c8-a96e-fd8347759f69"
        },
        "item": {
          "id": "3c0e9251-316e-47b7-ac34-158d15275f23",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8cbb9304-9bf9-4bdb-a89e-687a59698195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51d2df3-8df2-4f65-bb6b-4c61a05f48fc",
        "cursor": {
          "ref": "231b5e65-5a2e-45ce-885f-8b339eca7f4e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7c9fd755-42c9-4962-be67-82466bd0bf64"
        },
        "item": {
          "id": "c51d2df3-8df2-4f65-bb6b-4c61a05f48fc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b3cc0ed7-9a2e-4516-b95c-8e80c0933781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca49b9b2-03e0-4e30-bab4-25eecc4fe58e",
        "cursor": {
          "ref": "be2dc749-acb2-416f-b9bb-af83e4e7758d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8c6a93f2-7a65-4080-8913-014a54b3f1a3"
        },
        "item": {
          "id": "ca49b9b2-03e0-4e30-bab4-25eecc4fe58e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8f3f8a14-e697-40b0-8249-b338e12754c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da5c1e6-d68a-494b-bfff-090d408956f1",
        "cursor": {
          "ref": "f1115c67-c6c6-453b-9d5d-c19e1941f9fa",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7054c33c-c4a9-472a-8fd8-476e30d41076"
        },
        "item": {
          "id": "4da5c1e6-d68a-494b-bfff-090d408956f1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e3bf917b-c2ba-4dbe-bd64-31a336c600f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5198af-e515-4d33-9025-11a881637b3d",
        "cursor": {
          "ref": "414ec429-7a34-4a85-baab-b1da2a055108",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "564eae7a-c71b-4650-b1e9-803dfc9ab7d0"
        },
        "item": {
          "id": "2d5198af-e515-4d33-9025-11a881637b3d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4d9f74d-7231-485f-9f08-5f43da8b438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b505803-c0c9-4d14-bf4b-3e1b976bfd8e",
        "cursor": {
          "ref": "9b47993e-2faa-4922-aeed-d74dd1d9c135",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7d0dc13c-5ae5-4cc5-bdea-b42e1f28acb7"
        },
        "item": {
          "id": "7b505803-c0c9-4d14-bf4b-3e1b976bfd8e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "08642319-3117-4b5c-9e1f-e746f6d78a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a7c271-a06b-471f-8de8-0e3d09235005",
        "cursor": {
          "ref": "bae1c4f8-a153-4e62-947a-0bf2e6d0ea4b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "39d2a30e-8289-48c8-9ec9-3ac2dcdd356f"
        },
        "item": {
          "id": "c0a7c271-a06b-471f-8de8-0e3d09235005",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "351301a3-0041-473f-b57f-d5e389e1d506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edd9828-fe23-48e8-acd4-b5bb4a02b149",
        "cursor": {
          "ref": "23f0e32c-5025-4fea-8031-2f84f173a905",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2cbc8af8-d01b-4bd4-b5fa-bdb04fcef1a9"
        },
        "item": {
          "id": "2edd9828-fe23-48e8-acd4-b5bb4a02b149",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4fc0a294-cc23-4e77-8a8a-51e6208475cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00768980-83dd-4a21-affa-39759eea4541",
        "cursor": {
          "ref": "31644c07-6433-4874-81a5-e4a921cd6308",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ec7d3da0-82ba-47b0-a249-81d238280fb8"
        },
        "item": {
          "id": "00768980-83dd-4a21-affa-39759eea4541",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a274be8c-cf23-4cc3-b2a0-b51c99e10e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db6df4a-2257-4ffe-aeb5-c97dacd8a757",
        "cursor": {
          "ref": "34a559ba-b8dd-4659-841a-932c3a9edd7a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2b5bbd38-0091-4656-b00f-8536c94f5c09"
        },
        "item": {
          "id": "1db6df4a-2257-4ffe-aeb5-c97dacd8a757",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2d360c10-22e4-48b9-a032-ad15499bbb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f59539-5816-477e-8325-ea67bd4800f4",
        "cursor": {
          "ref": "b425b3de-b7f2-48c1-918f-a689e01d10c0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1f8d722e-9687-478c-8e14-4eab55140498"
        },
        "item": {
          "id": "17f59539-5816-477e-8325-ea67bd4800f4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "26496fdd-f167-48f4-a980-8dc219b3401b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edf3dfe-a727-4a28-b18b-db2ae9883bfb",
        "cursor": {
          "ref": "6ea156b7-0b40-4925-810a-35cf81310586",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b8af2536-987c-44f3-93c4-dc46f4e726d9"
        },
        "item": {
          "id": "4edf3dfe-a727-4a28-b18b-db2ae9883bfb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8b41497c-4c2d-4b98-b8bd-0bcd3510e603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828a86a3-fba2-486c-8cbf-89c1f23bafbc",
        "cursor": {
          "ref": "710f9c14-bfe2-4dd4-999c-bc14b29783d5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9fe58cf9-474e-4da7-a434-b36c74b6c805"
        },
        "item": {
          "id": "828a86a3-fba2-486c-8cbf-89c1f23bafbc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f2419c31-1896-43e0-98ef-8f472d2376ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a65bee1-b7ff-4d2d-b699-37a0e13632d0",
        "cursor": {
          "ref": "48be7d7a-0ad8-4101-9768-bafc91040176",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "71e39404-0d1c-4554-8950-ad4aa07bd82c"
        },
        "item": {
          "id": "8a65bee1-b7ff-4d2d-b699-37a0e13632d0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "24e42f3d-ce9f-4020-9420-15b2a7c6df97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4863e997-13f4-4855-8b77-b54f0ab4a938",
        "cursor": {
          "ref": "e0ed0c52-daad-4ef2-bf87-dd2392883cc4",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fd3caf51-628b-44ee-a7f5-b33e4b426d0d"
        },
        "item": {
          "id": "4863e997-13f4-4855-8b77-b54f0ab4a938",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bde59f23-4f04-49c3-bcfa-c96cd00f43af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ce0ebc-2e29-4800-8ee8-ff5222a76ff1",
        "cursor": {
          "ref": "175a007a-3950-4dcf-8cc0-32505f4523ed",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c225bee2-a0eb-4533-9f52-3fce73c88827"
        },
        "item": {
          "id": "50ce0ebc-2e29-4800-8ee8-ff5222a76ff1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5140c4a2-7d00-4cc7-a751-e41e72ebe12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9c0b48-92e8-4897-9f23-d6c178360e80",
        "cursor": {
          "ref": "36c30a7c-bc52-4661-9c5d-7721424d2dfa",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2f1c57b0-cc7c-42ad-a1cc-d67eb67462c3"
        },
        "item": {
          "id": "ad9c0b48-92e8-4897-9f23-d6c178360e80",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c5dbd034-650f-413a-a013-202c65d1fd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10734dd-1d7f-43d3-b0e2-1102478ba7a7",
        "cursor": {
          "ref": "9b1142f6-2b9c-4362-8a43-91bd4712c0a0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ce181dc0-c2a4-4b4c-8d80-93ba52d86431"
        },
        "item": {
          "id": "d10734dd-1d7f-43d3-b0e2-1102478ba7a7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2f65b8df-a8c8-4fc9-b271-ae425870aa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fb04af-f9d1-4679-a336-4a06a1feb4de",
        "cursor": {
          "ref": "9a4c4868-eade-4388-b87f-b5d950cbafcb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6b7c1f78-02ba-47ab-afef-1b7209b390f2"
        },
        "item": {
          "id": "32fb04af-f9d1-4679-a336-4a06a1feb4de",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c9c96150-0a97-4de7-be76-5fda412cfbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1ac36b-846a-480b-b95d-1a76183a30b9",
        "cursor": {
          "ref": "2914b99a-b0d1-4180-b035-ed822db2dd03",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b079eaaa-090a-4a24-8ad2-0d2a720ab658"
        },
        "item": {
          "id": "0b1ac36b-846a-480b-b95d-1a76183a30b9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "72df94d9-f5aa-4ac2-8d72-9e799e28d3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97faf923-a4aa-495e-b0f9-66c9b67acc0e",
        "cursor": {
          "ref": "be5173d2-becf-4ff5-af67-fa957a5564bf",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "710aff55-cf8f-489e-adca-1fd13c676989"
        },
        "item": {
          "id": "97faf923-a4aa-495e-b0f9-66c9b67acc0e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "131a3999-37af-4bb8-be6e-e8565e0253ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d3923c-8a9c-4433-a9ca-ed41a5e1d894",
        "cursor": {
          "ref": "5842872a-c94e-410e-a4b5-1bf4adb08efb",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3f7f85ae-8bd3-4c6f-9b21-67fdd29abcda"
        },
        "item": {
          "id": "a3d3923c-8a9c-4433-a9ca-ed41a5e1d894",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d7a1eb12-0cff-46ea-962d-9653cb49d8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3448b5d2-aeec-4d30-bab3-5412065c051b",
        "cursor": {
          "ref": "929a02b2-ea31-444e-9409-7cfceb88c247",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5ca81cec-1f38-4668-b6aa-8d378c9530f6"
        },
        "item": {
          "id": "3448b5d2-aeec-4d30-bab3-5412065c051b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e7f445b4-508c-4143-a53e-750a42806b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a39b4c3-f19d-4bff-9d15-51de0ac7c59a",
        "cursor": {
          "ref": "7ef02bbc-5173-48a7-8906-d762f4678c17",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "acfedbc1-126e-4def-8eba-eabdcd450fcf"
        },
        "item": {
          "id": "1a39b4c3-f19d-4bff-9d15-51de0ac7c59a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5999da19-06a9-4d38-a60b-2a45520551a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fc969a-4542-48b2-9db3-e82cf278cf34",
        "cursor": {
          "ref": "ea1df7cb-170e-4fd5-bf8b-50484d225edf",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "20a61fa8-6194-4262-a62c-76235c7cb2d9"
        },
        "item": {
          "id": "d8fc969a-4542-48b2-9db3-e82cf278cf34",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ad1629fb-6977-4ef6-85f6-7a4b46f93bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8e8f63-9e89-4d86-bed3-f79f403b1823",
        "cursor": {
          "ref": "0047e86d-9c9a-459c-a79c-c66ab724e69f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "89220fb3-62f3-4cbd-99d8-38ac1ba48dfc"
        },
        "item": {
          "id": "4d8e8f63-9e89-4d86-bed3-f79f403b1823",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2c4c241b-a148-4e2a-8dbd-55ee0c806c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae1c3a8-160a-44c4-9d17-5d15aff0357d",
        "cursor": {
          "ref": "47275836-5594-4f30-be05-ed4e03c2d9bf",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c5c39949-fb36-4b6c-bf94-2282cdb3dd1c"
        },
        "item": {
          "id": "7ae1c3a8-160a-44c4-9d17-5d15aff0357d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a9bcc78d-508e-476a-892b-085f1243c6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eb7efc-527e-446e-98f1-a06f4b0b2ec8",
        "cursor": {
          "ref": "a41f8c53-f6c0-4c4d-a6c8-894ccb32a730",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "69a148e0-1560-491b-89d8-2a59da0c89f2"
        },
        "item": {
          "id": "a6eb7efc-527e-446e-98f1-a06f4b0b2ec8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a4ab8560-c355-4b39-97ef-156abf181096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aec93b0-e2a9-4b68-9133-788d0e31b617",
        "cursor": {
          "ref": "ded60094-93de-459b-95b0-12031440d51d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1c6c9ba7-4591-4c67-9dd6-9497f402ea38"
        },
        "item": {
          "id": "8aec93b0-e2a9-4b68-9133-788d0e31b617",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b548232f-8734-4fda-9223-daf126c505fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ae8b0e-f4d5-4fca-926b-a22239d67f05",
        "cursor": {
          "ref": "85866486-dd04-42a1-bafc-c749ab3ccff1",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "01600da4-c1a9-4131-ae8a-573c08388d3b"
        },
        "item": {
          "id": "66ae8b0e-f4d5-4fca-926b-a22239d67f05",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e37f9c92-bcd1-462e-8ee1-105ae0bbb400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba61483-e40e-4994-970f-a929b905eb1d",
        "cursor": {
          "ref": "e9450a05-b988-41d5-8430-c72cfb1afcc0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a08f33af-731f-4d00-b048-413e6099e340"
        },
        "item": {
          "id": "3ba61483-e40e-4994-970f-a929b905eb1d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fbc8430c-85cb-4502-9d25-096e60750861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be72d62-0951-490c-a4fe-771d0c455a42",
        "cursor": {
          "ref": "020060b8-2087-41b5-b1c7-b0d3951d4d3f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1628db75-6488-4eab-a0d3-77b342ff6301"
        },
        "item": {
          "id": "3be72d62-0951-490c-a4fe-771d0c455a42",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f642256d-1c07-4408-b65c-0f28ebc3e506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955afbe1-0632-40aa-b536-91a9c82aab14",
        "cursor": {
          "ref": "feb68f04-6623-499d-b75c-6804cb0a4e97",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dbf2a072-40d3-48fa-95a5-6382ef1ef9cf"
        },
        "item": {
          "id": "955afbe1-0632-40aa-b536-91a9c82aab14",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aa67c19b-a945-4b3e-84c9-e30255d36249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c482389-0399-4cb0-9a12-5f07b58afa73",
        "cursor": {
          "ref": "95c7c767-bef0-434b-8c91-d03b8ac94a9e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "36637aa4-340b-4d8e-bc07-b004e4699ac8"
        },
        "item": {
          "id": "7c482389-0399-4cb0-9a12-5f07b58afa73",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f1d46db7-a1a3-4774-8d9a-48ef5cf4d5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb12c469-9152-4e04-b95b-3083325f797d",
        "cursor": {
          "ref": "85106627-6122-4b23-8152-b6c63e415da3",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c9c5434e-30d6-4f08-aaac-33f53781ef15"
        },
        "item": {
          "id": "fb12c469-9152-4e04-b95b-3083325f797d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "37be3248-5acf-42ae-bb54-20b9179c75eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18af26a-16e7-4be5-92da-bce8617ef1fb",
        "cursor": {
          "ref": "1b1a8a6c-1596-4aee-8eba-ae62e3f21133",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c40b75ca-dc98-49f5-8a93-913fb39446af"
        },
        "item": {
          "id": "e18af26a-16e7-4be5-92da-bce8617ef1fb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1f62aa76-7744-40f6-9316-2808522d1408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be0e68b-c000-4ae0-8a7b-3153b6edbff3",
        "cursor": {
          "ref": "f8035b74-2405-449e-829a-2cf6ca17614c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "531eb80a-498c-4281-9f71-c6a9d07e45a2"
        },
        "item": {
          "id": "6be0e68b-c000-4ae0-8a7b-3153b6edbff3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "604684c2-e1ee-4584-ac6b-526ff1fdbf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258bda90-419d-415f-8f57-430e92c01517",
        "cursor": {
          "ref": "6e22469c-64f3-40aa-90d4-10cb0200f961",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "742f1a95-c43f-40a1-b782-06976d46dffa"
        },
        "item": {
          "id": "258bda90-419d-415f-8f57-430e92c01517",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "88b46338-e670-4b0d-9c2b-234856db5142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618c333b-6ac0-4f4e-aae7-8aa228b87dd0",
        "cursor": {
          "ref": "dd84a1aa-6a66-45b7-a79d-3740111f1438",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f6937762-8d38-460a-93a4-86c3e96f8f99"
        },
        "item": {
          "id": "618c333b-6ac0-4f4e-aae7-8aa228b87dd0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "70d718b6-02d6-40ba-b6c0-47ae12c6951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb87b9a-eb10-4add-84cc-9a1535a3b8e8",
        "cursor": {
          "ref": "b6487656-e20b-4b9e-84fd-6eec5ceafe61",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fae63415-c4fe-4d52-a1cb-0c7138def9b6"
        },
        "item": {
          "id": "edb87b9a-eb10-4add-84cc-9a1535a3b8e8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "44ccf6c7-da73-493d-8ada-70a597537539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b474301-ebde-4ab7-ab7f-8cc9cbe8b577",
        "cursor": {
          "ref": "cba85467-d57a-41a9-843e-efbddb9aedd6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "92c42d64-024b-47dd-b45a-afb250db5c58"
        },
        "item": {
          "id": "8b474301-ebde-4ab7-ab7f-8cc9cbe8b577",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a6374ed-8fc9-4c4a-b7e8-1cbd88ff0def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90b2cee-3b7b-4e01-aa8b-37be8e4bd544",
        "cursor": {
          "ref": "1c1b0a73-d6bb-46ab-a403-96100b0dda2c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "38c30705-2a15-40f4-8c09-33197db8fffd"
        },
        "item": {
          "id": "f90b2cee-3b7b-4e01-aa8b-37be8e4bd544",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e4765130-1959-49ff-865c-dd62aa36adf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f382c2a-c6f4-42cb-9f45-1d514d6b6b7d",
        "cursor": {
          "ref": "ccba38bf-1e82-4712-91ea-63be618797b7",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bf25464a-a383-47db-9cde-45314c1a84e3"
        },
        "item": {
          "id": "3f382c2a-c6f4-42cb-9f45-1d514d6b6b7d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f6b99ce9-4057-4c8a-bb46-e0fd40c69167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4db785-46ab-4c34-bc5e-1b7cf50e1c19",
        "cursor": {
          "ref": "96ae1d60-f6f4-423d-82b1-b440077c0b3d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b9add9b9-a6b6-4618-a3d2-378b4334ee80"
        },
        "item": {
          "id": "8c4db785-46ab-4c34-bc5e-1b7cf50e1c19",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4899c470-0f44-40e0-9d9b-52cf6d67c0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aba96d6-5df4-45af-bf6b-e9fd6dafe837",
        "cursor": {
          "ref": "96a424f9-27f1-46d6-9db9-01104939c342",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d7554185-2e95-4319-a4ac-4dd16bb6ad46"
        },
        "item": {
          "id": "7aba96d6-5df4-45af-bf6b-e9fd6dafe837",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cd318200-e44a-4e40-bae8-2504ac034f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e88dd0a-999a-4b05-84b0-5930bfc1ab14",
        "cursor": {
          "ref": "222a3002-a25a-4d92-b833-ebda75e25fe0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c4578d8d-6497-4730-b3e5-66a0a36c4ee3"
        },
        "item": {
          "id": "7e88dd0a-999a-4b05-84b0-5930bfc1ab14",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e2f6a279-f63e-4eae-9186-34c2c3850a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9291bb69-2241-4aeb-819f-207dd8d70574",
        "cursor": {
          "ref": "77323fd8-511d-4da4-80a5-36a8d9be45d0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "51d3a9af-492d-4fad-89c7-d9d0d52320c0"
        },
        "item": {
          "id": "9291bb69-2241-4aeb-819f-207dd8d70574",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "579464fa-a9c1-4f68-87bd-2b5033924115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf25b8b-ac1e-471d-8089-c5a3f5ab0f3b",
        "cursor": {
          "ref": "1f48d02d-a6c9-4b22-a396-c0d4ff7af13e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4fb4a6ac-53ea-41a1-93d5-32be67fe8d6f"
        },
        "item": {
          "id": "acf25b8b-ac1e-471d-8089-c5a3f5ab0f3b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7560440c-3a87-4d85-a704-d5849f3a8d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a78586e-7df6-4e80-a80d-921e3f401ed4",
        "cursor": {
          "ref": "1f9fd917-cb79-4067-8b25-46e8c33f729b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "aab8e6c8-d7f7-4c0e-9e23-d308f19c6a54"
        },
        "item": {
          "id": "3a78586e-7df6-4e80-a80d-921e3f401ed4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d7a0796-12d1-47bb-a6bd-5be4a9beb839",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf32d57-fe3f-4f61-8da7-c711a9e47128",
        "cursor": {
          "ref": "4485d06c-b08f-493e-a136-569a36c9f4f2",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4b7373aa-0afd-42f0-8178-ca0200c438fb"
        },
        "item": {
          "id": "faf32d57-fe3f-4f61-8da7-c711a9e47128",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ad42ea2b-1803-4085-b08d-2eec6b8b8e75",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbe0f23-5669-4c0c-94c0-9a3ec8c72deb",
        "cursor": {
          "ref": "d516f086-1557-47e2-bd9c-e9f9533f83f5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0fe30556-d417-4867-b9d2-4ab2b83be6a3"
        },
        "item": {
          "id": "9fbe0f23-5669-4c0c-94c0-9a3ec8c72deb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "024d22ff-2593-4ff8-a48b-64ce062e1dde",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa8339e-48b7-4bdf-848d-4d37fe8ea4ce",
        "cursor": {
          "ref": "9236c0f9-6c1c-4dbf-8a38-f92db3f05861",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a54568f6-3bfe-4225-8e4e-9c9a127b1009"
        },
        "item": {
          "id": "2fa8339e-48b7-4bdf-848d-4d37fe8ea4ce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "55ef6db2-2fe1-4b80-8ddc-5624793f0637",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a5e3f3-eb3d-4303-b6e2-bb69c6254167",
        "cursor": {
          "ref": "72a6d35f-a267-4449-ac1a-0db14f42da2c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "97541bd1-96f1-498a-84b0-fd9ebe70777c"
        },
        "item": {
          "id": "13a5e3f3-eb3d-4303-b6e2-bb69c6254167",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59f2786b-c1f6-4bed-a9ab-2f6d203cd2c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a5e3f3-eb3d-4303-b6e2-bb69c6254167",
        "cursor": {
          "ref": "72a6d35f-a267-4449-ac1a-0db14f42da2c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "97541bd1-96f1-498a-84b0-fd9ebe70777c"
        },
        "item": {
          "id": "13a5e3f3-eb3d-4303-b6e2-bb69c6254167",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59f2786b-c1f6-4bed-a9ab-2f6d203cd2c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b16c25e-638b-40e6-bf56-8e13ec414b82",
        "cursor": {
          "ref": "0930a819-cd37-4c40-bb3d-ed50fb08cd09",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "617b1f2a-01cd-46ab-afba-ec23561144fa"
        },
        "item": {
          "id": "0b16c25e-638b-40e6-bf56-8e13ec414b82",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9302d261-2815-4454-98fe-6a4dc9b49e22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28f35e3-d7f6-4198-893f-c19c4297713e",
        "cursor": {
          "ref": "85b91760-46c2-4da8-83d5-6ade296dc6b4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e75d2cc5-36b3-4253-898b-20f06890f356"
        },
        "item": {
          "id": "b28f35e3-d7f6-4198-893f-c19c4297713e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "68d91d7c-0232-4582-9b4c-03932d98ddf1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}