{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6d59a161-7c06-4b37-bd99-8889fce37df4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ee1ac90d-86f5-441c-9d04-7bbeac7d8eb1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "433a9696-ae8f-4f8a-844a-d929727b5c67",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ae52cd47-b02e-433e-8dbb-80d9de57ed48"
                }
              }
            ]
          },
          {
            "id": "6fe228bb-8265-4247-b7e3-63a71f86c397",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3ce0077-7e95-4606-a487-f502d16b67af",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "972c0912-d9c5-49fd-9eb0-f3b0574344d4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8f3dad89-94e9-4b1e-a096-a1d816028d3c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5c9f16e0-1794-436e-9511-35dc153fd5e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8770ba86-e14d-472f-93ee-9af82b06a27b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c734b79c-3900-43b3-b919-473a17392197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f106dd8-2556-49c0-8324-479a38098a31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0254624-af80-46c0-a12e-035df1ba15e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5faebe2c-9c10-455e-a1ef-666d372fcd84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "25fd0f1f-6c4a-484a-a2c7-793305e9ab8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b12d715d-c41d-4f3b-b2b9-047bde40b08c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "004c3b1f-31db-465e-8a12-116f58f8dc37",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cdf3dd94-91a7-4567-9a56-68a77307dcd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f746fb88-7819-4fd9-b847-1e66cc3c4322",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "118588d5-d7a4-4d5d-aab0-30e027b4dded"
            }
          }
        ]
      },
      {
        "id": "be674a1e-a855-4180-8970-7baf5f7bb7d9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8826365f-61a9-4f1e-bd6e-4e244851c3e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3786a8f8-86a6-46fe-9d75-cab6deaf915d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80c6e6d5-76fa-4b17-8201-af8b34d31ca7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82a8630-d4d7-4df2-8390-a89e1dd3c280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "238004c4-08eb-4188-95f3-9948697bd530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb42158-52b7-4c2b-850a-3839baef0dff",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b424baa8-5da6-4c8a-9efa-11e299c14125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94038baf-a0a9-4ca8-a352-9f43d2fc9957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ca4af9-830b-46ca-af9b-9c40f84c7523",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd305d8-6bf8-4d80-a3f0-8faa2dec1b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ed7f0aa-3d57-4c06-9426-b53d0aecb0bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "508a9452-b074-4208-b682-cf85da858d25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68a39600-49d7-4689-b3c1-dcfd346aabc8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435b2a41-3184-4df4-98cb-09d72c20578b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03575a98-b4d8-4fe1-9226-a606e08d5fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b248bf3-efff-4ecd-ba07-1c06dbfe859d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41cbeb2-180a-4949-a0fa-20db8520d2bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "596e53c6-8302-4e81-9c45-6c928006a66d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "197bf877-423b-4f3f-823b-a50dc081e131",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca433e6d-10c9-4062-be4f-522079bb8f91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "36ed11b9-1981-486e-8554-f16e0f4ad876"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a618b56-87b1-4d83-a754-0c82d15a8935",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "604e2e8d-6a67-45b0-9b91-f98342b66113"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd9b59f0-c608-41c1-926e-3f4f69a73574",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64ad038c-19de-47bb-a3af-fcbb4efdd086"
            }
          }
        ]
      },
      {
        "id": "5bc836d4-caae-4c21-a4e4-7b6832b60d6e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e5f1ba8d-e741-40bf-ae14-5fe28abfefed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "562cf149-013a-40a4-b7b9-4a156bf379f4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "14aa264c-4b9e-4ada-b536-f0b1db836d59",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c266e040-44c9-4d5c-930b-168f3ddb748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ace868-8782-4cc3-9bf5-ca8a30135b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9c189d-02d6-40d8-b654-329e71dca268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad5c13f7-a52a-484c-933b-a1af32a54759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e302fce-9d72-43a6-8ebb-86934450a4dc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7c528a-da39-4989-8844-b9a4ce7f514a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b46f45-1136-45c2-8a73-ca71f2fa6f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94da8c4-aff7-49c3-8f35-bf40d69e2f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f95e1a3-79b5-4e36-87d8-65e079237cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3b0577-cc11-49a5-a0aa-37181b44a36f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9409cfd-a059-4774-9004-087313ec811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717d5c2f-e41c-4528-b876-d7b8c86008af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecef2b9a-3ca6-4f49-b9f4-f38edefa95d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f4559a3-8b13-4d6c-8879-d03668c5da77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa104c0-ef55-4d8d-85c4-1fc6a3e4a999",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f54601-9595-4944-8170-b1d0f5d3390d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fb796f-9cb1-4de4-aa9b-509989f59c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c6662-ead0-4503-beb6-7266f9bc8728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2840f1e-0747-4987-a65c-6018682672d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd2bfb1-b5cd-430e-861e-5c03285aebb5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1984aa4f-ddbe-4230-8da4-38fe72257697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ed9565-738c-479e-8208-1d26e0bde4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd089a9b-fa76-46a0-902f-4d55f60b1fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ce3dcd3-66dc-4787-93cf-1a103ace75e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529550fe-923b-44a5-b0b5-3db5c2e46832",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a7df0c-e1bb-40c8-a375-dde9d4e06657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dc13a3-dbf3-4946-b3d3-6ec37f6376c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d77cb1c-f132-4947-9673-6e1bcb25107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2e8cb10-0350-4922-8d64-3dd21d34938f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93ce060-0e00-446a-9928-c62eb8ce71f8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1190496-abb2-48fb-af13-5af55a48cb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23e4227-30a6-4e8f-b5ec-6550a144f141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5e6923-592b-480f-9e54-51b84ba8d67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5922cf84-c1a3-46dd-8ed6-5086cafa26e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f1d6dd-5a82-441f-9371-d92d3e20bf34",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1e77aa-fa63-454b-ba4e-fe7f506540f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98db6b5d-c2e0-473d-9823-2a1a0f60b589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1f9737-6ada-47e5-946d-adb2fed834bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "182863fd-e701-47f5-a9e3-195df2711106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb81d47-53d3-4d83-b620-6f600bf0c76b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0d422f-f390-41ed-aca9-b8aeef748e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7d1247-ca71-4253-b6f9-9facebfae667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf655cc4-3e48-4332-82c4-488cbb03f16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e021b14e-4e40-43dd-a380-b717709efa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ef6852-6f5c-4d3a-b317-43445dc263e9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971c0391-aa4a-431f-a460-38ffb325bd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7886309-0826-483d-bec6-162b7494a31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7235a5-5b7c-4d1c-9bda-62fb88344312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f39ddc50-71c6-43a0-80ee-2982eec2e73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd53174e-c206-446f-b602-ce7fdb3112ec",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c4d047-4923-43ba-9fd9-e46cef233fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd36ead7-6727-49de-98e8-97be1fdf23d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6230bc38-067a-438b-a180-91cc093b3267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c14c3ae9-ba28-42e7-bc7a-137b910a0e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af35c7e8-83d1-4080-9553-d69c0dfcc481",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381cbf8d-7424-4c47-9173-9fb7d1c19ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70e8c0f-f04e-4044-8950-863333a08d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f789660-e92d-445f-adf6-1188b9ac0269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee6f4430-ff69-4975-bf37-3284a2a5b852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f1011c-764f-4659-9854-047007bed28f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecc4372-8048-4a46-a5ba-479a884a04e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d172adb-d0e7-4407-bcfb-0343c1550413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25047fc6-4527-4927-8c3e-c034a29e00e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1366c977-5fa3-4a5c-8c61-ee927fc2409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b0001-4be2-4b0e-953e-c0385d7f6494",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9adf5b7-7914-4bb4-8420-187a3644b361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62bcbb5-011c-4b87-8bc1-414ff14dd4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18de498-2b66-4567-83cb-6309784422c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19eb95fe-7f02-4048-817d-71fc2291fbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a129c99-a597-4a10-b8bc-bafbf4187532",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7032f297-2626-4109-a120-8f53ed350f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee26451-bcf6-481b-a024-b68a6c72a30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcee848e-dab1-4c67-bd32-b147121e9625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a72a8d75-5be4-4984-890c-ade9eebaa50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47076c2f-0c7e-464b-81a3-450d5ef57f95",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb80691-9cea-441c-bcd2-eaadc002be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb9ac84-013d-4332-bb5f-149e43863d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2a503b-93b9-4ed8-a279-f042bc02c443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f57e5f0f-79cb-425f-810a-c001feae0a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6521be2-af74-4cfc-a527-c7af7d6c8293",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdbc187-9783-4949-b3f2-7ece17ed93d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654f5f33-a6dc-40ee-baea-15511d6c49ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8410e4-7b89-43c0-b4b7-b7dd0882f34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "357fe5fe-f8bb-473b-b308-b1fd1ceb426c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33c5ae0-9339-42fa-a60b-cc2221572769",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b19469-ca0f-4de8-b2c3-2b9757c2fee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce3c5c1-a1d8-45d7-8173-bf2468c34f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a104b778-3acf-4e42-8c9d-7f4367a948e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3acef13-e0a0-4234-b798-4faffda07abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362b6150-6385-42a2-ad32-a1520eaec452",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d856339f-f055-4870-bb18-8c3b53dea7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbd3e4d-57b3-424a-87f1-cd770a87306c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6914053-3ced-4571-9b5e-5d55b2351d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ee4dff-5c97-4837-a756-6f7d19dc7cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f797b7-a766-4640-a7d8-606c3a0e229f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4cd63d-9833-4629-baa9-c429c0f86c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990ec0d0-22c3-4ec5-80b6-0c95b6ae7eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dfc4f8-90ee-42d0-9d9f-248524fc7c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b9a993-0c7e-4d3c-b0a4-98c30a8f526e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afff5c3c-40c7-48f8-a306-a1f21cb4eadc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a35f2c1-451e-4d01-9c09-59e7fdc23f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c673e063-c60c-4534-91a9-040660a656b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f67928-4a2d-454b-a3da-8c17dfc4fac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3b283e-a274-4a83-b86f-19f98505f235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1e3a6e-9d45-4c7b-82e8-79ca53cb0ad7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62686bff-4cb8-43df-ae22-08336b1c242d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b322fac4-3e27-41ab-9eef-be7b685c6c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c0cf28-7331-4ac6-917b-ba32f3744d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0af67d7-15fe-44bd-9e50-62ea543ac536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6158c4f4-a82b-4751-852b-73450295ce8f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab462db-d2eb-449c-ae21-143df07b5284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb10c46-127e-47e1-b859-f72bd78516f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d238a6-8e8c-48a0-b4c0-bbc25e7b020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92cc8297-fdcd-4b06-9b12-0603b420969a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d792c4f-e77f-4689-b7c0-1f624e0a8576",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47019785-2054-4562-a689-0cda4a00a590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff4141d-f053-4e9b-bd36-76497a559a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89214300-2e8b-45c6-949e-b5504ef0b3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac10b10-4d87-4198-8eec-21720d607e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fffea14-2532-4b4c-8b51-993e09dd2b08",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2152687e-d9bd-474c-b9c5-6c750c45215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c09f90-dbcb-4b23-8b0e-490f9ce364ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdc01ce-c798-46e8-8270-debf42ac8949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4f7cc4-3292-412c-81af-0f49a16110b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47579d1a-1bca-46d5-9923-866c4f18e014",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebead747-0791-4eb7-b584-97a5f27527a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720623c2-74f2-4436-9142-ede3cd39efb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7ba427-e37c-4446-8f83-d490d11526c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b84db037-b153-44dc-b6bd-c4821a1bea23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb619a9b-5fea-4fdb-b74a-7ad24eb3c9b5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a391106-a84b-446d-8bd9-56377d9ad799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f26464-d7bb-45cd-b474-7bb4255ffa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50630057-2597-4f3b-97b7-f4f716cb4e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27dca2eb-7d9b-4c6c-80a0-52a495c6bdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c45fc54-8ee5-4adc-bf39-5770498bfe51",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060222bb-3976-4a48-a4bd-7c1781c72716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dd68f8-8eae-4de7-a216-b4b474ff8588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13af8eb2-bec4-49f7-82eb-f24aeeb643f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44035d48-952a-4506-94de-a600756f2667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1d54c0-c5e5-4008-9cf9-f90fbe8ad649",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c01b7b-3d40-43a0-a6af-89eefb1501d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f83d54-1b01-452d-ad86-3d1c342daff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1605e5-ba7b-477e-b0f2-9a9036164f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df8a0bb3-3f49-4c6a-b97e-2cb74a8b78bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93602c04-6ad4-4024-8404-56c05904ca0a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e7f005-d698-473b-b5c1-cb2b3be69e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e17858-25b8-4dc1-a4f0-a06c90b043de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3059d7ba-675c-4472-8df4-3017488665b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "428c461f-64eb-4f0d-a5b4-fa60dbb5a644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fc1b7a-f7b5-44b1-a21e-57d343a8e4f2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8431c2-ef50-46fe-a2f5-c4653ffa1a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e62eb0-c67f-4a57-9412-194e11e0d3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01a8c8-a18b-4d1d-979d-c0e6f7bf03be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6daf7832-4de0-4732-baa6-7e0f7c827a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ac6220-7aaa-498e-90d4-a2e586209243",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69b6e0a-b6dd-4702-9cda-1d8ce77c3210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d32884-470f-4ca0-b0bb-9325daa3686d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1060929-1399-48b7-a4ac-5dedda47e4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f56d4ad-4e66-4af1-8948-66d0fff3cee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e06621e-02ad-4e96-b187-f6c5fa0a0f77",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2053219-f955-4db4-aa0b-66e668d42055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1699aa25-e6b8-4333-95ae-e12839f34f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f23858-90a1-4641-ba8e-492dcd1134bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eabfc8e-1229-4c79-81f4-8e89ffd9505d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdcf993-08ae-4e0f-b79d-88219a459dc8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcab9b9-e0af-4b63-ad8d-21927e7bed02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe2829e-fcca-4a56-9a16-0b9b5856b45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e5058e-035d-4a50-92da-717d58abf09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c541a20-e10d-4d86-b684-878c2b4485f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5c9648-15c7-49e8-98cf-6f5ef6be4e2c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9101b2c0-de37-4e55-b068-3158d527a521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48273ad5-161f-4962-a1f4-5df2d26b183a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9d6223-05e6-4492-9c80-43a05ed8bf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cab90b72-28d1-46aa-9a75-be38ac5e90d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d443d2-fa00-4555-9c5e-2bf1e7e080a5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c84268c-d408-4825-8492-d442d17e63b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "502217f6-5cde-4345-a476-dd3bc06a500f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e21e818-be97-42f7-97ae-fc1bf860a2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a47029-9c5b-4dfd-bd65-7696a71e3a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146490b1-1d11-40f4-8273-5414ecbcf22d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2c00e9-7de7-4e67-956f-042e4b9a5511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14c7ded-adba-4f49-ad19-fc94fc99cac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7808a733-33d3-480a-aa67-ad55dc8fe7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c670aa40-485d-4a06-8da8-e3cf7b2c6b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffccb45-af13-4a2d-b368-2e6f73052c45",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a956c64b-3e92-4b7e-8f75-7cf4928bd7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc9c8d7-845f-4d35-a715-7447ebe624a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58449b4a-aa38-4842-867a-5860ac9467ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3b48ce-2e66-4c05-8317-7010604675f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e37c6a-f2c3-4649-bf14-12c5a51153d0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb03ccf-28a7-4391-b67a-fb01ccd4d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7635235-a9be-43a4-abdc-d425c388edcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f011afa-e9f2-44da-8509-223cdcdd7575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e8a228-5ed6-454e-b35a-c9fe832b1e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee6489d-0135-449e-b5dc-f652f3441a69",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f268309d-5025-42cb-b9ff-037d33d4eff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ab2a91-273d-4288-bfba-7c6fb13466d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35dd39b-cd74-4fe7-8f1f-7f741252a72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eea2ff7-11a4-4fb6-aacc-be654202dc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bae69d-3f3f-4d3a-8ccd-f18c912d5569",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271d373a-b90f-40cf-83b3-78153d7fadd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a726eb1b-4b9a-4282-bc21-33ca479bb205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40b081b-423b-4116-9768-3382b9f11f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68651ca-4493-4d0b-b329-4d0e9240f559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1225cd-a309-4e84-ba89-248f7bd2fcf1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e1f9f4-6ab1-4fad-98b6-51002e3986b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2c04e1-bccf-494a-a436-e9a5263a1c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e5fe48-03c2-4129-a7e6-fd12b9f74eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec2d57c-fe76-4a9c-b810-7c4af18f64b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f819b59a-c1fa-4ac5-b072-92abb971e7b7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3012d35a-d3df-465f-803a-1c0305d798d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e77e22-1fcd-4b96-84b5-fca8814162d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aac9dc5-45ab-44a3-ae23-62efd809086c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "36d32da9-030e-4576-9167-cdca55f09806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafc4155-9f5f-40fa-85f7-0ff08253e867",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48fa8e8-5015-4886-996e-863a2a478f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaabb9a3-347c-4f15-a181-08fb819afb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655bfd3d-5c1c-4071-9281-fb2d3e510b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "11bd9c51-d9a3-4066-94b7-2ff4264dcb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b46cff2-e58d-404a-ae1b-03d811b002b3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f91a746-04d5-40fb-951c-93c8988acad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e3e132-38c1-447a-a8c9-811f041e4b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2428fc78-f64b-435d-998d-a5d144008099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b87c669-5f4e-49c4-8cd8-3e0465c6f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f6587b-a6c2-4bbe-a412-31ea6b32b02a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e182860a-cfc4-44fd-bbc2-a31450144dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd44eb40-e444-4559-bf36-73bf378214be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a5c851-70d6-4195-902a-9402ee71a732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7fed22-6c6f-405c-b7cb-b455a9b3d445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6dd67c-9d3b-42f4-b0f6-7939cb117120",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596ecc0a-957a-4350-ba61-4314d0962a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a585587-1aca-4fa0-ac46-a93febb160bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9589c659-b050-42d8-945b-667e2ad5aa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1683cff-6f4c-4b2d-9ec7-de31abe12492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2155cad-f8fc-4a2a-9751-8046d6d5cdf8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba60348-da73-478d-8dd5-7376a3da9e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71613e2b-7ad7-4e5e-ae1b-7ff02a5e5a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d932a36a-a865-4e16-9f15-6fbbd020a237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54045837-7c03-4e50-bc5a-10d2cc31bd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b32b2a-d976-48af-aca9-58f93ca2dc84",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d772f3-ddee-45fd-8aaa-4f5566b39988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84b9e08-3e32-4abe-b7e4-63f9126212b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233c6879-75ba-4cba-ba92-d87fcb4bd8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "381899db-a47f-4235-a190-537d61867af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015a3892-3806-4e4b-be8a-0b8ac47fe6e7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ae7039-803b-4166-b256-ce65c6ccef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf1c893-fcda-49ab-ab57-5a0bca000faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77fba26-581c-459e-a79b-f14fd01b1a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79c4b3f8-8b69-45b9-a51e-fbc8bb8f5055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7bd302-1888-4164-bbd8-9ce8eb4f48dc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2655662c-4503-454f-b64f-73ad5a5e3dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e6c629-497a-4923-a5e8-df125bd4f528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234cb28a-c63b-45a9-ae91-fd147a7704d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e97de7-efc3-4d94-8205-74e65968fa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c75f4ae-6a87-4831-9697-92cc70d4ef41",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1073a0ec-d977-45fb-9863-f4b387b41073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7b6171-10aa-45c8-b6fa-54e37be54923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0120c9-7821-4916-89af-f1e6f71d413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33eb2b21-5ae8-42e7-8ef6-d99043fc6c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c791f1-bda8-41b4-81a9-f8443e60a217",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11645dd-6249-4eee-8631-66021887cec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2422df-caea-4872-a375-52379d466669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5216fa-228a-47ff-ac63-0079497bdc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e6bd61-efd9-46c5-a8e2-9434a9f52dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a949a40d-52f2-44f5-a33b-02b648f666c1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b576c4-010f-46f9-82ae-3bfaadb9aff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cc69bc-a06f-43dd-b390-103c1e011cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f96d935-83cb-4049-8d4e-5ca71a51968f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9adfa9e5-292a-4143-a23e-3b61ad3d82e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315a5ae9-f36e-407c-a14c-41fb049b9328",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbff504b-1751-4251-ab0e-c861a9016e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd60ec2-e461-4698-ba1f-b779c7b8236d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7844e8-5a08-4634-a763-45e5064100f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53792c2a-9b3e-47ca-b245-cf5f8502c0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524ae1b7-c341-440f-ba5a-4ab96fef13b5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a733707-eb51-4c93-9afd-76084f709da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b2836b-3951-4f5a-a51e-f840b8538fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de72291-017f-4d66-927a-898b12e0a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "376ef5ec-f222-41f6-8fb2-c7d3ddf29a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d922caf0-2f75-4001-8ca3-113020481b17",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6facdb-74fc-4e89-9323-9c5d2f98deac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ab71ab-772b-44e3-b88b-8b49b0549985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48c5e65-a4c7-4716-bdf2-3e33fea661f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5805f245-99f1-48d4-8bb6-4de31e5842d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a778d2-93ac-4e5e-823b-a816d6dbaba1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb64214-e8b2-48f0-a893-df6126ae348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e179cc-ee79-4b3a-8006-c1e2374fb01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c58dbb8-bc9e-49e8-802a-4a6237b603cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5e8589-1fcb-478f-a25b-2c0352f44853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69a2d32-30fc-4894-9ba4-2e63b211b28b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426880b7-c849-4489-bccf-c13d9bb45895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b31e545-1ff9-4e87-b4dd-013f5db82046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12faa74-5e88-4e01-b5eb-66cfd4d5b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "901c4371-9b81-4fce-ad6a-5bbe5f7eabc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b22f90e-64de-437e-9233-db7b9f8b980a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f0d97d-01d8-47b1-82ef-28fc58a81afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb100ea-c5d4-4229-a743-62c554e0810f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7400f604-e029-42b2-851f-d67bd0669fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13fec710-001b-424d-80a3-69f6c4b3203e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83168a83-7754-436a-982c-4fc01681b1cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451d3d24-0e10-4196-a3b8-b3a106bf1bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a21964-1640-485d-9761-1509c5283940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af481cb0-26b6-4a20-abe1-88f9fcd0e3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "919223b4-2dd6-4c45-a68c-317f4790ec05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0995823a-3ba4-4f42-b292-25ed1b3366b7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaae6aa-01bc-4649-bcd1-c5bb4a7c5c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dac3ef-1ed2-4b1f-916b-173b837206b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcec6ed5-acc2-40d0-8d69-2c3292d6b456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2c224e-6558-4129-8b0a-a6bea2a83db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80ea8b4-e02c-475c-b124-cdc737dd58b3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1132c041-8271-4145-9fc1-8d27089fdb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d646473-2954-4bbb-812c-e75baf33bda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe51b30-458b-4f84-a645-a79c1dda8c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f972abb-ef55-4e32-a39b-4c63af114f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31d34f6-74f3-413c-b05a-49f112a72383",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4694ac5c-fd66-4377-8958-0c014ee2f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1a5ed3-6656-43d3-bff9-eb998203bbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c328a7c0-e0ce-45ee-9030-c14752e29985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1f6f39-5c4c-4e70-9b3b-73b9e8f3d765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f9915a-d64f-4c4b-bfb5-c77c9ea87240",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a90d274-3209-4bb5-a31a-f613788cd5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fd2e1e-8db3-444d-89f9-d7c292a7a27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bed619d-6553-4929-b22e-6633d2676a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c45594f-c96b-4815-a1ea-85e89f7e5344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09307b4d-386f-4675-857d-aace090bf588",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2bc4dd-5b60-40f2-a282-ac288946e61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e887d4-0bcd-4c71-bf43-3adf5c81644f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76038ef-3219-458c-9c7c-a468033766fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffff06b-d5ce-4ebf-9030-a338b955a94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c11d150-dc3e-4a2f-a0d3-3869dfef63ae",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e49f1e-9957-473f-b718-10c14fd3d434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac39dab-f141-4e72-a121-aa179ed2acfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2028b44d-9589-47e2-b253-69ab873f23f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "447c29f1-0f24-4443-af45-61979427cca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c7929d-8f79-4a89-b11a-3fb12c16b1f9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc3c51-00b4-48b6-aae2-fd31f2727eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12deda27-25a4-4274-b123-3919e98b7c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f550ce9-2d92-46b9-80d5-af6db033d71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d11c84-9098-4d88-ba1e-041464447549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9020fd-5aec-4f32-bc1c-b7298f92a85c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65b2e76-3c7c-43d2-a584-d62ea1424400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbed215-e9b1-4e12-99a9-b07f9af90358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac7f535-9723-4d78-aa7c-1360508d7654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9507ba39-00cd-4859-8d50-91ac5bc7872c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d75b245-da69-4ec1-9423-f23968e5797f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd8cf34-d899-4494-80c3-c2b9604addfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74d5427-8d61-414f-81d1-4ec726d890d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f19bbd-2322-4651-a55d-371c88ba5f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e02c76-c06c-4097-949d-497cabfc9409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0221621-1bff-4b61-a13d-9876ed6783ca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df080400-2397-4cdd-8abc-38055ef08f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806b6d73-c3ff-4ff7-9db7-6c284a7c2b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37269374-039a-4a5f-af77-13efd5513779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7a881a-1cc8-401a-8d2c-8227dfb04d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccee81f-a0eb-497e-8f72-4717ed3cb5e0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c186fa1e-33c0-4fae-989a-d47611e3c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ec90bc-9984-40ad-9e74-b47f930d55a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21645a9-496f-4876-84cb-9e33c2b6fe36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5161ee8-3738-45a3-bd32-a529714750d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1336d780-29b9-490c-90e1-29b6063d6f39",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eb1883-fb12-4e3f-a8f2-3460db32cb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecd51a9-9967-4315-9192-1c8935e15655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a4a895-5f90-430d-a0f3-02b290659cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aff09ef7-85ad-48b6-b11c-a64fa185d96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e89719-fed9-480e-95c1-8b7088448547",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26a6cb4-c3c9-4d67-8b16-b60f2d718145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d42d8d-f2f6-4f49-9a1b-c76462ff3a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ee683d-1f85-4853-94cd-992d144b11de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1e1a43-68eb-43be-b7e7-feb96fdba8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f651769-46db-4329-ac0e-a9fc45708f01",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fad8510-e7bc-477b-965a-f9b037533c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a3e319-4891-4dc8-93c9-8b9629085807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34284d78-5584-4b8a-a4d1-59a1fefcbc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2fc470-2596-4dd7-932b-0fee4ba02d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f2609b-02d1-40e9-bbeb-fefb3e906383",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb7d9b-b79e-43fc-8356-f946c45c78d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc7b63b-7883-4c40-a1f2-48896c257c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a316324a-c0a2-4071-a5d9-d0767a1be5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dff89d0-af3c-40f6-9f3c-757fe1b721a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635368f8-a643-4c15-8c98-a093c606b12e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e852eb47-9457-4283-bf40-b36a6fc33927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fa1b32-d3aa-4fce-a52c-7fbf6c33911a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d0a2f5-64d1-45c4-9fac-7090f585a36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db4e6e66-dc33-4a02-bea8-69f6caa0f6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d09bc6f-7e3d-4644-8cec-dd5c578f6b60",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b8f5ea-f0e2-46b3-b5f2-b92fac956660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ceb49ec-8a46-4979-a7ed-a5a36cb97b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a58647-f2d0-4a3d-9e9d-f6b85118a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56eadee-0bd2-4a47-8674-11b4e4774baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8667f142-351e-41c6-8608-fc63c648024a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea95e9a-2eee-4f1b-ab93-1d923773aec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597d5ec0-01c7-4676-81fb-f3b9203fd1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97ce0b0-3eff-4e75-ab06-fd145b947026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21c2bfb4-b0f6-4bfe-8315-debedb4172fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1cc0c1-2978-4b9f-854f-28756adb1a51",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3875c1e0-fb24-49f5-87ac-cc1f9dc4cf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a0f339-41ec-4313-a1e2-ebf3294f7461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836b4c7e-16af-465c-aaa8-4b3cd2e968ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcebcf61-03b9-4c21-97e5-b8edec5e60c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2993928-65d4-4e38-8af7-5cf4c3852133",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ba569d-b217-4488-b646-848b8b3ca3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448ec286-95a9-42cf-a182-74291969b9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0b3a39-ecdb-4f22-8ddf-2a33417777f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46eb0802-3796-49e1-bbaa-9bdb40b35332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91131103-db02-405f-a639-dc736539fb67",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a28f54-3d0b-4420-be67-4a909340b728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca730cb-2879-4c36-9e85-03acf6a8d213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d717b45e-e19b-4d27-b5c3-412d5357ea27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a568e4-7802-4dbc-a675-bd12600a8cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955c00fb-89a1-4167-b4c0-6cf0b916eb16",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cd4300-c45c-42ce-b9d4-1691e6fd8724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a9f4b7-a038-441c-9806-07849f84fa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc865a9-d503-47ef-9556-84e00ffb6702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee538f4a-b469-4f6d-bdaa-aa7590fd8302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43398827-7866-4783-870d-84107b2a4373",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9a2026-f805-4022-94b1-f2b9fdf2fc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3deed71c-c3aa-4b71-adea-7a1bdf76770e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea06f61-a508-4d6c-b01e-b502a1f15e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8601d626-59f7-4b88-9ea9-749cabe4fb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e29fdc-e642-470f-b5eb-d7e969410061",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0063678c-7f27-40a0-abec-783daaafebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b649dea-b0a4-4fc8-87e1-3e4281b5fa7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d285688-d6a1-44d5-912d-01038e6b902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2769345-deed-4442-91e6-202bbee4ab10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b65c8ac-da9f-4890-8d27-4091df841086",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be447d-2c83-4e78-92d3-f1a6f36e8d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d04659-b5b7-458d-812e-8f71c3aff6d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7874041a-1b6a-48c0-abc8-a36e20b812f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "399cb421-26df-4652-ba22-9781008e35ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa916f44-3e73-458a-9c0d-88200b99f03b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef9008e-d209-4faf-bee4-60a507dc5056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c211500-c3ae-4b59-be71-eb8b95b28e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da42785b-6517-4c53-a6a5-641b8aeb8a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8bb5c9c-a760-42a1-8fef-481ff848ba39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c8a4af-b33a-4280-957c-82ed5937485a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34057478-a007-4219-9a3a-2a2a80b9bf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2021df-78d3-4b3a-9ca9-9f389ee0ddfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b483f5c-7eec-4ea6-b1b4-573c0ed55763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d699079-53b2-4018-9895-6a986047c6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f8a54a-c189-48c8-aaec-1fbbe7ab2228",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8cd6e9-d32e-4a94-8973-d46b608ccf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18650736-3ba9-420f-887c-48bec364278d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2d9eda-8d09-42b4-9e52-bf1f75785a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcb1eb4-1e1d-4ea7-913a-b872cbb1a8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0976111a-e8e5-4b41-962e-8a4d4e30b645",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaf42cb-d914-479b-9675-51443de775fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6e722d-009a-48a7-a01b-ecb89c35107e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4c275a-d5c9-4910-8c13-9a6597e371be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1559cd-3c61-48ae-aad5-766a59fc9250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cb7059-1ebb-4421-a249-9b4c499a24e7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3a5cf0-94f8-4356-b0f5-61d46ce2d09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f4e757-8df3-491e-a6f1-392e72f5a873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dab6e7a-d637-42e9-8d57-8ec0b3346d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "17ca54f7-68c6-49e4-ae61-9a4bb0a9251f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae91dcc0-a050-4fab-a7b4-5f9f7d33875b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10489420-5455-4dab-b435-351eb6ae089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "872a8a90-6f28-4c12-b6a6-6ad905345533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f49a46-265f-4722-bae6-a50f50582e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "62dc7ddd-63d0-4825-9844-1a3536ef4940"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb3aa8f3-9a1a-4077-8533-f24a857e5f84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4219d8a6-3d0d-4416-b0da-c7fae5317efc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9a068c-d8f6-405f-bf5c-5d50b3fa224e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f54ca61-5247-4463-8922-54e17e96b7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15417998-f04a-44f0-bc99-6beda5d260ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1416efe-493a-419b-9fce-61b49b9496cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78fc701e-56a6-4f4c-892d-269ded3dd333",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1423dd6-177f-4654-8655-397349a4a4c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "066016a6-ccee-452f-bcfb-b38574ee014a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7157f2f7-1c80-4722-a552-908c62da23c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2189693-b9e1-4770-b55f-b1d75d3c0f1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0369dda-bc35-4430-ba41-34afbbeb1a51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b74f3e6d-d481-4de9-87dd-dcc581728101",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d12d34d9-f53f-49e7-a519-7105e76e6a87"
                }
              }
            ]
          },
          {
            "id": "a3d9a069-f58e-4ecd-80ca-d38682ce3faf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d6fb2075-3836-4460-8e16-2ce41fe2245f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "48f6cc0c-f477-48dc-b780-9a41f2f4e1d2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a03d1c-63f9-4c91-8adf-460b73951bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "70749a0e-6540-4542-a2b2-a8a86aad714d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b5ee47-c443-4d1e-bf59-c0d5eb33aee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f728257b-6174-4c56-8c34-e3457f9b6bfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0f43dc1-a253-411f-80d6-4f721645cc43",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39e48a89-e20d-4539-a29c-0a485bad9507",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e7d1e0b-9ad1-4e80-85fc-4278825eadd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "020d7941-7c24-4d31-9c5c-64722fcff628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0efa859d-cc75-461c-83a6-80c0c79e397c"
                    }
                  }
                ]
              },
              {
                "id": "43a77bac-e967-4666-8658-a92a1d72a50d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24b08d64-218f-480f-b7a1-4633f40ad248",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "955aa68c-1db6-4966-a4ec-d4b07a299f9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8a9ecdb-0459-4621-8d13-1018bb610c31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "75198188-a2ee-4c0f-9015-8cb4cfc9360c"
                    }
                  }
                ]
              },
              {
                "id": "da17c5e0-b30f-4706-8314-d450550b5cec",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "343a10af-c1e7-4e61-9cfb-b223a70054ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ed4a76f-f8f9-4844-9ecd-58740c6562db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36b17b94-123b-4ae0-8456-bbb16a66b01c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b48cc1d7-033a-41a1-8c2a-e15fdd21a357"
                    }
                  }
                ]
              },
              {
                "id": "f9ca261b-baec-45f3-8447-73151b683a60",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc82e04-041e-4934-abb3-c2e11904557d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79641b28-3f68-4d96-9e34-cad0274da001"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a6b2105-9cbb-4a26-8596-3f096b7848db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3a3e612a-367b-4bf5-9902-a2673b198a40"
                    }
                  }
                ]
              },
              {
                "id": "eb050692-7566-411d-91c8-2ea66a128437",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6e4ab2d-3de4-4e3c-8a8d-27ab538a3648",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02383d31-11f3-4c2f-9738-9ffede82d7b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f5ce2f4-e918-4971-aa6e-757d0a3c963a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2e38179f-34b0-479f-b6a3-1e4bb369fdb6"
                    }
                  }
                ]
              },
              {
                "id": "7f0176a1-06ef-45b1-a218-691ed4307bbf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efeaa188-f4fb-4cf6-90b8-102853e7d3dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "823412c6-050e-476f-90bb-373e316f9d31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ef1a15b-81f5-4332-afd0-e0f17317350c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd981e29-6938-4892-93b4-5288b4c67464"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47bed3bf-bc67-4a31-be71-2b51aa82e54a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25499905-6ee5-4bdc-a067-7dcbf3592958"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20b9776b-b578-48e8-81b8-29a0dd533364",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19a04bc4-571f-450f-b20d-4838852a5505"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51b288b1-e879-43da-967f-df774c1df974",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8371b003-9866-483c-98bd-52462810d56f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57c235d2-ec53-4815-a98a-5a56d853da4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15877aa0-45d2-4260-afce-b90a9dc4de25"
            }
          }
        ]
      },
      {
        "id": "74dbfb04-08ad-40c8-8da8-950cdc8e657c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "de0603e8-2e66-4d63-aecd-9da292e82668",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73fc9d4d-8eae-46ab-87bc-e95a9d35239a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28115ec3-ae72-41dd-9ab9-66f1a6d84694",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5f549a-ed54-4fa1-ac2e-b540f3542f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740aa22b-e13c-4957-a697-ac1de569ee29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9a74d2-607d-42fd-953f-19f026de10fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "626af3ae-50c7-463a-a0ad-140e4aa4714b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de5c713-14ae-499d-aa23-f7a0f103f177",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717e132b-7b79-4c81-a24c-e2b1b3c93f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1427d5c1-6f3e-4304-991c-4747cfc7b578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb7fe1b-a07e-401b-996f-246c0828d9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "56912801-a225-41e1-a80f-84b5f0289610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472481a8-7658-4608-bf3a-49b3fbf9288a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965305bd-8e41-4826-9862-403293b0c3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f049b118-151f-434f-a11d-f061478fe89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b580ba72-d0b0-4ea3-80a2-9f32554cffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5dee7d2-41e6-40d6-9cc8-7bdc8bc5b78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d746fe4-7ba8-4b56-bfbc-ea05341b97bc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3904c1-aaaf-4be0-bf95-395782bc0187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1439530d-98bf-4f06-835f-08f3d0ccd33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b896ab-5efe-4e57-90d9-d2bdd2dcb497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cba0a042-d19d-4a34-b20d-6e4ac46afbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49d6fbf-25c1-4636-aa1e-ad2e801464bf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433ea5ad-368f-4a67-911b-b65a7df9bce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96f5883-2f1c-4c50-88ae-517dd4a63bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80b4ca8-df52-4715-a7e9-f4471b1aeea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d9350f-6562-4497-8a7f-1ea1415a5077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dac4a2-ae75-43bd-b7b7-eecf6142a7a7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f96e9a9-d0d5-4510-8e91-cb98f18c3b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fde354-72f9-4637-ae94-c77ada9fa6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0aafd3-a867-413f-be94-7a6445ab45f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7999ca1a-4daf-4bc4-b588-4be340644f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b121b4-4a2a-4628-a57c-494200cdffe5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa39d2e-61fa-44c2-90d0-893cc4e67b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c2f501-1a59-4c16-9d08-722ab858f77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9cdbae-d411-4d54-9943-ab6336338ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "961f30f5-0ecc-4ce7-bfa1-5c44712093b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff914a0b-3c10-462f-bf38-5ac4a53b6ced",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5500e6-b5b2-409d-81d0-9bb0a818c1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e752ac0-cceb-4ae1-88db-761005b96b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03147fac-7db8-4c33-9984-8ff1494eb144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d18dadc-f364-49b8-bf08-cf51e256f2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2695b9b-0539-4658-a1aa-57a38a193b73",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a2faa8-eda1-45dc-a357-7fc229c33458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082026d9-a8b8-4674-b0a6-2c121bdeee79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce53408d-f66a-4c78-8de3-437067154b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70014b7d-c986-4ddd-9082-bad54801fff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9cc4bf-c166-44bc-8b44-0a145b105a3a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5247d-1d72-4797-aa51-15bca751e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4067bc-0eef-420e-91cb-af3750d03b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aff6669-4ba9-49f9-8f68-51fee38d3c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "237603fb-7849-4634-8a4e-f671c01fbfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6fc230-187c-4186-a177-3293fc42a83b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a3a369-6783-4d3a-9765-69ca85f9ceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3c538a-de71-435a-9cf9-934ce036581f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ae6c5c-f30c-4fa3-92c4-9e9139176f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "439366a6-b397-44fa-9b4e-c0a81b839666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac3d213-4b8b-4f3f-970d-2b2582d957b8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a449bca-ee42-4b27-b643-64bb2c56f393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc8f193-9ce0-4fe2-8d52-ba8aac5b2383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71178e4d-124f-4532-b7c7-7ccc7d86b08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d21ae2cf-d9e9-44da-9332-c790e2883290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ac81de-bb02-4a07-a8a0-b1dedde665ec",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f281f5b2-6e70-46fe-802f-7349b63346f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f57b62-aaab-4b6f-8b30-d0aaebf583f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1c87d1-41a0-4182-b919-5159433a6277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87df949b-e4d9-496e-bced-a38870483702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471a78dc-ad63-41a9-9984-b42f76ac06de",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c1fee0-3880-42be-b1b7-5a3bcd5ec09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f670ea81-02e3-48d0-bcf6-47d3d41fc8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf5652c-847e-4598-ae5c-57f7f3ee142b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88ed200-bd3c-4e4e-83b9-83ef57113d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ddbf08-ce23-49ab-9a19-6b272b489f62",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe6a0d4-19a7-45d9-81a8-3cd3ab5ab5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a4c7d3-8ab2-4424-bc22-d8c6fd55afce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc906f96-c993-4298-82fa-f7a4351e8e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "90da4662-d2f4-4413-bd8d-e64528ef14cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42c5974-55cf-4191-9ee6-eb55bec6d040",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6f0b1b-24db-44c1-a82e-8f1294b126d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e706baaa-9a8a-459e-81ea-491c23746cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebd5b27-61b3-4576-850c-dd0d46314921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "01bff0ea-7328-4b54-a730-39b536114f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b128d7-d2e7-409c-befa-a85f394402c9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8feb9c5-f7af-410b-a633-ebfb585a19f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afb86a8-7e51-444a-b61e-ca938a67c3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226ebb7a-87f5-4162-8884-bcda20159245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1adec2-4832-4688-9b8d-b5b285cb89c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df3a205-75a7-42cd-8bc3-c3a5a95a8737",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72593308-cf0e-44d2-8de0-c673255dec79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772021d7-235d-4223-8aaa-c14195c26983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6727006-1f43-4d19-9f69-09538d8aa7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb270f9-3fd0-4e73-8b62-438841d1b9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed10b615-6320-4bde-b653-98ca3f1a44a2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1201821-c416-4212-bf7d-4d10b153219f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86b4b09-3423-4dad-a8b8-39f9b8a59d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d33575d-f05a-45ee-b3ae-f9955bfd082b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "880772f4-47ec-4cbc-b8fb-980cb3d7bd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9d13b6-1771-43fa-90e6-f997fab35456",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21247c81-d6e6-4743-b697-b28608532114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b140f3-c6a5-4b47-990a-5775be8faea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c312198-127b-4d9a-8bd8-cb874d544ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7c3964-8d9b-4ed7-9e99-98f98e8bb7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26bb74a-8953-4f59-ac3d-32805eb54d7c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87916ee2-f039-495a-9de4-cc3de64f1aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e22cf9-f6c1-444e-88ec-5f66eb488ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81046dbf-fc4e-49ae-b061-3122f8250b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "662cbf53-a903-40ab-ac25-50785b15cf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a9c156-3247-46c0-bf61-c2776054e79e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a9a39c-9df1-4225-b3f6-b35cc47cc77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc90250-65b5-413a-a6c5-ac3dc7ea303a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6f1301-c305-4f78-8ddb-10b85c90b0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6aa5d8-0084-4244-91ee-c2a05f742b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e85243-9ebe-4174-abfc-d34f5013b6ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3756f784-f1d6-47ee-99da-c3e3681008a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a71877-4ce4-4913-88fa-24f27d718759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eb6003-94ec-47f9-be14-85fcb2e5f40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb81369-0c51-43b6-ae5c-935ebda466a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d932a225-5ada-494b-ab22-63564088b5e1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d567be-3eba-4855-acb9-014b18269b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cd6999-352c-45e3-9b5f-62c4a8ea39b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8f9498-f8c7-4b96-a3d6-298f251e87f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6cc40d-581a-48da-91ee-1a3b44186455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515bfa45-89da-486e-acaa-a7e8c6137f7b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa747f39-7d8d-49a6-9239-02f430bd15a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3e50ab-c3aa-4924-b953-2c4cb15ce2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004deb7e-f618-46bb-9e8d-a9a877a39f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c903bc-35d0-4309-a23a-8a42d63e3cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b85738a-4c6d-4569-aa1b-eb6f0925d4c5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f8e41d-6a58-4252-a382-4f0bbdebdcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d65f799-da15-4d68-9d7d-4a0fe914afa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2647abbe-635e-4d6c-9ce5-4a3fb35442aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1165a19-1774-43b4-9265-f6f39040eeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b323a0-fbb3-4fd8-8b06-afacf7c8c412",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a238b28d-2b85-4593-89a0-29511d07d95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b016b179-e041-4b86-a6c4-ee07b677b1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70815c7b-b314-40a9-a94e-323b4e235f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "095755fb-1d18-439b-9540-f2547553f03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa01805b-1ef0-48e2-af4b-fa29d78bf485",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4417d189-799a-4122-8782-ca9ce64c63bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b2651a-de97-48ef-bfcb-f80b9d6e29a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6935d87a-6b22-4dec-ac9d-4c0e231a7482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95edd6df-54d4-41c6-bc12-af6f2eec628f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817a59bd-eb0e-4836-b523-9b23651799ab",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db79386-7654-4cf6-a816-cc6fe3e6f4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddce6c1-1119-4522-a022-14491998cfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897fa16f-d982-4184-a2de-5ee803bddea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41df9aca-2343-4929-94af-0c224e2bcfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d6fafa-a624-404f-ac8d-394f55b35ad7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e3b4d7-ac88-423b-9ad2-4f84bdd466f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd59cfb-8c35-445e-a5ff-9b38ec0b35cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236e031e-a463-4333-adeb-f99ef1b2bfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d08cbf-12f2-4459-b1e2-21bebcc8da8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaf0f58-aca1-4d46-a259-b0cde1acaa00",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4170fe93-77d6-444d-80e7-ebe1c4ab6de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9cfc96-fdc8-4b7e-b502-1ec8bccc4aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a18584c-a40b-4771-a7d6-8edb5f45cd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2c5a96-0a07-49b8-a100-4e6b7a74d6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bf7bc8-7d5a-47fb-b559-e7e4fac6c976",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dd6673-4b08-4c80-947e-ba6a40977b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1eb64e-b5a8-4007-a11f-53180864d95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6718cd70-8f52-4a67-8bcc-06cf81dec858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "418b52a2-0013-4b19-ba1e-49024a3e6ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b23feb-74b3-4eae-81ae-c715cbe5cf67",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262524dd-152f-43d6-ae84-05f5d1ce4a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a76c2dd-88bd-49ce-9cb0-27da1d6fe471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0319595d-0849-40ef-b814-b0fbf00ce95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eba11cd-e919-4d54-9eb3-d09f7427fde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233f05ef-7c25-4060-bfe1-ae8e0eb5d930",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b949a7b-dfdc-47e3-8a12-5bdad1bcffa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8772ea93-364b-470a-b573-f6c2e8d491b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6290de81-0b23-4207-a475-36fb051ef321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc12fa83-8ed5-42dc-9e82-37ea45ec0a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d2a3ed-4ce1-4685-8f4a-d75506df9c36",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92d62da-d862-4c08-ac12-08e4f00cca2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad91442-7706-4f8f-8c8b-ffb11e65aafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151bedd9-a142-47e6-a513-9612f24774a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "477ba769-ddfa-49d5-a3b1-14636ad4270a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4392b535-a4e7-4216-ab69-4403be7fd6cb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec71ad81-314f-4538-a145-dfcf85e2dadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e8bca6-481c-4667-afd7-886b8b24a471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25d3df6-edb3-40de-8b69-30882897d291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebefe17-6941-4d3d-bdfc-8a13296b8ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9940d84-7ffb-4000-940c-8b593117d562",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb97b45-262b-4917-a635-b753a27af970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26be489d-c099-422e-acce-4cc7a8769303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8474f0-248e-428f-88fa-37e5b3828637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e012bd7-8a94-4f63-8d0f-c7a27e121c5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf38b886-5102-4bdb-9263-082cc5960e3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "623ce94f-bf6a-436b-abb0-086594c75872",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c558c584-1823-47f7-94fc-8faa16444860",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "57fe11b4-27e9-43fc-8842-11565024c65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc3aedb-05b6-465b-9aed-7e6999ebfc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7514509-61ea-444e-93b5-441d822715ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "827ef186-a007-43d1-b628-27db8ef045c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ee85dbf-706e-4c2e-956b-efee50782439"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "294942d0-5c3a-470a-8741-b8954ca26b94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b35e4bd-ed59-43c4-affc-0e15b5e421bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69ca46db-0224-498c-9084-76c6006e58d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea91fd82-115a-4637-b15c-b353f363c343"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a041962-6624-4918-a297-8543d920f12f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9cf89cc-f23f-4a57-8832-043b3dda09b8"
            }
          }
        ]
      },
      {
        "id": "8e4dbfc9-bf23-46e8-bd61-d20f62162044",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "96459b0d-53ec-4683-9adf-5daf3106a5cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d50b3674-0e9b-4bf4-aed7-fe46f4092a02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad7a9bc9-83b2-44f8-a21b-b234a17ae144",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716357aa-6832-44ea-9597-8b540d9ff73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86f279a-4d15-4dfc-90fd-98b1119abec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496b772b-b3bb-4606-9bf1-7ce49d082517",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99a2566-815f-461c-90b1-8e42fee8c5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7706c1f2-be35-44ee-8bc6-604c967b4bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b5ff77-1b58-4d11-a300-6d604c6063c5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fdf6ed-4077-443a-983f-cedbc9352432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47520e78-4645-4c95-bbe7-a6e01ec57cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b97f00-29de-410e-8ada-3219fd3be9f0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea628690-d41b-4e1d-b8a8-1fc5d4dabf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0745c9-9e90-4329-a3f3-c841135cad66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efd70c1-497c-45dc-9074-72ef4c2e1af5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20a014e-dba9-4972-8669-14ee31d5dd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cad154-f670-492c-ab91-592a2b125bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae62bb4-db09-4c07-b33b-fde2c46f2d6d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5beaa0-fb84-4fa0-b442-48b09b650b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a22c4c5-bf3d-4cd7-ae28-1ac41b421a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb0b3db-43e1-45d3-9891-dca62d18dbae",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ebce1a-0728-43c9-89ff-f5597ef8f2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef29dd0-b4cd-450d-8076-1d71bf50bc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f66aa9-bf79-4fb6-8caa-7259fee8ea9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a3e68a-7ccb-4832-917a-15839591ab5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd60fde5-242e-4663-a872-59c080cde16b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb57ac8-4ae6-40cf-8521-a197334302b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a283cce3-5fcf-498a-87b2-3041096ae1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff419bab-922c-4819-aca4-3a2fa3a06aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b19ff7-b20f-4b58-a5b1-f6aab5c36560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dc3d86-a04b-44c7-9493-8482e2410fd2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aee8da-d5a1-46a3-b571-e3e64868ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f370af9-07de-4964-945c-289d26033e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7708c1-37b1-4ccc-ae5a-048aecc9b2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8c9f80-0096-4a64-8389-c6711b5b8e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cc1890-a986-47aa-8736-8ab36ce48bd1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712c253b-e250-4a79-a907-45ce2274f366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707948cb-8def-4876-901c-8912d2de86d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53e245c-e804-447a-b3a2-32e710974bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66027a30-2f91-41da-9f52-5e831524db7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc6b8c9-3e78-4b50-885f-6ca9edb26552",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b96315-d408-4cff-ab19-562e378c180f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae1c2bb-42e4-43d2-8728-c06a1e87ca59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a756a21a-b7e1-4961-a7f4-39246f79da07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d01171-24cb-4b18-a0d2-ec5de8d271cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9366bfa1-685f-43b1-a21f-cc960c4ed8ee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ff14b3-5024-4f19-9c8f-6cc89638ffd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cdabd4-1348-4058-85ef-d76e544c0319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225c0488-4cc5-4df4-bdcd-252c8b68c377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0615111-d9c8-40ca-9d57-10980c7a3181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aa7958-0126-49f8-a1a2-2c2bc3994d0d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab892a2-905f-437e-b798-7a4c4c183115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97499913-d55d-4a6c-8d70-b2835b0e1488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3e64ab-4c17-497b-8989-683732438c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1a9e18-2e56-4192-9529-cc9fb650bbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9cd3ee-6e33-496e-8e8f-f251c6f7eb3c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f2f781-b1b6-4d4b-a9c2-9f0a9507305d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52bb4b5-e5e3-44e7-99b8-d580aa3e0bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7d46e3-adc2-4794-92b1-062f3fa30739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13571c10-a02c-494d-82ff-31517b3f5b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4970d16c-5327-481e-aead-fa9c406706f1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235062a8-12b7-4dc8-a505-4b5d0365941a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c62b0a1-b44b-4fa2-878d-81174706b3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0214564a-fb57-4876-bf71-f9e159e9c011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9de6091-ba15-4786-bf78-b0cd4ada8f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d540af03-fd38-49f7-9247-da68cc2b1a12",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9c35a4-e2f9-4531-8d6f-358f08c3e99c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0b33cd-bb10-42b7-b623-a360be96f512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6433c7-565a-4b96-8311-366ee1d65cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde9b652-f444-4335-91b1-e18c4fc04ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a6095-b84e-4590-b52d-e6ee4cdb4bb1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566ad6dd-bdc6-4329-8eb2-966ee3263fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f33fe7a-036a-429b-b14c-790745429800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3097c6d-067a-4bc6-ad7c-44d752b7e92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f5983c-ebd2-4096-adb9-c74292199890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d21ffb0-3aab-40d6-941b-91213347139c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b05b68-d955-4732-80a3-7acbbbb9ac21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5afa374-1c67-4ae3-a178-d73e87001c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9d1c3d-998e-44ac-af4b-2ba64e193b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54915bd-c20d-4850-9d81-984b8f21ecfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4ae307-26d0-4b9a-b3c2-df9505899154",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5069e9db-956c-4924-9cf8-4fd59a846005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9833254-bdd5-4178-baf8-06a333092271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d0162e-3bd8-4172-ab82-7f27268e9d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a126d293-049b-45c7-bc43-70d84a8f2f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11a4c72-b0f5-4e80-b3eb-114859047a20",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a26ccbb-53ef-400c-ae4e-ec6566344978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b7f6fa-64c4-44ff-954d-55a24b991b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92beec71-b312-4c48-8b28-e7cc321eecb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303d5eee-ef8e-491a-bc18-21d6d999f022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6393fed6-5ad3-404c-95bc-c60911f9ba8f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2e3129-4582-4de0-80f7-d741e26dbace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2911fd7f-6853-4ee2-b572-fdeb554cb622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c0a67f-aaf5-44d0-87f2-5871f5b6579b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d433489f-ac24-4c01-bda6-0ca0e1d8faa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf7dc1d-7530-4a14-a5c7-4d8b88a53af7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d08c664-aae8-4145-8c11-9f92741c5030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3baab8-8af8-4456-ab5d-9621b06aaa5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f35ff26-ad55-42c6-9804-ae777858fd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62bd854-1666-4db6-9e23-16df6b65ef2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9309c4-ce5a-479e-b4ee-d30d469f779e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9958a762-1adf-4d53-a44e-78f4344a1bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0813559c-750c-4f34-90aa-a69cd7822527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e88947e-b7f0-468c-adc4-316777507ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b18eda-2309-420e-b3ab-45d9874b6f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff990e0a-5c08-4996-84bd-c348434a1a8b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203cf24a-f8ad-485b-bddf-1f6a300e44e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a837dc4-c26d-432d-8947-a87f26723c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00644dd0-59d0-4a9b-a481-c5b1445028fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f084028c-5b51-4814-85bf-e9fb82ba3d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5575b0cb-b599-4892-806c-ccf7d15d37f3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c835ae-6d40-4fbe-861a-c250eaa5c3a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0db90618-e246-4eb4-b180-2202a21089d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b80bb96-ac8a-4523-9c68-e44a9d26520a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d59345a-7564-422a-be58-aa910739bc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3f23f7-23a0-40fe-b979-03911ffc3cb9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7e9209-8923-4459-ade5-4aa494fd5ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8782694-a283-40bd-a921-33eb49f637e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e734c6-5a98-4d4a-9ed8-bf787e4c63f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4219fb1-671b-4309-8093-4314b4ee2f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e465e6-8f80-4004-b1c7-be506073ada4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd10d1d9-3a07-47df-bd0b-e0edc71e6862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49824f5-6d92-4a65-b4e2-787597ff466f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c918735-557d-40a5-8526-77d0772a6a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d03b362-3b62-43b7-80ce-ea6aaeb555b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f19949-fbc0-4e08-a4f0-0912ec90a13c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d75d67e-cc2d-40b8-82f7-b5198dece73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f599e023-3a5d-4d9f-865e-8ab7f64f4abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167ab00b-4422-4865-bf82-914cb8f582f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee1dd9a-365f-451f-ad96-b5069ec162de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb505dac-3032-4f6a-9ada-5c4788eefc24",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc4821c-b71f-4173-b87b-9b3cf79ff928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1dda3dc-b055-4217-9f77-00a6db35b6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0724d8-9aed-4452-aed2-e2877e225555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda8ed9d-c6fa-4abe-9a85-c75a42e9a5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60016bfc-1b11-4ae8-8604-36e399ac3cd4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fb781a-0a4c-4b6c-8014-8ff1fe55946c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ef017e-47a4-4200-a0b8-ce1da41ebf91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454af18d-47b8-4468-9833-930a035909a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c3725a-c85d-4880-a854-d111671d4ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ec15dc-f562-4392-8106-119c1547c06e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3614e9-8270-4d2b-a5d1-53949bf0e485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce07e95-3745-487f-a38a-42ba82d3a9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dae1f9-c26d-4cfe-af0a-6cb7f8405777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89143d42-12a0-4c67-af9d-a8b8a810e447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1ac371-183a-423f-9471-53eb6056c90d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb18a36-767a-4746-9f51-e789ffd215be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9d7aa7-dd0f-42e8-89dd-96c40b24c3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e19afd-7ade-4b13-8623-9ab9fff0eeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2e5497-6855-4b90-9324-0e84e6bd069f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20a7396-9e16-4d1d-b69c-7cb988a2aac4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddb276b-ece7-4545-96a6-6a654c79c2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879900e6-d6fb-4e47-879f-91d5b4ba1baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab8f4e4-7c76-4811-bd37-a10a2ccd056f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5285c8e8-1996-4d7a-bf11-254475609c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c966dc2b-a991-4bfd-af38-92ad50f03d4d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0059e9f-4db1-483a-8289-e1b3d656b037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a171190-8c83-4acb-9550-3ecb8f8858ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd6e088-657f-4c46-8944-8ec1ad480499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94c41bc-0258-4885-bf35-3ca1ba845342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346e569b-b9b1-42a5-a33b-fb745d55ad1a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e29b6b8-ae36-4b69-a264-70c9a9a87233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94586e62-5eda-490d-a286-7f6b5e2e2435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31135aae-4439-4ed9-8b06-422fc19a7c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cff895-7c2b-45cb-bee8-759fac273952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bc4f33-0376-4844-b02e-6eceeea1cb2b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3185cab9-91d0-426a-8c81-933b3c72f1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6396f2b1-8972-40f6-be45-444ec44d7892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fea8fd-be37-4649-b21f-a818861f8c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b587fd15-3727-43d6-8704-f1c46c04c508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de50c6b2-4037-4cf3-bd1e-d1ce77380fa8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c93054-573a-4ccf-8a14-0b5d2cdf0305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c070ed08-e641-4d0d-a8b5-dfcf3649c321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0af291-e4ac-452e-9f06-30b8d346dc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3944f39-ed5e-468e-83bb-3483db0f2b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618be680-2a03-4af1-9a4e-6b5e55981274",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1881de07-905b-4e9e-951a-bb64fed7e054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05490eb0-7c38-4765-8c55-c9b794e774d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d2d693-92a5-4dc1-845d-367776a2bf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97c158c-f067-4cde-b6b5-5c292ddf0182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70ec7ed-76e7-401d-9fd3-ddb90bf05b55",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76e4242-bd94-4f9c-a527-c946fa082bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08bada6b-1352-4dce-8600-7e1707cb515a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f900d3e-ea8f-4f50-b62c-dcdfd25119d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb465408-88ff-4276-a38e-df2e39304f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48c70ee-0cf1-48fb-acdd-adc0053c464e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7896c3fd-1d2d-40c0-99b8-4abfd75817d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7db859-c8b2-4e4f-9591-a1d08eb451e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0969ecb-8e00-481a-8112-731912bbc271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e30d1c-ec1a-4669-83be-0bb3ee826b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6135f51e-4a82-489a-98d6-118306bf00ef",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d06e906-2d24-4296-9ac2-17f1836b1110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ec9c54-ad8d-4d79-8453-b236a2260a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5094204b-3329-4cea-af78-142d7c086248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a178d520-76d3-4db8-a5dc-eb2e6392c3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c21147f-4033-491f-8c84-5cf3f67ed320",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b24a3d-d96d-4890-b856-4d6c8a2b0324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ecbad5-6388-4e15-b317-8b3b6ae30ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7250c3f0-51d9-4df3-886a-e54cbd2df4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057d9b5d-dc0d-4070-99c3-9cf0be02699a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc19cb61-c3f7-472e-876e-c79825848fe2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ae3710-1f0f-41f7-bfb3-8b292d8514ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d36ab3-4193-4373-aa3d-317bfdcb50e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0458a36d-199b-48c1-b3fc-db47a82eb6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea5d607-0a0e-4be9-bfff-11ce2df1aded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e14f14-dad2-413c-805b-c721a85e2959",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e114f3-584c-4dc5-a202-17a06e32f69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a3255f-18bb-4739-97b8-4794bc3d7618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5646c643-1c1c-485f-ad06-e30ff21f54e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9b8733-e068-400b-8ae9-86511eb8c8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cc7b1e-758a-4ec6-addc-c13e3f1efde9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f57e32-0732-424a-b693-f390b12a82fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43285901-eb3d-4040-bd27-5f09b3cd3b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc26fc8a-9044-420b-96b8-2184d6a37af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757716dc-0392-4d75-b441-63fd58b182c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1312fbc-5efe-4a49-a33e-cef805affa39",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6714c8a0-4218-417d-bcad-134dbe6ab4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87e5dd9-2fe0-4741-b826-c468ca07df59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3a4d0e-d1e0-4369-8274-783e755d96b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249b1988-e990-4617-a545-ab37b3a9f4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee81e2b-b94d-4c62-83f8-d32a5db98a35",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743a0638-1140-4c66-b289-cb83c6c47ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3130816-a0ae-4efd-8565-74126ac7dae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a787b3-9dfe-4269-be49-f9ac2123d635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0b9714-5391-4455-97f3-0880ffd51ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b67458f-4d58-4c39-8333-1b1abf025a82",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b30587-d470-43c4-b602-54e3a3146b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a20d04-b9e8-4720-b88b-c0fcbeeeae01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db464881-7a4b-4be4-b4ef-944b3fbdea30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91d1020-2774-46dc-ae7d-d18a8bc8e3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd55a36-856e-462f-8e71-70475df91f7e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d395df8-5120-4972-b440-a31107b17292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53fe286-9a38-4b1d-a264-01500913692e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fdfa1f-f045-48db-9ea4-4dc7659ba10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae71fbb-1083-4447-b885-b59f05f2b66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8ec7c2-bd6c-4514-a85b-5db588350081",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f6920b-52b4-4852-954c-5018a1edc7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e92638-e033-4537-acbb-e9a2d20f8da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb03f216-5610-4d24-beff-e638e73c7d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76f51e4-da1e-4f5b-9654-87db7fa08fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c640235-fa33-4259-87ff-ee6ee3514e16",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b994c7-deff-43b3-bb0e-41fee2c17682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b868f65c-d37c-45d9-bfdd-52af8691fe2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c270b7-31b4-45cd-b878-5e6dde748adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4c2c4c-f06f-45b6-807b-38001a1bacf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d16bea-fd41-48c7-90e6-a2770f1c2eb0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61fafe1-6ba0-485e-b100-4e869e57ff73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc9d5f8-9f91-4b6f-a59a-b56392e4b1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139122cf-ca43-4d9a-ac76-3325c694fd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f94a63-020f-4861-bfdb-4675fea90bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2467dd-8469-431d-adf0-9053b0a0d8c9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321e2cea-f15b-4cf9-80d7-95f926ff768a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919e3524-437d-4e21-aeed-8493c5270562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425a41a2-3201-4e43-98a1-ab8c8ab63895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3163fd15-ca9a-4a60-ab51-489c06d933f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53041787-e226-4aa3-84f0-ef4a6622a833",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e07b5b-7872-4735-b3d8-bf3ae99bdef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d5a03d-9145-4725-8c5a-d47412722473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555924dc-f352-49a1-92a6-f0cedc43a925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66ef267-2242-49b8-b9aa-d3a21ede1cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd1bb0e-9f70-4fd1-9296-a8b23cafb8c8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ddd6f9-f237-4a76-8744-72f7149cbee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b8989c-c89d-4493-81a8-fce4551b8e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b480dec2-2707-4098-ac5f-def01423933e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f857483d-4736-407d-a5d7-df064957f868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235ce00b-b3e9-4e7d-b508-4754fda75afc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fb232c-0611-44f0-b67f-3562e775185e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f5f08f-dad5-489f-8821-c5a04d810957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c6f1a0-d2da-41f8-945b-d2f75f9ff7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745e3533-2fb4-4bab-90f2-03aec655edd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a07b8a4-b6b8-4ebe-81ec-2d3938e0fffe",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df90ebb6-a4d3-49ae-9afc-ce97515a9c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11199183-9fa9-4fdd-8a73-967c5c4aa107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f7989a-a199-46b6-8e20-8918a76a08a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c37b8e-e6bc-4244-be32-6c0e79e00a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8fea62-b229-421d-b0ad-5265683315f5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7860c827-908f-43e5-81b7-817208e8f835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24178e40-3e5c-42b0-91a1-d79d2fc05824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178e4c4f-fc2a-4dbf-9b55-e7999e3651d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dabf491-9cd2-4f5e-9870-2500eacfaf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bac4cf8-5706-4a5a-b1f7-93a0413f4086",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbb7b2f-442a-41aa-b595-5404e9e725e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f134bfd-603f-41e1-a399-8e23e7a9fa4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fcca6e-3464-45eb-ae3d-193828f6d514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8eb52d-d28c-444d-ba01-aca83cb9819d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a444d4-d91b-48df-8e34-24dbabd4f3c5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295d3b4a-5e9d-4c03-ac95-0ee3e6d856fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91eb858c-6427-4e91-b5e2-983166e1b7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e14fac-ceae-4190-8a84-05df01ddaeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a609c61-0abd-4d2e-b0a7-ff1142039777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecf9803-e74d-4b12-b102-ba5b38a6469d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb60ee40-3de8-4f3e-b388-cd466fa6c877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55372b3-b270-407d-9cb6-1d6b98f98fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3429b203-5d47-4688-8163-615b4d258e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3906d46e-e23b-48a8-b014-433c5aafd252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff038854-91f0-4e5a-8b46-60b9a5ab9464",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5aa158-13f3-473c-8e76-0dedc7e5b6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2448ef-c1a9-4ff3-a2d7-6a189b94d7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40d41fe-7bac-40e9-bb83-3950d054a12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc90d06-2910-4339-8a13-44332f57ff90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cae5f6-356a-45b3-ac7f-439eca618fac",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d25e00-37fe-4eb9-9048-a90eab814891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0dc90ef-527f-4929-b091-fd5ae649eb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c340f2e-4f42-4caf-81be-4f521a9d8fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99060ab8-043e-4a81-a9f3-e264ffab4752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb9fe09-96c9-4d0e-b9d7-c5262bfd9520",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ad829c-a15e-437b-a691-cd0ffdd30179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b37c50b-eddc-4a51-9475-41f21b5f17a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcd8ab1-3407-4d63-a396-5c586c07ba4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c619045-bc1e-46c5-a83b-3f6b90737cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883eebc2-a7a6-436a-84bf-6fdde4ff5d41",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac17b4b7-9c98-45a5-bbe7-e02df1d46ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebff3689-3862-498b-9d3e-4fdfe607668b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d6f8ab-0ebe-4f2f-9f17-39a642e1140d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f385b8-aa7b-4733-acf2-acbcc53f40f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5c2d3e-2fb7-42a3-b6d5-403e9e81dd13",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d885ca6-9c27-43b3-bd3e-ba9d724d9a40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306900c5-1f5a-44fa-817c-196cbd2ee08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98986e8d-ab83-4b53-94cb-d66f2516352d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9106faf-e273-4f5e-9dc0-2b7da2690baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6360e38-629c-4f57-9acc-baa78daff1a9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db31fa-d368-48dd-9021-b2996a760759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2806df05-f0f4-49da-a03b-f9a67c85402b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dd09e9-f83e-40bc-94a0-4e9a7a6fc6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc6db32-82b9-4703-9bc9-087d77f4c6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc9b05f-7126-46cf-b928-b04380dcd7e5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff97032d-a6af-48c3-81fd-25999953c4e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d45c43-9afd-41d3-af9d-98df55475117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5ae82c-3cae-4931-81fa-34741540fce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb2bae3-c42f-4796-a68d-ace7ed55d958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd70cab8-ae67-472c-a376-2d5aee03179f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6ca536-8376-4365-b20a-da94664b3da6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b943c44-530a-4585-8430-a579368fe928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e091560-3d04-47f0-a7fb-ddf79210a9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed641db-1f8d-4aad-bc8c-85e7dcaeb709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec64716-987c-41ac-a517-a5474fb3e7c5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b86c359-5e12-4c33-853f-a54275b341eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27887120-116d-493a-8c65-d356391911e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c989ab46-269b-428a-b73f-600c6ca4e3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9743e5d-3265-4b8a-869e-5bf7292f3466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824274c0-7362-4800-b959-810c7645c0b7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4022298a-82ce-4511-b106-c4a746f2e415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344550b9-10d3-45de-92e5-a5a27d3bd64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437c033b-c135-4f8f-980d-6f80e5040d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea0f9a0-ed67-4b0f-a2f1-ac5521d3dbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6979637-5349-46b2-a7f0-20a868158a4a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb14d8e2-aab7-4264-9990-8d2a3a60aa0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4790762b-bb29-4101-8900-3f342b3c3deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46ac8ac-aa5a-46d0-9bdd-53c777c5dab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc5b516-930d-464c-a3b0-6b569dedce2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0bd4c9-1f3b-4a04-9892-8a82f760ba8f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7144db-bbd6-44c5-bf05-690f08dd5cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b4986a-2bef-4b9e-85af-624a189eba3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc499bdb-fafe-4740-b9b1-9c9ab05fe384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b3095e-65e3-43d4-9441-70d6630e2279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc8bea9-3e68-4ce0-be85-46875d2d3b26",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c29a9-1888-45c6-9f3b-eefed58bc2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "240e3e73-4068-4ac5-b2de-4144f3e86835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6669b8-8474-4d2d-8dfb-016d8adbe08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbf8c97-5c0d-4408-a94d-3dfa21f82e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18edde8-3594-4e77-a773-7e190bde7f82",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06652f6-151b-4dc1-9f98-42ccd0d359cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6019cbe0-6c48-43b6-8054-f10876667099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a38b1e-ea76-4a95-991c-2e96fe7872fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6003fb77-a0f2-4d48-9bba-4ec06f32b4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bcf802-58a0-4729-b02c-490853538ff2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce056af4-33fb-401c-ae74-dd0f2dcab492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c2ff56-acb6-49d5-97c0-95941e3aea42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8ef551-1fbf-41b9-83b2-0849cf26fb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec1299d-78c5-4175-8c68-e7a942f2c32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ea13c9-20bc-4202-9004-639f6f1a1406",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afa261c-cee9-4bc2-b06c-486bf7590615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af93a1a-e470-47ca-bfa2-e1186da01429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1106cdbe-2dcb-4ac4-b9db-c80bf5cf0bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8adbb4-8f3e-4a1f-86dc-0cb67c5ce0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382dc654-2a7f-474e-b1c2-f58a3b441203",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c7dcf1-16ad-4c7a-ab7d-6ba3b654eebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a494c6-0bc3-4d90-bb92-a339af45ba1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3b1ced-2c00-4118-a62d-d293efa29a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bed479-302a-46a0-ad5d-463e890ccb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597e0150-3b77-42d3-bf29-dcfc4605947a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff695afe-7913-47d3-bfc0-1a5f2ca2f826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d681c2-ecc1-4837-9171-a039d1ffd804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25774f14-5e70-45f4-ba04-8518d298d8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb34ec49-9b57-4e53-a8b6-542915842aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b07f5e-8bb8-4369-84e0-e50b0e114415",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6de4e0-7dc1-4b52-880e-9a006d29f127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a50aeb-24a8-401a-a87f-9415abe4310b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc18d8f2-ccc2-41e3-920c-f784ad39b95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7646337-cb1b-48cf-ab91-11237e949d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ba88ea-8f36-4be0-a753-1cc41660d4d6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69e44ab-944e-4553-9820-6d6e91503f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ba7e01-3c5d-4842-9858-bfabfcb2862b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71101b9-308d-410d-bc45-f1b77cb318de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6232e658-54be-4779-bdb7-9eeb6931db20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa96565-94dc-42b4-9d84-29241b5fd216",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e9c4a6-4faa-4f67-85b2-d89430efb049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1627fe61-dfab-4a38-b309-ac3cafb2f75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f41b9e2-8b5b-455b-ab6f-033e7504689f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd297fe-38ef-444b-95a5-d0ec9061b64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061421ad-3523-4f4f-9720-bf62654dd472",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94aa260f-008c-4807-89d5-6ac5caa02692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae48feb2-fd72-4ff7-a621-02370a476526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce2a6c2-9d6e-4835-88d8-f32789bafbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f130555-3d37-4138-b0e7-105f5883bf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cbdce0-f859-44da-a583-1f597f38f77c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775f60b1-258c-4f36-8da5-953104857216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2355be1-1d5a-4e9b-9056-9000ee250c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d4c98b-4fe7-44b8-847b-33f15896b44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1daf59-1ee5-4008-97b5-cf6f69aa5369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a617338-09cf-4494-940b-e4c9e3017c6e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422c6522-53bc-421a-b3f1-1c569efcd0ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ca7536-f45b-498d-82b7-250b18f3c10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77d0770-afc7-4a21-bd15-153504c91d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecc25c1-6193-4c6b-9ffc-7482b3abde64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e5a3ce-bca2-4e11-ad76-078eeb6c3cf3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c814756e-3b16-46ea-b76e-64bf2fb39bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ec069b-2ffa-4133-96f8-5648a8e5b9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45da96f5-b5cf-4240-af8a-eb616a597860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05ff04a-bdd5-40db-a8f4-84c47534703c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad0f7be-2f9a-47c1-a14c-8c7093c64e69",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e81d0b-7187-430f-a25d-7999a89e5cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5690eae5-359b-42c5-b57a-07ddd6425b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e973eea2-3286-4190-ade3-ea8e97143808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da2899f-6b14-4a40-ada6-4a0d64e1e867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c06c4b-62ce-4e2f-afaa-42efbd1bc18f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404678af-c6ec-4f5f-b008-8b21a400eaeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9505b7-a9b1-46fe-8dfd-6001ecb70908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f776bcfc-149e-424c-8c86-f04ad585d45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae82cc35-71a5-4693-86e5-a9311b06963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b14d91-f117-4f4f-9977-721cedc68a52",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a51de0-f339-496e-a6e7-19879b5b3f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65da672-abe1-40c4-b973-bc9707f9baf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099dd558-ad43-427a-859d-c1c3b718d562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38debd77-3f89-4e11-ad44-851b0698446b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd3df11-1e3d-4f2c-988b-0d1a1c811adf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71de50be-0c6a-48c2-9d72-e9bcd805a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1d6b2b-1614-41d2-89e5-686ce1013e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9886d2-5c12-4823-af36-fb3b2a68ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd4bbe2-c0cf-4718-a83a-eb5346a55d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca76a6b-303b-4c04-b739-8cb45352a24f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b8ef17-527d-415b-9286-06415ac682a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "626a10d4-f0de-477c-a5c9-3a0b6c9c5ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0a7b49-0dda-412e-9c79-23e1639da567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719fba56-7afc-43b3-beda-0047328f25c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e66ead8-64dd-4d35-bbba-bbf6ce91eb8a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83ab3d3-6216-4b10-a9ff-31f0d1261b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203dc938-797d-4ada-b5e6-904a44602492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9bc950-4ee0-4a2a-b169-62624da2a6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e8180f-c841-4317-8aa5-82a08a277442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1d1302-49e9-4e1e-8321-3ca5bcd2cd58",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e9f167-8d80-46e3-9190-f3a02d2fd543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236a74e8-1ac3-4c5b-8bf8-6d85463bbc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e157003e-0e2f-4925-8a41-c4fee5e3babd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c6f8fb-14eb-42a0-ae48-8d57ab4889fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2058ed26-05a7-424e-99de-da09672bc528",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b1da10-8558-4c4b-b1ae-08d634e6a3b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f58551f-412a-473a-a08b-2c24109795bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99156083-d6bf-4753-8c1e-a509287d8faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6ee8c4-c60d-4161-a471-32b4fdb1b082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207f7531-ce34-4c76-9576-e362470b6d32",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408a91c4-4d93-4181-bcaa-ed4ac5d1e816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0123bbe0-a522-42c9-b2ed-bae67c4b3a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7e11bb-0059-4fc5-85de-32249ec17d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fcd710-7469-4339-945c-e77688611ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b29047-106e-4ae8-91ef-b14e47161e0b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2902ef19-3851-4ff4-8ae9-ffca29ed7d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a50c525e-3dc3-4529-8b08-5ea687731889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dfce7d-f341-4077-a71b-0c8d40240551",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e01d9d1-5559-4bd1-a455-4519a35c85f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaea32e-153b-4d90-af31-3b2b0f418434",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4532e6-ff2d-4d9f-b0b9-5487386a806a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c61519e3-8574-4f3c-8048-4cc605478183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e51dd7a-118e-4c57-b225-676a7b5df8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20eff20d-15cd-4379-a1ea-30a80bae3f4b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25bce673-2373-48f8-8dfc-1861bb14f57e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a3dccad-14eb-40ff-956d-cde8e17da91b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a8e2d8-db36-4202-b588-4795901e039b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0ad6597-b90a-4d58-9302-da869bbd9b2d"
                    }
                  }
                ]
              },
              {
                "id": "e0d8167f-fadf-4b4b-ba3c-d7651c352d68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79540213-2c41-431f-b00b-666496e98354",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a044a3-0f7c-4a3e-a8cb-2992f283531a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f1cef763-00ce-4ace-aad4-fa8dd3e4eec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9b56d1-98df-4bec-9647-b3e9f16a540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee9490ed-5933-4d1f-a870-fb06b30f09b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe37e904-158a-461a-b43d-02a33d716132",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30360bd2-8f04-4e7f-b2b8-39fc25b4b5e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0fe0ff9-c089-4c58-aec9-33807ab43fe0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a34eb64f-76a8-4b14-b36b-b598f9f8e287"
                    }
                  }
                ]
              },
              {
                "id": "215e7414-b040-4cc7-b69b-48fa63325386",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "562fb038-cd78-4d7b-a63f-53f9ee1c64c0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a498e9-476f-403a-8a37-3d6f8a89a405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "99db3277-0c38-4766-a32c-ca001160afdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c395fc2-c7df-47a6-b72f-9c79ab13986c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6769a82b-c721-4b25-bc2a-916a5fb7de70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "153fb439-1ba2-469e-9467-02a4093bb87c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b60497e2-79b4-4bad-82cf-68552d0d2260",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5f2761c-486a-4ac9-bc37-b79f63e352b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "421b6322-3034-4013-9ea5-290f7815cfc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d919f46-c11f-4cd1-bdd4-d1b2e211c709",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4d16f8c-4e6e-416e-b0ae-d4d19038cd9d"
                    }
                  }
                ]
              },
              {
                "id": "8dc18981-692f-46e5-bbfe-adda578285a3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c946fb09-adff-49a9-a932-e3cc28e35a4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e8fe5d5b-456d-42c0-9deb-ff9f6deebada"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d69b064a-433a-493e-abbd-1856caf61d94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48486bdb-93da-491e-8b69-63052f9ab729"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16bbdb6e-aa5d-4db3-b2d2-24e0cb96a527",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e504b54-c6d7-4f6d-be3c-a10173eacc8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "107ff1e0-07d3-448c-bb7d-cf81aea4efb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0926f2d9-a97d-4153-8dbe-b882994187f4"
            }
          }
        ]
      },
      {
        "id": "ae32b20d-db28-4284-b237-7eb3a7f533c2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d53efa44-1bf6-4a8a-ad99-21a6b323f44d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8fc804a-de78-423d-aea1-3845a9f59612",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edff3f23-cb86-4cc3-8525-321e460a2ec2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b59704-9158-497b-80d6-415e11b01ad0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "72615d3d-b04b-47a3-a204-778ad875fe38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95688f0-e2ce-47e0-9194-46aae049ae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee394d04-d8a6-4a8f-9a81-68e58161e7ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d928aaf9-e4ba-41cc-92cd-f7790fcf3dd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceef8e98-8a9b-41c2-9cc1-f8773a398996"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84062cac-8495-434a-8ded-ea67d5ef39a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fecef1cf-af36-49c2-a40d-891b20b50dd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2a0ebb0-5442-4ae8-b5c4-2bbb27b7147d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b927d724-7464-404d-b580-3640f88d3160"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8aaee15-30c1-45e5-9d60-4f92831fad45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7927452c-6493-4752-93ec-ac1ac0eeba5c"
            }
          }
        ]
      },
      {
        "id": "a48b99c6-437f-4e29-a5bd-9b4dbcce406f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "687f0e90-133d-4a25-9eb4-7697fa539702",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfa852d2-0b6a-431b-93e9-27e1731d5948",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d439e0ae-f414-4ac5-b881-c7459d38504d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44112890-2a5b-4f8b-abff-151183f92c2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be4d349d-c12e-473a-8b1c-f99aba561cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027ea3ba-1268-468d-8994-5b48d35727cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09a28a59-eb31-4592-9edc-595eb29d3820"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ace8a49b-b8a4-4b5a-b8a5-aa2436112ab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e07c35d-ace4-4a88-bf9b-6c5cf6cd266e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "902a7bac-6b2a-454c-81ee-9bc865b621b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b009e5cd-4963-48b2-b87d-7da9e03b760d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4d1e0b3-bd58-41b8-a0b3-8665ca214e61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7c99755f-ea08-457c-a8c0-00ba93dd3033"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b89d956d-a11d-4b0a-8003-9cbbf29659fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81af84c0-1545-41d6-88e1-44261362e4b3"
            }
          }
        ]
      },
      {
        "id": "7c6f5fe9-7cd3-4cdb-9ff4-02fe2b539768",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd24b24b-8229-4f60-bcd5-e1f93563e32c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "930d25d9-a664-42b2-9e24-96898b7a4cdb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53e00318-932f-4834-8ab5-6871aed6b919",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a164f2-b2c9-4712-90a0-946cd49e569a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8e34735-4597-4ecf-83d9-a04b50d90f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d5ed7c-caae-4da6-b8c0-07a5b312c9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2776e6e-3b18-48f4-8ee6-ac7cba6f85f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2020217f-e6c7-4e32-846e-b7f0480331b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a301814-ea78-4d03-932c-73d67cf54a12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d85fb98-4d9c-4425-882d-b0e134277651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dad7aa6-6b16-4432-9540-b17df07810ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aff4772-110f-467f-9b0a-f390b2e27a16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d9bbf30-db36-4493-9ef5-1a9aa6130946"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0f55c50-1ff6-409c-82f1-3385ef20572b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c346ebf2-7fab-4453-9126-60309a7a4013"
            }
          }
        ]
      },
      {
        "id": "ae370968-2b1e-4322-9976-60315b0ab89e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21424f86-fdc9-4606-8c4f-587c95ef177a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3aa0268-3dc3-4f4d-8810-8e30e39e964d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "25cda546-bdbc-47cb-bf2e-5bc36f802f3a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2794c1a4-b3c2-4c0a-bc4c-6f88ff2919f2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ccefc64-d886-484c-bff0-d7c4f4a19b39",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.4325396825397,
      "responseMin": 3,
      "responseMax": 6907,
      "responseSd": 590.1472168133955,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725583349716,
      "completed": 1725583382512
    },
    "executions": [
      {
        "id": "ee1ac90d-86f5-441c-9d04-7bbeac7d8eb1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f39f9a7f-c4ab-4f35-96f1-cce9d954fe80",
          "httpRequestId": "027894ad-3f12-4827-bdf2-0a2fc44eb39f"
        },
        "item": {
          "id": "ee1ac90d-86f5-441c-9d04-7bbeac7d8eb1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3c4dc7ed-b70d-47a4-8141-f0edf7cbe448",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "6fe228bb-8265-4247-b7e3-63a71f86c397",
        "cursor": {
          "ref": "f76f5c02-0294-438a-8b93-ed7005028058",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1fc96386-e332-4668-9293-9d09a6988c64"
        },
        "item": {
          "id": "6fe228bb-8265-4247-b7e3-63a71f86c397",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f85c3022-d8b5-4d75-ad28-b95c6b0da9a7",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8770ba86-e14d-472f-93ee-9af82b06a27b",
        "cursor": {
          "ref": "23fbe755-caea-43bc-a88f-f26365c2a970",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d1fdf572-17da-4d3b-843f-b18df246d692"
        },
        "item": {
          "id": "8770ba86-e14d-472f-93ee-9af82b06a27b",
          "name": "did_json"
        },
        "response": {
          "id": "792c8046-01c4-4fa5-8de1-dbb621a93766",
          "status": "OK",
          "code": 200,
          "responseTime": 5079,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c6e6d5-76fa-4b17-8201-af8b34d31ca7",
        "cursor": {
          "ref": "cde9b9cc-994c-4ab2-b1ac-be138996984e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b9a1cf50-0e28-4782-8f2f-3b6b6a15be43"
        },
        "item": {
          "id": "80c6e6d5-76fa-4b17-8201-af8b34d31ca7",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7c2f183-6f2e-4417-82ea-d7325429d405",
          "status": "Not Found",
          "code": 404,
          "responseTime": 353,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c6e6d5-76fa-4b17-8201-af8b34d31ca7",
        "cursor": {
          "ref": "cde9b9cc-994c-4ab2-b1ac-be138996984e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b9a1cf50-0e28-4782-8f2f-3b6b6a15be43"
        },
        "item": {
          "id": "80c6e6d5-76fa-4b17-8201-af8b34d31ca7",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7c2f183-6f2e-4417-82ea-d7325429d405",
          "status": "Not Found",
          "code": 404,
          "responseTime": 353,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb42158-52b7-4c2b-850a-3839baef0dff",
        "cursor": {
          "ref": "a6416d8c-738c-452a-9ebf-d23474786b8f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "597934f9-9c4d-4561-a3b8-4dda8734a7d7"
        },
        "item": {
          "id": "ddb42158-52b7-4c2b-850a-3839baef0dff",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cc19d3f9-bc22-49c0-ac69-0a7d011f7f9b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ca4af9-830b-46ca-af9b-9c40f84c7523",
        "cursor": {
          "ref": "c2a5c2ec-25f2-4628-a864-f24d56e14a38",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "34d339a7-1e9b-473c-9e4a-bc0fa57b8919"
        },
        "item": {
          "id": "f8ca4af9-830b-46ca-af9b-9c40f84c7523",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b9ca7cdd-abc0-432f-a185-c61f62006b0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a39600-49d7-4689-b3c1-dcfd346aabc8",
        "cursor": {
          "ref": "50870ef1-5caf-4b17-9530-e04a383b1425",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8077eb2e-e437-4625-8c80-ef7c7f0f4189"
        },
        "item": {
          "id": "68a39600-49d7-4689-b3c1-dcfd346aabc8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5aa6aca9-9f7e-4ad9-aee2-3e183ff9cdbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197bf877-423b-4f3f-823b-a50dc081e131",
        "cursor": {
          "ref": "6f71dbcd-4dc9-498b-88df-63638aadf62c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4f6f4400-b87d-497e-bc04-54b4aebacd58"
        },
        "item": {
          "id": "197bf877-423b-4f3f-823b-a50dc081e131",
          "name": "identifiers"
        },
        "response": {
          "id": "14e0e1de-d46f-4f8a-b438-f0794365af84",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14aa264c-4b9e-4ada-b536-f0b1db836d59",
        "cursor": {
          "ref": "c3077d68-3d49-43b2-9eca-a8fd4ac69211",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d73dfa8e-fca5-455e-8c9e-b0c605775fc4"
        },
        "item": {
          "id": "14aa264c-4b9e-4ada-b536-f0b1db836d59",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dd712c98-672e-41ff-b791-84971393660b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e302fce-9d72-43a6-8ebb-86934450a4dc",
        "cursor": {
          "ref": "94c9f546-3bee-4fff-936e-1782fcd9c612",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f4e1b110-5425-46bb-90ae-421a5f616915"
        },
        "item": {
          "id": "5e302fce-9d72-43a6-8ebb-86934450a4dc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ae6a30b8-9c51-403c-be60-c4694e5bc6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3b0577-cc11-49a5-a0aa-37181b44a36f",
        "cursor": {
          "ref": "142bae40-e2ae-45e2-9078-4d0482530f60",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e800899a-73df-4bac-b675-7808ced05d67"
        },
        "item": {
          "id": "6f3b0577-cc11-49a5-a0aa-37181b44a36f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e654da0c-b902-447f-b540-4a458c79db9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa104c0-ef55-4d8d-85c4-1fc6a3e4a999",
        "cursor": {
          "ref": "8d13aab3-10f0-42bf-9e79-33fae2b6d766",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5596737-629b-4f9f-a491-06f12575ed3f"
        },
        "item": {
          "id": "caa104c0-ef55-4d8d-85c4-1fc6a3e4a999",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bad38b79-3763-4795-b278-b2422dd0bd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd2bfb1-b5cd-430e-861e-5c03285aebb5",
        "cursor": {
          "ref": "9d6c8796-12f1-44e3-abc1-94788152395f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dbca2470-69d3-4d38-8258-64126254d38b"
        },
        "item": {
          "id": "9cd2bfb1-b5cd-430e-861e-5c03285aebb5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c14cff20-02f9-46a7-905a-192dc923bb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529550fe-923b-44a5-b0b5-3db5c2e46832",
        "cursor": {
          "ref": "741306a0-d681-42ef-83af-141917069315",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "603ee3ac-cb99-48c1-b1a5-cd115b3782dd"
        },
        "item": {
          "id": "529550fe-923b-44a5-b0b5-3db5c2e46832",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0e430d73-1ddb-4abf-8d79-399c1d596ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93ce060-0e00-446a-9928-c62eb8ce71f8",
        "cursor": {
          "ref": "677e5d72-009b-4ace-b121-2d03e665b57f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ccbaf51c-1057-40fa-95b8-cce931c94b93"
        },
        "item": {
          "id": "a93ce060-0e00-446a-9928-c62eb8ce71f8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4f5aee4b-0536-4377-b884-5964679891a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f1d6dd-5a82-441f-9371-d92d3e20bf34",
        "cursor": {
          "ref": "0c666b14-4b23-4baf-9cc0-500e4c6ed9fe",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b08f0002-3e5c-408d-990d-750c25531728"
        },
        "item": {
          "id": "52f1d6dd-5a82-441f-9371-d92d3e20bf34",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c98036a0-1607-432f-9863-affd7182fef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb81d47-53d3-4d83-b620-6f600bf0c76b",
        "cursor": {
          "ref": "c3895278-bd2c-4c77-a212-1e9ebb9b4b75",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7254d3be-799b-42c1-868e-f694b33059ac"
        },
        "item": {
          "id": "8fb81d47-53d3-4d83-b620-6f600bf0c76b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e1e73114-7b88-4ec4-80ad-f2c6d906590b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ef6852-6f5c-4d3a-b317-43445dc263e9",
        "cursor": {
          "ref": "2fcce350-772f-42dc-9da8-29e73a46a40b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "981cf38f-fc0b-4c42-bbb0-a179b9cb175c"
        },
        "item": {
          "id": "c8ef6852-6f5c-4d3a-b317-43445dc263e9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4d9f568a-9903-4a59-9161-19850fceeacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd53174e-c206-446f-b602-ce7fdb3112ec",
        "cursor": {
          "ref": "c3ebe593-d709-41df-9030-919de2bf3726",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fbaeb479-6422-4b07-af54-ebdacceb0cb3"
        },
        "item": {
          "id": "fd53174e-c206-446f-b602-ce7fdb3112ec",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c22f0363-2bfe-4ff2-9e2b-3f1eb72aa270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af35c7e8-83d1-4080-9553-d69c0dfcc481",
        "cursor": {
          "ref": "071b4657-94fd-42b4-bbf7-24ad183db0e9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "935143c0-b024-41e7-9609-216e224018b5"
        },
        "item": {
          "id": "af35c7e8-83d1-4080-9553-d69c0dfcc481",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "75bdf08c-f106-4c74-b12f-1eb51db3c878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f1011c-764f-4659-9854-047007bed28f",
        "cursor": {
          "ref": "fc78c8e9-f04c-4ce4-97ce-5219196b58a8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "183c81c2-49f8-42dd-834d-f64c91402dcb"
        },
        "item": {
          "id": "c8f1011c-764f-4659-9854-047007bed28f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c92cf915-f460-4695-9864-17cd507a40dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385b0001-4be2-4b0e-953e-c0385d7f6494",
        "cursor": {
          "ref": "b94502fc-62c9-4f27-9495-c1aca9815198",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "350a2625-ae11-43ad-b6d1-0e34a76dd23d"
        },
        "item": {
          "id": "385b0001-4be2-4b0e-953e-c0385d7f6494",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "61f952e7-d2b8-4c03-aabb-ed04212298aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a129c99-a597-4a10-b8bc-bafbf4187532",
        "cursor": {
          "ref": "1e00e44c-3b97-482a-a9b1-b533b8177aa0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4dd6b0da-5f66-48b9-a6f8-bff54d9e9166"
        },
        "item": {
          "id": "3a129c99-a597-4a10-b8bc-bafbf4187532",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9a8ce083-bb4a-440c-b5dc-c14b18c6963c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47076c2f-0c7e-464b-81a3-450d5ef57f95",
        "cursor": {
          "ref": "84c7e4f2-701f-448c-aaca-ef83f267ecd9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9ab976e-ed3c-4045-a011-9a51015563f5"
        },
        "item": {
          "id": "47076c2f-0c7e-464b-81a3-450d5ef57f95",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "21d8fd9a-c9a4-48ee-a6e1-77344b4ae2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6521be2-af74-4cfc-a527-c7af7d6c8293",
        "cursor": {
          "ref": "782fbc8a-4aac-4ffb-a8b2-e9c37e75c536",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "85ea93df-7630-41b2-ad1c-813f8c3e37c5"
        },
        "item": {
          "id": "d6521be2-af74-4cfc-a527-c7af7d6c8293",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4462f22a-f49a-47f0-97db-aa378698dd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33c5ae0-9339-42fa-a60b-cc2221572769",
        "cursor": {
          "ref": "0e45abe7-4082-4201-89fd-0f76fbe1c574",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "37ba0122-c90a-410b-9521-9a89bc12cb35"
        },
        "item": {
          "id": "c33c5ae0-9339-42fa-a60b-cc2221572769",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "138811f0-1d5c-4db0-ba29-def4f88ca723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362b6150-6385-42a2-ad32-a1520eaec452",
        "cursor": {
          "ref": "c4b1a24c-ddde-466a-8e0d-825e868b8d02",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "88f70578-bf72-463c-a292-837b07e8323b"
        },
        "item": {
          "id": "362b6150-6385-42a2-ad32-a1520eaec452",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6c21ade3-b08d-4985-8c1c-b642a783471f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f797b7-a766-4640-a7d8-606c3a0e229f",
        "cursor": {
          "ref": "e8eaba6e-b19b-4c33-bb5e-58e51a79c421",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7bf91991-2f20-4a39-a076-f87f7f58d16f"
        },
        "item": {
          "id": "e2f797b7-a766-4640-a7d8-606c3a0e229f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "68c52a15-e3f2-4cdd-9754-28ec22c0f0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afff5c3c-40c7-48f8-a306-a1f21cb4eadc",
        "cursor": {
          "ref": "2fd18684-81a4-44ae-b0da-e8035090a158",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c633fe56-a808-4279-97fa-06cc1e2c14de"
        },
        "item": {
          "id": "afff5c3c-40c7-48f8-a306-a1f21cb4eadc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bbf6d265-20a6-42a0-b3bb-068c316c91b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1e3a6e-9d45-4c7b-82e8-79ca53cb0ad7",
        "cursor": {
          "ref": "f4c3169e-5144-4ad1-9037-57d8076f4238",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5b6efd56-c15d-4faa-83b2-f8afd144a00a"
        },
        "item": {
          "id": "9c1e3a6e-9d45-4c7b-82e8-79ca53cb0ad7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "54362ff0-4fb2-46a5-a628-69882b9121c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6158c4f4-a82b-4751-852b-73450295ce8f",
        "cursor": {
          "ref": "94341d3f-6bf5-4d56-a735-2ff23228aa07",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e1c67916-0e0c-4fb3-a07e-9a681fd9f6f7"
        },
        "item": {
          "id": "6158c4f4-a82b-4751-852b-73450295ce8f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "692c32f1-78b9-4a14-8a8b-f58310ff15f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d792c4f-e77f-4689-b7c0-1f624e0a8576",
        "cursor": {
          "ref": "9dfa0285-721d-4ba7-be72-151efcd53ec1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "56a42345-22a8-45bd-9413-4f3f23950ac6"
        },
        "item": {
          "id": "6d792c4f-e77f-4689-b7c0-1f624e0a8576",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4ab169bd-cb2e-496c-8780-ab5f8374d407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fffea14-2532-4b4c-8b51-993e09dd2b08",
        "cursor": {
          "ref": "72d6dc38-4e8f-4a4b-b8c9-700a128fc200",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b7b65cfa-f43c-497b-854f-7d4daa39be75"
        },
        "item": {
          "id": "5fffea14-2532-4b4c-8b51-993e09dd2b08",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5d001670-7ef5-4d75-a03b-ee2201a53ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47579d1a-1bca-46d5-9923-866c4f18e014",
        "cursor": {
          "ref": "13debe66-6132-49b3-9c24-6f7f29331734",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c2744586-ac1c-4e59-a54a-bf14f54bf916"
        },
        "item": {
          "id": "47579d1a-1bca-46d5-9923-866c4f18e014",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b156ee42-5930-4645-92ad-6d0796926850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb619a9b-5fea-4fdb-b74a-7ad24eb3c9b5",
        "cursor": {
          "ref": "09a4a478-c966-4ee8-baeb-b79e9e6b5150",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f9990908-4d2d-4583-ae05-fbc33a07ebf6"
        },
        "item": {
          "id": "eb619a9b-5fea-4fdb-b74a-7ad24eb3c9b5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "28568110-d3c5-41ea-97f0-26941c5e8ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c45fc54-8ee5-4adc-bf39-5770498bfe51",
        "cursor": {
          "ref": "49b2cfd7-2d31-4a78-881d-81e24cbf2187",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "86e9bb3d-9c9b-426c-898d-9d8c8fe85f97"
        },
        "item": {
          "id": "1c45fc54-8ee5-4adc-bf39-5770498bfe51",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e5601b59-b56e-4851-a71e-0d270aab7a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1d54c0-c5e5-4008-9cf9-f90fbe8ad649",
        "cursor": {
          "ref": "93719749-a944-4284-ad3b-2c32202a965a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bab3222f-1ecf-4c63-8c98-aab589db2c5b"
        },
        "item": {
          "id": "7d1d54c0-c5e5-4008-9cf9-f90fbe8ad649",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1408abb6-f984-4b14-821c-de57acbc84bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93602c04-6ad4-4024-8404-56c05904ca0a",
        "cursor": {
          "ref": "ce637c1f-3218-466d-8d27-9a8df615d53c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e89e5bee-dd56-4be6-9c2f-eaf5f63de838"
        },
        "item": {
          "id": "93602c04-6ad4-4024-8404-56c05904ca0a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "05706476-d737-4ab1-a2c8-87c1d7c0d361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fc1b7a-f7b5-44b1-a21e-57d343a8e4f2",
        "cursor": {
          "ref": "78a3a7e9-07e8-4fa0-b5e3-2ba8352c46ca",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "96e26edd-4c39-45be-b471-16c98b423489"
        },
        "item": {
          "id": "d7fc1b7a-f7b5-44b1-a21e-57d343a8e4f2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "405fa776-86ac-40d2-bce8-db7df7649c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ac6220-7aaa-498e-90d4-a2e586209243",
        "cursor": {
          "ref": "b3cc8059-c988-4239-a4c4-1c74790c6394",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "33623241-7ebe-4ff3-ad27-e58e9dead0a7"
        },
        "item": {
          "id": "84ac6220-7aaa-498e-90d4-a2e586209243",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "da219903-def2-45d8-a178-ad94b0c82366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e06621e-02ad-4e96-b187-f6c5fa0a0f77",
        "cursor": {
          "ref": "b4f8ea00-9729-438d-a533-e1a6afa84a9b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e734d6f6-8567-422d-8df7-7b0dc1aa9dbb"
        },
        "item": {
          "id": "5e06621e-02ad-4e96-b187-f6c5fa0a0f77",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0182d567-6eb0-409b-a9af-785d463e5506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdcf993-08ae-4e0f-b79d-88219a459dc8",
        "cursor": {
          "ref": "f16033b4-25ba-4948-847a-cfbc214543ec",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "724f1bcf-17dc-4e7b-8775-0ba0eea2df26"
        },
        "item": {
          "id": "cfdcf993-08ae-4e0f-b79d-88219a459dc8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "827fed81-4b12-4d43-bed1-ae4e03457ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5c9648-15c7-49e8-98cf-6f5ef6be4e2c",
        "cursor": {
          "ref": "9af80542-23d2-47cb-9fe6-8d78565097a4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5fed1bc9-9fb4-4af0-a238-eca0abac8339"
        },
        "item": {
          "id": "3b5c9648-15c7-49e8-98cf-6f5ef6be4e2c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dd8f574c-f185-4232-ba9b-0b38fc21341b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d443d2-fa00-4555-9c5e-2bf1e7e080a5",
        "cursor": {
          "ref": "edd8285e-43e7-4375-9bfb-2613f4ecca01",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b4c979ce-612f-4160-a71d-7c61055d38b6"
        },
        "item": {
          "id": "c9d443d2-fa00-4555-9c5e-2bf1e7e080a5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2a88e8cd-c1dd-4d6c-b438-ce8a6d4fd581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146490b1-1d11-40f4-8273-5414ecbcf22d",
        "cursor": {
          "ref": "73659ad4-4e4f-47d1-8797-13e0bc6ed854",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d49aea3c-4b88-40f1-82f1-882b164f41bc"
        },
        "item": {
          "id": "146490b1-1d11-40f4-8273-5414ecbcf22d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b751fc62-bf77-43ed-8444-cb775a2cf8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffccb45-af13-4a2d-b368-2e6f73052c45",
        "cursor": {
          "ref": "77140996-47e9-4245-b4a1-0f53cf1139e8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9c3b3b65-cd98-4d57-a21c-3d0891e92497"
        },
        "item": {
          "id": "9ffccb45-af13-4a2d-b368-2e6f73052c45",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9eea3934-7666-49b2-b49d-9483c7c11411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e37c6a-f2c3-4649-bf14-12c5a51153d0",
        "cursor": {
          "ref": "f2a084e5-cfb1-45a1-9943-79224eaca0c6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ae845417-ba02-406e-852c-0891e07e10ba"
        },
        "item": {
          "id": "11e37c6a-f2c3-4649-bf14-12c5a51153d0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "092d633b-4ff2-4169-aeed-7b871650768f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee6489d-0135-449e-b5dc-f652f3441a69",
        "cursor": {
          "ref": "f137d04b-8bdc-4a7b-b6a3-cf55a9904815",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2fcb7c47-cd7b-4ee8-a16c-54f73fb44404"
        },
        "item": {
          "id": "dee6489d-0135-449e-b5dc-f652f3441a69",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c8fe8fc7-1aeb-4e3b-ab0c-45c2219c1c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bae69d-3f3f-4d3a-8ccd-f18c912d5569",
        "cursor": {
          "ref": "b220649f-c5a7-4a54-9c79-c6f2a8a0a16d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d41253d1-7d58-4146-8de6-d9e2e26fb5f1"
        },
        "item": {
          "id": "b7bae69d-3f3f-4d3a-8ccd-f18c912d5569",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4f779c26-e771-4702-ac92-071ea60b3880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1225cd-a309-4e84-ba89-248f7bd2fcf1",
        "cursor": {
          "ref": "1c430651-29f2-44f7-9b3d-563dc1893ddf",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d8b0cbb6-3bf0-4139-aa73-7bb1a195dc06"
        },
        "item": {
          "id": "cd1225cd-a309-4e84-ba89-248f7bd2fcf1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b85f3c3a-dbb4-4648-b274-4c1ae445194f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f819b59a-c1fa-4ac5-b072-92abb971e7b7",
        "cursor": {
          "ref": "759c2643-a925-4046-876c-ace9020edcc5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "52d160fa-1567-4eeb-bb23-f6be6347888c"
        },
        "item": {
          "id": "f819b59a-c1fa-4ac5-b072-92abb971e7b7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d2263fac-2e7e-428b-a181-6ade988abb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc4155-9f5f-40fa-85f7-0ff08253e867",
        "cursor": {
          "ref": "a9200eba-8ac4-4b44-9d97-955faa42888e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9028507f-7848-44a0-90ea-e32c82040b94"
        },
        "item": {
          "id": "fafc4155-9f5f-40fa-85f7-0ff08253e867",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "56003d60-62e0-4640-aae1-52ee60853678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b46cff2-e58d-404a-ae1b-03d811b002b3",
        "cursor": {
          "ref": "6bf5cdfa-4f2d-45d2-a285-e95855139ccd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "79431599-bd8e-4d5c-a00d-007fa3b51e86"
        },
        "item": {
          "id": "0b46cff2-e58d-404a-ae1b-03d811b002b3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "60f32861-6dcc-4ed7-b434-1331710d2b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f6587b-a6c2-4bbe-a412-31ea6b32b02a",
        "cursor": {
          "ref": "b55eab90-403e-4d04-860a-ee14dbfecfb7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e0001061-1df6-4d3e-bdc9-e8b48c3747f6"
        },
        "item": {
          "id": "b2f6587b-a6c2-4bbe-a412-31ea6b32b02a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7080e6e9-3a29-480d-8a71-d4ceebc92c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6dd67c-9d3b-42f4-b0f6-7939cb117120",
        "cursor": {
          "ref": "c718a4e9-2d9b-491c-a334-51fb7f7d1ddc",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0a3ef330-8925-4486-8b12-e5d81b157d76"
        },
        "item": {
          "id": "3b6dd67c-9d3b-42f4-b0f6-7939cb117120",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "48f73b6b-6d86-4578-b784-9fe867b056c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2155cad-f8fc-4a2a-9751-8046d6d5cdf8",
        "cursor": {
          "ref": "8f39158b-42c1-44fd-9b87-2adcb1c99db5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c3e42bfb-817c-4039-b4b3-623e0324992b"
        },
        "item": {
          "id": "f2155cad-f8fc-4a2a-9751-8046d6d5cdf8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dc3d7b5c-dd18-49b0-b82c-214e2fd5bad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b32b2a-d976-48af-aca9-58f93ca2dc84",
        "cursor": {
          "ref": "fbb1a497-a533-42fc-be59-66c896d56d4a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f09b7ad7-b2b5-451d-b3dc-29e7eff4c8ef"
        },
        "item": {
          "id": "c8b32b2a-d976-48af-aca9-58f93ca2dc84",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "384619b5-99e3-44b3-ae88-5c5721062988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015a3892-3806-4e4b-be8a-0b8ac47fe6e7",
        "cursor": {
          "ref": "aefea134-79f9-4334-957a-23b75ee3fb5f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e4354855-bddf-4603-bd68-69bfba9bedea"
        },
        "item": {
          "id": "015a3892-3806-4e4b-be8a-0b8ac47fe6e7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f2d1e115-db80-4594-a839-d5b4c9f6834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7bd302-1888-4164-bbd8-9ce8eb4f48dc",
        "cursor": {
          "ref": "0f7fb8d3-8a77-4328-a0d6-98b9b0e7b5b6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6f4bcb10-ae04-4da2-bba2-cc6ec9d652e4"
        },
        "item": {
          "id": "7c7bd302-1888-4164-bbd8-9ce8eb4f48dc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5495c1fd-31c6-4bd0-9f2a-cb46000f7524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c75f4ae-6a87-4831-9697-92cc70d4ef41",
        "cursor": {
          "ref": "0aac6942-c1d1-4d4b-8670-70b5711f82ab",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fee866b7-eb97-4dad-87d9-74b69b8b1d0f"
        },
        "item": {
          "id": "6c75f4ae-6a87-4831-9697-92cc70d4ef41",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dec07f46-760e-48db-a9b1-048b9aa33c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c791f1-bda8-41b4-81a9-f8443e60a217",
        "cursor": {
          "ref": "ea80452e-76b3-4703-964a-cfc7bff87f86",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2bdb5886-5692-40a3-a5a3-d8c152aeb588"
        },
        "item": {
          "id": "22c791f1-bda8-41b4-81a9-f8443e60a217",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7f35691b-0d23-4eb9-9a3b-dad8049afc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a949a40d-52f2-44f5-a33b-02b648f666c1",
        "cursor": {
          "ref": "4722a897-3b1b-4999-811e-f51498878ab3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3bb4e430-5c45-4823-b3ec-263f82b55471"
        },
        "item": {
          "id": "a949a40d-52f2-44f5-a33b-02b648f666c1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6bd95c11-b651-48ba-8daf-6cc9fd4dd094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315a5ae9-f36e-407c-a14c-41fb049b9328",
        "cursor": {
          "ref": "97906062-bec8-43a3-a9ee-57dcc7306c2c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fbdd1c0b-1522-470b-91dc-59bd48e30a48"
        },
        "item": {
          "id": "315a5ae9-f36e-407c-a14c-41fb049b9328",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dc7cc1df-bc39-4752-9d6d-36dbc6b04c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524ae1b7-c341-440f-ba5a-4ab96fef13b5",
        "cursor": {
          "ref": "0de292e7-3381-4167-9d38-1b57f3f763a5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "31ad42ef-9f68-4bbb-8ae1-c5386ccf010a"
        },
        "item": {
          "id": "524ae1b7-c341-440f-ba5a-4ab96fef13b5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d6a5094b-9d6f-4186-acc1-d7fa527911e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d922caf0-2f75-4001-8ca3-113020481b17",
        "cursor": {
          "ref": "74ae0d14-f938-4908-a092-4a9293e11188",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "102797ea-1ae3-4c4c-b77f-c8bb6995f8d9"
        },
        "item": {
          "id": "d922caf0-2f75-4001-8ca3-113020481b17",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a02ebda3-0aec-4b46-a4f1-845901ca686a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a778d2-93ac-4e5e-823b-a816d6dbaba1",
        "cursor": {
          "ref": "ec3f245c-6f51-4e74-a55f-4db7556e2ded",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7af43659-9901-4637-b0a8-8677835bcc09"
        },
        "item": {
          "id": "28a778d2-93ac-4e5e-823b-a816d6dbaba1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "530d1dd1-1b86-4183-8f4c-70ab97c41270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69a2d32-30fc-4894-9ba4-2e63b211b28b",
        "cursor": {
          "ref": "1cc86a15-4654-44b2-be39-0ca90ca93dfd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "42296145-c938-4eeb-8491-b6938485e1ca"
        },
        "item": {
          "id": "c69a2d32-30fc-4894-9ba4-2e63b211b28b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "44cb1e9e-d240-464a-b999-e109bcb4f7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b22f90e-64de-437e-9233-db7b9f8b980a",
        "cursor": {
          "ref": "03a967dc-dc13-4d3d-8fb9-21fd35263c5a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e5b9ddd5-9749-469a-83f9-4d166dbe9f60"
        },
        "item": {
          "id": "4b22f90e-64de-437e-9233-db7b9f8b980a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "80315ba5-fdaf-465f-90a4-feab865ab753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83168a83-7754-436a-982c-4fc01681b1cb",
        "cursor": {
          "ref": "c3544b0f-f95c-47aa-9fec-c50b4ed6d4e1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8729768e-2ef7-4343-8cdf-352d2019846a"
        },
        "item": {
          "id": "83168a83-7754-436a-982c-4fc01681b1cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "70d29ab6-e0a6-406b-973b-7a8b4f858a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0995823a-3ba4-4f42-b292-25ed1b3366b7",
        "cursor": {
          "ref": "8de7b122-6c07-4de2-9565-c7da712ba5f7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "abd66cd3-cede-404e-acd6-f142b8d074ef"
        },
        "item": {
          "id": "0995823a-3ba4-4f42-b292-25ed1b3366b7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "872870ca-4e9c-464a-8148-d7fad2f0b48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80ea8b4-e02c-475c-b124-cdc737dd58b3",
        "cursor": {
          "ref": "7de1050b-9cb3-4304-a697-8075ec83d6d4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fede9493-19ec-4552-9572-81151fc13df5"
        },
        "item": {
          "id": "c80ea8b4-e02c-475c-b124-cdc737dd58b3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "02cd9187-2122-4d7c-9a1d-97c0991e0c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31d34f6-74f3-413c-b05a-49f112a72383",
        "cursor": {
          "ref": "c5e00b0b-bb14-4d37-959e-0b495eb01cfe",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "980dac92-ce45-4ac5-b483-36fe7306bf1f"
        },
        "item": {
          "id": "f31d34f6-74f3-413c-b05a-49f112a72383",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1d1e3874-e4eb-4242-a1d6-1f8ce35029f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f9915a-d64f-4c4b-bfb5-c77c9ea87240",
        "cursor": {
          "ref": "203fea60-9937-4cbf-b3e4-eeab068840ec",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d304c65e-bee3-4d28-ba4b-013dfc9f5777"
        },
        "item": {
          "id": "b7f9915a-d64f-4c4b-bfb5-c77c9ea87240",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ee5743bb-5f40-4260-8036-b95a93a06318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09307b4d-386f-4675-857d-aace090bf588",
        "cursor": {
          "ref": "97d66b58-d623-4c39-aa6a-eed64747bf22",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9e42cacf-aad0-41f3-b433-f3b71a85a431"
        },
        "item": {
          "id": "09307b4d-386f-4675-857d-aace090bf588",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d33a7812-a350-4d43-a838-72250782ec23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c11d150-dc3e-4a2f-a0d3-3869dfef63ae",
        "cursor": {
          "ref": "3c38e60c-4ead-41af-976a-167769bf6c79",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "283be47c-1278-49b0-8068-093653c65a0a"
        },
        "item": {
          "id": "2c11d150-dc3e-4a2f-a0d3-3869dfef63ae",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6c209134-ba88-46f2-8561-f99984844fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c7929d-8f79-4a89-b11a-3fb12c16b1f9",
        "cursor": {
          "ref": "5418bc97-90b3-4de4-a62f-a40ae7eed9c8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "42f16c41-0485-442f-9c59-0853167eba96"
        },
        "item": {
          "id": "00c7929d-8f79-4a89-b11a-3fb12c16b1f9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "66005a44-f220-4848-9b2f-809502d1ef2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9020fd-5aec-4f32-bc1c-b7298f92a85c",
        "cursor": {
          "ref": "05111666-7083-4926-b10c-b01faa6d5acc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b7ff7fa1-a1c2-425a-80b7-a49e8f9d48dc"
        },
        "item": {
          "id": "ab9020fd-5aec-4f32-bc1c-b7298f92a85c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1927d11d-e693-47cc-8a01-1a1419f00abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d75b245-da69-4ec1-9423-f23968e5797f",
        "cursor": {
          "ref": "80976bfa-c085-419b-90a8-455581172a76",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "90b40f8a-1789-4e36-883b-64afdc74bde1"
        },
        "item": {
          "id": "5d75b245-da69-4ec1-9423-f23968e5797f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b15405ca-1501-4b95-957f-4feb145b4411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0221621-1bff-4b61-a13d-9876ed6783ca",
        "cursor": {
          "ref": "abe624a0-fc36-4903-b8a2-c862187cc835",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "799542e5-2d22-47f0-b0f6-cee097f6efcb"
        },
        "item": {
          "id": "d0221621-1bff-4b61-a13d-9876ed6783ca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eb599eab-37c6-4936-9ab3-e0fa3451ac68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccee81f-a0eb-497e-8f72-4717ed3cb5e0",
        "cursor": {
          "ref": "c2861ebd-0994-4c26-9467-e2943f886fa1",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a2f7db4d-ea9a-4c6d-b750-3e7d675e00e5"
        },
        "item": {
          "id": "0ccee81f-a0eb-497e-8f72-4717ed3cb5e0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "196d0387-3acc-4487-bdc8-3d4b8522574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1336d780-29b9-490c-90e1-29b6063d6f39",
        "cursor": {
          "ref": "70ed87bf-43ca-47ec-92a8-9b9fd5d96f10",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f929e5fa-41dd-4010-bc5f-628fb7974c5a"
        },
        "item": {
          "id": "1336d780-29b9-490c-90e1-29b6063d6f39",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3451749e-6c18-4756-a5ce-6e316cff0467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e89719-fed9-480e-95c1-8b7088448547",
        "cursor": {
          "ref": "847b98ad-adc1-48fa-8535-e17cb70a3d1c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a935d744-6b71-4c62-82c2-17fcd4d52c21"
        },
        "item": {
          "id": "c5e89719-fed9-480e-95c1-8b7088448547",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7cd67c45-3e4e-4213-a951-ecb5acb2e97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f651769-46db-4329-ac0e-a9fc45708f01",
        "cursor": {
          "ref": "ebeca95a-8fa4-4465-9e84-252505ae4eef",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "891a4431-1c29-46e6-9b05-feeead908382"
        },
        "item": {
          "id": "8f651769-46db-4329-ac0e-a9fc45708f01",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "83f9436e-d19d-446b-9ac0-137d7b8b0949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f2609b-02d1-40e9-bbeb-fefb3e906383",
        "cursor": {
          "ref": "518802a2-5c58-4691-aeb0-114281cf4c15",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "587c8e33-eeb8-499c-9194-0746e893c281"
        },
        "item": {
          "id": "60f2609b-02d1-40e9-bbeb-fefb3e906383",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4ee5a81e-7db3-40ae-8e81-3d8bd2e26b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635368f8-a643-4c15-8c98-a093c606b12e",
        "cursor": {
          "ref": "aead3857-71c2-4d46-a1bc-a60262f7d239",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6cfce353-7264-4952-a7b2-a93035a5c150"
        },
        "item": {
          "id": "635368f8-a643-4c15-8c98-a093c606b12e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "93e4dbdc-6aeb-4c87-ac0b-7b51b3400829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d09bc6f-7e3d-4644-8cec-dd5c578f6b60",
        "cursor": {
          "ref": "f87b0970-cc0d-45b6-9995-ebf5850e40d6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "babd20b0-76fc-4adf-adb6-1964282d1c22"
        },
        "item": {
          "id": "3d09bc6f-7e3d-4644-8cec-dd5c578f6b60",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "092cfa1f-09e2-4984-89d0-1ead206597e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8667f142-351e-41c6-8608-fc63c648024a",
        "cursor": {
          "ref": "bded6572-4d9b-4e62-a200-87b1a0569d9f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f9323df6-be8a-4019-b4b4-95ef8167100f"
        },
        "item": {
          "id": "8667f142-351e-41c6-8608-fc63c648024a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "626617fb-cc9a-47a6-982d-98aba9c6e839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1cc0c1-2978-4b9f-854f-28756adb1a51",
        "cursor": {
          "ref": "7d4826ce-bbb5-4e84-8b6d-a8256838a5dd",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8a3b34be-2c9a-4e2d-858b-d996b8103ec1"
        },
        "item": {
          "id": "bd1cc0c1-2978-4b9f-854f-28756adb1a51",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "62094610-0d29-4677-a94c-7968d9aaa1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2993928-65d4-4e38-8af7-5cf4c3852133",
        "cursor": {
          "ref": "a596f573-f3b5-4407-84ed-bcc668ce2086",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9e56b9ef-ca01-4ee7-b3f1-f0f86336f903"
        },
        "item": {
          "id": "e2993928-65d4-4e38-8af7-5cf4c3852133",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "69133f65-942c-41c4-9e02-eb81afc003bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91131103-db02-405f-a639-dc736539fb67",
        "cursor": {
          "ref": "5d5771ee-8e2b-4856-aef3-6eda2775674e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "63c135d2-617d-4656-ba72-8d952db5dc6d"
        },
        "item": {
          "id": "91131103-db02-405f-a639-dc736539fb67",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "001e7f26-c494-4102-9f5b-cb9f8a1284c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955c00fb-89a1-4167-b4c0-6cf0b916eb16",
        "cursor": {
          "ref": "2a3cf2a0-5bf5-49f0-a9f0-499dcfcfa158",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1dd0c47f-d99c-4014-8251-37cad7e32ed5"
        },
        "item": {
          "id": "955c00fb-89a1-4167-b4c0-6cf0b916eb16",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d537ba69-f202-4ed8-8867-55dca03db1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43398827-7866-4783-870d-84107b2a4373",
        "cursor": {
          "ref": "d5486076-ec9d-48be-b4f7-2e37997b5aab",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dc1ef67d-56b5-4c14-961e-a4306b9356f0"
        },
        "item": {
          "id": "43398827-7866-4783-870d-84107b2a4373",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dc8e97c4-3303-4c68-bfc3-daa1a177670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e29fdc-e642-470f-b5eb-d7e969410061",
        "cursor": {
          "ref": "4d03e927-d451-4cb5-943e-4046431e7105",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6f52a2b7-0a6e-46cd-83d9-7a73ee96507f"
        },
        "item": {
          "id": "12e29fdc-e642-470f-b5eb-d7e969410061",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4675d30e-2ee6-4ff7-9e4d-3eda00814c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b65c8ac-da9f-4890-8d27-4091df841086",
        "cursor": {
          "ref": "13e7528e-8f86-4427-acc2-26ed8e3b821b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cb77266e-809a-4bdf-af7c-3c45af6134cf"
        },
        "item": {
          "id": "5b65c8ac-da9f-4890-8d27-4091df841086",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "524ad021-bfd1-471a-a2e2-c7fbc15e9cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa916f44-3e73-458a-9c0d-88200b99f03b",
        "cursor": {
          "ref": "5c4a4b44-843c-409a-ad94-5ebe28f561ea",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b541070e-d9a7-40fb-9b35-052f2e24b3b0"
        },
        "item": {
          "id": "aa916f44-3e73-458a-9c0d-88200b99f03b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fa29da97-d558-4037-a387-77a7473224ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c8a4af-b33a-4280-957c-82ed5937485a",
        "cursor": {
          "ref": "3892d47e-228e-4a57-beb1-4a57fcf45ced",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f2c64a7a-a923-461e-88b0-645935c14a91"
        },
        "item": {
          "id": "39c8a4af-b33a-4280-957c-82ed5937485a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2243801f-899e-4db7-b0c8-bbdd09ae36f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f8a54a-c189-48c8-aaec-1fbbe7ab2228",
        "cursor": {
          "ref": "d19d73a2-ca3a-4035-b3ba-275e9a894e21",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bedf2b53-24fa-4f8d-aee7-839b91ff6234"
        },
        "item": {
          "id": "63f8a54a-c189-48c8-aaec-1fbbe7ab2228",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f8f8020e-cb7c-4e28-9a26-7a969d41c499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0976111a-e8e5-4b41-962e-8a4d4e30b645",
        "cursor": {
          "ref": "8433d933-f906-40c6-a361-632bb83b22f0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "21191547-950b-4390-86ba-dbdf2218688e"
        },
        "item": {
          "id": "0976111a-e8e5-4b41-962e-8a4d4e30b645",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9d52ab0d-0278-41d7-9a69-9ccc2657773d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cb7059-1ebb-4421-a249-9b4c499a24e7",
        "cursor": {
          "ref": "aac8b949-9178-4862-b0bc-61491e1c2fdd",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "801209d5-c1b5-4acd-9720-31cb1f1d5a1f"
        },
        "item": {
          "id": "56cb7059-1ebb-4421-a249-9b4c499a24e7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fedb0d4b-b80b-4f9c-bbad-21d161b1e8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae91dcc0-a050-4fab-a7b4-5f9f7d33875b",
        "cursor": {
          "ref": "5efcc1c6-8048-49e7-afbe-6e6cc25dc05f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c2bbdb1c-3096-471f-998f-b5f4e3ac7dd3"
        },
        "item": {
          "id": "ae91dcc0-a050-4fab-a7b4-5f9f7d33875b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ab6c1d97-b456-4c7b-acb8-0691057dcbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4219d8a6-3d0d-4416-b0da-c7fae5317efc",
        "cursor": {
          "ref": "b3d877b5-48c4-4b0a-b6ff-4284744613ff",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c8640975-ce5d-4334-907a-39ff8ebec47b"
        },
        "item": {
          "id": "4219d8a6-3d0d-4416-b0da-c7fae5317efc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "75282e88-fcbb-487c-95a9-1da37427ac77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f6cc0c-f477-48dc-b780-9a41f2f4e1d2",
        "cursor": {
          "ref": "93c1a43a-4272-430a-8e10-2b48b70803e8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6738b8f5-fedd-4223-99f8-664f1f0b35e3"
        },
        "item": {
          "id": "48f6cc0c-f477-48dc-b780-9a41f2f4e1d2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "89f275d5-d197-41f8-bc45-4224c9a01136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a0f43dc1-a253-411f-80d6-4f721645cc43",
        "cursor": {
          "ref": "4783baa4-de94-44d2-b0d4-3d6d85c7f773",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d182f80b-1772-42c8-8e67-acb7811ede8f"
        },
        "item": {
          "id": "a0f43dc1-a253-411f-80d6-4f721645cc43",
          "name": "credentials_issue"
        },
        "response": {
          "id": "011e2f92-fc38-477d-afbe-ffe34430afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "43a77bac-e967-4666-8658-a92a1d72a50d",
        "cursor": {
          "ref": "3c67412a-f331-4b06-9da4-adec1e04c13a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ad661547-6e73-4a62-8515-f72f5548998d"
        },
        "item": {
          "id": "43a77bac-e967-4666-8658-a92a1d72a50d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f07060f2-1ce7-4f81-85e9-a8382818abfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "da17c5e0-b30f-4706-8314-d450550b5cec",
        "cursor": {
          "ref": "b38f3ea7-232f-467b-bb01-1457075c23cc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "05f3a1ed-7c1f-4c28-b0ea-d244cb4ed67d"
        },
        "item": {
          "id": "da17c5e0-b30f-4706-8314-d450550b5cec",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7f13b538-af6b-47c3-ac79-73438cd49d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f9ca261b-baec-45f3-8447-73151b683a60",
        "cursor": {
          "ref": "b82d0c54-c0d7-4708-ab95-13460e089f48",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ffe9f178-bb9c-4fca-90bf-221663ae43c4"
        },
        "item": {
          "id": "f9ca261b-baec-45f3-8447-73151b683a60",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "207dfd67-93d0-4e41-baf6-544bac7b86f9",
          "status": "Created",
          "code": 201,
          "responseTime": 6907,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb050692-7566-411d-91c8-2ea66a128437",
        "cursor": {
          "ref": "ab27a01f-740e-4219-bcb7-85b0efa8170a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6ea63c77-5f5c-430a-92f4-b224818038ab"
        },
        "item": {
          "id": "eb050692-7566-411d-91c8-2ea66a128437",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "49644f51-67c9-4268-9e2a-6272a56fc669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7f0176a1-06ef-45b1-a218-691ed4307bbf",
        "cursor": {
          "ref": "0f19749f-7d75-44e5-9aee-4398f369a97e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d18904ac-6f00-4a76-bdc6-121136f0d0f3"
        },
        "item": {
          "id": "7f0176a1-06ef-45b1-a218-691ed4307bbf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "468f03e5-2c1b-4359-bc77-b2a0a929b3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "28115ec3-ae72-41dd-9ab9-66f1a6d84694",
        "cursor": {
          "ref": "8500445d-619e-4fae-ad5a-45356e465703",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aac16926-f449-49a6-849c-05db5feb8c7d"
        },
        "item": {
          "id": "28115ec3-ae72-41dd-9ab9-66f1a6d84694",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "147aeba0-251d-4800-87c6-ed799ecdd4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de5c713-14ae-499d-aa23-f7a0f103f177",
        "cursor": {
          "ref": "00c785da-c855-4d92-abdf-fb651725b702",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "27fba8ed-204a-4bf1-9509-5a5b90206194"
        },
        "item": {
          "id": "1de5c713-14ae-499d-aa23-f7a0f103f177",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ade815a-63dd-4b9f-9c13-3629a775fbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472481a8-7658-4608-bf3a-49b3fbf9288a",
        "cursor": {
          "ref": "d6259aee-13c3-4f7e-9f7e-625ffced364f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "82361488-cb4d-4310-928c-efaf1ccf9fd3"
        },
        "item": {
          "id": "472481a8-7658-4608-bf3a-49b3fbf9288a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9b4b0369-7315-48ba-a154-15a77640624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d746fe4-7ba8-4b56-bfbc-ea05341b97bc",
        "cursor": {
          "ref": "5b3ec2ee-1c89-43db-b701-8a3f8141dc33",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "726566ff-9f11-475c-9e5e-24de7d3e2d2d"
        },
        "item": {
          "id": "5d746fe4-7ba8-4b56-bfbc-ea05341b97bc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b72edeb5-dd61-45ca-be7c-774ea172813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49d6fbf-25c1-4636-aa1e-ad2e801464bf",
        "cursor": {
          "ref": "78224774-d3d8-4797-a88c-80d9725141a4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c1667164-bf24-4858-b07e-9b816dd763ae"
        },
        "item": {
          "id": "f49d6fbf-25c1-4636-aa1e-ad2e801464bf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "564054c2-ec4a-47aa-94c8-823e125d38be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dac4a2-ae75-43bd-b7b7-eecf6142a7a7",
        "cursor": {
          "ref": "bcfddbfd-8982-441a-8e0c-bbfbd9ed218d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a7daa1c2-1ceb-4a31-9a24-a07e55105294"
        },
        "item": {
          "id": "56dac4a2-ae75-43bd-b7b7-eecf6142a7a7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "23e5222b-b653-4b11-8dab-2de9bdb511d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b121b4-4a2a-4628-a57c-494200cdffe5",
        "cursor": {
          "ref": "bcee9c1f-3ba6-42ed-948a-c1e6affaf7fe",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fa95998a-4982-4c1c-8d08-7890b97beae5"
        },
        "item": {
          "id": "47b121b4-4a2a-4628-a57c-494200cdffe5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7baac442-7abe-4a74-b6ea-e04346ea9282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff914a0b-3c10-462f-bf38-5ac4a53b6ced",
        "cursor": {
          "ref": "e4ce36e0-bd15-4768-99fa-3893f238c0a8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ae27e239-4da1-4034-b9cb-6e5555acbd9e"
        },
        "item": {
          "id": "ff914a0b-3c10-462f-bf38-5ac4a53b6ced",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7b221d84-4787-4ae8-b771-58d80f60fdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2695b9b-0539-4658-a1aa-57a38a193b73",
        "cursor": {
          "ref": "01b2a520-2f57-4a6a-ad40-8ae1762fb989",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "009c5ebb-56d0-457c-bd74-a84f02fd621c"
        },
        "item": {
          "id": "d2695b9b-0539-4658-a1aa-57a38a193b73",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "216bb12a-9e1e-4d7a-9ae6-934e9d0b357c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9cc4bf-c166-44bc-8b44-0a145b105a3a",
        "cursor": {
          "ref": "1d04ac57-050f-48c9-8429-e001ebe974c8",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d32e416f-d31a-4ff3-af64-21596ec357a9"
        },
        "item": {
          "id": "ff9cc4bf-c166-44bc-8b44-0a145b105a3a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01600cda-b87a-4240-a633-ca574c140c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6fc230-187c-4186-a177-3293fc42a83b",
        "cursor": {
          "ref": "8115a803-c109-4979-898f-7f34002fd7bd",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8709df3a-02a6-4bea-a337-ff867d77a93f"
        },
        "item": {
          "id": "ea6fc230-187c-4186-a177-3293fc42a83b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2229eedf-a839-4d00-b0f8-36f8bf636f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac3d213-4b8b-4f3f-970d-2b2582d957b8",
        "cursor": {
          "ref": "9fce3be0-e27f-48fd-accb-67d504db8062",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5ef048f1-9ae5-4af6-899c-59aa7cee8411"
        },
        "item": {
          "id": "1ac3d213-4b8b-4f3f-970d-2b2582d957b8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3c679c48-8c54-4be3-a01d-321754add3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ac81de-bb02-4a07-a8a0-b1dedde665ec",
        "cursor": {
          "ref": "cba5426d-7267-4657-b42b-015b526ba6db",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7c281189-826e-424e-9837-fb03e9196d74"
        },
        "item": {
          "id": "e9ac81de-bb02-4a07-a8a0-b1dedde665ec",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f3a7f1ca-a614-4dc1-bfbd-963103ebd970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471a78dc-ad63-41a9-9984-b42f76ac06de",
        "cursor": {
          "ref": "869bfa46-b831-4720-b4fe-031b2c1cd543",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2c13f382-53b3-49e5-b483-f25324dcbda7"
        },
        "item": {
          "id": "471a78dc-ad63-41a9-9984-b42f76ac06de",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cbe4932e-d572-4608-9d4a-7468511e8fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ddbf08-ce23-49ab-9a19-6b272b489f62",
        "cursor": {
          "ref": "b3f36c77-be95-4bff-926a-994329a5d712",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11bade30-3371-44f6-a16b-ec2523ba1415"
        },
        "item": {
          "id": "02ddbf08-ce23-49ab-9a19-6b272b489f62",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "19a62b4f-205f-4b02-8fea-aa456c0e6f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42c5974-55cf-4191-9ee6-eb55bec6d040",
        "cursor": {
          "ref": "c53b9113-1cfe-4e05-9731-07778f8b3843",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8433fb33-04c7-4ced-9cf1-1f58b0429f0c"
        },
        "item": {
          "id": "e42c5974-55cf-4191-9ee6-eb55bec6d040",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "857dcb3c-890c-4dbd-9c07-d3038fad9627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b128d7-d2e7-409c-befa-a85f394402c9",
        "cursor": {
          "ref": "ba75cbfc-a932-470c-8cb1-f542b62bc6ca",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d3c04c25-3693-42da-9019-90bcc9a5a9ef"
        },
        "item": {
          "id": "15b128d7-d2e7-409c-befa-a85f394402c9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b28b6dd8-18d1-487a-b0fa-d48f24deb825",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7df3a205-75a7-42cd-8bc3-c3a5a95a8737",
        "cursor": {
          "ref": "cd4c2fa6-46ba-4c98-acf2-ca7255eb03c9",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "49933b12-87b7-48b6-a486-12a943331974"
        },
        "item": {
          "id": "7df3a205-75a7-42cd-8bc3-c3a5a95a8737",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "530b0760-c920-4e71-a6c1-27125594f3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed10b615-6320-4bde-b653-98ca3f1a44a2",
        "cursor": {
          "ref": "f96596c6-ac03-4a8f-bcbc-b0a3068ebf05",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "943ae369-d8a0-4af2-a56e-3fe922938d10"
        },
        "item": {
          "id": "ed10b615-6320-4bde-b653-98ca3f1a44a2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "181aaf0e-d658-48d8-a208-adc39fa742c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9d13b6-1771-43fa-90e6-f997fab35456",
        "cursor": {
          "ref": "2a0dc551-3323-468e-bd13-780cb52ce95b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "33199181-02b7-4849-947a-4aaa8ec0ef23"
        },
        "item": {
          "id": "2f9d13b6-1771-43fa-90e6-f997fab35456",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e7d689bf-2c27-4b41-b647-b7c32a239fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26bb74a-8953-4f59-ac3d-32805eb54d7c",
        "cursor": {
          "ref": "d94cc7f2-7d94-449b-b628-16962d39d354",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "55bbef93-016a-40a7-aad5-b1253c907e18"
        },
        "item": {
          "id": "d26bb74a-8953-4f59-ac3d-32805eb54d7c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "59b2a0c9-8dcf-4693-a845-1b55a33ac7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a9c156-3247-46c0-bf61-c2776054e79e",
        "cursor": {
          "ref": "d0d54c44-b8e3-47f6-807a-9667a57cc639",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e1a838f0-78a7-4a42-82d6-b0455bc0e059"
        },
        "item": {
          "id": "54a9c156-3247-46c0-bf61-c2776054e79e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "526268e1-52b9-40f2-9527-954b88c01c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e85243-9ebe-4174-abfc-d34f5013b6ae",
        "cursor": {
          "ref": "d049263e-92e8-4627-bc13-bb085617200c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f8ec0df1-a2e6-41af-b7bc-25f69f17ef6f"
        },
        "item": {
          "id": "47e85243-9ebe-4174-abfc-d34f5013b6ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4a292c48-af65-434d-84a8-92c7cd4de6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d932a225-5ada-494b-ab22-63564088b5e1",
        "cursor": {
          "ref": "12fe2580-f687-441e-bcce-29f8ac070c2b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4788547a-469a-4201-a251-81047e5d849d"
        },
        "item": {
          "id": "d932a225-5ada-494b-ab22-63564088b5e1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5339947f-4255-4b3c-b3c4-71379306e36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515bfa45-89da-486e-acaa-a7e8c6137f7b",
        "cursor": {
          "ref": "fb253788-f1de-40d6-b847-d9ec451b39d0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bc0e4e2f-eada-4753-ac9e-c6ddf1691cde"
        },
        "item": {
          "id": "515bfa45-89da-486e-acaa-a7e8c6137f7b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9194676a-6f92-4c25-9e50-1c434edcea14",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "6b85738a-4c6d-4569-aa1b-eb6f0925d4c5",
        "cursor": {
          "ref": "6eab5ca1-2aac-4c14-b026-b22fdeea6174",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "21b7603b-4d81-4acf-a73f-3268af910dd9"
        },
        "item": {
          "id": "6b85738a-4c6d-4569-aa1b-eb6f0925d4c5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bdc8fa8e-b885-4dfb-98d8-07987f885b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b323a0-fbb3-4fd8-8b06-afacf7c8c412",
        "cursor": {
          "ref": "741a36ec-5501-4d74-867a-aa00a4c7d18b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "80d100ec-b201-4414-b8be-9e63c90aa4be"
        },
        "item": {
          "id": "c3b323a0-fbb3-4fd8-8b06-afacf7c8c412",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed6dbd9e-bd35-4676-9cc1-e6eb0cc01e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa01805b-1ef0-48e2-af4b-fa29d78bf485",
        "cursor": {
          "ref": "6c0cdbdf-7d18-4191-b84b-d52277d5fae0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6688841a-13ba-4c45-892b-3e5cb63042b5"
        },
        "item": {
          "id": "aa01805b-1ef0-48e2-af4b-fa29d78bf485",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1fc5bf83-3b7e-4d5e-8d83-a6927d08cb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817a59bd-eb0e-4836-b523-9b23651799ab",
        "cursor": {
          "ref": "ca2fcf3e-dbae-4b4c-a434-49233087d8ec",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0aa3bd18-f353-4bcf-a0f8-c64ad28494d7"
        },
        "item": {
          "id": "817a59bd-eb0e-4836-b523-9b23651799ab",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "600ac52b-42ca-4d22-84ea-85e8d6661394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d6fafa-a624-404f-ac8d-394f55b35ad7",
        "cursor": {
          "ref": "2fff19f3-6e9d-45be-816a-a608697c04e7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "78fd54f8-50fa-441f-9976-6e38be23961a"
        },
        "item": {
          "id": "b1d6fafa-a624-404f-ac8d-394f55b35ad7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "216f7887-dd32-4ee3-b9bb-763ef7b47a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaf0f58-aca1-4d46-a259-b0cde1acaa00",
        "cursor": {
          "ref": "220eeb30-796b-4e1f-8103-f7bfd167e453",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "160cd069-b7bb-43e4-88ca-963f95b4dca6"
        },
        "item": {
          "id": "fdaf0f58-aca1-4d46-a259-b0cde1acaa00",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "be0fe11f-3249-46a0-ac92-3ab753c6edb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bf7bc8-7d5a-47fb-b559-e7e4fac6c976",
        "cursor": {
          "ref": "431b47fa-1cc8-4a46-82dc-284aafb3b628",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a43ad8d0-588e-499d-af5e-37723c67f1e5"
        },
        "item": {
          "id": "86bf7bc8-7d5a-47fb-b559-e7e4fac6c976",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cdc33481-bb12-4c0d-b8f0-2337b51896c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "04b23feb-74b3-4eae-81ae-c715cbe5cf67",
        "cursor": {
          "ref": "11b49562-d35b-49b8-a642-e63de70aa0ee",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ef97238f-29bf-472f-abc5-47bf7630453c"
        },
        "item": {
          "id": "04b23feb-74b3-4eae-81ae-c715cbe5cf67",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f7764714-9ae8-4976-8191-6bb98c9e410d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "233f05ef-7c25-4060-bfe1-ae8e0eb5d930",
        "cursor": {
          "ref": "aaa112b1-019b-42d6-9145-eb42f1373ed9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "75be627f-d4eb-4da0-b824-75398f84cc2d"
        },
        "item": {
          "id": "233f05ef-7c25-4060-bfe1-ae8e0eb5d930",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4ab69e0e-d99f-433e-a394-42792f2800c7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "19d2a3ed-4ce1-4685-8f4a-d75506df9c36",
        "cursor": {
          "ref": "b6b7b9ed-91bf-4c2d-b3cb-88b709df8b1f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e694b8d5-c3fe-485b-b1d2-938e7941024f"
        },
        "item": {
          "id": "19d2a3ed-4ce1-4685-8f4a-d75506df9c36",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "816133aa-6716-414c-8e36-e305aaf834f8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "4392b535-a4e7-4216-ab69-4403be7fd6cb",
        "cursor": {
          "ref": "1d2a632c-931c-40b1-9bc5-d16b4a8096b3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "23a799e1-4197-4532-bba3-217a6e515809"
        },
        "item": {
          "id": "4392b535-a4e7-4216-ab69-4403be7fd6cb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b39bcb0b-2e60-4c27-9bd9-12217784fe7f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d9940d84-7ffb-4000-940c-8b593117d562",
        "cursor": {
          "ref": "69250071-0012-40e7-b29f-69920ba40a24",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "389488f2-4011-41fc-ac1f-0f47ff62e058"
        },
        "item": {
          "id": "d9940d84-7ffb-4000-940c-8b593117d562",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f53b8dac-6ee4-4d79-84ca-ac665670ec0e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "623ce94f-bf6a-436b-abb0-086594c75872",
        "cursor": {
          "ref": "ba4cd8fc-3ee7-40ee-9b4b-5644ff70594e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2e9e96a3-cf7b-44e1-9938-199a7e64593c"
        },
        "item": {
          "id": "623ce94f-bf6a-436b-abb0-086594c75872",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fcd360f4-1ef1-473f-9364-22985aa9a635",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7a9bc9-83b2-44f8-a21b-b234a17ae144",
        "cursor": {
          "ref": "732c3a7f-77ff-497c-8fb8-36216f784165",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d0872ef0-54c6-475d-bc3b-aaca22db577f"
        },
        "item": {
          "id": "ad7a9bc9-83b2-44f8-a21b-b234a17ae144",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0ac6ee9e-1b21-42b0-9303-46616fe3a73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496b772b-b3bb-4606-9bf1-7ce49d082517",
        "cursor": {
          "ref": "f1a29ba8-be48-4363-8dea-b300c92f6124",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1bb8fe02-d3a6-49f5-bd0f-e6d4da1eb0b1"
        },
        "item": {
          "id": "496b772b-b3bb-4606-9bf1-7ce49d082517",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9ef90df0-569f-4d78-b918-46b180857e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b5ff77-1b58-4d11-a300-6d604c6063c5",
        "cursor": {
          "ref": "ca9fdc96-7d74-416c-87a0-028303ad0588",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f682da72-7784-4596-bb40-0a1311604484"
        },
        "item": {
          "id": "26b5ff77-1b58-4d11-a300-6d604c6063c5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d586a50-69e3-4e3a-833b-e76c033ef20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b97f00-29de-410e-8ada-3219fd3be9f0",
        "cursor": {
          "ref": "e5542b9a-3164-420f-a503-5897b7ca614b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1d7c55e3-0065-4e46-bea5-66dbcecc6645"
        },
        "item": {
          "id": "92b97f00-29de-410e-8ada-3219fd3be9f0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5a268f6c-ca71-4722-9456-3642de15201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efd70c1-497c-45dc-9074-72ef4c2e1af5",
        "cursor": {
          "ref": "c47b815d-478a-4caa-8375-dcf2eb7b4b0b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c4278805-63c7-4322-bce3-e9d4f5e2dd54"
        },
        "item": {
          "id": "5efd70c1-497c-45dc-9074-72ef4c2e1af5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7c0baf05-5e7d-45e3-9bee-b16247eb3e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae62bb4-db09-4c07-b33b-fde2c46f2d6d",
        "cursor": {
          "ref": "eb5b22e2-ca6e-4d10-a5a8-5adcb56111a3",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a8d78e55-f6ce-4d60-b2b4-581c5d8012f0"
        },
        "item": {
          "id": "cae62bb4-db09-4c07-b33b-fde2c46f2d6d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9f10fe1f-dcf8-4542-bed8-470116f5d3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb0b3db-43e1-45d3-9891-dca62d18dbae",
        "cursor": {
          "ref": "57e64194-aa8c-425c-b325-e0fca00c0ad3",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b8095abe-bb74-4931-91e1-fde7352cd60e"
        },
        "item": {
          "id": "cbb0b3db-43e1-45d3-9891-dca62d18dbae",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c94b9b70-9ba9-4b23-b289-7cdaa7545991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd60fde5-242e-4663-a872-59c080cde16b",
        "cursor": {
          "ref": "2dd6bfd2-5a91-4fd7-b8a1-6b4d099866c2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6dc125dd-72fa-4814-ac2b-f0d8405d0a3c"
        },
        "item": {
          "id": "dd60fde5-242e-4663-a872-59c080cde16b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e0dc35ff-60d7-4988-bc12-c6f6aff2a4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dc3d86-a04b-44c7-9493-8482e2410fd2",
        "cursor": {
          "ref": "8d352d72-d71b-4077-8cef-234cdc8ee9ce",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d2ca67de-bffc-41b5-a81b-699ed0cc3039"
        },
        "item": {
          "id": "49dc3d86-a04b-44c7-9493-8482e2410fd2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cd4f5079-659c-4f39-acfb-5fd2eb20f170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cc1890-a986-47aa-8736-8ab36ce48bd1",
        "cursor": {
          "ref": "73246a47-7996-4d47-b9ff-b11fc38411db",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ecae082c-28be-4760-8c18-2152d1436cb1"
        },
        "item": {
          "id": "06cc1890-a986-47aa-8736-8ab36ce48bd1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b6a1541c-9bf3-40f1-a160-ac51f72afcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc6b8c9-3e78-4b50-885f-6ca9edb26552",
        "cursor": {
          "ref": "d0dc71f9-d9d6-491c-8716-cbbfcd46ab10",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f3750179-6698-4ba3-8c94-17bbcd561d92"
        },
        "item": {
          "id": "7bc6b8c9-3e78-4b50-885f-6ca9edb26552",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "15db9e1a-4fe8-40bd-9f3b-7839f5988f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9366bfa1-685f-43b1-a21f-cc960c4ed8ee",
        "cursor": {
          "ref": "b3ae0e40-37ec-4f97-bcb7-825ca44a123c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a43145a5-6532-44ca-bb2f-da2e49188709"
        },
        "item": {
          "id": "9366bfa1-685f-43b1-a21f-cc960c4ed8ee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b0d84efd-8706-48d7-9817-05a6fcdf80f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aa7958-0126-49f8-a1a2-2c2bc3994d0d",
        "cursor": {
          "ref": "3ceb0516-838d-4d30-980d-668208268c8c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "96e5cb18-1168-49da-a3dc-4bf49c2a7259"
        },
        "item": {
          "id": "d9aa7958-0126-49f8-a1a2-2c2bc3994d0d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "37f44fbf-ee91-4b6b-b469-8b494c2b43b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9cd3ee-6e33-496e-8e8f-f251c6f7eb3c",
        "cursor": {
          "ref": "6d6c0125-dc83-4bc9-b667-0f3a8cdcbe50",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3c2df995-6877-4ad7-a958-859f469ee64d"
        },
        "item": {
          "id": "6e9cd3ee-6e33-496e-8e8f-f251c6f7eb3c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f63b8ad1-2f1c-4726-8148-fa61cf3d86d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4970d16c-5327-481e-aead-fa9c406706f1",
        "cursor": {
          "ref": "b0a94aa0-9c44-4c20-ae32-55c2dd73103f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6f88186a-73a8-460e-a355-8c2da88c9008"
        },
        "item": {
          "id": "4970d16c-5327-481e-aead-fa9c406706f1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0c82f887-4284-4f91-b206-d9c66b85d275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d540af03-fd38-49f7-9247-da68cc2b1a12",
        "cursor": {
          "ref": "d27f0af8-6a64-4d2a-99b7-28abed9e5fd9",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1961e3c7-0936-418b-94da-96777d0e9101"
        },
        "item": {
          "id": "d540af03-fd38-49f7-9247-da68cc2b1a12",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7f392ed3-acc1-4794-9d9f-a0569486eca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a6095-b84e-4590-b52d-e6ee4cdb4bb1",
        "cursor": {
          "ref": "0c8d5909-1e77-4c0c-b4f2-d30d477a8527",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e4268db2-3bd8-4d9b-9256-4ae50e373d63"
        },
        "item": {
          "id": "396a6095-b84e-4590-b52d-e6ee4cdb4bb1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c852f936-2fe7-40c2-bf94-f8e6c456002d",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "8d21ffb0-3aab-40d6-941b-91213347139c",
        "cursor": {
          "ref": "187b3919-b87f-40fb-bfae-23bc8c8ca80e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5ab4992b-c9ad-4a9b-9d4c-bec9971c70e6"
        },
        "item": {
          "id": "8d21ffb0-3aab-40d6-941b-91213347139c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6dba2143-2d29-4ebf-b22e-2b97d5e1de59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4ae307-26d0-4b9a-b3c2-df9505899154",
        "cursor": {
          "ref": "9ed6c737-46a7-47f2-8b7e-ca67b283a875",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "587cf7f3-a24a-4789-a4c0-ab31ceb1586e"
        },
        "item": {
          "id": "ff4ae307-26d0-4b9a-b3c2-df9505899154",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1dc6e8b1-f68e-41a9-8f06-3010a8f1211c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11a4c72-b0f5-4e80-b3eb-114859047a20",
        "cursor": {
          "ref": "e05eedfc-122b-446d-a52b-760414ea4d45",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ad482d4-d889-4933-b195-dcfb46cbbf9b"
        },
        "item": {
          "id": "a11a4c72-b0f5-4e80-b3eb-114859047a20",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1fc14575-4231-43d6-9d89-ccf1ecec8eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6393fed6-5ad3-404c-95bc-c60911f9ba8f",
        "cursor": {
          "ref": "58d91411-a46d-4f2c-a69d-4ea613aebcd8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fb182c64-1345-4f29-97e3-db41b675e011"
        },
        "item": {
          "id": "6393fed6-5ad3-404c-95bc-c60911f9ba8f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "94d5cf73-f290-4c6c-93d6-a98cd5ee1829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf7dc1d-7530-4a14-a5c7-4d8b88a53af7",
        "cursor": {
          "ref": "936912bb-4b41-47e0-80f4-d8942df08cea",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "85e02549-2b7c-4b98-a6c1-528c5f248c78"
        },
        "item": {
          "id": "5cf7dc1d-7530-4a14-a5c7-4d8b88a53af7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3bc83d92-8e79-46ae-b104-fcb92e23ea10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9309c4-ce5a-479e-b4ee-d30d469f779e",
        "cursor": {
          "ref": "2f0293bb-7617-41ac-a345-766c5d2fb249",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aee8c1bc-f93f-4e4d-a33e-2e0de50efca4"
        },
        "item": {
          "id": "ca9309c4-ce5a-479e-b4ee-d30d469f779e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "77b52d41-02a7-41e0-978c-ee40a4325aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff990e0a-5c08-4996-84bd-c348434a1a8b",
        "cursor": {
          "ref": "87730a35-c094-4007-8397-affd3a099efc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a5cb7469-383a-4dc3-8e00-7e12c6396f14"
        },
        "item": {
          "id": "ff990e0a-5c08-4996-84bd-c348434a1a8b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "976f05ad-7e62-4933-a47a-415b2ebce968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5575b0cb-b599-4892-806c-ccf7d15d37f3",
        "cursor": {
          "ref": "c6283eef-748e-480f-8153-8bab9dcaec50",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b6d4a057-99bf-406d-b5c4-2f0325f68d47"
        },
        "item": {
          "id": "5575b0cb-b599-4892-806c-ccf7d15d37f3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4576d0d5-2a4a-4a69-8ee7-3f3668f153d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3f23f7-23a0-40fe-b979-03911ffc3cb9",
        "cursor": {
          "ref": "9298bc66-0ff9-464c-ab9d-1683dd8349e0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d494995b-41cf-4684-b824-0df35362bfc9"
        },
        "item": {
          "id": "5d3f23f7-23a0-40fe-b979-03911ffc3cb9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bd074a30-85dc-4864-8a5d-7f862a36d0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e465e6-8f80-4004-b1c7-be506073ada4",
        "cursor": {
          "ref": "e43f7eea-caad-4495-bdc6-7228b91f0d4d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0cce0300-1435-4912-8bb9-8d724c609584"
        },
        "item": {
          "id": "c7e465e6-8f80-4004-b1c7-be506073ada4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "80c36a7e-7bb3-4fca-b637-73eaccb71c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f19949-fbc0-4e08-a4f0-0912ec90a13c",
        "cursor": {
          "ref": "5fb456e6-8f4b-4dda-a731-cede3b39bc3c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d32d088b-3f8b-42ee-ac0d-01fb691beb51"
        },
        "item": {
          "id": "25f19949-fbc0-4e08-a4f0-0912ec90a13c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ee8a2509-2a2d-4eff-a902-a700e46b6e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb505dac-3032-4f6a-9ada-5c4788eefc24",
        "cursor": {
          "ref": "290d424e-6a83-4b47-920e-a158fdf5db18",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5fd963a6-fef4-45fd-b64f-3df0a7a5e223"
        },
        "item": {
          "id": "bb505dac-3032-4f6a-9ada-5c4788eefc24",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f1ecaff8-275c-44e2-8616-c684f080edee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60016bfc-1b11-4ae8-8604-36e399ac3cd4",
        "cursor": {
          "ref": "655785c0-97a8-4632-90ec-0c884fbc96c0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6e822613-0793-47c4-99e4-296a3f06186d"
        },
        "item": {
          "id": "60016bfc-1b11-4ae8-8604-36e399ac3cd4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8906cca4-490a-495f-a30b-9d8eab0f33ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec15dc-f562-4392-8106-119c1547c06e",
        "cursor": {
          "ref": "6dc2fd24-5b42-40b9-87f7-31227caf47f6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "88980721-144f-443d-a61b-c142281b421b"
        },
        "item": {
          "id": "f0ec15dc-f562-4392-8106-119c1547c06e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a9ec220d-5d3b-4502-95b4-66d31ec77e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1ac371-183a-423f-9471-53eb6056c90d",
        "cursor": {
          "ref": "1d05081b-ac5e-4a08-9ee7-417432f37bf2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "15ee02c3-3571-4eb5-9c34-4b3266e23238"
        },
        "item": {
          "id": "fd1ac371-183a-423f-9471-53eb6056c90d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6e1f671a-f759-478a-975a-58a903bad0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20a7396-9e16-4d1d-b69c-7cb988a2aac4",
        "cursor": {
          "ref": "890b463e-0a28-4605-ba63-4ca542f5124b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "598c34f1-0599-4c3a-837f-baf735585a3b"
        },
        "item": {
          "id": "d20a7396-9e16-4d1d-b69c-7cb988a2aac4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "46bd6575-5868-4a7b-b5ad-9dd17d4cbfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c966dc2b-a991-4bfd-af38-92ad50f03d4d",
        "cursor": {
          "ref": "b9b0ebc2-63fa-421f-8bf3-64cca7d05be2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8eb24d32-64a0-4c26-bcb6-0f936288ce56"
        },
        "item": {
          "id": "c966dc2b-a991-4bfd-af38-92ad50f03d4d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "68ef0b98-3f1b-4128-a864-5752115943c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346e569b-b9b1-42a5-a33b-fb745d55ad1a",
        "cursor": {
          "ref": "d2c2cedb-b368-4314-b5e3-bb0312292752",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7369d168-1e07-4915-a499-293667bffab7"
        },
        "item": {
          "id": "346e569b-b9b1-42a5-a33b-fb745d55ad1a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9dbd2ecd-0210-4db8-bfbe-11e97bd880a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bc4f33-0376-4844-b02e-6eceeea1cb2b",
        "cursor": {
          "ref": "b1c2f9d2-39a1-47ee-8357-fc7677fcdfb8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "13420ee9-0394-42b0-a05e-1e2b72c4227d"
        },
        "item": {
          "id": "c7bc4f33-0376-4844-b02e-6eceeea1cb2b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1ff93d99-2c32-4a91-83e1-0ca0675e9bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de50c6b2-4037-4cf3-bd1e-d1ce77380fa8",
        "cursor": {
          "ref": "deeb90fa-7338-4ca9-b407-0077bc01b5c7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1efee83d-ca59-44b0-8080-5289f42e8abd"
        },
        "item": {
          "id": "de50c6b2-4037-4cf3-bd1e-d1ce77380fa8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "04c55d81-2953-4903-a067-91c77648b6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618be680-2a03-4af1-9a4e-6b5e55981274",
        "cursor": {
          "ref": "246bb6c9-2939-42a4-8c07-4601f7ca6537",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "318d22d0-939e-4b21-a8c8-a2ce5c480a09"
        },
        "item": {
          "id": "618be680-2a03-4af1-9a4e-6b5e55981274",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "107c9124-f983-4514-9fbe-915c40b950f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70ec7ed-76e7-401d-9fd3-ddb90bf05b55",
        "cursor": {
          "ref": "d6393a78-dc5c-40e6-92e9-3130f62c990f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fd5d5f02-023d-46f8-8197-e79d1e6f2693"
        },
        "item": {
          "id": "d70ec7ed-76e7-401d-9fd3-ddb90bf05b55",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b55b7f12-6219-4f2d-937f-9458b587f36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48c70ee-0cf1-48fb-acdd-adc0053c464e",
        "cursor": {
          "ref": "e753ac9a-0235-44b3-968d-971a22425521",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "477e9ff4-cd2a-4442-b889-169ea4527950"
        },
        "item": {
          "id": "c48c70ee-0cf1-48fb-acdd-adc0053c464e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e23240ed-e9c2-44df-91ed-24f6c8612088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6135f51e-4a82-489a-98d6-118306bf00ef",
        "cursor": {
          "ref": "3b95bc44-9507-4519-be1a-8d609eec8f6e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "074b50bc-cd45-406d-a7f5-60f69a931663"
        },
        "item": {
          "id": "6135f51e-4a82-489a-98d6-118306bf00ef",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "135fec6a-b7db-4d99-b785-6f009c389a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c21147f-4033-491f-8c84-5cf3f67ed320",
        "cursor": {
          "ref": "cd7eb385-48e5-4712-8e9b-ed13471086bc",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4eb92334-1d4d-4c16-be34-f81cb481d2d6"
        },
        "item": {
          "id": "1c21147f-4033-491f-8c84-5cf3f67ed320",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f5cf460e-ce33-41a9-a921-9d6b7929d383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc19cb61-c3f7-472e-876e-c79825848fe2",
        "cursor": {
          "ref": "c1f08d6d-7c08-4f1f-b78e-8d28e67ed236",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "14400695-7fe3-4cc6-b71e-8ceff537bb99"
        },
        "item": {
          "id": "fc19cb61-c3f7-472e-876e-c79825848fe2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "94fc4cdf-e285-47e6-a24e-75a0ff4d63d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e14f14-dad2-413c-805b-c721a85e2959",
        "cursor": {
          "ref": "170edb55-3cf1-4267-8964-5b4a55cdea50",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e2f0ffa3-c1c1-4f7b-9dd2-f9574beef423"
        },
        "item": {
          "id": "13e14f14-dad2-413c-805b-c721a85e2959",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "08c47152-5f4e-4f13-8c61-591eec42c39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cc7b1e-758a-4ec6-addc-c13e3f1efde9",
        "cursor": {
          "ref": "16eeb335-5574-41e4-9a20-e2e706d30572",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "75a3c606-373b-4525-80a1-6bc852bd0c54"
        },
        "item": {
          "id": "f9cc7b1e-758a-4ec6-addc-c13e3f1efde9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "53b46167-156c-413f-9e24-c8a489af2f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1312fbc-5efe-4a49-a33e-cef805affa39",
        "cursor": {
          "ref": "c6f2c004-47e3-4baa-8e51-18259d38dfe9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a82150c4-eab1-46a4-bd23-e36e3aab278e"
        },
        "item": {
          "id": "e1312fbc-5efe-4a49-a33e-cef805affa39",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b1ea9c8c-bf95-4cfd-be22-3877a5efbdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee81e2b-b94d-4c62-83f8-d32a5db98a35",
        "cursor": {
          "ref": "85abdc7e-0dd3-495a-ab7d-7bcb840881cb",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "651a3161-2fd2-403b-be22-079389044a8e"
        },
        "item": {
          "id": "eee81e2b-b94d-4c62-83f8-d32a5db98a35",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "65695336-676c-46ef-bab8-f1eef6a8794b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b67458f-4d58-4c39-8333-1b1abf025a82",
        "cursor": {
          "ref": "db4f2751-f595-47bf-9d6d-ec1171c3a332",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eb2bf6da-d13c-4164-801a-64c537d1de2c"
        },
        "item": {
          "id": "0b67458f-4d58-4c39-8333-1b1abf025a82",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "46175992-39a7-42a8-bb91-c9b4e2d4eaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd55a36-856e-462f-8e71-70475df91f7e",
        "cursor": {
          "ref": "d8c3b7a8-fd7d-4cb5-9a1c-684d6f2bad97",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2952c4ac-18cc-4bcb-be1d-8c714253d301"
        },
        "item": {
          "id": "8cd55a36-856e-462f-8e71-70475df91f7e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0e6bf54f-bc5d-49d8-ba61-2c5bcfe07a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8ec7c2-bd6c-4514-a85b-5db588350081",
        "cursor": {
          "ref": "7fb638e3-e361-4ae2-87c2-ec8a239a50c0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bd605c7c-1b04-4cdb-9d3e-0985e5e714d3"
        },
        "item": {
          "id": "4e8ec7c2-bd6c-4514-a85b-5db588350081",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "760d8d7c-4333-4696-827c-0d628de0b131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c640235-fa33-4259-87ff-ee6ee3514e16",
        "cursor": {
          "ref": "f97e6d33-a3fa-409a-bf7d-aea68c41e895",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9803b9d8-9777-4e95-b0e1-18889605653f"
        },
        "item": {
          "id": "1c640235-fa33-4259-87ff-ee6ee3514e16",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1ecd7c60-f27a-4241-be5f-70ba63251ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d16bea-fd41-48c7-90e6-a2770f1c2eb0",
        "cursor": {
          "ref": "f986fccc-a419-4a89-a004-37aa8d59d79a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3ec813fb-f0b4-42fb-98da-233ada6e5dda"
        },
        "item": {
          "id": "50d16bea-fd41-48c7-90e6-a2770f1c2eb0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "31dd0e7d-4763-44f0-885c-226541877c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2467dd-8469-431d-adf0-9053b0a0d8c9",
        "cursor": {
          "ref": "01c107d1-b188-463c-bce4-ddada54b6ebd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "03850ec6-8c3c-4434-96ef-cd8d70cff222"
        },
        "item": {
          "id": "0c2467dd-8469-431d-adf0-9053b0a0d8c9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4a7c8f1d-f556-4a42-87a9-a157fe0f03ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53041787-e226-4aa3-84f0-ef4a6622a833",
        "cursor": {
          "ref": "bf9c596f-3d95-46ae-adcc-a50c90166966",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d414ff73-9842-4cad-a996-e40cf36d258f"
        },
        "item": {
          "id": "53041787-e226-4aa3-84f0-ef4a6622a833",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "48751700-5917-4492-bf72-7c3246412460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd1bb0e-9f70-4fd1-9296-a8b23cafb8c8",
        "cursor": {
          "ref": "575637df-3084-4758-b2f3-188f219378b8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e17a752d-5b76-4a97-81f6-b9fc31fdb780"
        },
        "item": {
          "id": "ffd1bb0e-9f70-4fd1-9296-a8b23cafb8c8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "95225e51-6596-4be3-89c9-87af169a8a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235ce00b-b3e9-4e7d-b508-4754fda75afc",
        "cursor": {
          "ref": "34524136-526e-438e-9b0d-0cbbfef001b6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e61397da-91b2-4400-ae8b-e2bd3ae73100"
        },
        "item": {
          "id": "235ce00b-b3e9-4e7d-b508-4754fda75afc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0eb9bd6f-9830-4d2e-8446-b8d2d97b483c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a07b8a4-b6b8-4ebe-81ec-2d3938e0fffe",
        "cursor": {
          "ref": "2f890e10-329b-4cf3-ae05-373b6d47d4e5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1b19d8be-3145-4223-aa07-b18a4ec0fbc5"
        },
        "item": {
          "id": "7a07b8a4-b6b8-4ebe-81ec-2d3938e0fffe",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9d187b9a-814a-474e-a435-f0f512e8af63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8fea62-b229-421d-b0ad-5265683315f5",
        "cursor": {
          "ref": "9bc4c251-bd76-4fa6-acf7-684dfff0a589",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7e75bb86-2e78-4970-859d-7e11a8095692"
        },
        "item": {
          "id": "0b8fea62-b229-421d-b0ad-5265683315f5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cffb6edb-97dd-40b2-b99e-3f679c74b9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bac4cf8-5706-4a5a-b1f7-93a0413f4086",
        "cursor": {
          "ref": "439da58f-f5de-43bc-9cfa-703a42da863b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bbad36d6-c2b1-4d55-b3ef-fb96266c9e6c"
        },
        "item": {
          "id": "5bac4cf8-5706-4a5a-b1f7-93a0413f4086",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3167831b-37cc-436e-87db-4cd5c7a0b7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a444d4-d91b-48df-8e34-24dbabd4f3c5",
        "cursor": {
          "ref": "6a9f25ef-c6c6-4257-9ae7-155b5c826c21",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fbcefdb8-1573-4402-ac0d-3f5f81346e01"
        },
        "item": {
          "id": "99a444d4-d91b-48df-8e34-24dbabd4f3c5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ab42e2af-b6cf-4496-8c41-60e3870c0f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecf9803-e74d-4b12-b102-ba5b38a6469d",
        "cursor": {
          "ref": "590049cb-711d-44eb-a698-fad7f1270256",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "034df9d0-20d6-4682-9571-e6013a11ce54"
        },
        "item": {
          "id": "fecf9803-e74d-4b12-b102-ba5b38a6469d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e5480901-dbe6-4218-8f0e-201873e8a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff038854-91f0-4e5a-8b46-60b9a5ab9464",
        "cursor": {
          "ref": "179fe2c8-0d5b-4be2-8dd4-aa574176f98f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "71a2b763-0876-42bb-ae8d-283be348b989"
        },
        "item": {
          "id": "ff038854-91f0-4e5a-8b46-60b9a5ab9464",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ca069ec8-d0fd-420f-be4f-fcf62062225f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cae5f6-356a-45b3-ac7f-439eca618fac",
        "cursor": {
          "ref": "f90feb68-ce1a-4ee6-bb95-20d7a57bec9b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5126659c-2e6f-4656-884f-b62003d0a607"
        },
        "item": {
          "id": "69cae5f6-356a-45b3-ac7f-439eca618fac",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c002a531-82c1-4f7e-a2d8-bb600c0b7d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb9fe09-96c9-4d0e-b9d7-c5262bfd9520",
        "cursor": {
          "ref": "dd5dc4e6-2cec-42d2-bdd6-e99f91c4a758",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c2743b4e-9137-482a-978b-99f4e038ae10"
        },
        "item": {
          "id": "dcb9fe09-96c9-4d0e-b9d7-c5262bfd9520",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6c8e9b6c-3849-44ca-94df-6c8dd7aa10ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883eebc2-a7a6-436a-84bf-6fdde4ff5d41",
        "cursor": {
          "ref": "3dc4ec9d-1c6e-4a2f-9147-3edea23b0bd0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6274ade3-852e-4571-a0da-1e256d63fb38"
        },
        "item": {
          "id": "883eebc2-a7a6-436a-84bf-6fdde4ff5d41",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "36c8afa2-4187-4f96-a1f9-d2330ac269c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5c2d3e-2fb7-42a3-b6d5-403e9e81dd13",
        "cursor": {
          "ref": "fa53dd12-38b1-4403-9a49-d4b8e5a2825e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0ab61b78-6af3-406f-85f3-34a0295fef80"
        },
        "item": {
          "id": "ed5c2d3e-2fb7-42a3-b6d5-403e9e81dd13",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b47311fc-1ae4-4315-850d-faac0acdeadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6360e38-629c-4f57-9acc-baa78daff1a9",
        "cursor": {
          "ref": "bbfad076-9449-4d45-b261-1d3ea17a91da",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7c0ae80c-dcde-4dbc-8f6d-be45481f91bd"
        },
        "item": {
          "id": "f6360e38-629c-4f57-9acc-baa78daff1a9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7dd57e88-0f85-4c87-9e72-970a1e828d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc9b05f-7126-46cf-b928-b04380dcd7e5",
        "cursor": {
          "ref": "c065453c-ed07-4721-9726-295ec3c320d8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "80402b6f-7ed1-4d26-806d-386d959d5e2c"
        },
        "item": {
          "id": "8fc9b05f-7126-46cf-b928-b04380dcd7e5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6a5a1c1e-b98d-4fb8-b238-a29b3b7f1ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd70cab8-ae67-472c-a376-2d5aee03179f",
        "cursor": {
          "ref": "66fb5b2f-e504-451b-a696-ce0b087f4937",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0b67814d-8a76-4a91-9af4-28e6e9f5953e"
        },
        "item": {
          "id": "bd70cab8-ae67-472c-a376-2d5aee03179f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "60433da6-bc4b-484e-9395-cef6b13d11d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec64716-987c-41ac-a517-a5474fb3e7c5",
        "cursor": {
          "ref": "b221987d-4ef6-4c73-8fc8-db87db44b900",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2e5f45be-3826-4fbb-a3e7-619024a78dfb"
        },
        "item": {
          "id": "3ec64716-987c-41ac-a517-a5474fb3e7c5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "de5cdffa-c03a-458e-9da2-3833d9ec24a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824274c0-7362-4800-b959-810c7645c0b7",
        "cursor": {
          "ref": "5f5adaa9-b6d8-407c-a4f4-1481726e557f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "baeb7c9a-2819-4de0-839e-d5072b4f2eb0"
        },
        "item": {
          "id": "824274c0-7362-4800-b959-810c7645c0b7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "69bfb582-f8de-49ae-be31-5d2ba76b089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6979637-5349-46b2-a7f0-20a868158a4a",
        "cursor": {
          "ref": "e240b890-bdf1-4d55-a15b-eb8baee3c2fe",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5fc82940-598a-49dd-aabc-5377789efa1c"
        },
        "item": {
          "id": "c6979637-5349-46b2-a7f0-20a868158a4a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "31ce038d-b046-4200-9f7e-7348932d8225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0bd4c9-1f3b-4a04-9892-8a82f760ba8f",
        "cursor": {
          "ref": "3692c3ea-326b-439e-be32-45e3fc1dd066",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7d30cf8f-d83d-4797-a76b-0b50f5d085b9"
        },
        "item": {
          "id": "7b0bd4c9-1f3b-4a04-9892-8a82f760ba8f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "aa0f0ee5-9cc1-47ce-bdf8-4f27e7dc0e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc8bea9-3e68-4ce0-be85-46875d2d3b26",
        "cursor": {
          "ref": "c92d467b-d4b3-4058-a10a-e6c5db7adf14",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "35d8a4e6-c5c2-4187-80ce-4ea3065d5d3d"
        },
        "item": {
          "id": "8fc8bea9-3e68-4ce0-be85-46875d2d3b26",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a4cb472d-4160-4fd7-aa66-d7b6ba3f1957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18edde8-3594-4e77-a773-7e190bde7f82",
        "cursor": {
          "ref": "190a3dde-4e30-423c-816a-4638fbbcd3f4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "40138ad0-9c69-46e1-880a-db60e96879a1"
        },
        "item": {
          "id": "c18edde8-3594-4e77-a773-7e190bde7f82",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d30c0c9e-6e54-44cf-9103-4b57604d3184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bcf802-58a0-4729-b02c-490853538ff2",
        "cursor": {
          "ref": "f6c7cf01-1878-4ccc-8128-6891ac6a5ce9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e5c9e8c1-ba12-4624-99d8-269863592deb"
        },
        "item": {
          "id": "a8bcf802-58a0-4729-b02c-490853538ff2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b1159ca-21aa-4736-9e0f-e6f2e7d62a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ea13c9-20bc-4202-9004-639f6f1a1406",
        "cursor": {
          "ref": "892e901e-f803-4e91-ac93-a1c7f5f1566e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a2829262-a4d2-48d4-9e68-4a12b405b1da"
        },
        "item": {
          "id": "15ea13c9-20bc-4202-9004-639f6f1a1406",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1f960b60-a385-4a8c-9352-85cb84153a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382dc654-2a7f-474e-b1c2-f58a3b441203",
        "cursor": {
          "ref": "fb6d1fc7-6582-4f28-b0bf-c08d86892edc",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "75b72fe7-2ea9-41d4-8b7c-82cbd64b0c40"
        },
        "item": {
          "id": "382dc654-2a7f-474e-b1c2-f58a3b441203",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "59a0ba69-f523-4521-8dea-6dd32448f729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597e0150-3b77-42d3-bf29-dcfc4605947a",
        "cursor": {
          "ref": "fc209575-504c-4b13-8b38-e7895ca2611c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2d2bc9b0-637b-4682-a8bc-400f58cc6df7"
        },
        "item": {
          "id": "597e0150-3b77-42d3-bf29-dcfc4605947a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e1c334df-cef9-4658-a9f6-5679bf9a4252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b07f5e-8bb8-4369-84e0-e50b0e114415",
        "cursor": {
          "ref": "0a7d7bab-cae7-432a-8550-7f36fac04678",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "23104329-fa09-49af-ae64-2a96d3a8ea1d"
        },
        "item": {
          "id": "15b07f5e-8bb8-4369-84e0-e50b0e114415",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "67ff672d-4e1c-4308-bcf5-e2761a083d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ba88ea-8f36-4be0-a753-1cc41660d4d6",
        "cursor": {
          "ref": "bf37ec6e-3f3f-469c-8a65-b69198e06eec",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6b11af02-6285-4bf3-beff-5120ecb9f8c5"
        },
        "item": {
          "id": "23ba88ea-8f36-4be0-a753-1cc41660d4d6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ee9c1188-1b14-4cd7-b0bd-501230974d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa96565-94dc-42b4-9d84-29241b5fd216",
        "cursor": {
          "ref": "03513db4-5520-4bc6-82f5-95af4572803a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2a97f15a-fc05-4887-9575-4d49f25d8b33"
        },
        "item": {
          "id": "bfa96565-94dc-42b4-9d84-29241b5fd216",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "864bfc42-2c62-4ca6-8e11-ba5a6c65650c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061421ad-3523-4f4f-9720-bf62654dd472",
        "cursor": {
          "ref": "fa8d1a97-6e65-4974-8d15-f80edfe41b02",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "55183263-0dc1-46d8-9d63-8c1119a8a707"
        },
        "item": {
          "id": "061421ad-3523-4f4f-9720-bf62654dd472",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "87b07364-7961-48f9-a8e8-60253236a3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cbdce0-f859-44da-a583-1f597f38f77c",
        "cursor": {
          "ref": "95f20433-ccaa-45da-9702-6404bb8f7eda",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e76878fd-f7ce-4ed2-b2a9-107bcbf6588e"
        },
        "item": {
          "id": "b2cbdce0-f859-44da-a583-1f597f38f77c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "56e500e5-0d6c-406e-bd4e-4ad0b8aa4ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a617338-09cf-4494-940b-e4c9e3017c6e",
        "cursor": {
          "ref": "14083188-e5f4-46ba-8c8c-eba2ed273c7e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "aae7ee8c-181d-4ba6-bace-cda7424128ad"
        },
        "item": {
          "id": "9a617338-09cf-4494-940b-e4c9e3017c6e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0ad8bd85-6f18-44a6-b364-e5da3519f1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e5a3ce-bca2-4e11-ad76-078eeb6c3cf3",
        "cursor": {
          "ref": "adda41de-015b-4e82-9e44-f6fb1021f795",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "af5e1e25-89b9-4bf1-a7c3-d08f199a957f"
        },
        "item": {
          "id": "b8e5a3ce-bca2-4e11-ad76-078eeb6c3cf3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "236a898e-5961-4f61-87aa-ed46377bd51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad0f7be-2f9a-47c1-a14c-8c7093c64e69",
        "cursor": {
          "ref": "89abbe8a-6c2b-4218-8c54-3a3280411593",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "feb46580-9b7e-44a0-afc0-ce656d081749"
        },
        "item": {
          "id": "8ad0f7be-2f9a-47c1-a14c-8c7093c64e69",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "13545f3b-a8ae-4a59-9f4f-88a5e76a0283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c06c4b-62ce-4e2f-afaa-42efbd1bc18f",
        "cursor": {
          "ref": "ca2dcd3e-6279-4db7-9683-240c1d206921",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3ccb5bb1-9543-4962-8621-0cb11871f988"
        },
        "item": {
          "id": "81c06c4b-62ce-4e2f-afaa-42efbd1bc18f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a0c81bca-81d3-4ad5-89e0-82049568dded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b14d91-f117-4f4f-9977-721cedc68a52",
        "cursor": {
          "ref": "4661e444-d1d9-402f-8d5f-57e0d447437a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c155e3ff-4c81-4ddd-9e6f-bbf25dff0d7a"
        },
        "item": {
          "id": "c7b14d91-f117-4f4f-9977-721cedc68a52",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "538c6433-c40a-4005-9f18-9c31a7da0684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd3df11-1e3d-4f2c-988b-0d1a1c811adf",
        "cursor": {
          "ref": "8650ffb0-fbfc-40f7-8b24-7bd119e4e8bf",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5d10422d-5aba-4a93-935a-2e1103c40f18"
        },
        "item": {
          "id": "fbd3df11-1e3d-4f2c-988b-0d1a1c811adf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "41a6578d-f86a-4b2c-b5be-046d0b74fc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca76a6b-303b-4c04-b739-8cb45352a24f",
        "cursor": {
          "ref": "0287e2af-7b34-47af-8b3b-2f08efb8d760",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "84c2e0b1-7321-4a60-9aef-c11b069e9165"
        },
        "item": {
          "id": "5ca76a6b-303b-4c04-b739-8cb45352a24f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "34211b5f-256c-40c1-81ba-a2082dd51871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e66ead8-64dd-4d35-bbba-bbf6ce91eb8a",
        "cursor": {
          "ref": "a49807d1-6134-4a50-9376-237a23ef78ea",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eebc743e-441d-474a-9406-de5491ef864f"
        },
        "item": {
          "id": "1e66ead8-64dd-4d35-bbba-bbf6ce91eb8a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "51952aed-6b70-4280-9437-f509235588ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1d1302-49e9-4e1e-8321-3ca5bcd2cd58",
        "cursor": {
          "ref": "015277d2-0f55-48fe-b621-6cdd83ad63d2",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9ce156fa-76e0-4843-86ba-38099f87d8fc"
        },
        "item": {
          "id": "1a1d1302-49e9-4e1e-8321-3ca5bcd2cd58",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7b4e1637-56ef-438b-8d74-a7122c7af17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2058ed26-05a7-424e-99de-da09672bc528",
        "cursor": {
          "ref": "1ca82c7c-8a62-4e62-af6d-4a4a3d5891dd",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9b2f17ad-e538-4e24-8ad0-e7e45b3d8e5c"
        },
        "item": {
          "id": "2058ed26-05a7-424e-99de-da09672bc528",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ac7d08fd-8f74-4298-9ea1-67fc5502264d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207f7531-ce34-4c76-9576-e362470b6d32",
        "cursor": {
          "ref": "3db00c87-68b5-40b3-819a-60c28153dca4",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "64b66469-f05d-4783-a513-47a7f7546bee"
        },
        "item": {
          "id": "207f7531-ce34-4c76-9576-e362470b6d32",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fb505c0b-9f94-487f-a366-42816bd06588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b29047-106e-4ae8-91ef-b14e47161e0b",
        "cursor": {
          "ref": "d1eed968-0fe3-481b-9e1f-93e508090c19",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cc431bd6-ef2b-412a-8fa8-eee347785f08"
        },
        "item": {
          "id": "32b29047-106e-4ae8-91ef-b14e47161e0b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "80ae1208-499a-4173-8502-784cc6490729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaea32e-153b-4d90-af31-3b2b0f418434",
        "cursor": {
          "ref": "9f4f9b63-7350-4ba3-8376-29ae9bf65102",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cc964227-dd92-47ce-824d-53867fcd4d46"
        },
        "item": {
          "id": "fdaea32e-153b-4d90-af31-3b2b0f418434",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "276db379-9759-4053-b484-0398e451e64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79540213-2c41-431f-b00b-666496e98354",
        "cursor": {
          "ref": "62ac284c-7e99-4fac-9554-5b28e3ad9f43",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "08603ee4-eae1-4427-976e-0d09d83f41ca"
        },
        "item": {
          "id": "79540213-2c41-431f-b00b-666496e98354",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "42ac86ad-ff56-4290-b130-2a82766a87e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562fb038-cd78-4d7b-a63f-53f9ee1c64c0",
        "cursor": {
          "ref": "27906aa7-780e-4d2f-9114-84eeacea834a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8e81bc12-fc23-453f-a6a4-13a664da36b8"
        },
        "item": {
          "id": "562fb038-cd78-4d7b-a63f-53f9ee1c64c0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "00568d85-8388-4e8f-a36e-39bfb979a77f",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60497e2-79b4-4bad-82cf-68552d0d2260",
        "cursor": {
          "ref": "1ac39476-4336-488d-a9a2-c3708221086d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9d557777-68fb-4bd6-bbda-d7036a23107b"
        },
        "item": {
          "id": "b60497e2-79b4-4bad-82cf-68552d0d2260",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d02ac65a-67f9-4a67-a145-6ee34cb8f19b",
          "status": "OK",
          "code": 200,
          "responseTime": 2938,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc18981-692f-46e5-bbfe-adda578285a3",
        "cursor": {
          "ref": "626a1119-7297-4b5b-9286-839fe01cfa32",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4427da58-283e-4e6d-9adf-457f8d2e9ff4"
        },
        "item": {
          "id": "8dc18981-692f-46e5-bbfe-adda578285a3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b4a96c57-188c-448a-8a2e-058f30bf6f92",
          "status": "OK",
          "code": 200,
          "responseTime": 2366,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "edff3f23-cb86-4cc3-8525-321e460a2ec2",
        "cursor": {
          "ref": "e9b6858e-b97a-4a98-9895-14f0f15715f1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2f96cd47-4970-4b6a-a710-c3f1e06e7ce9"
        },
        "item": {
          "id": "edff3f23-cb86-4cc3-8525-321e460a2ec2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab66212a-10b2-47eb-a9a2-e9b85fc0e0b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edff3f23-cb86-4cc3-8525-321e460a2ec2",
        "cursor": {
          "ref": "e9b6858e-b97a-4a98-9895-14f0f15715f1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2f96cd47-4970-4b6a-a710-c3f1e06e7ce9"
        },
        "item": {
          "id": "edff3f23-cb86-4cc3-8525-321e460a2ec2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab66212a-10b2-47eb-a9a2-e9b85fc0e0b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d439e0ae-f414-4ac5-b881-c7459d38504d",
        "cursor": {
          "ref": "47966095-67c0-4a53-91fc-9c9d68b35bb5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "43fa65f6-4239-4fca-8727-e105689b5a61"
        },
        "item": {
          "id": "d439e0ae-f414-4ac5-b881-c7459d38504d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b84361a3-760a-437c-906f-258b6384426e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e00318-932f-4834-8ab5-6871aed6b919",
        "cursor": {
          "ref": "d678656b-92a6-490b-b7a1-70779fbf082d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "278f605d-cbc0-43a4-9d0c-b626f580e72d"
        },
        "item": {
          "id": "53e00318-932f-4834-8ab5-6871aed6b919",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "33728fe3-b6a4-480c-bff5-13d21b7a7842",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}