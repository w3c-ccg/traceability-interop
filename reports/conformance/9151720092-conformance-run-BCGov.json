{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6cac04dd-9518-463e-b945-e6f4848c55a9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "82e0ec9e-1d55-446a-b9ba-5e271bad29ce",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba24651c-e86c-4dd5-b69b-30a5099851dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "992f77e1-3c64-4881-bc38-25b2e30f5c2e"
                }
              }
            ]
          },
          {
            "id": "448d90f5-aa95-4ee6-987b-69158c4fae1d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee56ec45-7f13-44aa-8f91-778856847e82",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1df1f949-f6c2-4e0f-8365-8e81c987ed47"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d6cbf4d6-5dac-45a5-ace8-1448eab66f5f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "18a583c2-e632-431a-b292-8077c228a36a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e713a8f-bdd7-435d-80fc-aa23cc11503b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dafe898-7c50-4812-836f-68477c7b5dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b42b57f-afbc-4c21-9f07-c8f51bff03cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c27d860-de6a-4e3f-a4d2-d82a27f8cf4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1594eeff-d7c5-425f-a88e-b520fc05bcdd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9755f164-684f-4a50-b90e-7a14ea0be124",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2b8c4cf-b58b-4dbc-b206-17849ae936d6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1c77c58-02cb-4c91-abf6-996ece63a41d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6f5b67b0-2d15-400d-86a6-4d9c61e5095c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c68735bb-70f1-4cf1-ba4e-2e2807f94704",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c853eee0-bcfd-480a-be10-197a4088618c"
            }
          }
        ]
      },
      {
        "id": "b0c1c115-e392-4a13-aca4-4dc646b3f48a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a80a2c6d-41ec-4d6f-955e-c199f5414bbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0e4b2d1-7faa-47ec-aad1-a2ade6620792",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5dce6d70-8eb8-4f69-8504-877e540cbc8f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4777494-ff66-46f7-af5f-528e8fb71579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb4fae7b-a292-4581-8f8a-19c176a014cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a4c1b-f545-45ed-aba8-5f3c40f3ad26",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af23199-732a-431f-baa2-fbc2ae577868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33339bc7-18d9-499d-b9ea-d06629a206d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc01c894-0552-4a02-aab8-9f285cce5acb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c5f062-0107-4294-a744-6c51716b3622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91899b0c-5b08-4cf9-bf00-9bde391fe0ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e593521-ede1-4e46-8a8d-5629fcb99e24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e43bec84-0762-41aa-80d3-572ba9df68be",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15677ce5-9d34-4f15-836c-b95c3d224384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "244195e2-b5f6-46c6-a3fa-485d92bc4a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452a2ffb-b6c4-4db7-bbeb-40d8f58935c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ac9b6d-3de1-4f8e-9d92-bbe9b61f6d5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f384fc98-afb1-4b5e-a93b-466a868e3b1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19fcab51-0a32-4026-b34e-ac5e13d965de",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "410b34c3-7fb2-4b74-bc36-07b0d6878c5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a4ef0cba-6fee-4a8e-a239-7cb7b8e24265"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ef66fab-c95d-41e5-91d5-d55c2a388927",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c57bba6c-e062-4671-8ed8-f85c18299cfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6c9f93d-3828-4923-ab74-e60ad310fef3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c823f449-1298-4ff2-92d1-fef627946c16"
            }
          }
        ]
      },
      {
        "id": "d862f772-6ac3-4ac9-90da-b532c0130ab9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9c6e1753-1bb3-446e-9223-474e515991a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8592d25-aac3-4dd7-ac3f-06f05e19bd15",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "71146a42-523f-4254-a47a-20acdc628324",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddd0393-089f-4cf4-bf43-27377cb6a1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7af1963-289e-4c98-b6e9-12bef84ef7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ec21c8-72dc-4cd6-a9f7-48a1b203cfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa23ed9d-0f7b-452b-b21e-7b4b43ad748a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dc72c4-d2ae-4aef-ac5e-5ad941465f74",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95c5b29-e373-4b95-aca3-0aeccbb023d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcb5cc4-cb58-421b-8268-fc4548e7babb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8987424-f966-4ab6-a8b1-33901f0358d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb4c22bd-0cb0-4363-a97b-1ac1253d7e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bf0be2-917b-4b9d-aa54-34e53b001f71",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67f411f-958c-4597-8f14-0b8d59c96e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e99a5cc-6f74-4651-aabd-f5de01922310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590ffb49-5da8-43d1-a22b-a72414810613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "881efec7-4514-4bb6-a1c5-33fa4d26294f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679cae7e-c7ee-499a-94aa-9b36904d4bf9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb50be54-61d9-4668-a721-6dbeeb50626f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12dbf0a-cf95-4350-ae0a-23ea1c031587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86abec34-ab10-47e6-a510-45c6c445fb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f6e7dd8-315f-4de0-8823-1caadaec312a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34085542-bf35-4e30-bc6b-308b08353226",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dee8edb-2478-4ea8-a0dd-3422ce79014f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b40fa8-0a61-47af-96b2-65ecdf2e2f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2de818-8253-448d-a2f4-0133d3e31d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f6b83a0-5bdf-4f71-8d8d-933fb046bc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffadce5-6da6-4251-8440-13ebd77ebf6f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25402d8-4f72-4b33-9fd1-9fc858d73c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20b9e6b-4724-486e-8604-2fc1cf3ab02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb15668-6828-4304-a1e8-e560b0894219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c16b523b-cc5e-4508-882a-dd0667542514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde1e280-0708-4a41-93c6-6bdba32e25a0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9530426f-0389-492b-8e65-ceff64c6469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91a9823-bc2d-4639-96e8-7b824a2b91da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42771782-7be6-4268-84f4-7d2cc759f442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "926e18d4-06a6-41a3-afae-4d517466e1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d7f537-4781-417b-8865-9d5f7b7a418d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beac4eb4-d3c5-4f2a-95ef-663211d737fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccef14a-4af5-4f19-8dd3-d5894c020261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74d734d-b151-4e41-982b-2fda6fccdebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc05082-520f-4d12-9063-e39181ca01bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc3b917-d1db-48d4-b4d7-deb715e0a4c4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b8cb50-90cb-4278-941b-553bb71c0ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808ba7a9-c92b-4a6b-8f6f-e348711a385c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0958859c-9a7d-4503-bd5e-8203d935c7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aae3936-3698-4f8a-9c21-ef3339ebb139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b530a90-436f-488d-a5be-5374236a5fde",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc607b7-5b12-4b0f-905e-59a1a9ba8f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306f9e56-305e-4d54-a021-412c4f3090fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfcd638-6016-4a7b-9212-26f9bb45aaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ec0e11b-3fa3-4c42-af09-0027dfacf04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42323af8-d4c4-46d4-966b-5b785369e43e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b0e1bc-e0a7-4aec-a0bb-6d1a2b7c8c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df0ed39-37c0-457a-a497-116918cc4871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e9abf5-3cff-4c7c-90aa-39b95137dd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aa15dbd-4661-405d-8208-516073a90d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2fa3b5-7f42-40c6-b162-35c012d2b25f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765eaee9-2708-40f0-9423-67de44a86134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fac32e-dfcc-40a9-a4ca-22885cf3f11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a125281c-341a-4456-98f0-e9608153502c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "610b182a-02c2-44d5-838f-539cbb8f4e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dde8b7-8eff-4339-8933-b9ee59503c5d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45e0bb0-221e-4437-8985-ff04113c702c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c494bb-38da-46fa-b9f7-df8ba53afcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c21a8e-9c5d-44ef-8cab-313738f72c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b129f79-9b30-4390-9668-a31d9b3f6134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b838ae-ae1a-4d30-9104-cf56a9935568",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7494711-ab39-4414-a89e-e2184b2bc273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedf2ce1-9e44-49c7-aaf0-34c4a8767aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9361c7-46bc-47ea-bc0e-28b9943060c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e63de18d-2246-41b9-ae60-d03a9e7013ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680a8800-7c41-4ab5-b1e6-785d86ce9688",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c510e8-f5a4-45a4-a620-ff4437aa78c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8972edf-e899-4e1c-8524-7fc127088be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554cc226-2057-41df-b93b-3ca9be183df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9867568-dbdf-4fc7-b3e9-f60f65766036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b84523c-391e-4477-b487-7a80c2dee12a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107914de-156a-4b06-b0f5-68ba7a970e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9ed4f7-ece0-4b57-b928-1c43d7e57517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18fcbce-2723-4352-8fc7-4747028eb936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dad3e9ec-a160-471b-8913-ece10337429c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b2d7d0-b78d-4994-bf7b-b6298d14cd91",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a9b36b-d1bb-49c6-93fa-a7d20c686597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4701166f-5c04-451c-ac52-210ac3b88c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500a0f2a-f847-4ceb-a4de-f651ce594b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09b14e92-b940-4826-9f40-ff9d86e3fa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1544b9-e57a-4817-a171-91d78153a266",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538cd6dc-d404-4872-a754-6dac422cfb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2765a8a-a3b2-4af9-a615-e02878a8ad15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4763b6-9c56-47ce-ad30-2b5f72a818dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f2b9ab-d460-4e1d-aeab-e9bf79e0204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836ec365-92a8-4797-b40d-6fd68d2982e1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c25395d-80d3-4fb4-85f3-d573a245882e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ab3415-a485-45f2-a4da-f7cffc743ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b44c35-5d51-411a-a309-e5e59dd68002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "149e6f88-a4e2-4dec-8c61-58bdd2d6cea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d91c6a-d404-4523-9f96-fe90f16fd197",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6e86df-1d45-4553-b390-4b1a32e16e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765c3d8b-2935-4c4b-94f4-75894f30a6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7907b355-1a93-4130-afd6-dbf05368c455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7268c505-042b-4345-9e0f-c3b7c32d4c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e89b060-348e-4518-b198-66af42ee08bf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee22cb24-0d71-4744-8819-211448b6c6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385c2286-96c3-48bb-aa6b-b488c55a1351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5347c4f5-b2ca-43a7-8be7-6de575daddc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ddf892-b0f5-4493-8c8e-d95601aff03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2017d0a7-1696-4b66-b120-b65f43aea1e0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87ed773-78f4-404d-a0f5-e779f2dc21fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65a3c5a-53ed-4b77-958f-811c71260c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c6a352-c504-4644-b35f-215d8f2ba0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c550e3b-90d9-486c-8b8c-9b9e9598f8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42972574-d247-4587-b72e-a750a8ace6df",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518f542d-f569-47d6-bb2a-5f2479241750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4332da-6d25-44f2-844a-51c1604ad86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed77bea7-407d-4849-8aa2-e0c06105dd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1d3def-fa37-4dde-bea1-b1464e9e19a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f98bf58-5cb7-4640-9bad-6294ee21b8c9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aae0148-f3c5-49a6-b3fd-45e2a38f0947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ce9267-22df-4888-93db-e574b26f98e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d860cec-c90b-45a8-84b0-16c0c3825c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fab3ffd-ac81-4bf3-b1cb-5f9f48e724f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8d6d50-4fcb-4093-84ff-3e1fce64e628",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a587da4-ee45-45fa-baaf-cfc22769acb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d729aa-3447-4a32-bb77-e6c26bedc221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d51de4-ace9-4889-be28-417d2a23eaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f152c8-860c-4d14-98d3-46bcbb1dcbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cdf7ca-b6c2-4833-96d0-7aaae6803c07",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026e6dc0-f34a-43f3-8e6d-968410458fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaaef211-b2c0-413b-b267-f4355fc35fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dd0dd5-a6d2-4b39-be88-0782babd0729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c4c703-8997-484f-8508-570c77f4c062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8906e660-14ba-4229-bc79-b5303990e978",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283c5082-96bc-4537-8dad-75cc2896d6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd86cdca-6012-4c2d-b2b4-042382e90ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0a5e72-1e88-4f23-b13d-6206a8e68585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35bb07c8-24f7-4c19-a8c5-a995171cd542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadba24b-cc98-4ec7-814c-9dad208dc9a4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834d332c-46d6-46e9-ac89-16eb6b4265d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31dade6-c2e9-4c1b-a4f2-543252d1f73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e146d8c8-2632-4fa7-8e54-778911ea014d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17161654-0f54-498c-ae51-656fc45f2efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82859f7-8e6a-445a-abcf-4ef4b26f3934",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e37e965-ab59-4fb1-8969-f4a90e5d6bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176c4001-18e5-42fe-babf-458ddec28440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec8f2a3-ccb3-4ca4-8274-d0229372058d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "489cc219-6859-4261-9e9b-e6e5e2ce0ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99113a6e-2150-46b4-a5da-2bbcb3cdec92",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4f0be4-27c5-4cb8-8ef6-c015685489d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aada7c9c-e64c-40e1-9064-1bbd4ab51812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5069784-d55d-4ca9-82b5-1eb8125818f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4371748b-fcf4-454e-9826-c215b30f063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67a2432-6561-4bac-9bbd-5efe8378a363",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a14c23d-47d3-4bcd-bb3f-86e9c8f8bf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bbbb69-745d-4c80-ac84-7ef4146faf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b279b4-27a5-4b4a-b3bc-c453b97176ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3469a3a3-bef6-4e53-9549-b256eee5ab03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164952c3-8153-40ac-9258-579713a3ba32",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb6a7b3-4d60-4261-af11-b6393d35fbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5050ea07-618d-4acd-a7f3-b7d3152b3f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc605ea4-d69b-4bac-ae2c-c27825a7f37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "998147a9-df6f-4865-ad92-f795e8c304f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72ecbab-d60e-4b11-b32d-6a0b9871149a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3fe7ac-2cce-4b0d-91a9-c9e89a2f681d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d833ba-5760-4b49-91eb-8ee23dc2c92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcced6ca-9e6a-40b5-a253-a7817574f6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d8e979-f17a-4e11-8ae3-93e06fc48e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f33e550-fa16-41ee-9d6e-d0f13e61a986",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8801122-18df-4bb9-ae61-4742d1b8130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaf9350-9a5e-4340-a1af-d9748dbb47ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb95b583-23dc-4a1a-8b09-e39428d56d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d98a7b63-fc0d-4772-8ac5-50be0bfe5bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60177acb-d773-4f8d-a553-ececc68e11ed",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f39b63b-d924-46fd-8c3a-23eb06b8834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844b9f14-c0e3-435e-9748-8fb1681c61cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3540c855-5c37-4b06-9c1f-f5f42010dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2a974b9f-e699-4280-abcd-9d615597643c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8862ea6e-429c-4af4-b2cc-7b964165cc13",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a118dd4d-cbe5-4ca9-a01e-e5d9fedcb188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cc78fa6-345b-471a-b4fd-53be2f2c59b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31526c6b-19ec-4442-95b4-c6c6108a7c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f89b803d-2964-40cb-96da-df5a06cebc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf7ec37-05d5-414d-81bc-b6325a1e91c7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9bacd5-7fa4-4388-8325-fcd3aa788141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89170a5d-1f52-461e-a5fd-98873b7dc51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6754bd-001e-4aac-b0e2-a1c9ce1926cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b558c27d-269f-478d-95d1-01190a2e2ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e983a92-858c-4eba-bee1-99150dd78b2e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4300de3-fc42-43b4-8f8c-6f01a59188a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c558ff-0eb2-4f09-b998-018c1ea110a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887a0112-0257-41e8-ad70-06feb32c19a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc08e51-5880-49db-ac4b-4c4f6955e49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be16841-3aa7-401d-a713-998508c72657",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a837a35-6acd-4cab-9399-cc7ed4488e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fdd5b6-391c-4c36-9241-5d08249b6b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c7ba2-e6e3-497a-8eb4-36a242c51a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ec62c6-2201-4c54-a68d-2fc572f623e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19949f9b-35ee-4363-a75c-8313bef89dde",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b35b880-f47b-4d1e-9c76-87b477309d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d729a4d-f258-4db9-a4ea-9acd1581aa1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a633eb0c-f77b-4b92-8e68-d49e524dd8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "acf4c8bc-bbcc-4574-b272-dd80eba02def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b7468d-a61e-4a52-86dd-79e215b39de4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0594f6-daed-4e7f-997b-28d76d61410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ac2718-2247-47aa-a09f-7f028d3a13e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff228f1f-6207-4a6e-8f2f-d720490bca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "06025941-f2e7-4053-8fe3-329a61a21536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bcde4e-3901-403d-b869-1fb2b1c51a60",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baa04d2-d36a-483e-b7d0-0f45f94a17b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6baa533-10c0-40d2-aa9b-b2dcbd4a502b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5351de03-fa93-4498-9bed-fbc810ee425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c92c0f-d34f-4854-b74d-e1d7526c6659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e120bae-8092-483a-a952-0a5bc35223a1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8836a9f1-bbf1-4a5b-85f2-c41f7ee43a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9780ec31-590e-450e-a2c7-86c944b98bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676b4600-b5d7-4722-8288-d906928c5bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "309aaee2-bddf-46f2-bfb7-ff4cc549e36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8415e9f3-46f1-4bff-9cc2-44cee0e45111",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c0dd3-d555-4835-86b2-2a793509bec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e107c65-4eac-4796-9956-f93001c4f801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f86a3a-f46b-41f3-a979-2d73203d33cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f41c2f-af62-4e08-a887-e82a3d394a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956582d2-5637-49ab-aea0-5dcbfa33b8e5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fca29f-acc0-40dd-843c-89ae35ba78bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a9caea-7332-4049-897b-df2043b17ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b588f3-e4b2-433c-9c22-72f93740802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c1438d-d390-42d1-9787-7fbb475037d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdf84cf-abc3-4372-83ca-742955361de8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0e0c3f-6cf1-444f-bc46-d0bbee032383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e75878-9396-4ccd-8a31-b02c892f67ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4517ce1a-10de-4db2-9402-04b372edc7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8339ec20-17ed-4b7d-8aa3-90b0c87ddb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6443ad-dada-4361-83b0-cc3616680e6f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3009d186-a5fb-4297-ae2d-7f9072ec66fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f895a3b-1f2e-4d2f-96d0-3c5f85fd685b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69401a72-5bf3-485a-aab7-2e0165e05824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f693d53b-b842-4953-b379-04b5627675b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217ca138-cc7c-4f58-9a8c-62935d558970",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a30989-237d-4c7b-910f-a25c32ef649d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a471824-6e3c-4716-a491-91d80d38f98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d929de-7e6f-47ea-a4bd-45d83036d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b71e684-a4bb-45d9-9cfc-9207ffc20323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384ea0da-b93c-42ca-bf57-d7e99cfe0b53",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9c2db0-a993-4af7-90c6-279772a672e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cc440d-7b8f-4352-9858-98c5b879e51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbd60fb-6559-4539-b121-c88b82590531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbc86d0-f552-4978-98c3-b2cf64e33176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227e6ae9-a522-4866-a496-9cb85a8e9e52",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a71d2af-76bd-450b-9fee-41c4714d655c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e872b87c-e9a5-4396-8b45-b575a2caee90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffea5739-cea1-47b1-82a3-e6dda355ae4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b6eca2-543c-4b5c-9244-38ac97068c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97c1aa6-3be5-4c35-84c4-dd6345f69d2f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806492f2-02dc-462b-b75d-97c8c0e2ef28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a97d3b9-a69e-43fc-afb3-99bc0cc537d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2c2d1a-6c23-43ce-97a4-6e04afd01c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e8fd2d-ed01-4a86-8032-cdf88d94a7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366fc59b-8a44-4ca5-a0f3-1aa3ecfc4b4a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642b0d48-016f-48c7-8018-a15a382956bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92eb60a-2eca-4367-ac64-1a6d3ae4b486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fd7cc8-8cda-43ab-a297-9c539699c075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a85cf05-7687-496a-b041-d355bdb29b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c33e82-8ec0-4510-8fe9-fb2df5524adb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f3a17f-a46c-4ea7-99be-d1304c3281da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca0be78-0f86-4e0e-9fff-c1e47d3b9c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa66d10-4b38-4b37-8c26-dea620feb723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8e0a68-3d21-4804-90f3-a1eab831bc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566e56c0-47ff-4379-8938-a5b878249e7c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a2a07e-097e-44df-9285-ec4aa88a5e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876a24a5-28c0-4447-9b4f-3ecebf1937a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8343d1-f2df-46b5-a84e-860ce0edb9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2be23c0-4528-4824-bb4a-fb276f4a50c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a2fc00-3ab3-4050-af07-59083d0026f8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ac8591-008c-4260-a51d-479a351a5c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe3df8d-b7a1-4086-a8a6-139b01bd05bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d1defb-b525-4012-9463-583e49077d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c1c51e-681f-4587-a39d-f481a9147ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e8bf16-e21b-4373-9ab2-50752a6d9b27",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe52303-0d61-4c47-b21b-017ed87230de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f668d52c-18c5-46d6-af84-1befefbacef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fe56aa-d525-4abd-bd49-3065a99c1e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "23a383be-5b43-4e8e-9c15-4abe5bddf8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef39a06c-cad3-40b5-929c-49d1ed962535",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9fa3b9-273b-463c-892a-0a8638d7aa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b256ef42-0171-48a7-b563-926bea326932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c53c904-7f55-4b6f-b68e-22278a5776d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d77daae8-55a6-4d87-ac26-78d31a113765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7be038-1396-4085-be06-a4321facce2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40b96d1-6dea-4839-aee8-a0d2608249b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f502845-1a42-48bf-96f5-68e7e1ef3931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952d9925-78b0-47c1-82ae-991db5fb3bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b18a243-6c4f-4834-a921-80c96b0e6061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d983bc-bf78-4f37-9bd9-2cf03a512641",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aa6419-d524-40c4-ac28-29b0b5793fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76d7c69-8b7a-41a1-acfe-1cb25418520f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271046be-4f23-4d8f-950f-8964cc1afeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77558c4f-e676-4c85-8b2b-ba6aab55bcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1af737-ee2a-4453-bc5f-e374a31abe4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa03a53-8f0d-462f-820d-7af6aa1b08eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36a19d2-ccc5-4094-9a1f-ceabe5f35b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7052f5a9-00d2-426c-9b25-fe56971eb1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "90fb5fff-8d84-44a0-aed7-23a87c77e7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee0e931-1c17-467c-9282-80c8018444bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e223872b-4b80-4b1e-85b8-334a42c6525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc0925d-deab-4bd2-b0e5-511c4fbc7904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36d8a90-9bdb-4ea8-a195-1aa03ed6341e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "93be4509-6149-4d0f-ba97-9ada4ba668d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c57ebad-9c2c-4a0e-916e-61d13458425e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0edbbe4-e875-4c8b-afa4-ceaf97c947b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eafcc7e-6309-44c6-9698-c55d255fa10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56085c79-778c-471b-bdf1-29066cc040df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b804ad7-5932-442d-816e-ff3d1cd790e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f46320-6642-4e3d-99ed-c8a395257d2a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95810f5-b732-47a8-af6e-d72f7ee58a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232f5a40-dc49-4d13-84f6-05284fb65e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6497a1e2-e247-4994-b16a-c9bde9199fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16fc57c-1ae6-4cd2-be2b-e5c79bcdb80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451211ea-253a-4946-a27f-15102994b484",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ceb412f-23ac-4e22-9897-137d7f05ce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6119bb-2f13-4278-a4ab-21bd634bce0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154079ec-e397-48b2-8a7c-ef47217f07e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95cbfb70-2e54-4d47-aee3-f4290ff134d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336cc00e-db4c-4bf4-9bde-f07f2f3c0690",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e407ab17-f5a1-4aa2-9592-5e28c32d4ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c464163-3557-4f69-8103-fffa0faca6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0938da3c-fb5e-43fc-96c5-9e57f28e737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df5c2cb9-54ef-4166-b6f8-f2a8e447ac0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2477d5a5-18cf-45db-8883-5b7c0dc355f0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55759f6b-51c2-43dc-bd02-7a04ae5a0dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185e3e24-b6b9-4815-83ed-c8439ad91cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17db23da-3b0d-4ac3-9ce2-49aa21cfcbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e3c302-7ecc-4aca-9afc-6e4cc537c657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec17e1c1-8f1d-4d74-b69d-b9de931537f4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f42ac3b-3307-42ce-a717-10cad136c768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eec1e6b-3deb-4626-a779-7ecf2b5c161e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5525073-b361-4851-b9e4-0d2c3d9f515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07ddaff8-6757-4f1f-9ccd-48de23ebbe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750b5544-010e-4661-81f1-bf0241a7313d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2eafd4d-9ea5-4658-ba9e-a10a67f71bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f2fe9f-98e5-4f70-be50-ce3ef4bb2053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce7dea8-d422-4fb5-b100-2f2c7d18f9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b0711f-46be-495b-8c1b-c4f0d4e4c61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12201930-69ef-4f9e-902d-38bc145707d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f739d4-42c3-4184-9999-a5103e18c14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42986802-d247-4a73-acea-1673ee9cb8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5596c2f3-473b-4ea0-9cb3-b6edcfe53153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6103fc3b-9312-4fa5-83bb-c79f177a56d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367af7f2-ce35-4c04-b1e4-bb4caf63a9b5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce693df0-3ea2-4cda-a5b9-26e2217e195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5db6dcf-9f63-415f-b719-4c78128dc633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a19ba1d-11fa-4369-8f2e-9b9ac6d99227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7306cef-aad5-47ee-bcfb-f4bd2b17d94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0801174b-8860-4d1c-866b-e70543bba251",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da766e96-036a-4f7d-b3ee-e63cc8307bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1684999a-bd8f-4529-bffe-29ec5db230fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf99e63-e80f-4858-96fe-b58b85b2150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8546e3aa-695b-4a5b-b0fb-29d60e25ac4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0c4e23-e21c-4f36-8a1b-981c92f56ab9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e90c12-6c50-4d80-8222-cb5ac6c0cd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b775c1-18f6-461a-9d5f-3c7b7f42bc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37618367-0ca7-429e-a294-66685c0f2493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4147cb-3327-44a1-aac6-2cbf6a94ff5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d454861-b9e2-4fe4-9458-841d1e3b1a68",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2c630e-02e6-46ad-ab1e-f1febb503f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91edcc37-19b2-4e5a-a0b2-8554de8d36eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d272157-e691-46a9-a164-d07e07e1dd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71140d10-4206-4e2b-ad06-543f088b7752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dc04e8-1485-42f6-8c90-1071429185b8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72b887e-192b-4864-940d-dc9b4739976f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817724e4-252f-4a38-bc33-f261a79ae171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12242aba-99bd-435d-a135-e47ad9148765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe7f593-6df2-4dd6-b2e3-d1788005d0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75afa13a-cc7a-4397-bf10-612c5f90b90d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18c46a1-0aa2-4f3b-a3c2-88f7c56710fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851d998d-6c71-4038-9a4a-d839a7e827c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089229db-c03a-410c-9b76-baf6d84f35a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fd78bf-a5b6-4ad7-843d-f371e249b23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922e6e43-654e-4351-869e-6e9c39b35d98",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48999900-f2e6-41d6-934a-1042fba73595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5239143-fa90-47cc-8385-fe22b5586db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e64e10-9fc3-4bdd-9a76-fec347945810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65940c58-8d06-4c0a-8fcb-23be45b99965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeaf26d-e424-4c1b-852a-6688c9c6bd2d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee95d7b8-d5a7-4c8b-bab7-fa54c08a0a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692c95da-e864-4977-963c-ff6b1636a449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2b9f57-4cf9-40d2-9bb1-f873d722ec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba9ca9f-8e71-4725-a326-090057220ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea2365c-bfe6-4004-8da7-69d1e1352da4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec764579-1af5-40d1-af3b-35b0c33b3a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cd9d58-7045-4d02-8dca-e5eac9aad0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f60080-c191-43b0-b2d2-c2149bc5a3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e4fab4-021a-4f6f-a592-a88a241e829a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6169e224-7c69-402a-81ef-1f01652b40b1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5791f4-8e2d-48ec-b61c-93fde9956c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf18b23-4b92-4856-8246-ea1c79543e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3e3dba-7d2f-4012-a415-97077c36323e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d0368c-a402-42c5-9b14-63933bcd9492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390b5127-4d44-4f06-8e92-6e3c84f47cf2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51369107-111e-49a5-a23b-0116cefcfb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41f0513-fa67-4176-b74d-341dd26860f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3e5d35-1889-42bc-959d-13ba976f55ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a897d2c5-6e1d-4b86-bfe0-8fd8130e9d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce64d6f-00d7-48f9-8712-e4ee9fc6381e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280927e1-a1d1-4778-9d82-6347ce808eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade3e5cf-bdc0-4e64-95b9-d6313638bb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1842505b-d22a-4ecc-87ce-a283fe4f000e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e433833-bb8b-45a6-9424-78a3c677ae3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b17ecae-3d4f-4a42-bb78-512abd757556",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6e43f1-fe57-4d0d-9f44-da5e5b9b54f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a310be8a-255d-49ff-ba0a-0d9b1347627b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cafaea-39bf-402d-a16a-554ac6d7e300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c84383-a9fa-4659-b409-3494282f6052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d02477f-ea3b-4a9b-b554-be3e20dc1218",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd60780-ebef-4c0e-8d4d-e6626fa9e786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080e8e19-7884-4797-9dbc-40e5403610b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b63539-1a1e-4ead-b31f-2cbfd963289f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8587a16-4cac-4eb2-afa0-304eeee1c352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a50fe3-8bc7-4451-b676-4bf42fa083a3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf7aef0-a342-40d7-8188-ac2609bcbe18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab7af56-38b4-4001-86e6-a9a0fe00070b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081903df-f19c-4216-80ef-718544a2ded8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9291977d-4f51-4088-87e4-aff07dcdb6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50794b4-fb02-4e26-9a3b-b09b1aee179a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886969f8-e97b-4dbb-9781-dd447432ccd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5988d1-3ea4-4afb-b1ad-17165f29bc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a021f-4b51-496a-ac1b-4950702b8d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6a038b-34fd-4d9d-ba8c-ce6e4c34556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0889aa3a-992d-45e5-b87f-6eaa0d7d5050",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2118b50-fdbe-4766-a565-1dafb290cd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a331b506-d564-4128-864c-654c58e2ed41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9ed03b-1a25-4778-aad9-16aaad083d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eedd59ba-dd8a-48f3-895d-896ce06eaae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848494bd-e022-4174-b1f6-d5e179a7dce3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75efacf5-65c9-41b9-9bdb-e82474b69f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72849131-2543-4af3-aa72-e3e38525b9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781d81ba-60c4-4688-88af-6b1177e30ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82ea268e-8539-412f-bf04-b573fc2b32f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2915941-b959-4984-8f33-61e2f8bdd8bb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec653116-8921-43e4-9e67-1289b6579dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28967ebf-74fc-4722-bdef-11dad5e28037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807453e4-6b1f-4cf2-8300-d464128baa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe3089e-6848-42a3-a373-0aef09b5193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833618a1-c117-46da-a045-da6c2042b8f3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74cc4f5-647d-49ff-a1b9-009e0c89c189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9391b77-e43f-4160-a450-b7c81d6e3fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b1ce54-4d1e-4028-9796-802aa8a5f01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "515a332d-2027-4b6e-9f02-cb2f6689bb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3519b075-7dde-4147-8308-72b4e59367f4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75264d42-29a5-4a48-8547-d2275d597995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671d2084-8931-42dc-b6ab-5325df97fe6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6b792c-354a-4703-bafd-93837d9cfb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e81055b3-2396-45b6-8489-02a85e957967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a613d7a0-c99a-4864-881d-01c5006715fc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f09478c-6743-448d-9c36-33f47babb79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3f927e-958a-4402-a39b-d942a2b1ba1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ab8ec4-0709-4108-a0cb-f4059f432c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e375c5c7-443b-4a82-95ee-a5c8bdb7f528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393d71af-fb30-45e2-834a-63271ec8c3da",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faf136e-54b3-4408-a16e-fba413378d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eaabcd34-740d-4f24-a238-8e7ba9dfcf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42723030-a714-4ff3-bba2-91cf156364a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3d4cb0-ce5b-46c0-a81d-949a00f42d30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6bfd4c20-4643-40c4-a8e3-8cb3e6451b02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c110cf4f-9bf5-4c7c-afa3-ff1af2683deb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c0f33d-c98c-4636-8144-7fd73cbc5659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51bc7a20-7a28-4f6f-98d9-494b47cc2e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d27e57b-fc5e-49fb-9b8c-6fee11441c02",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6880cc61-63cf-4fd5-b223-304e826975af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1706e94-8cf9-4015-8277-9411392a5082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3359124-371a-4cbc-9066-635bb91f2225"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "785be1fc-e6cc-44f4-9760-ac282a201def",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "044c98e6-ad06-4fc1-a6d5-58341d7d4a94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f8efd45-d789-40cb-8f88-4c732fba8e4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9670dc21-0659-412b-a646-11f50204d818"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "813c2b18-3def-4ac7-b5dc-ecf5b5a7f784",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac9ce217-7cad-42e1-a0bb-4e58a1491e1b"
                }
              }
            ]
          },
          {
            "id": "ce3633da-5fd6-4f0a-95d7-65baec947bc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25faa5f0-33c1-4829-899e-8c507ae9abfd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "41f08380-32a1-4590-8d0a-53a3163a17a1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f72bb1-40d8-4904-8f7b-e15ab3d20bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c6aa65fd-ded9-484b-8c00-28c0fa0b0bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0198e58-6699-490d-891a-4a847218fd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287b7020-3e0a-430c-b2f2-6b7b2c067ae4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3e7fa1d-55b2-46fc-8cb1-3a43a4ec1b68",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c540f81-7fbf-4156-ad73-57876e1f84bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee1bfe58-837e-41d9-a8e9-6c93eddb126f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44aa778e-6595-44d6-95fc-948a1c3ee542",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "416b489c-3f4c-4034-8536-df9d65f714f2"
                    }
                  }
                ]
              },
              {
                "id": "63e82ba1-7449-4a0c-9ad4-7271b97f0ac6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40e5ce99-0383-42f5-85cd-906392d99f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df3b67c2-1140-4407-b61a-62472fc55333"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "225665a2-627a-49e1-90b0-87679a83b021",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca4bb8f9-824d-418c-956f-2cde5fa38a2b"
                    }
                  }
                ]
              },
              {
                "id": "a27bf84d-7e7f-4ca1-9ecf-f00bea50226c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07377586-897a-48fd-bc96-8f2fbf1132f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "205c2b10-2c6e-4d74-8f3a-37a4db5a1cf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "385edb35-13af-4ea3-abbf-07d6f59bad4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22e6a947-6c78-4bf4-a9fb-e0f2ef6a29e4"
                    }
                  }
                ]
              },
              {
                "id": "dd03858b-e3cb-49ea-8c14-e965418d7b77",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "176de2f5-22c0-4636-864f-b1573385831e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39af1702-b079-4bd7-8ed6-a278531a5f3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8f44838-1aff-48c7-90de-23908ed99a36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b4ce8fce-d0ea-48f1-a4a5-caff4c0b5d32"
                    }
                  }
                ]
              },
              {
                "id": "a36bc0b6-dde1-47f0-b231-645f73959ccd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bd4e6b4-841b-4a10-b5f0-c392f21cf612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbb7552c-f512-489d-bcbb-572871ff318e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "165b171b-8c6a-4394-9643-480653100961",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d84cb5ff-0956-465d-95fa-d8f6a8f8428e"
                    }
                  }
                ]
              },
              {
                "id": "94f7682b-f77d-4d6d-9852-b130e823a73d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4c81077-1c3c-4bc5-b597-c96e6fea27ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7132226f-c71e-4703-9a55-860099ec0d64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e6ab09a-02cd-481f-baf6-b252ec20bba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10c7bc73-f7ff-49da-812d-6a39fb5c9fcf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b28b643-acfe-4638-94a6-ab53c5a20af9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83dde3f8-809e-436a-a29f-b38b5f36c206"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "061005fb-9e84-4263-a63e-9704ec4f67f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77921d57-0a49-4057-84ba-66d223abe695"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1edf4f83-03d4-47cc-8509-246d587b0f7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f29312ad-a5e4-4748-8e25-77b141624418"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e46f5f43-8a18-4d6c-8f99-fe5c62eb0565",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f363cdf-3e68-4f32-86e1-fe3115ad0866"
            }
          }
        ]
      },
      {
        "id": "f731b740-130a-4be8-8aee-6ccc79f2e2f5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2310f354-7885-4333-ad43-fd9d03a52d7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d340c289-5f10-4c7a-87d3-6c32e09c138a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a725d9b-1832-4903-afd6-492441fc7330",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24fa3a8-0a88-47ff-928b-1648a394b663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76638f9a-cbc9-4ae5-818f-317d8c396f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867642eb-463f-4ba3-ba7d-8af46473a447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdd4fd1-174e-4614-b51a-6e5a258b688b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b4fdd4-7861-4e35-9a94-c454c0fa78cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0e2bde-8741-4352-aa16-b1ce8614ae54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d805390-34e4-4216-811a-c304298998e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211da031-e125-4646-bf91-3bd22e00f6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6413b6de-caab-4fb4-bc82-33ae31684cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92eb5b3e-8c62-45ae-a8de-26d871fed684",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfd1f01-7662-4aa1-846d-60beb4df5d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559a40ad-7c6a-4a97-a331-bba917b4ad7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8e2571-b866-4271-b153-27e14aa8e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f34212e6-f0af-474c-a8e5-7b5f75b2ca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6e410b-803f-4d82-ab6b-098ddf2f7a76",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7440dcf8-7da6-4a8e-9c57-0ad03d894c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4171cae8-19ad-4a36-8e62-f6b615854be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4acb9b-cba0-4d93-8f7c-6038870a85cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff403cf1-fe3b-45e2-ba0e-f70186440e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75396ee1-147c-44ff-b1f9-d5ec021be248",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882b0306-3da1-456f-b7de-92745aea3cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f463a65-2dd9-4c4d-be37-55459d2d2449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa028021-c5f0-4871-bbc8-df96953b8466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b37dc3da-4115-4fd6-be28-7e456a1f6a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19515c9-8bc8-4b4a-aed3-6374a8ebc5ce",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda66604-d30d-4045-879a-9b1ef0121ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d711dc74-7437-4e21-ae45-189d13287a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0692e8-3915-4d2e-9a00-03719276f0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11db3f52-38fe-4a98-9c67-06760ee6e32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c933e48c-2f84-400d-a009-c75ee5184e6b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5499e2-528c-4f19-bbae-6199627b7d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd11e16-2410-46bf-95f0-fd72f3ceeddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb6e00f-26d7-432a-89df-3c2a591de83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a25f85-aaaa-433f-a1f6-8dd8f46f93c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445c8d43-d2d9-42e8-8718-36bd61772ca3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53562b72-8af9-4494-95ff-3676c3980157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1976fac7-5e98-4e07-8f15-3456a7a2a2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddedb483-4800-4ea2-9f91-59e2a209b78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d5b70a-9d44-46bc-9ead-7d704412417e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bea0bba-41d9-4b38-9d7a-361eff918037",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70d63ed-7463-408b-86d5-7ed7994e3377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3deb679d-590f-484a-9c6f-a1dfe6f3c87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6825bd4a-9d04-47ba-a8d7-f9d10948d990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "847b76b9-95e6-437c-aa10-ba5fb5f0e74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7121b57e-bced-4a49-8cbb-91e489f7fe8d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7aa9508-7cd9-488e-9282-d9f7079e51a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7b8b3b-378b-426e-976a-2bf5381616c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0378dd1-83af-41c0-aab9-336f8458e3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "613d16bb-0c6f-475d-b69e-31d0c0eef659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aad8aa-e91d-4838-82a2-062c6ff3af5f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e81d5e-3050-4cb2-8470-6ac0b12d19e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e987ba83-78fe-43eb-95fb-a2395c3e5822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cefe379-4ee2-4324-ad5b-39485f54a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c82cc1-2c53-4507-8d58-e054123fa4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df1b96a-8e9a-4ddb-87a3-22e5a17087fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86b1f79-1e51-427d-a2c8-98ee747320f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d225da1-35be-452e-a285-3e89825cc46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d690529d-8ba0-47fe-90fd-73959f1a0a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3067cf-915c-4cf0-af9c-87bd82625ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37c4e08-24ce-4f9d-9a19-28cb2a397972",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a34111-41ed-4534-9454-4055ade646fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcecc69a-91e3-4d0b-8977-765ed622d272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc006c90-9d00-4bf0-830a-13f05a715173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d224468-ac35-4338-8217-005f75ccd4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acce58fa-3016-4042-aa3b-846cba7b24dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e4a6f5-ec67-4149-93c2-519f252982f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2b2d17-212e-4a87-a118-c90f19db72e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d204ea-f2c8-47aa-b30e-2015b5cb6a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d280ef72-d9ca-42f9-9699-188bc248a3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9532006f-d5d2-4c92-bcbd-63aa559fd445",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4e4660-c123-4e71-8b3c-7b3f2fb1ded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5c8543-40dd-4bef-b600-b48310d1c303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc624118-3264-4e42-ad9d-888a03a656b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "922a3c60-3242-4f01-9f86-2a18cb506715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7771309-a241-4da4-909f-d1ea029c0520",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a859bcf3-87b7-449a-b6d6-1c207ccbf039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffda689-8f21-41a1-be06-a1f4484ee362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d743b2ec-4c35-4199-814f-0fef030e532b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc564e7-51b8-47c0-838d-f06d21f6952f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ffbf22-031f-41ff-bfe4-6322a219e33a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2700c4-072c-4e29-8309-c3c5bda27290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1de573-2369-4bea-8cd2-1fca6c1c8704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb760e24-7fa7-404c-a61c-c745889406c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bee3ce3-77b3-4fdf-b665-8fff7337b55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258b812c-a906-4e7b-a0a0-3441fc00f192",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1665d67-dde0-4fae-a2aa-5af48f801670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7246c3-d59b-4952-881c-3ae3fc77c511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f53195-8bda-4ad2-ac0b-69e1762249fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ca002c-d728-4259-9f35-d8f03239ca67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9805b2d2-f644-4f60-9d5a-bac3c86f3ba9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9144bf22-39b8-4000-9f01-9cfde00a3428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d7c24f-d96b-4284-a40b-cf3313b329cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acdf7e5-992d-4465-810a-ec1f6e8c7788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ebfdbb-d285-4113-ace1-484dc51f1398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09301536-0635-4fbe-9265-a6e0adfe2d6d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19071640-fad8-4530-bc7a-80276b09bfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7134837e-9980-4ae6-afc9-d18039eff432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9846ef74-a062-4faa-8ba3-774c047474df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3e6784-9867-4ff4-b25c-bb45fac06b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850104b1-3c4d-489e-9eee-f80d5b0d2e59",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee26341d-2785-4980-9b44-4434c45e9de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d575c84b-c359-46b1-9b57-52179602e923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15641f33-abcc-491b-9dfd-5c883c7871a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "348f987a-9395-4df9-8f98-3a9671d0b49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f029ece-5790-4b4d-b44d-7cda97431710",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c6f5ca-ec91-481a-8d86-112275370e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8765ba-f0f9-43ab-ab8d-7aaf3aa22523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be24a67a-ee04-41c8-98d5-db4e91425cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9cd6b2-82fc-45f2-8bf3-d30bac1c0359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39963b9a-c728-4a24-9de0-ece84f9a6ea5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c25e5aa-1566-44e9-967a-f2c7c96474a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a889cce-d3c8-41b7-94f8-edae6ca91b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47030faa-fc17-4306-85d6-e9e371b91f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4dd502-8b7c-4750-98ed-81fd77a76014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a767fc-6f52-4279-bd2d-8b98f902180f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ccd673-855c-451b-a5ef-4f8f12d66e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aae4de-28c1-445b-be0b-0eb5a2c3c85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d3b0c-8beb-40a6-9b63-de757f18ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d29ef608-66ec-4570-9599-863950ce36e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3132d1-95cf-4dac-b966-8451287d1f16",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9848b805-23a5-4e10-930d-6c9685220ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903c4f7d-3fbc-4811-97c3-981ba21ea7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a751be8-9786-48b9-afc1-5e59b65e21ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d34e71c-ffd6-4a92-9c39-50801a62a8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255fd9cd-d577-4f7f-94de-1d5aa9f0ee8e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5beed6c-4377-46d0-b64b-68eb28a709de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4a9386-0edc-4e36-9bae-f3c01594199e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d8b5e5-116e-40da-bb1d-5d5d613ec318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080943ec-0f1e-4abf-94b1-eb98e17a12b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b133adf-829f-429c-8f18-228f286221c6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689313b6-d0ae-49ef-94e4-7e9ec8748e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c7f72a-967e-4728-9119-3a4f790a6c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93fdd88-2871-4d3c-b5ba-8ef5e7629415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e49ae6c0-d9d1-4cea-ba5d-42b447f8666f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baa162e-0995-4864-85e9-525591279559",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484cac4b-3c5b-4d88-bab4-c802cffec66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a16cf0-d565-4e6f-a932-b5392b3bacbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ff11db-44a2-4568-9bb4-07b6982db0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "868fa595-0f1e-48e9-a6ab-c112b5b64a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72768cb9-b688-4d56-a5b3-64a29da7c682",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc73fda-fa9e-450b-9f3d-7040709e9670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83c0a4f-2b82-4d43-a7d0-c18a7308f82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b256c58-e625-49d2-b150-c8450ce30e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb92fa7-0e61-4e94-b50b-ebdecd8e658b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e5e376-f2a5-432d-bc82-7cc1d70dc966",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9104453-c5c9-446c-afb7-00b93f8f94bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1033722e-cfa0-449e-9f10-8753597ba2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1120fc93-2316-4e93-a4e7-7a1dc8141c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb15ff56-1a08-49e9-af2f-7cd05de5de9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8716d03a-2047-4c76-8210-c3536715669e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ead5bd-117c-49ea-b338-c65bdaa35552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c423caa1-1819-490b-936b-8bd2c84ee5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fed4f3-fff5-4b34-a4f7-4fbbb19c8443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5c81e9-c866-40ea-bde2-cb237ad79e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaf75a9-4129-4b9c-91aa-96dc22d5daae",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cae01bf-f56b-4f78-8eeb-46ac0086b932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11403517-613e-41e8-a436-5c73b1b9e26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a87d247-0804-4454-a89a-35b476092dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1743607d-aa0f-4dcf-9001-e1b69c901706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68a1c88-431c-4ac4-b991-444022ad117c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6ce662-9d41-4f34-8689-2798750f4f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db74f329-24b5-4b35-966b-125763523407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08130685-0a62-4ae8-9dcb-2971f4f3d781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82adba85-d1e1-4479-a85a-e01597093a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a49cd3-b964-4858-9cd8-f05dac68455e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0afb42e-3528-44a9-aa8c-72034aa46569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c2f966-ccb1-4754-8c4c-8ecef1d48776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff727a6-0b1e-4c0b-a83b-fb36c1fd2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed85240-57f9-4e30-8b99-2998cad0c9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6cc7e2-d8b1-4661-b3e6-f69e418a4009",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7708bc9-8a57-4d16-8da3-2accbca94e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec31de7-c705-4d6f-849e-b59779a5303c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53d684d-2eb3-4526-8387-6dcb1c3393cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "677b7024-6817-4d7a-98e3-d326f016e2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44889cfa-366a-4e9d-8996-6fdda36c9240",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b548e3-2df5-4772-970a-8dd510d3d54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d09a2e-bb70-49b3-902f-8811d125ad2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f496fdb2-3d57-43fe-b174-a70534b8e45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c967966-59f1-4dd0-b85d-8a37d9778d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778e2a82-50cd-41e9-bc5b-18fb1cf4d063",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6936c064-38a1-4b08-af18-e22ac3c434ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b96b09-be7a-4bad-9c0f-b03cf9d572cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1184389-ebdf-4132-9204-9e3a09bd1ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b338e40d-9f59-4eb8-8486-69300061152b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "302b2174-743c-47e9-aec5-6eaf3d8171a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4eed3d1-993b-433d-b14d-1e4781fcad36",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae7531b-99af-48a8-a5e8-46081070efdf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0353c73a-8fc3-4f53-8b1e-0341f272a2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c031f93f-6ec8-495f-ac5e-d466be5c0879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c1b87d0-8209-41e6-8b4b-f1f29a807d59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d54f7a90-5035-447b-bf05-72c4dd2ae326",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbb90826-1e1c-4f7e-a2a5-fa1e0f241597"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3413cda9-90ff-41f0-b3fe-b8fabe9f1fec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aed6d448-536c-447a-ac0c-cc379473cf87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "deb0d446-1b41-4a10-9571-d32e870d37db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1028edd7-dfb9-40ef-af17-ecd54c2821e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a67960d-1bc6-448c-b7d8-ebbe4a8c0aae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59d3f81a-1765-4188-9a1b-29f45c5f3f02"
            }
          }
        ]
      },
      {
        "id": "88309816-056c-430c-9129-1e079690c3f2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "744350f4-8e40-44eb-9466-adcacbf8ec58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1595feb4-ba7e-4aff-a9a0-85285a21cfa0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d76bee1-1673-4ecd-8576-adbbc43828ac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f393eb03-a6b5-42da-8016-5838bfdfacf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ba7b4b-71af-4261-8b88-da20c67c44ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d75d68-ff8a-458d-b867-eb4e12293797",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce4803a-5b63-42f0-b49f-ebbbfb179283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea86e30-b0fc-4c97-ac21-de5d6a47984a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb3f76b-cbc8-40a0-b8c7-8b6ba229e69e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6c4b60-6854-423b-aff9-76a607e4df34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1b2026-a8fd-469e-9812-edab2099cf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f5296d-a449-4340-8cd4-dcd3bfcf88d4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bca843-e265-4031-9160-d69e5ee262f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52cc66e-b967-46af-9a2b-fff13c256c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1ff8c8-340c-4dbb-a59f-62b0c0bd707b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e160ab3a-7755-40bf-953c-eb6af56064d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f0f661-7dc0-478a-94a2-b8f14f5906a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc7cdfa-127e-434b-bf19-8c7ace3c9862",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76544fe3-58ac-48f8-b76c-319a87bbe4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a689efaa-d0fb-4760-8bff-d19c5d573608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b384ab08-dd5e-4713-9378-18349dc4c430",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69466bc1-fe56-4afd-a526-a008b52ceb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c523d95c-9b23-4e60-a10c-21977067a9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939a33f6-f202-465a-ac99-f867b9d23dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5bbb5b-7d92-4b5d-9f06-8a5ca5e9797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eec61c-1807-43e1-bfba-53f9eaa4337e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dfa04b-6a25-45a2-b549-9458265fe5ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37fd6c84-3174-48d6-9505-b0cedff249dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6052af35-7084-4967-9844-841755549241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d1af25-d301-4f12-8b0f-46313623418a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e366e295-b80f-40e8-a012-c283af51ac73",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3586d7fc-4512-496a-aa54-4b1b779920dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c41614f-31bc-4b48-a9bf-67c3d3db67da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ec0b54-fbb4-4567-a1ae-c2bc5a95d230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1e8628-e0d3-4e93-873b-00f760a9e733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc49b52-c73b-4e4a-b312-89bd2f4fb3df",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca41208-7d5f-41a2-93f6-587d840b0b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7de242b-a66f-4887-8268-90ab42d8d8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae8c4a0-b1a5-4bcb-9681-baf7b365ac15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17da647-7d8e-407e-97d8-15bf552f9c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27036673-3df2-412c-94fe-67687f6a4c71",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705d83cd-3e58-403c-8518-3fa2bddc207d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521588b2-bae1-4fd1-b229-4964b0779b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669fa351-0401-47d7-81de-a09df25a6d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27219a1-2883-496b-914b-e3aafa340e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d3c991-1937-49cd-a520-b3fa4e0f3d91",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e51023-9397-4676-9484-f79fd64dbe30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79305557-7122-49e3-9f63-901183a83168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e21455c-470b-4ab6-880e-26224fa0bc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d560ad-4827-426a-badd-718ca0be4706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d494d4-ca0f-42ed-93d2-a70b07000253",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f67b92-d92c-46b9-b415-a57c19fca362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba166f45-7326-48c0-874b-29b5551da709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052fb2e4-23d5-4da4-bc6f-6cf672c291f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1aa4c26-c02f-4f84-8ba4-9e6dcfe46b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b1f40d-d10b-4dc5-b9d4-627ea7fbdb86",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824cd1aa-de15-4674-a7ab-abc1207fb5b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d96c6ab-53e1-4a79-811f-d48997323635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a582f5b-38b6-49ad-9ea5-252a79391bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870de33b-52e7-4cbb-bc05-193d628c3207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f3c891-74f3-4fc8-aeb2-3fff089207c4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266409c1-e61e-485e-abc2-60a43a295826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3bb1b5-46bf-4a0e-bd36-28aea7317f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765fad76-1ee3-45c9-852b-182e23e48e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d4fa29-15cc-4f3c-a61e-08ae835c169b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0d6a68-7c2f-4254-b878-026da7bf74cd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff313389-c730-46a1-b9fd-2de3f5d95df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb703836-25af-4ff4-81c8-751b6cd126fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5830470b-d5e7-473a-b7ab-1d2995d953a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ac1575-17fd-4dd3-bfd3-59a50ec3c890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10890b53-a3d6-4db1-b359-270a76e19bf0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb65c15-b3e2-4097-b5fb-fe8bcb3510af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730aeeca-5243-4338-8c30-6ac9f03f8673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2fe0d9-a33b-4503-9c16-478a40dff823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82c37f9-f9c6-477d-a87e-6849a071c2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8c0514-abcd-45f4-b796-d29998e1fbe8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cbd76c-8da7-4068-ab64-3cc7fefdfed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1a5bc9-16a7-4e95-b427-e2368e524cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3f38a4-4ad2-4ae2-9b00-046a9eb219b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470fe734-c552-46fe-acbf-63438d6391fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80706a7b-ecb8-4245-b951-ea57d77b9d96",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0604d7b-5cef-4e2e-b755-a534889c1c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51185bf8-7318-4d89-adbe-7f87c0a2dd86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a946609e-3049-4b6f-a637-42b7e279e28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36bd69a-1a3e-42da-9f2b-6b11206c8032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a5ab80-9d8e-4c09-bc66-86b122482008",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788429c9-a109-4369-89e2-36d63642e4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c58278-e1c6-4cdd-8f93-1ffaf3963e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0005ea2-321b-41e4-ab3c-579c334c4e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be971e07-f79f-4647-bf70-2ce5d9d5722c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ec0210-49ca-44e1-a13f-e13f92544026",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6488e1e5-defa-43f0-b70e-f25cbfcd1329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dd5086-0c72-4e4a-958e-60579756d94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fffc5aa-0dd8-4581-ae7f-71c56bd3a427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1a48a5-be62-4473-bd5c-0a9c41d6d8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a7d822-8082-4c0c-88bd-a2f019df1476",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828c5071-fbe7-4605-9c23-40871b3a7876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb9b2d7-aa9b-4d69-ba43-93ba9ab6658d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6595b9-9380-4405-ae36-b4970459315b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e13a5bc-e754-4253-a070-2d2f83d85ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59ae19b-6704-4504-9184-0b792a562396",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac499c39-b30b-4a61-b0fc-7f7b322d602c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888001e2-4f81-491d-a509-1b3750251dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f141996-0d3a-4178-bf1d-041af7e033dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310e9a41-e6de-4e84-95d4-a78d7c38e4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a851c112-201c-47cc-9a3d-3ed49132dc96",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37deb243-ec5a-4f32-87d8-72b988cd17dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3557f609-974a-4686-8152-fb9820508425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbec3aa-afe4-49bf-b7ba-90f21e57a75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edff5aa-e0e1-472a-abf6-c6edd57a1638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417e0be9-5aef-4a75-bd2b-44230830c431",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfd28fe-b014-4c9d-a1c9-65485418a9bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fc423b-d039-4db4-905f-b9ba89e1fb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d98cb5-29cb-4996-b239-5d36f2047fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec1063f-8e83-4f53-b21c-d436221c4e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc9ffbd-35fa-4099-a9d0-a859965c4842",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487b04c8-c7c5-4fff-8478-b70df275356d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1376471-0f70-49c7-890b-089807cc3a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba585396-3851-4a2e-990d-010cce8b7805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233d7a84-c037-4ad4-a599-596f349deefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5e666a-e4df-4438-a36b-8c483c3b6190",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53dfef5-be14-43eb-896a-30e9cbff572a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a50a847-0f24-4142-abe4-cb906b7e677c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8eeda12-63d0-461e-a09b-5893fb221fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f016ebc-668a-425c-9db4-53ad219f9537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f963bf-c253-4e91-91be-54cd40f5d271",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6878e94-8c2e-441b-aed5-3d8634440334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc1154b-4c4d-4b8b-af98-23773a276930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53e3099-db71-4829-b200-f0883096a6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e4d631-26bb-460b-9f19-464bc19329b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf579ab7-f92a-461a-947a-afec9590e238",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48acb297-2f9d-4110-81ce-cff336b22e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7411f228-f98c-47ea-99c2-264c5245ee0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91941908-b821-4446-9308-725d12b263bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b09edf-e37a-4a54-8221-61782bcfadd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05545e1c-8839-4853-bec3-81caaa6a3037",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e2b676-52b2-45f5-a0b7-c3be1f9b8e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f04383-889f-4191-8e3d-17a1eefa7f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37bdcfd-9c89-4521-afd3-8c7e68e7e9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043a257f-0b05-4c48-9aba-dd896f31b613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a023b9ca-c368-420e-8932-cc6638af94c3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9773f1d-e795-4442-8102-f2e40ebc27ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c00222-4426-4627-83ab-8660c15f1c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cfec03-45bf-4260-8423-71ee0b4312a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb71755d-34c3-41de-b9c9-45f47388973a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5a54c3-16fd-4a14-84b3-4d4f359cfeab",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328e5c8d-ad8a-489d-9847-66f272769547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e857e4-9910-499c-bd5a-cba7190ebb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620975be-4121-4800-aae4-b94584a1eb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568b0ef1-5b60-452a-8c9f-bc8a167c738b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910088b5-d127-4182-8c4b-10320897cc35",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aab93e0-36b1-4075-ab3e-303d1642e239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba4abb6-9b60-4863-9c1c-2e14f9b96a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8105e3-2dac-4ca7-83cb-73df976b423d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542bd015-8254-47bb-94be-e010593bd832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246d311f-b689-4ff1-a947-a168a68e58f4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f0dd35-76cd-4f67-9f08-b818af62bf24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0edcfa-6d6f-4107-ab71-8a7ea79e89a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e862b62-bffd-49ac-9d8f-4b65cceb0c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8ec451-894c-4df8-b0eb-d4eef36f57d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d6b2bb-205c-49a4-89ae-3747144b4f19",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79736cc7-df65-4123-b2cc-5ab831201420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8877588-7bf1-4e17-a1f5-f55e72f95540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7014380f-ed7e-4401-9c8d-4640871ba3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf17298-bd72-4b1f-aea3-bedb6acbacc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736bd857-de8a-4beb-a0a2-529b6042518d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f905ab-bc0b-4b7b-9acf-7298deb55168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625af382-4b86-4fa3-b112-7d489f1115a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6dfd1e-a251-49ef-8d40-5532c675e2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb82560-684f-47d5-8042-d6a1ce11ad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e277ae3-2bd6-4142-9ca5-621154844b0c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cac4f5-e6eb-4c0d-9250-8b240261bcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7abd1f0-3fc0-4134-b3ff-3d4a88c744b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cf7aee-d8bd-41fa-922e-38d29baba383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4382cb02-24ea-4258-9839-8312a9fc75e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e852031-d706-4e0b-85bc-7d30e415b154",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4350041f-fdce-4fb0-ab9e-c720e1858359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829cf2a8-8a33-4e3e-9901-97db01ce436b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d37c30-940a-4090-b925-02df8e383e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c32209b-f305-4db3-a79e-1ca9914d3862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f824ad-89dd-473b-91ed-e186895ec24d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e8dd8b-7d09-494c-8547-34b3a313949f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659745a7-c8f9-44fb-b9a6-7bb6dffc7660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfde4c7-e996-4802-a93c-555e6e89cbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88d7b33-e4d3-4227-a9e8-9da46a27e421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c771b0d-f923-4c4d-8f42-cd1a27df6eca",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa6fd65-3f37-4ddb-9c97-2566914e2608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8379f143-8d22-4f10-8076-e95ddc1f40b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542520a3-244f-4f1d-87a3-3950d5ea693c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6f1b86-06e1-435b-8716-87c0c2eeb007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f245efb8-124c-4213-bcbc-349b7c730939",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c258c0cd-ce0d-43e9-9dc2-b13e4d311f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f77c077-96eb-406a-8ba3-fdae747b7f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdd07f7-f538-4b9d-8a05-348302ef158d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8841a338-c45f-4d61-96c9-860d70b93256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cdd6a9-e630-4000-9486-ea2d0af25282",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c675cb-25a5-4010-b451-c4c6594fe93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3321a5dc-55b9-4abc-9f21-c3da7df9f64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae4306b-d213-4d9b-85c2-3e2864aed52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8470a6b1-536e-4f76-abd9-f58d02f5595a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab05d82a-9ed7-4ab2-bcab-ed086990efaf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dffa5a-6dcb-4bd9-bc06-db9341550f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b29c6a5-d897-4afa-881f-722ce71c5301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbbde1f-3a06-4bba-95a3-40bd4de8d9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b771584c-e06e-44e5-a05d-4af1623c1684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cefdfe9-22f7-4bd1-b9b3-d42211fb457a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bd0687-b716-4ef8-8d6a-4c768141ec44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f5f582-3555-42b9-be6e-486632386b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dd0436-c353-468c-8b46-abe199b368e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aa075c-d62d-4eae-b2e5-3a4e7ec8dc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b31a6f-c380-4178-bbb6-f160a92b27a6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6472f0-5e21-484c-9464-8c831f211219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20a17f2-d382-42d3-8080-eee7bb03c3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd40d2a-f80d-4d92-a2bb-1ab2b17e9d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223d9590-4599-4bd5-b816-c9c9706c4a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102a7b0b-42d5-4a06-a54c-d35092bdbff1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d060f0f-127e-4205-ae72-866404acf602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f703e92d-a584-4998-82bc-174d5014cb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86513d8f-b499-45da-8aa6-c3bacede68cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66e50d2-e9b1-45c2-8f88-79d39d64ce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cfe2f9-a853-4dd8-a5b5-3b53e1e4855a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6e7783-2dc7-4e4b-9c9c-cfef0eedcdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f1d8dc-7cfb-42a8-9d41-c5a7ec218f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17937e6-65ff-46e2-821a-ded0d206fba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af6b058-56b2-478e-9898-dc6b48aba609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5e2d99-0498-4eed-b3f3-7c22ebdf8992",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc4c40d-714c-40ab-88d5-6532188e9da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab33590-dcc0-46b4-b94b-2e565979b1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b3dd03-8e2d-429a-a472-6b23b97c4f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938212d2-bd44-43f8-a2b1-15b9249307d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85be9ac5-f3d7-4143-96c9-cc669425c4e1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbdc86e-1cd3-42ca-ae96-9b66190cff0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1798d63d-8670-4441-8441-2e45aa2d8a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf854d27-8289-481c-b233-a085db754ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9374184-7fdb-4f07-9aa9-365c1b57c01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2ee147-b809-4a1e-82ab-af484266e521",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c332ce4-fc46-44e9-b615-63cd31b6106c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b82ae8-11dc-4f77-ad08-bc55e01a45f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1640a1-2380-46d2-a06c-761590c84305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00791982-f214-4608-9664-40ac60967465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a70e78-cd6c-40cc-8c1f-9d73e5acf44d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8886d976-d6cb-457a-8dfb-af7e2eb30c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a7aeca-51c2-4f6b-8c6c-d39beaf2bc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d88a97-e5df-451d-a290-064d67eadb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3601c0e3-e5da-4bd8-be56-cd266697e9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08ad609-d6f4-4716-86e1-ec0e0da898a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb424971-1446-4fc3-911c-a74992e9a1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cb4a6b-e2ec-455c-badd-8458f5a06667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4175d45-cec5-48ab-91bc-838e2f930749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c5f710-acc9-4fad-a0a7-4598c191f2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed7f3eb-8fff-4e64-a9b9-6c88acd814bf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e890615d-f927-4ce1-b86b-c1a800350ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28c0e5b-930c-48ef-a399-2667d1eb3342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967c7ab6-e35d-49a1-9c94-80740266bdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7b9b20-f6c2-4f5a-a201-15d60a0e7b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7070d16-5e47-4535-b89b-e4f9131d29a4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1217b51f-3950-4c77-b9c3-3e7066c0e2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313aeb17-d385-4b30-94d2-5d325a18c9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0df57-41e2-429e-bb6a-fc37c50d2663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f42a070-b17c-470d-84f3-c6d82b7d57f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dd46f2-af06-4bf9-964e-56b5e0b3dbb7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c65ff16-2730-4907-9801-5943c9da2ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629cb293-36ae-4d0d-9d1a-7a0b7344e00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4830ded0-c9bd-4949-a7a0-1d34e683b167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8433ec-218e-4aca-acff-3e6682dcbf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea35331-b568-4536-91ad-9a58094c1ca4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819a9755-68dc-4742-aaec-63a8b0cee0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac4d0e5-f523-4e6a-8648-ab9b8d56c8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d533ee04-1fc7-4626-a580-e190281c99a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f88ac93-7a49-4f7b-a48d-5e52ebab8bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12669225-6585-49dd-8341-61f3f4fbf54b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ad2bcb-66b2-468f-942b-27064c222648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1c0cba-b5b8-4656-a3ce-306282d79d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00275bf-ad6d-4a46-b493-7a1cfe91a8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2acb09-c898-4da7-86aa-a63a6f74a1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a751a0b6-0780-4a04-a176-e694dfc27327",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e5ee81-0e42-42dc-b1b7-6331c161ca1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dc518e-ccbb-4e46-8044-71a62c6dc36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397d25d7-0d1c-4bc0-b827-b89be86d10c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6adca7-4c8b-4694-82e5-ed68c67fb4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3b623c-9573-484f-802d-ae0f7ec931a9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3a39aa-9d32-4c67-a772-74d0779236c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344091d4-215b-49fd-9510-aebc2d0247ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca33e5f9-a025-4ea7-8494-a546381694f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89aef146-e729-4828-9145-372847c21cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e93a540-c573-4cea-b136-c4ba6c4f41a9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bdfb1e-2d94-4b89-bb97-e7f5cd9fba7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fae2d3-a6b5-4e47-8d88-b0bd05202343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa964127-ee47-42eb-a1ec-b2acdac350a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcda7d4-0f89-4d13-a2cd-a82c8893f8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5570a91f-8cb4-484c-8c19-9a26b058fa8b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e7a0d8-5c46-425e-a5ad-38908491ed6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008d3c53-85db-4ee6-b8df-a88dff2540df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff585c39-4bf4-41d4-aae9-752319310a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbfcd03-f603-4db6-b1da-e317cfdda706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565df47d-55fa-45ca-959a-1c83303c8fd4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9541b9a-b2e3-4358-92f9-f1ad497c8c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc66813-fbfd-4059-b081-27bca1a55ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede243c8-fedc-4c24-a85e-63548f681337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a025f95-e5d3-4b60-9ed8-d4182cb64e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22d2dc5-fcd8-43fd-9610-d686c929343f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87288596-645e-41fd-acdc-a192cc131b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893a19d9-e2fb-465a-a46f-6096943d8905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be75aee-95fb-4ba9-982c-a3efe1fa89f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e9f3c7-a467-446c-84f7-e2d2b99c0aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec52656f-4570-4508-8070-44202faf3c2b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3eec4a-7511-4d39-96ca-36ff0556b9a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8d09de-44be-4af0-b654-a56d96629895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33db1b06-000a-4bc8-afd8-75faab32e13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd8a47b-772b-48b1-af11-e3fb820386a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5947270e-5a00-45e5-8e74-69a6c24cf2f3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34c0baf-e704-4667-b234-c1e8592b7e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c844961-4724-49e6-b1dc-53849fc288a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ca3e9c-e549-40c1-b6a1-5fee2862ef32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121eba80-85c9-4e74-8118-b346a9198d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb50e28-889d-44cc-82ab-edb6f8949d49",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea01fe9-2ba7-46c8-8aa4-583f3a4a37a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e2db7c-7871-4e84-853e-86667ac1a4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c76404-d677-4d40-b45a-73eba8b2f1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1201fdeb-8f55-4304-802d-21346c3a7ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6e0370-4f84-47cf-8903-96eaf79830ea",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17601188-08ac-4c78-9142-115026bb2c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b7d5465-13d6-4ff1-821c-51f4fd7e216e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a274ae-bba8-4548-a9a8-c5ba0dfa6cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa9fcdb-6a87-4065-9b05-8e9ae846ff00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae31d194-d5b4-45c6-a3c3-821799d422d8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef5b7c8-879d-42ff-831c-fe949558abb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c04b7a3-7062-4238-8393-4abe975e20b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ef4825-aeae-40f1-b667-dff1754e72bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e69784-fd5b-46da-a228-3c674d1c0665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94f2cce-bedb-43a0-9c6b-59ddd2ab8ac4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6556ec-4456-490a-bfca-f70356c1d6f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6109a76c-1e92-4f29-a8c0-8d5e74cafec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e7bff1-8c9a-4e89-9bfb-67c2cde06f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6858c85c-c21c-45f5-9f47-0880003e0910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee907dab-250b-48cb-84fc-c1808f8797c5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a7e66f-ed71-439f-9f54-6f359957b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba6f8fa-6497-4170-8946-6f5a556b86cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6826b1-3062-447f-a501-c5de74102ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e331d34-7919-4e20-aa87-7c9fe2fef7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd91400c-9190-4b3b-9b3b-a1f33826f7f8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bc1d43-04d5-4724-8c13-725f6868c7e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ea5445-a80a-44de-bfe1-311d73bdf467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb73bcd1-848e-4de5-b707-4246c37f2195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7009caae-c02a-400b-bc4b-9b7dba4a3b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcef9cdd-b4c5-40ff-92bd-427ee72bbe88",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66caccb-cc2b-42f4-bd5f-992e2890e630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c006cad9-1f87-41b5-be8f-81f453d6849f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc8aea4-2730-46bc-921d-579fd66b9189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c671ec8-3740-446a-8c55-27d483d518cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0117fcc7-fb3b-4dff-8c42-e391cbc0294a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64f74e0-2e56-4d11-83eb-0aa7ee177004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "121265c3-04f2-4474-9967-207acda87cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc91ad2a-c4c3-4578-8a6b-e7f3d4bd4f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7236829b-f42d-4f8d-a615-db25b3856a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69112b64-89b7-4753-b89f-bc9f164b34b6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a30ccc9-c158-4fee-ab7a-fddf19c616c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae057ef-afa6-4884-b41f-2ad23b0766ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d39c89-8993-4b0e-876b-932a63ab6a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59343f8c-742d-407e-bf4c-c63a0c7e72ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87427d65-6286-41a5-85e1-ef212b2d4c76",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05226288-20ae-43d9-b848-93c2562062cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee0591fe-f8f5-45a1-9cb5-160c9a6b6e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a8a99c-15aa-464d-b9a0-78ad9a75ccf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d33640-ad7d-4652-ba5f-08ed4c7305bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b575e9e6-0b51-4135-a608-135b49e19ffc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f29f1c-da50-4616-b61e-22e65024c199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ee09ff-5ba8-469a-836d-57283934d444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82577bee-95a1-4d41-8658-a80e3db630f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fc878c-b789-46c9-9355-2a27f4a8268e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f05ffe-7c38-447a-9969-f7504fea3fc7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00345b17-6dbc-456b-be8c-d9ffeeb653a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21420e15-69db-49dd-919c-eee8c2817542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f634e0aa-5532-409d-a241-7fb1000f36e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80864e7e-00cd-410d-8c02-fc9851e42bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f421b48c-c363-443a-84dd-082b1a483706",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0be4c9b-0337-441b-be97-9018222cd750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161efc1d-6fdc-4297-93c9-4fed3cd6a491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e0f793-b681-4019-a60e-8794ff8e188c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e13696d-686c-4129-8273-436ad6d4e244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79c5993-ac8f-46ad-b252-1f59d5fe2f5a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a5d3ae-d239-4d6c-ae10-d93d14a2bcfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6cf68ce-5c63-4b9b-ab1a-34d4228a51b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5728e24b-4770-4e7f-9a49-e1a1278796a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf8b52c-0801-49dd-bec5-241b648f3152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c1f3cb-2a73-457e-bce7-c3c5fd298105",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82e225f-ffb3-4d94-8a55-68fc974c0594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f537214-5fa4-4d19-8f33-edfbdc4eb86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4bc8e0-2aee-4a92-8d63-c1b171222fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592e1d42-726a-423d-951b-8767ea44a1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e937f4d-078d-46ab-93d7-d162cab0dc6c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1906e571-3e20-4032-a91f-d9aab36d2e79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61c28f9-2678-4fa4-a905-aade15c74554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53efc001-09ba-4b6a-864f-8648724ec873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322d98fa-3e06-420d-ac5c-84617e9e391d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f668b328-bc63-46fe-8c18-36c1cbbea86b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9f2568-b16e-430c-8d60-bb679efc1aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c5d971-318e-4ce3-a704-7a4349940f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf28b6f7-af15-4efe-8881-c6f057a0a228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15b8ecb-836a-48fa-999b-a089464fab00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3783717-98c4-4fb9-ac73-094eaaa3f6b6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bca9471-fdd6-4ac6-acd9-b74fb4e4bb65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558d476f-6e46-4b2c-8cee-7f8c4903cf6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0128b5-64f1-4a59-9a4b-1f32ecbbfc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49893eb0-ac0e-4d9b-8749-5b26c9d76fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c114a6-d0e3-40eb-a5ab-336ed427361d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690bdbc6-5acf-40c3-9396-0af8721d8830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38872a9-1537-4df9-ae2a-721891f7a8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92e150e-b43a-45b1-9fe5-492b6bcf9309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a06c840-9e87-4f4e-81fb-8f31dcb12ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c9e5f3-ac27-4ef6-b793-8311e8d95830",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a526b73-c61b-4d7e-a685-0384dd5fe68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb331e1e-a078-4b64-bad5-283a6b3bf780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1989e07-b03b-45bd-a753-b0c8472f7ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e589452d-dbfd-444c-970e-41a450ece24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bfaec1-88e4-4996-a045-de2b24df5757",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56624207-2ec3-41b8-94fa-2d64bdf69a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2cb8d9f-b576-4718-8ffc-b157f93b10f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada4ca42-7175-434a-a3e3-4c127bbd46a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2af9321-1a36-48fc-80ce-e21118caf8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687b572b-9e69-4818-8d9b-5cc13b77c04b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fded45b-88d9-4c1f-8686-b30adcbda2eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "857a16b7-2ae1-48f0-a5d9-53918650aec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584c453e-7ef4-4bb6-a104-5350dcb7edd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd9d11e-4b91-497e-a9a8-fb170e3fb433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3667f6-943f-433c-9570-80ccb938edcd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002d05d9-477b-4541-9f41-a97705ad75fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d37871d-1439-4a72-a66e-6f3ca6c94a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d00bbf-15b6-412f-aee9-6ea436f09656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a433c7d-a5e2-4160-b7a7-ba83d9b7a1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ce2cb2-5ae4-4cb1-b211-c7bbeab13cbe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d497e8-cc89-4f3e-9b9f-d12c60779738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf97a07a-f0c0-4a68-8da5-06662bcb03b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f548a32f-b6c9-4f57-ba7a-5e2e8fa0e398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c97184b-aa3c-40c4-b631-55fab0acfde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5552c8c-a9ca-43d9-8416-184a4fb26857",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463b5494-4437-4291-b7c4-5aa65e4f6697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bfa34fe-e94b-487b-ac6f-128c18463703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8703b71-8b3a-452b-b852-51d1d28f3df2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f29c8fa-d095-443d-9aa8-e88368208934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6666e9b2-32a8-46b5-9943-868c517be500",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16e4fb8-2951-4a48-9d51-af66d05e4003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76140efb-88ed-4067-8858-ac7dfb2684f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ecdd35-43fc-4499-8a78-131237362760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87548124-d133-4633-ae94-9c37fc3c83a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e003a8c0-e362-433e-b861-18b2396e4f7c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d832c385-3b0c-48f2-9b6f-7efc33849090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd7d28b5-c0f6-40f8-9a95-ce84c8575998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c05c76a-9d86-47e4-8de3-7953185ed84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eaece22-7dfe-449a-b438-f2107fbe7d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e8d7b5-0a7b-4042-89b7-4b73a317fe97",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7b4fa4-2e14-46d4-ad4e-e422f9056d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab612e0-87dd-49b1-92f1-3129d014e979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f003550c-f6c0-4a49-823d-88c61f6f9d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8fd63c-83c0-4cb6-8721-e6a0be56d1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b4783c-aa22-4a73-ae11-2a947bf007f8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8129da7-6cb4-496a-b603-027b4b2d7651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0138b662-d174-452c-8805-6b4fbaae5d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02146fff-96f2-4610-8dfe-31a7e78f57bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d2eaa0-2647-4e68-b8d5-b1777b5f4754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139b7c72-9b12-431b-9d21-eb0966558df9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83665a6a-7e5d-4876-befb-95ca94700b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31340800-fc12-4219-985c-f06ce2a14fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41a2999-c0bb-4f90-8e67-10e0a4769e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602c1b02-2bd1-4acf-aaad-6b6966a107b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39094475-d66a-4258-a69f-c142b5dd8694",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc40a8a-1040-4db4-8c30-37c4d14eea33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ef4985-9820-4431-9f81-36d8ba2eff40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acb976c-4e05-4bbc-9a7a-964a9ac6cfff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9198281d-edd9-48be-abad-88ec7c93ccf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba71f069-16a8-4099-ac52-aefcc282b6e2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29586e5-841f-4c5b-8bde-cc9276cdc342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aef75c42-84d7-4cde-9c80-daa2172e294f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc53e506-1310-4a5b-bb15-7155a102d979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a356b1-91b5-4469-95b9-c7cb18babc13"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ddd11c5-58e5-4d0b-a251-1d1a309a53fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eae6a9c0-29ea-4f6d-afed-5b50b797784b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "219204f7-ca3c-46b0-8952-3054828cdc2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d279e8ce-cb10-41e7-9ad9-bb2c23f62a46"
                    }
                  }
                ]
              },
              {
                "id": "25e99090-9a36-4580-8848-edb442087e01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1af6a44-b994-47a0-8e14-886289537098",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d8d807-a815-40b3-8e88-c931f570b04e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d53be133-62d4-4e68-9805-dc9ccaf18724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eead5f18-92f8-4b18-a617-ec78a8eede00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16987d9a-01d2-4a64-8aa9-92ee042ef8d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "368e787f-52a2-40d8-8db7-5baeeaad3498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c0d336f-c0ba-4142-a2e0-672fac36675f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "562d9aa6-f714-43ce-a9ae-b69c4eea6b54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3964b5b3-8df5-4f95-936e-7009543b8b0f"
                    }
                  }
                ]
              },
              {
                "id": "5cac2d22-86de-47b4-940e-62c4e67f296d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b58c2625-f656-4657-809e-48733f44d2a8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f1efd2-b00f-40af-9c6e-0feb5f7fada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cda7f0b3-6306-4e12-8bd3-e95b412b177a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29e8f5a-cab8-421c-8816-1575ed746ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e55a59-1231-4ae7-8b0e-6ca249386e7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c72d99df-2509-4e02-9b95-31d72b121ce6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86795156-a4c3-4cb7-a9df-96abe36848a1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34e2bb55-26e7-402b-a5a4-f24178457998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f2f4446c-b4bb-4c9c-88de-c752ff5aab38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b990f31d-6959-4943-98b0-c7f175e04b5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52a1dc02-f9ab-4572-9da2-5d67d1b2601e"
                    }
                  }
                ]
              },
              {
                "id": "a08771d4-d1e3-4670-9c40-242ef6996b22",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4b66890-ab4f-4c2b-b86a-3bbf4b911acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0b4031f6-a264-4a7e-9b44-6f30fb35963f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e41e82f8-c460-43c4-a1be-eaa78d62bdd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f51e3d31-651e-4164-a51a-be1cd48b7d26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f1d7f21-55d2-4f69-a502-6a460fd166e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4a0b1cd9-0743-4b28-bfdb-e923e49ec0ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97a99d12-f089-4330-ba35-54e9c641f457",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa11d4ea-7ef6-4d7b-99f7-7ffef3284715"
            }
          }
        ]
      },
      {
        "id": "30ddd404-b84c-48fa-b0e0-6da2325fe12c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fe26137b-23c5-458f-994a-8e654a4bdf58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e87ac8a3-93d1-4baf-b80c-816240d0a874",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ef3874a-99c6-452b-b5ed-4e75a38031b2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adeebf2-bd8a-4083-8d4e-cb264d17764b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "206238da-409a-4f2e-abaf-a9a01910db70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b27184-7424-4fb2-82ec-03f7d95bc2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3882156-1e8e-4ad3-b9b8-5f2f720c7284"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "443e5cc8-cd01-4ef8-a57a-ca14d33a61c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5267c605-9786-4f0f-8e56-6693b908b8e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04029b59-0e24-4f12-97f5-3b149565cf0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66e1b4bd-a81a-4513-9d48-cb17ad444a57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a59c9e6a-4226-4cf2-aa1b-4bc4dd14aa0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a547debb-c8b8-4924-a054-013cc2a30960"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "055584ee-c594-46bb-973c-9cc2f468859c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3033dd60-30f8-4214-8c04-bc34f982f04b"
            }
          }
        ]
      },
      {
        "id": "57fd37e8-e9dd-430f-a79f-227b741ff25d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2dce4b33-d243-4149-9b55-3408dd0f132d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80c09b8a-1c50-4684-b030-e01828f22fac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb1ce006-ee01-458c-936e-195cb589991e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d069a6ad-d568-4aa6-8902-9a264d058074",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3959e286-1379-4986-811b-ed42e4794e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b7ff03-84d1-4065-af98-5e546b04e85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4743e95c-c079-4003-9945-99356c2a2c38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60a6bc8d-48a3-442e-936e-a52dab05eef7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36eaae9c-ad0b-4249-befa-027b49925320"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f729898d-866a-4972-97cf-72e2fedd02b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65467cb2-5f70-4b78-a85e-5ccf064e372b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e9b6193-50f7-4218-9629-f78a0167aafa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "561bf707-b82a-4773-ada1-b5941649d51e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98c21796-fe49-498f-8c51-ecb52f17efca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c4ef247-06c9-4d7e-8e38-1a91ac2db184"
            }
          }
        ]
      },
      {
        "id": "0e01113a-c4b4-43b5-ba05-e0ba53991ef4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "261380ff-9eb6-45ae-a6ed-dbb1c6866239",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d3a596d-24a9-4990-9a71-7d82144a62d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fca1978-08b8-4a2c-83e6-3076d9dcc093",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e16b287-bfe8-4299-927e-77b44e8c1098",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70f6d8b3-ec6d-44f5-b800-32cb2a9ad0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc60e81-b65b-4447-a057-30f20fdb0b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c80db6b9-7c64-4f79-bccf-b85b608f078b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8aec11f2-e1c1-4ee2-961a-e19ddee7b9ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "633e483d-3761-4a37-9893-4f71935a206e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a3c5c27-b6f6-49bc-b9c6-11ff6f0beef7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1b3ed8b-c0a7-4338-a4f0-055ac0cf8984"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3ceb41b-14d0-4c90-99f5-c9fdcf3ada81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ddf28c5-050a-465f-b8bb-8e27b79e2869"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cda6287-fbda-4a02-8fad-850a462e119f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f46f2f0-6097-4018-a91e-eb6a4c3fef57"
            }
          }
        ]
      },
      {
        "id": "d6ff8a49-cf33-494c-91eb-11a9005becf3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7163e32b-865d-4e9d-805d-9abcb751660f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b262305-55d9-4a2e-9482-eb41bf65371b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6dad4243-e5f2-4cb8-b41f-f0682710e690",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0631c657-3a69-41d0-9daf-bfd27a5c4f57",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13b39cb1-6319-4ef0-aa69-7c6261057761",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 7
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 251,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 35
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 7
      }
    },
    "timings": {
      "responseAverage": 129.8004032258064,
      "responseMin": 7,
      "responseMax": 3113,
      "responseSd": 379.318029920037,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716165447404,
      "completed": 1716165487748
    },
    "executions": [
      {
        "id": "82e0ec9e-1d55-446a-b9ba-5e271bad29ce",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8a05bb76-c013-451c-b830-63b32a8d17e3",
          "httpRequestId": "422079fd-f047-4adc-a7bb-b5a2c36f79ea"
        },
        "item": {
          "id": "82e0ec9e-1d55-446a-b9ba-5e271bad29ce",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b18c74ed-ee44-42b7-a086-8fdbc016474f",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "448d90f5-aa95-4ee6-987b-69158c4fae1d",
        "cursor": {
          "ref": "a45d2f34-d5ce-407b-82a1-91f1d4848bba",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2997d2d6-5b37-43ce-a20a-47919cf9291e"
        },
        "item": {
          "id": "448d90f5-aa95-4ee6-987b-69158c4fae1d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "da8eab77-e0c9-4e24-accb-316fec3b0c3e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "0e713a8f-bdd7-435d-80fc-aa23cc11503b",
        "cursor": {
          "ref": "18ac898e-7978-4592-b918-04d0d6ce6cf2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "876304b5-00ee-40e3-b461-f99ecb947dbc"
        },
        "item": {
          "id": "0e713a8f-bdd7-435d-80fc-aa23cc11503b",
          "name": "did_json"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "id": "5dce6d70-8eb8-4f69-8504-877e540cbc8f",
        "cursor": {
          "ref": "842394ab-a7f1-42de-a5e7-cf410c822e1f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "07717108-5b2f-476b-bf49-30b9956c5ced"
        },
        "item": {
          "id": "5dce6d70-8eb8-4f69-8504-877e540cbc8f",
          "name": "did:invalid"
        },
        "response": {
          "id": "e19e3953-771d-4364-afbc-cc6e77877d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2168,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dce6d70-8eb8-4f69-8504-877e540cbc8f",
        "cursor": {
          "ref": "842394ab-a7f1-42de-a5e7-cf410c822e1f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "07717108-5b2f-476b-bf49-30b9956c5ced"
        },
        "item": {
          "id": "5dce6d70-8eb8-4f69-8504-877e540cbc8f",
          "name": "did:invalid"
        },
        "response": {
          "id": "e19e3953-771d-4364-afbc-cc6e77877d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2168,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7a4c1b-f545-45ed-aba8-5f3c40f3ad26",
        "cursor": {
          "ref": "e43bd7f3-9304-4f69-b0b6-8e9c02e4ab7d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4d25c4d9-06a2-4979-98fa-5531c49f149d"
        },
        "item": {
          "id": "7d7a4c1b-f545-45ed-aba8-5f3c40f3ad26",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fd513625-1e51-4f57-8c0c-03c1d89ea956",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2558,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc01c894-0552-4a02-aab8-9f285cce5acb",
        "cursor": {
          "ref": "39e7e053-9874-4e2d-bd3b-01ea64f17725",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9082447f-41d2-4def-b6f3-733cfd195ea0"
        },
        "item": {
          "id": "bc01c894-0552-4a02-aab8-9f285cce5acb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "93c6d113-1fdc-4564-b8aa-3b467006c0dd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2255,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43bec84-0762-41aa-80d3-572ba9df68be",
        "cursor": {
          "ref": "f43c7c12-97bd-4661-959e-6fd4db072afb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "322e2905-9446-4586-abae-6b114f3837a6"
        },
        "item": {
          "id": "e43bec84-0762-41aa-80d3-572ba9df68be",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ed88ed12-6d37-4543-81b5-59d1fb3f0730",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 404",
              "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "19fcab51-0a32-4026-b34e-ac5e13d965de",
        "cursor": {
          "ref": "764720d8-fa25-42ef-9880-f72437e4b7aa",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "44363716-7e2b-422d-b7fd-949a30a5e226"
        },
        "item": {
          "id": "19fcab51-0a32-4026-b34e-ac5e13d965de",
          "name": "identifiers"
        },
        "response": {
          "id": "f18b6afa-4f8f-45d6-b09d-3efcff8077c7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "id": "71146a42-523f-4254-a47a-20acdc628324",
        "cursor": {
          "ref": "10217c0d-d9a6-46e3-8913-d531e77ae042",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f7387371-1634-4724-8483-56bde3cb2956"
        },
        "item": {
          "id": "71146a42-523f-4254-a47a-20acdc628324",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67e2342b-9857-48a3-a770-c1c8cf9fad3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dc72c4-d2ae-4aef-ac5e-5ad941465f74",
        "cursor": {
          "ref": "596f689f-d31e-479e-ac85-3d5cb7d7a6b5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a744a57f-2fb2-469e-a7cf-cdc72889472b"
        },
        "item": {
          "id": "97dc72c4-d2ae-4aef-ac5e-5ad941465f74",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "48ce18fb-710b-4213-a58c-9cf762e2e123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bf0be2-917b-4b9d-aa54-34e53b001f71",
        "cursor": {
          "ref": "db1972c9-3790-4ed6-ace4-ad9845003813",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3b84ecff-3920-40e1-9401-4d67c946287c"
        },
        "item": {
          "id": "f8bf0be2-917b-4b9d-aa54-34e53b001f71",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1d0aca58-3e95-4a98-82ff-111c18663ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679cae7e-c7ee-499a-94aa-9b36904d4bf9",
        "cursor": {
          "ref": "e377f4d7-13a8-4318-b799-f70d4dbb0933",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab025341-f57e-4d48-bba6-f4df227a7043"
        },
        "item": {
          "id": "679cae7e-c7ee-499a-94aa-9b36904d4bf9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3f9e3c5f-5ff6-4d6d-95dc-7a98f8fa7988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34085542-bf35-4e30-bc6b-308b08353226",
        "cursor": {
          "ref": "b86de280-9d8e-4d1a-bc7a-4b37ebfbeee3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "519200e3-e4ab-4607-9fd6-2fee5eeb9b38"
        },
        "item": {
          "id": "34085542-bf35-4e30-bc6b-308b08353226",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "16ba3c08-284e-45c2-9c98-f50a2be5f0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffadce5-6da6-4251-8440-13ebd77ebf6f",
        "cursor": {
          "ref": "95c573a1-05ea-4486-857f-7d88f9fafdc3",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "545c3b49-0e51-4430-aa17-b2ef4b2d064d"
        },
        "item": {
          "id": "cffadce5-6da6-4251-8440-13ebd77ebf6f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "510e813d-8014-4b11-8e37-056c99869339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde1e280-0708-4a41-93c6-6bdba32e25a0",
        "cursor": {
          "ref": "bd6b74a1-3b1d-42ad-ae68-562ad8ed393f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8d979b76-e056-4c84-8cf9-b1f4a2c27636"
        },
        "item": {
          "id": "bde1e280-0708-4a41-93c6-6bdba32e25a0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "06a7778f-feda-469c-91d2-99e7c5caa377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d7f537-4781-417b-8865-9d5f7b7a418d",
        "cursor": {
          "ref": "270f7843-ef03-4f49-b0ea-93ef0bd864df",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "63133576-3be3-4ea7-a867-235c03428215"
        },
        "item": {
          "id": "07d7f537-4781-417b-8865-9d5f7b7a418d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5fc33b5c-1f98-4026-b144-cf26e46f5b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc3b917-d1db-48d4-b4d7-deb715e0a4c4",
        "cursor": {
          "ref": "41af8de8-6ef3-4b84-9eb6-161d2a9c946f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a206490a-342b-44e8-9cd2-50997fecaf92"
        },
        "item": {
          "id": "7dc3b917-d1db-48d4-b4d7-deb715e0a4c4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "10fc9d45-3c01-4072-b424-e288ee28f8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b530a90-436f-488d-a5be-5374236a5fde",
        "cursor": {
          "ref": "82773e1d-99d2-4ab7-914c-87d62d8f0eb1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4e5d28c5-c3d3-4884-9d1f-aea22713f303"
        },
        "item": {
          "id": "4b530a90-436f-488d-a5be-5374236a5fde",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d707ed6c-7a4c-434f-8566-ba69cad5dee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42323af8-d4c4-46d4-966b-5b785369e43e",
        "cursor": {
          "ref": "af6bafdc-0f3c-4e48-b237-8d88ac0dc5d8",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "319dfa02-b677-41c0-a709-8394b793166e"
        },
        "item": {
          "id": "42323af8-d4c4-46d4-966b-5b785369e43e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "94b82bfe-26c5-4480-b160-8c7f7f5d354f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2fa3b5-7f42-40c6-b162-35c012d2b25f",
        "cursor": {
          "ref": "636a5dde-ea5b-4b43-8382-ce6e26986839",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b7eec3f4-d46b-43b9-bbb8-1fb696697550"
        },
        "item": {
          "id": "fb2fa3b5-7f42-40c6-b162-35c012d2b25f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a41e37c5-a8e7-4039-876e-d490226ea88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dde8b7-8eff-4339-8933-b9ee59503c5d",
        "cursor": {
          "ref": "f4ada860-2317-4ce3-92fa-8115e2eecd15",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "08ba38d9-a237-4fc5-ad1a-9d456d1a377b"
        },
        "item": {
          "id": "b3dde8b7-8eff-4339-8933-b9ee59503c5d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "edc041fc-7b47-4621-aa3c-d9a59dc15dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b838ae-ae1a-4d30-9104-cf56a9935568",
        "cursor": {
          "ref": "32ec5675-dc22-47f5-af61-02426237a92e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4877b82f-a28b-4480-b67a-85c08e15dd95"
        },
        "item": {
          "id": "52b838ae-ae1a-4d30-9104-cf56a9935568",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "37394010-4144-4de0-a73d-54eabf54ad1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680a8800-7c41-4ab5-b1e6-785d86ce9688",
        "cursor": {
          "ref": "ef8ea2c6-b1af-4fb9-9bb4-d4a70633a7ad",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "98b4a25e-dffa-4051-897a-5ba79aa57c84"
        },
        "item": {
          "id": "680a8800-7c41-4ab5-b1e6-785d86ce9688",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5f61846e-df06-4243-afcd-2958f45ff802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b84523c-391e-4477-b487-7a80c2dee12a",
        "cursor": {
          "ref": "a11f4dd4-8a61-40a3-94ac-07245752beb8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9432f1c6-e6a7-4a7b-a4cd-25c93441f459"
        },
        "item": {
          "id": "2b84523c-391e-4477-b487-7a80c2dee12a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "33e7ab55-3fd7-4664-b652-f2eaaf6dcc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b2d7d0-b78d-4994-bf7b-b6298d14cd91",
        "cursor": {
          "ref": "0b3c709d-5cb5-4b55-b8eb-a5414de1fd79",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "10ef3a4c-3ca3-430c-a057-d09e7816c679"
        },
        "item": {
          "id": "88b2d7d0-b78d-4994-bf7b-b6298d14cd91",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "63388a78-80ec-4b11-8cf1-1ffa99040cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1544b9-e57a-4817-a171-91d78153a266",
        "cursor": {
          "ref": "07057bff-9e31-408f-b597-2ffe97461110",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ebadfa96-d961-4cf0-bad6-d93c66530bf4"
        },
        "item": {
          "id": "cb1544b9-e57a-4817-a171-91d78153a266",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f9525ed7-6e3d-4fc5-aff5-72e1324573b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836ec365-92a8-4797-b40d-6fd68d2982e1",
        "cursor": {
          "ref": "d6b719f9-359e-4a0c-bfaa-4c02303451f5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1c978342-835f-4f42-a405-7f1e377f0d24"
        },
        "item": {
          "id": "836ec365-92a8-4797-b40d-6fd68d2982e1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ee59c4e1-6bf5-4ee4-b10e-9301144416d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d91c6a-d404-4523-9f96-fe90f16fd197",
        "cursor": {
          "ref": "37b34cb5-721f-426e-addd-51f457b0a3f1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0a079fac-b9b8-4469-9008-b034f203746d"
        },
        "item": {
          "id": "b2d91c6a-d404-4523-9f96-fe90f16fd197",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "10f92bc1-35a3-4729-8554-591855c06011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e89b060-348e-4518-b198-66af42ee08bf",
        "cursor": {
          "ref": "7fd03c42-f33f-41de-bbda-d04bda081189",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "89e22148-8c4c-4f56-83b3-f2eec3930da4"
        },
        "item": {
          "id": "8e89b060-348e-4518-b198-66af42ee08bf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "eae32595-a903-41bc-8b16-adb230eafb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2017d0a7-1696-4b66-b120-b65f43aea1e0",
        "cursor": {
          "ref": "10bb9513-fda2-49c5-affb-c1f13b3afc1d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b89c55a0-c889-4019-916a-4071b8f94d7e"
        },
        "item": {
          "id": "2017d0a7-1696-4b66-b120-b65f43aea1e0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e1ef8612-83ca-4de7-b98a-f8da15e3c1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42972574-d247-4587-b72e-a750a8ace6df",
        "cursor": {
          "ref": "ed3bd196-e4aa-4652-a83d-8d85f51c3751",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8ef9cee0-90a2-497d-973f-af6df0c03b30"
        },
        "item": {
          "id": "42972574-d247-4587-b72e-a750a8ace6df",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "596ac396-dd51-444e-b9c2-0fbc7aa84c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f98bf58-5cb7-4640-9bad-6294ee21b8c9",
        "cursor": {
          "ref": "3bec5b91-de0d-41ad-b50c-fdcb6083756e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d2a7c00d-252b-4f3c-aed4-2913e1d5610c"
        },
        "item": {
          "id": "7f98bf58-5cb7-4640-9bad-6294ee21b8c9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ce3571de-8064-49f6-a836-c7910330779d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8d6d50-4fcb-4093-84ff-3e1fce64e628",
        "cursor": {
          "ref": "1dd041aa-8948-4fdb-9181-9af5970d159a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f8602707-da08-48d3-ae4a-dc213d45f8a3"
        },
        "item": {
          "id": "da8d6d50-4fcb-4093-84ff-3e1fce64e628",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4d14f7b1-8913-4dcb-b743-ce3c273f40f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cdf7ca-b6c2-4833-96d0-7aaae6803c07",
        "cursor": {
          "ref": "8ea77260-2f45-4a03-86c1-fa2eace88f59",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "38f0bbfa-972e-48f5-9e1b-40548c6fcba9"
        },
        "item": {
          "id": "d6cdf7ca-b6c2-4833-96d0-7aaae6803c07",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bf34b60f-a13f-4f01-8e9d-e187144ae333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8906e660-14ba-4229-bc79-b5303990e978",
        "cursor": {
          "ref": "366a3785-0548-47d7-b7b5-d6ca5ee9c294",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5527085f-e240-4b47-9b3e-d3cde20fe993"
        },
        "item": {
          "id": "8906e660-14ba-4229-bc79-b5303990e978",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6d6cda89-6e6e-42e7-a260-c8c9c77ab9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadba24b-cc98-4ec7-814c-9dad208dc9a4",
        "cursor": {
          "ref": "bb64f481-08cd-4552-b7bf-b14aa8e5ab2e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1b8dda37-1e58-478c-97d1-086d19236744"
        },
        "item": {
          "id": "fadba24b-cc98-4ec7-814c-9dad208dc9a4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "647b5544-8533-4026-81be-24e7744e270b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82859f7-8e6a-445a-abcf-4ef4b26f3934",
        "cursor": {
          "ref": "88b46a32-3515-4cb9-b30a-cda425752e4c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "79e761f5-42bd-4c4f-b6b5-6342b893ec99"
        },
        "item": {
          "id": "c82859f7-8e6a-445a-abcf-4ef4b26f3934",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "db276764-26cf-4072-873d-cd31d6e52e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99113a6e-2150-46b4-a5da-2bbcb3cdec92",
        "cursor": {
          "ref": "e47a65ce-21ea-4550-8829-8fbb6e6fc3e2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "39930c7f-d49f-4360-ad8f-a420f62cd201"
        },
        "item": {
          "id": "99113a6e-2150-46b4-a5da-2bbcb3cdec92",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c520e11b-2c9e-475d-90fa-998d39b14d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67a2432-6561-4bac-9bbd-5efe8378a363",
        "cursor": {
          "ref": "81ed1a78-6068-4288-a27b-2ccb325d6dea",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b26203fb-163a-4a93-9cc4-ccbc4018eaa9"
        },
        "item": {
          "id": "a67a2432-6561-4bac-9bbd-5efe8378a363",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "58a42bf1-68c3-46da-9ab1-cc1e95a46a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164952c3-8153-40ac-9258-579713a3ba32",
        "cursor": {
          "ref": "3d5acf35-f6aa-4c42-8179-6ae180722fb2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d1545911-4c52-4d65-a0db-c8292776ee11"
        },
        "item": {
          "id": "164952c3-8153-40ac-9258-579713a3ba32",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7a62522f-adfb-4815-aa3e-dfef9b712c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72ecbab-d60e-4b11-b32d-6a0b9871149a",
        "cursor": {
          "ref": "5817d096-69fc-490e-af79-141452484ce7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c418a33d-a66d-45f6-bcd6-fc5bbbb2b939"
        },
        "item": {
          "id": "e72ecbab-d60e-4b11-b32d-6a0b9871149a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5c170a8a-5e41-4139-ad20-c5a495705f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f33e550-fa16-41ee-9d6e-d0f13e61a986",
        "cursor": {
          "ref": "4c52296b-765c-4c46-b253-61632ae3c5a3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b772f9f-8c12-441b-9154-300760e594b1"
        },
        "item": {
          "id": "2f33e550-fa16-41ee-9d6e-d0f13e61a986",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7d3148b2-736e-441e-9e79-4557c82eb954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60177acb-d773-4f8d-a553-ececc68e11ed",
        "cursor": {
          "ref": "6355bab3-69f3-40c8-ba21-de970de69eae",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a2be2e54-f0aa-4f7f-a7bd-d6e926f3714d"
        },
        "item": {
          "id": "60177acb-d773-4f8d-a553-ececc68e11ed",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8810bc07-2092-42ed-b3c6-515ad514ae1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8862ea6e-429c-4af4-b2cc-7b964165cc13",
        "cursor": {
          "ref": "d76d5980-d28f-4a37-b391-741de03e588f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "12c461a9-430e-4cd3-b781-0ea3f9e71ce1"
        },
        "item": {
          "id": "8862ea6e-429c-4af4-b2cc-7b964165cc13",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ce52f1c9-9c5a-41ef-95ac-4443edeeda4a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf7ec37-05d5-414d-81bc-b6325a1e91c7",
        "cursor": {
          "ref": "14be2d6f-a198-4738-a24e-4488f2605ef2",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9930cea1-4aa3-4960-9efa-65d44624f4a4"
        },
        "item": {
          "id": "7bf7ec37-05d5-414d-81bc-b6325a1e91c7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "31872f46-4855-417f-9517-fa51460abc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e983a92-858c-4eba-bee1-99150dd78b2e",
        "cursor": {
          "ref": "028e547a-5665-444b-97f0-7119d1f5b442",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "584bf1cd-c8a5-4547-a2a8-a329fbcc23c1"
        },
        "item": {
          "id": "2e983a92-858c-4eba-bee1-99150dd78b2e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "40d66e01-cec5-449b-9d22-aa173e5f1184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be16841-3aa7-401d-a713-998508c72657",
        "cursor": {
          "ref": "8157f68d-154f-435f-947d-71407376af0c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0939c4bd-3e6a-4a07-b81d-8b75b575b34e"
        },
        "item": {
          "id": "7be16841-3aa7-401d-a713-998508c72657",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e10d1103-dfac-433e-964b-712fad31fe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19949f9b-35ee-4363-a75c-8313bef89dde",
        "cursor": {
          "ref": "06dbf795-656b-42be-b1a6-e14913303ea9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0b0bb96c-250a-4ac9-8b18-cb4bb192fbfb"
        },
        "item": {
          "id": "19949f9b-35ee-4363-a75c-8313bef89dde",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bac6c55b-fbea-4ead-b394-4c402c681e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b7468d-a61e-4a52-86dd-79e215b39de4",
        "cursor": {
          "ref": "4fed7401-2950-4055-9cac-ee9dadc72e15",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7d4d1c09-f3c3-45bc-99cc-9efa5ecbc5c6"
        },
        "item": {
          "id": "c1b7468d-a61e-4a52-86dd-79e215b39de4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ac0fe9ee-3bc9-4117-95ef-d246fa240f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bcde4e-3901-403d-b869-1fb2b1c51a60",
        "cursor": {
          "ref": "a4fa7bfb-20fe-452e-8028-a26cf182444f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "059b96e3-2637-483d-a0a6-c4a9160d1237"
        },
        "item": {
          "id": "40bcde4e-3901-403d-b869-1fb2b1c51a60",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2fb55cdd-8714-4837-8d65-7a2edfef6bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e120bae-8092-483a-a952-0a5bc35223a1",
        "cursor": {
          "ref": "78e717a8-3bfa-453e-b181-ccf767da1f4e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "84eda224-1c91-48e7-94f8-16262ec4bce9"
        },
        "item": {
          "id": "3e120bae-8092-483a-a952-0a5bc35223a1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2dbd3dd7-11b6-43cb-a6ce-4488fa99864f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8415e9f3-46f1-4bff-9cc2-44cee0e45111",
        "cursor": {
          "ref": "b77bdd93-7b69-4948-b65a-9d749b656f9a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e2fb0fa8-17b8-4002-8db8-3b00a3c86539"
        },
        "item": {
          "id": "8415e9f3-46f1-4bff-9cc2-44cee0e45111",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3d66baf8-8d21-4c13-bd4d-e4907471aa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956582d2-5637-49ab-aea0-5dcbfa33b8e5",
        "cursor": {
          "ref": "52976d64-531a-4399-bc11-9857d16bc453",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fc78a7b1-568f-4a6f-b2ea-82dfea15a68f"
        },
        "item": {
          "id": "956582d2-5637-49ab-aea0-5dcbfa33b8e5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dae644d7-d43c-4490-b984-dda191879280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdf84cf-abc3-4372-83ca-742955361de8",
        "cursor": {
          "ref": "52e9a64b-2ced-49ae-b01e-63e566d07c91",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "834bbf6c-6ac1-4388-843a-4d196682844a"
        },
        "item": {
          "id": "5fdf84cf-abc3-4372-83ca-742955361de8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e74357ee-a2fc-4525-a9fe-4e5991c76273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6443ad-dada-4361-83b0-cc3616680e6f",
        "cursor": {
          "ref": "d25baff2-cd11-4a38-b67d-a738f59baeb9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "39776cef-5260-45ff-8005-1cc5d28380f5"
        },
        "item": {
          "id": "fa6443ad-dada-4361-83b0-cc3616680e6f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0aaae7c9-7ca1-4655-a8b2-60ce7cdb7717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217ca138-cc7c-4f58-9a8c-62935d558970",
        "cursor": {
          "ref": "3b40e181-289b-4b90-8392-617cfab6c1b6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "14275e06-19d0-4224-9304-97dfc63e666d"
        },
        "item": {
          "id": "217ca138-cc7c-4f58-9a8c-62935d558970",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "851fe10e-b5b6-4341-ae9a-9fb31e654f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384ea0da-b93c-42ca-bf57-d7e99cfe0b53",
        "cursor": {
          "ref": "9249bd6c-1ef9-4f3e-bf5d-51d0c378cac1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "41b12d9d-0d17-4a87-89d1-03ccd55f56e7"
        },
        "item": {
          "id": "384ea0da-b93c-42ca-bf57-d7e99cfe0b53",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "711d9535-624f-4bb6-b6d5-df5113aae21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227e6ae9-a522-4866-a496-9cb85a8e9e52",
        "cursor": {
          "ref": "c7a1513c-66fd-4cc0-ad73-cb954da3f635",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "95c343bd-f2b3-4934-ae46-a2f2ceaf852b"
        },
        "item": {
          "id": "227e6ae9-a522-4866-a496-9cb85a8e9e52",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1cddffd5-09a1-4748-ba41-e548468c89f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97c1aa6-3be5-4c35-84c4-dd6345f69d2f",
        "cursor": {
          "ref": "1f4a1b02-66a9-4990-bcf4-1760adca4036",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "554e3fb9-df58-44b1-99b8-0b95c24ff23f"
        },
        "item": {
          "id": "a97c1aa6-3be5-4c35-84c4-dd6345f69d2f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7a0c9a75-c00e-4b7d-8786-f590a39f000d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366fc59b-8a44-4ca5-a0f3-1aa3ecfc4b4a",
        "cursor": {
          "ref": "68a9de36-a6f0-486c-89b2-056c3122470c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c6b91a06-3bfd-4a80-9d3f-078262e1b5a3"
        },
        "item": {
          "id": "366fc59b-8a44-4ca5-a0f3-1aa3ecfc4b4a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e8bbc3f6-7c97-4b78-9bfa-118d72b45a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c33e82-8ec0-4510-8fe9-fb2df5524adb",
        "cursor": {
          "ref": "134afff5-a375-4f60-a84c-62ed76219a63",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f54e9b90-452f-4d30-8aff-811bf2b2c860"
        },
        "item": {
          "id": "c5c33e82-8ec0-4510-8fe9-fb2df5524adb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c8c435ce-ee8c-468c-9742-e2493a9cc604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566e56c0-47ff-4379-8938-a5b878249e7c",
        "cursor": {
          "ref": "b9a3fb61-5927-47ff-aad2-3ca5402c3667",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ec822eaf-e7a3-4c55-91e6-230afdebed74"
        },
        "item": {
          "id": "566e56c0-47ff-4379-8938-a5b878249e7c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95f2b02d-db76-48c1-b346-3040d5610aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a2fc00-3ab3-4050-af07-59083d0026f8",
        "cursor": {
          "ref": "6ca731e9-70ae-43e1-b5e8-461c1d5611e7",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "69803585-0798-4f7b-8025-ff0848aee84a"
        },
        "item": {
          "id": "d9a2fc00-3ab3-4050-af07-59083d0026f8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b29220b3-b70e-4d63-bc7f-ced5cd5fb02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e8bf16-e21b-4373-9ab2-50752a6d9b27",
        "cursor": {
          "ref": "c21e169d-fe7e-4dba-a90b-57f2e1eaa887",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f3506c4c-6ecc-49a1-8a81-e6f87a8b6494"
        },
        "item": {
          "id": "15e8bf16-e21b-4373-9ab2-50752a6d9b27",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "23402858-09f4-4a21-a208-5196e7305803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef39a06c-cad3-40b5-929c-49d1ed962535",
        "cursor": {
          "ref": "867d2a70-9aad-4404-b024-f8eebe22336b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "86bf318b-2f7e-4578-bb51-cbf0582c1e6e"
        },
        "item": {
          "id": "ef39a06c-cad3-40b5-929c-49d1ed962535",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f0d3cb5f-00fe-40ff-8826-7f39d57adf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7be038-1396-4085-be06-a4321facce2a",
        "cursor": {
          "ref": "885a2b53-ef10-4f43-8128-aaa4ea9116d4",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "09f9adac-9cc3-4fdd-8f22-c95955f47cb2"
        },
        "item": {
          "id": "1c7be038-1396-4085-be06-a4321facce2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4974ce74-0eac-441f-88bf-a6eda6bd40ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d983bc-bf78-4f37-9bd9-2cf03a512641",
        "cursor": {
          "ref": "add3e225-3647-47e5-862a-fa971261aad6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7ca54d63-4acf-4e3a-8803-72581c709f68"
        },
        "item": {
          "id": "e9d983bc-bf78-4f37-9bd9-2cf03a512641",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d38e2bf8-c878-4309-a117-85c248855641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1af737-ee2a-4453-bc5f-e374a31abe4d",
        "cursor": {
          "ref": "4ad88bb8-7118-4533-bdf9-4a930f3b93b8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "235c3dcf-61d5-4cfb-b5c4-a1dfccb81fab"
        },
        "item": {
          "id": "0f1af737-ee2a-4453-bc5f-e374a31abe4d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "50fb248e-ac74-496f-8915-a42576b2bd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee0e931-1c17-467c-9282-80c8018444bb",
        "cursor": {
          "ref": "2fa74167-6593-48ea-8fbf-cc6836c4b871",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9b7570b0-e613-4f5f-8a9c-436eb1244313"
        },
        "item": {
          "id": "9ee0e931-1c17-467c-9282-80c8018444bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e2bad23f-fbb1-4d1f-9956-9037aed13754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c57ebad-9c2c-4a0e-916e-61d13458425e",
        "cursor": {
          "ref": "594e4e68-a7e4-4e25-b258-7ead11239775",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e4d4fdad-8e3a-4ee5-86a0-25b90fc42bd7"
        },
        "item": {
          "id": "0c57ebad-9c2c-4a0e-916e-61d13458425e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1b82779b-a140-4c86-bd7e-9655afc4f232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f46320-6642-4e3d-99ed-c8a395257d2a",
        "cursor": {
          "ref": "86a20283-3f0f-4e5b-a58f-5fdba3ecf524",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f07f337d-e7bd-4103-8a0e-c5c5de242ca2"
        },
        "item": {
          "id": "b2f46320-6642-4e3d-99ed-c8a395257d2a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a7a99785-fdaf-42be-a1d8-ac5c03407156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451211ea-253a-4946-a27f-15102994b484",
        "cursor": {
          "ref": "bf118f9d-aa9d-4f9c-ba6a-9e879a04b533",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ec8215c-950f-494d-919e-a66b57474123"
        },
        "item": {
          "id": "451211ea-253a-4946-a27f-15102994b484",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f37a8d1a-f438-44f6-b47d-ffaa5f636cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336cc00e-db4c-4bf4-9bde-f07f2f3c0690",
        "cursor": {
          "ref": "a6ca0dd0-7ac8-4258-a441-8ab2fa241e22",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3b95bafd-6a7c-46b1-b3fb-9450c449dcd6"
        },
        "item": {
          "id": "336cc00e-db4c-4bf4-9bde-f07f2f3c0690",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "10202f79-57ca-4341-a32f-1c1b00cb9719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2477d5a5-18cf-45db-8883-5b7c0dc355f0",
        "cursor": {
          "ref": "3f900523-8227-4ed8-8e5e-ace2f9b80558",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5c514f8a-baf6-42a6-b55d-6702b76d5534"
        },
        "item": {
          "id": "2477d5a5-18cf-45db-8883-5b7c0dc355f0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "595c7dcc-b19a-4a0c-b177-4a484f70e33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec17e1c1-8f1d-4d74-b69d-b9de931537f4",
        "cursor": {
          "ref": "5d7ba331-72c2-4487-af74-17dce211f9c7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0789e253-3beb-4673-8864-c361edd2404d"
        },
        "item": {
          "id": "ec17e1c1-8f1d-4d74-b69d-b9de931537f4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "68e5c830-f49e-46a2-9e59-929adb764cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750b5544-010e-4661-81f1-bf0241a7313d",
        "cursor": {
          "ref": "48982a7c-679b-412c-88ad-955a9575aed5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dfb56a9f-ada5-4f0e-9a25-93f2ad642381"
        },
        "item": {
          "id": "750b5544-010e-4661-81f1-bf0241a7313d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c7b95c89-58a2-4dd4-8603-f0c767a50a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12201930-69ef-4f9e-902d-38bc145707d6",
        "cursor": {
          "ref": "c0a75696-69f5-4523-bf9d-189f10d7686d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7b4b6f0f-85b3-436b-8c59-2ca687ac8a2b"
        },
        "item": {
          "id": "12201930-69ef-4f9e-902d-38bc145707d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "68bda110-3dfd-49fb-a55a-2da64c173eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367af7f2-ce35-4c04-b1e4-bb4caf63a9b5",
        "cursor": {
          "ref": "1bfe8bbe-db83-442a-a281-789367b65c47",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "75d5fb96-b758-4261-b75a-1ff3e8ccd85c"
        },
        "item": {
          "id": "367af7f2-ce35-4c04-b1e4-bb4caf63a9b5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bbbafd2d-b620-42b1-9e91-834eb5946ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0801174b-8860-4d1c-866b-e70543bba251",
        "cursor": {
          "ref": "0bc7eefd-766c-4e54-8867-92bef5b2e7db",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "585ddbe8-cddc-4312-9ae2-d499c9b357c3"
        },
        "item": {
          "id": "0801174b-8860-4d1c-866b-e70543bba251",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6d7691bb-c18b-4c74-9a5b-4de78da456a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0c4e23-e21c-4f36-8a1b-981c92f56ab9",
        "cursor": {
          "ref": "71a39c59-dcfc-42e0-9b05-0afd4f90dbe3",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "69dd40c9-4b82-44d2-98c3-a21605f198d5"
        },
        "item": {
          "id": "2b0c4e23-e21c-4f36-8a1b-981c92f56ab9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2f71e9dc-abcc-442f-8052-43594b54cfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d454861-b9e2-4fe4-9458-841d1e3b1a68",
        "cursor": {
          "ref": "22ed2849-3ddc-434c-b112-46e7ff353cc5",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3cdb9779-d434-4030-8da5-22a57437aa7a"
        },
        "item": {
          "id": "7d454861-b9e2-4fe4-9458-841d1e3b1a68",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "31f7a9ba-92a0-4f93-9f75-f68259e5a35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dc04e8-1485-42f6-8c90-1071429185b8",
        "cursor": {
          "ref": "e4f3903b-98b2-48ee-9829-866aa986400f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2f96e0fd-0c15-486d-b411-e4ac8e3c32ae"
        },
        "item": {
          "id": "50dc04e8-1485-42f6-8c90-1071429185b8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "043928ba-de87-48f4-adb3-5f8dbee13857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75afa13a-cc7a-4397-bf10-612c5f90b90d",
        "cursor": {
          "ref": "4485f03c-7ae9-44f9-b066-92837667eb6d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4e3bb591-740d-4032-8ce9-7d360440d633"
        },
        "item": {
          "id": "75afa13a-cc7a-4397-bf10-612c5f90b90d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b8595f2e-bab8-4dc9-9e0a-905ac7b4cf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922e6e43-654e-4351-869e-6e9c39b35d98",
        "cursor": {
          "ref": "056103c6-990e-42f8-a845-684b7a39afc7",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "823cce57-3377-43bf-8a51-bda4565a0e7c"
        },
        "item": {
          "id": "922e6e43-654e-4351-869e-6e9c39b35d98",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "675d33d7-a319-4f13-8afc-73db8b4475aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeaf26d-e424-4c1b-852a-6688c9c6bd2d",
        "cursor": {
          "ref": "8654c36f-06b6-44b4-beff-36af3e4252ae",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a3463151-0d62-4f14-ab7a-ba841570876c"
        },
        "item": {
          "id": "4eeaf26d-e424-4c1b-852a-6688c9c6bd2d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "25c2c316-8fca-49a5-8e14-076dd4c8f732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea2365c-bfe6-4004-8da7-69d1e1352da4",
        "cursor": {
          "ref": "f8b570a5-d1da-4eec-872b-b123ee16936d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "67765faa-d537-4f26-91dc-a5bdb00af69b"
        },
        "item": {
          "id": "5ea2365c-bfe6-4004-8da7-69d1e1352da4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a924a8e0-6f33-499a-8a8a-bc180d5d3c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6169e224-7c69-402a-81ef-1f01652b40b1",
        "cursor": {
          "ref": "cdde7db8-d3d5-4d85-93bb-69a6e4800457",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3960aac2-9887-489e-8996-a74dbe4cf95d"
        },
        "item": {
          "id": "6169e224-7c69-402a-81ef-1f01652b40b1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a5b31123-e172-4d2f-aaf2-d80619f95676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390b5127-4d44-4f06-8e92-6e3c84f47cf2",
        "cursor": {
          "ref": "465fb809-e412-4cc0-9afb-1df48d478708",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fbc76040-53a2-4b0d-b01a-45183ab2c29a"
        },
        "item": {
          "id": "390b5127-4d44-4f06-8e92-6e3c84f47cf2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e5ae4ca8-b857-440f-a1a2-c358a090f8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce64d6f-00d7-48f9-8712-e4ee9fc6381e",
        "cursor": {
          "ref": "3e2f20fa-d66b-4b88-9fb7-cd34137c0426",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bf5b6e43-6273-436b-983f-9990ec87fabc"
        },
        "item": {
          "id": "1ce64d6f-00d7-48f9-8712-e4ee9fc6381e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b12d4469-0c3c-467d-9906-1f739b963ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b17ecae-3d4f-4a42-bb78-512abd757556",
        "cursor": {
          "ref": "6d726ef1-b0dd-4ce5-9883-6145e27bae79",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9c9bf53e-451c-45b8-ba03-9ef20694193f"
        },
        "item": {
          "id": "1b17ecae-3d4f-4a42-bb78-512abd757556",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1e287e79-0e3a-446a-9377-6c092ffe1e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d02477f-ea3b-4a9b-b554-be3e20dc1218",
        "cursor": {
          "ref": "6fdb4123-8059-4763-8888-c6625c5a06a3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5470ebb0-23f1-47c7-b7b0-38568df121b5"
        },
        "item": {
          "id": "0d02477f-ea3b-4a9b-b554-be3e20dc1218",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6bd59074-7a4b-4494-8310-8bb226e7f3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a50fe3-8bc7-4451-b676-4bf42fa083a3",
        "cursor": {
          "ref": "6cd7756a-29be-436b-b31a-590a9a17d318",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8fb029ef-0be6-44b8-b63d-b8494ed5b621"
        },
        "item": {
          "id": "f5a50fe3-8bc7-4451-b676-4bf42fa083a3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a95abd63-5d03-4899-a005-ce768478947f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50794b4-fb02-4e26-9a3b-b09b1aee179a",
        "cursor": {
          "ref": "890bce54-c45a-4e9c-b6d9-cc37ed08aefc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dbe144cd-3af8-408e-830a-13859886f48e"
        },
        "item": {
          "id": "a50794b4-fb02-4e26-9a3b-b09b1aee179a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8120a55c-27f2-4d77-9023-2cb018d92a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0889aa3a-992d-45e5-b87f-6eaa0d7d5050",
        "cursor": {
          "ref": "933ca441-872b-4a19-bf46-b6962580bdbc",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "db92d747-dae1-4a9c-8d09-7a39c733b1ac"
        },
        "item": {
          "id": "0889aa3a-992d-45e5-b87f-6eaa0d7d5050",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5d659fa2-f098-48d0-bdfb-766da61e8314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848494bd-e022-4174-b1f6-d5e179a7dce3",
        "cursor": {
          "ref": "d3adcf8a-9482-4e9d-9fde-a9e5fdeb4309",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2f0b3d4b-feac-474e-bedc-e255fc957f98"
        },
        "item": {
          "id": "848494bd-e022-4174-b1f6-d5e179a7dce3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "887bb969-e26a-4ceb-a2a0-8ecf4f79e521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2915941-b959-4984-8f33-61e2f8bdd8bb",
        "cursor": {
          "ref": "92228ff7-dcb1-4689-afb0-13ac853f7e14",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2b27694e-ce48-43ec-a253-445f97f4d17a"
        },
        "item": {
          "id": "d2915941-b959-4984-8f33-61e2f8bdd8bb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c83785fb-9ce6-49a5-9cca-3176c1f29429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833618a1-c117-46da-a045-da6c2042b8f3",
        "cursor": {
          "ref": "7c508f87-0c39-4303-8747-5a8c102a1cd2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "da19a025-f0c3-4736-a085-89a51a3d8bbe"
        },
        "item": {
          "id": "833618a1-c117-46da-a045-da6c2042b8f3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "92671d1a-7982-45a1-8df0-f37c7aa373b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3519b075-7dde-4147-8308-72b4e59367f4",
        "cursor": {
          "ref": "64f6512c-6431-44ce-9348-f6664ee85590",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4dd10e71-07d0-4398-8a3c-c47686045e42"
        },
        "item": {
          "id": "3519b075-7dde-4147-8308-72b4e59367f4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a387c060-2b99-4747-8ca7-25a7c3046ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a613d7a0-c99a-4864-881d-01c5006715fc",
        "cursor": {
          "ref": "f04f0598-4eb4-4b09-ba5e-715176e4d5b6",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "82a76b24-8999-4164-9e84-9259cde5e337"
        },
        "item": {
          "id": "a613d7a0-c99a-4864-881d-01c5006715fc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "94254629-d8ed-49aa-a081-30df9d45f5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393d71af-fb30-45e2-834a-63271ec8c3da",
        "cursor": {
          "ref": "6f023d14-d0e9-4860-b580-04d6c221cea1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5681f80e-5590-4afe-a000-57abc2d97147"
        },
        "item": {
          "id": "393d71af-fb30-45e2-834a-63271ec8c3da",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6643d448-149c-437b-ac9a-bc095140c2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c110cf4f-9bf5-4c7c-afa3-ff1af2683deb",
        "cursor": {
          "ref": "3d23c043-647e-4b21-a03f-41b2d07ebb17",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ac082f15-d7a2-446b-bd14-701d0da29c25"
        },
        "item": {
          "id": "c110cf4f-9bf5-4c7c-afa3-ff1af2683deb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6005030d-24de-4bbc-b865-6f4c1350f13c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f08380-32a1-4590-8d0a-53a3163a17a1",
        "cursor": {
          "ref": "7f213b5b-bc79-4b22-8d65-469ac35fb6cd",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d4b973df-50dd-4b1b-b154-e63b5d638015"
        },
        "item": {
          "id": "41f08380-32a1-4590-8d0a-53a3163a17a1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9d4cbc64-9674-44ea-b77a-2f19a5aa4643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e3e7fa1d-55b2-46fc-8cb1-3a43a4ec1b68",
        "cursor": {
          "ref": "47a4ff89-088c-4fd2-8036-b11f34a14f0b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "daa3ea3a-7ed3-4c18-a5bf-f30ad96399cc"
        },
        "item": {
          "id": "e3e7fa1d-55b2-46fc-8cb1-3a43a4ec1b68",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e0fa21da-20b9-4359-9433-c73b5fb416d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "63e82ba1-7449-4a0c-9ad4-7271b97f0ac6",
        "cursor": {
          "ref": "b914077c-abdb-487e-84d0-455eed0cbf63",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "91989d4f-0de5-4acb-b958-379febd34c10"
        },
        "item": {
          "id": "63e82ba1-7449-4a0c-9ad4-7271b97f0ac6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eaad00a1-6a3c-4af5-87ec-502e11ceff17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a27bf84d-7e7f-4ca1-9ecf-f00bea50226c",
        "cursor": {
          "ref": "1f0cd30e-6c03-4a86-bceb-b697e8734d81",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6e00b292-7d01-4498-8f68-072ac4249975"
        },
        "item": {
          "id": "a27bf84d-7e7f-4ca1-9ecf-f00bea50226c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "affea70a-5b8e-4ce6-a89a-5cb3ab178669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "dd03858b-e3cb-49ea-8c14-e965418d7b77",
        "cursor": {
          "ref": "ee6787e1-06bf-4510-a8f4-bcb46d50bf79",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "eb9b608c-6ddc-4fa8-abb3-3010f23a083d"
        },
        "item": {
          "id": "dd03858b-e3cb-49ea-8c14-e965418d7b77",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "36ca6afa-4411-47d0-9948-155e2ff5d109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a36bc0b6-dde1-47f0-b231-645f73959ccd",
        "cursor": {
          "ref": "3ed8052a-d779-4994-a3cd-190bdb1478b7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "161c70a5-291e-4596-b1e1-90985e89b11e"
        },
        "item": {
          "id": "a36bc0b6-dde1-47f0-b231-645f73959ccd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eaaa9038-640d-4ade-8b29-383423365489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "94f7682b-f77d-4d6d-9852-b130e823a73d",
        "cursor": {
          "ref": "6f0ee515-0a12-4357-9abe-0c576737404b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2a1b7952-cd91-46fc-bb34-a8dd5a3cd084"
        },
        "item": {
          "id": "94f7682b-f77d-4d6d-9852-b130e823a73d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "13941850-c0d8-4b1f-98fe-d779e2b3b5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4a725d9b-1832-4903-afd6-492441fc7330",
        "cursor": {
          "ref": "dc3dab72-c28b-41ad-989c-add0f52b75e8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d9abed46-096c-4b88-be7e-47fefabb840f"
        },
        "item": {
          "id": "4a725d9b-1832-4903-afd6-492441fc7330",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dd4c9bb8-bf97-47fb-b1c8-98f3aa51045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b4fdd4-7861-4e35-9a94-c454c0fa78cb",
        "cursor": {
          "ref": "d02ea0ad-7e82-4451-988d-091d5e8add48",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1a6f5559-9f88-4cb0-8dd8-e2bd263e4300"
        },
        "item": {
          "id": "a8b4fdd4-7861-4e35-9a94-c454c0fa78cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "399f5662-4861-4986-9ebb-65d9fd1f5a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eb5b3e-8c62-45ae-a8de-26d871fed684",
        "cursor": {
          "ref": "87f14a9d-fd2c-4231-bab3-0d76174a4760",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cb47b724-1a76-4b39-ad92-c43be628bcc0"
        },
        "item": {
          "id": "92eb5b3e-8c62-45ae-a8de-26d871fed684",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "969a4d4f-d503-4605-94e2-f01e1000b914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6e410b-803f-4d82-ab6b-098ddf2f7a76",
        "cursor": {
          "ref": "30991650-1ffa-494b-8fd5-e82499b1f76e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4c644a06-16d4-4bf5-92ab-631a6cb1ee88"
        },
        "item": {
          "id": "bd6e410b-803f-4d82-ab6b-098ddf2f7a76",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c168906e-56df-40f5-b6ad-9d1aee93d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75396ee1-147c-44ff-b1f9-d5ec021be248",
        "cursor": {
          "ref": "bb6864e2-c5cd-418e-ada1-47e721b609dc",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9ba089dd-24e1-4496-8b49-a095daecfd50"
        },
        "item": {
          "id": "75396ee1-147c-44ff-b1f9-d5ec021be248",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2f5dedf8-a202-4dff-8f22-b3ec8e85325f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19515c9-8bc8-4b4a-aed3-6374a8ebc5ce",
        "cursor": {
          "ref": "91aca25a-d320-4ae5-8083-3a05c17b9cc2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "611dc108-26aa-49ba-8c4f-1da0a9e89793"
        },
        "item": {
          "id": "c19515c9-8bc8-4b4a-aed3-6374a8ebc5ce",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c964c96-24a9-4324-b379-05f7b844ecf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c933e48c-2f84-400d-a009-c75ee5184e6b",
        "cursor": {
          "ref": "47e946ca-6a6e-427b-8f8f-27d42331bf78",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "25ce943a-9a46-4b82-ac76-b1ec76a8157c"
        },
        "item": {
          "id": "c933e48c-2f84-400d-a009-c75ee5184e6b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8b682706-7d31-466e-9447-229970d56c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445c8d43-d2d9-42e8-8718-36bd61772ca3",
        "cursor": {
          "ref": "a46cb2e7-9944-49ac-9ae1-54e58f6b37d7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "13ab9489-75f5-4776-9984-60772afebe4a"
        },
        "item": {
          "id": "445c8d43-d2d9-42e8-8718-36bd61772ca3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "73e95a23-456c-484f-8527-ba5e81188278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bea0bba-41d9-4b38-9d7a-361eff918037",
        "cursor": {
          "ref": "3bef50b8-e964-4274-9ec6-60dd570ba2f1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "07c44810-c67f-48be-bae4-e367714769c3"
        },
        "item": {
          "id": "9bea0bba-41d9-4b38-9d7a-361eff918037",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c0541034-5175-4843-a787-c493f25e1c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7121b57e-bced-4a49-8cbb-91e489f7fe8d",
        "cursor": {
          "ref": "1d80c321-5274-4cc8-9833-f29711fcd0ad",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "728697ad-b7de-4413-aa75-cab4b847ea19"
        },
        "item": {
          "id": "7121b57e-bced-4a49-8cbb-91e489f7fe8d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8b9a9dde-e959-40dd-97ee-0b147de79410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aad8aa-e91d-4838-82a2-062c6ff3af5f",
        "cursor": {
          "ref": "097d963d-51eb-471a-9678-19a49cecf0a9",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f767b6ef-e887-4b6d-9c87-f0bf3597a1a1"
        },
        "item": {
          "id": "28aad8aa-e91d-4838-82a2-062c6ff3af5f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ac660cb1-bfc6-4afc-a022-d49372d29901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df1b96a-8e9a-4ddb-87a3-22e5a17087fc",
        "cursor": {
          "ref": "44df9263-14f2-4d5f-8f0b-8a4c5302f0c9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "83bc985e-1950-4fda-ba21-a3a4b88451af"
        },
        "item": {
          "id": "6df1b96a-8e9a-4ddb-87a3-22e5a17087fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "544dd32f-4466-48d8-ad5a-ac7b454f8094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37c4e08-24ce-4f9d-9a19-28cb2a397972",
        "cursor": {
          "ref": "aa02ce5a-48be-4682-9ff5-654dabe17739",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fdee2f14-d620-4303-8e15-3506609d11d6"
        },
        "item": {
          "id": "a37c4e08-24ce-4f9d-9a19-28cb2a397972",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "326e3aec-638c-4b61-9778-3f2f8bcaf239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acce58fa-3016-4042-aa3b-846cba7b24dd",
        "cursor": {
          "ref": "411d227d-b70b-4521-b645-dc8a040ab458",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "51045be6-b8df-4e9d-be35-860af9ef7e7f"
        },
        "item": {
          "id": "acce58fa-3016-4042-aa3b-846cba7b24dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cf1f1105-8beb-43f3-9030-dc4a3cc29afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9532006f-d5d2-4c92-bcbd-63aa559fd445",
        "cursor": {
          "ref": "3e45d25a-04eb-4b14-8bcd-f77ff85caa80",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fcdec7ec-94e2-4795-8340-2e1155eefaec"
        },
        "item": {
          "id": "9532006f-d5d2-4c92-bcbd-63aa559fd445",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8696aeb5-7158-4d01-818c-37a933fec2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7771309-a241-4da4-909f-d1ea029c0520",
        "cursor": {
          "ref": "d2031fb8-902b-46a2-82be-651864746ff3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "01aa56f3-9677-4f93-a911-a30546b1aa66"
        },
        "item": {
          "id": "a7771309-a241-4da4-909f-d1ea029c0520",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3140eea1-d394-4da4-9594-5c28a3d80c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ffbf22-031f-41ff-bfe4-6322a219e33a",
        "cursor": {
          "ref": "1054d723-6cda-45a9-b716-7a98df9fa210",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dea43a62-a725-40ba-bb39-2753fd54c776"
        },
        "item": {
          "id": "83ffbf22-031f-41ff-bfe4-6322a219e33a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ef720b8d-5b0f-4b4c-a044-a05baa539e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258b812c-a906-4e7b-a0a0-3441fc00f192",
        "cursor": {
          "ref": "79836a96-d512-43c6-a8e3-f814f73748f3",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3d8b8f0a-e269-4357-b37a-66599c05aab8"
        },
        "item": {
          "id": "258b812c-a906-4e7b-a0a0-3441fc00f192",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e2d85534-8da9-47fd-984a-60109c45f2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9805b2d2-f644-4f60-9d5a-bac3c86f3ba9",
        "cursor": {
          "ref": "661a3eb1-8323-4e7d-89e5-7083377e6be3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2a058b2c-0c41-44de-8604-ea54c5cd9c89"
        },
        "item": {
          "id": "9805b2d2-f644-4f60-9d5a-bac3c86f3ba9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0660a43d-6219-4098-8e2f-cb47e8ecf2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09301536-0635-4fbe-9265-a6e0adfe2d6d",
        "cursor": {
          "ref": "777106a7-7ae3-48be-85ac-c0b13567e421",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7323820f-be23-47bc-8025-8573b9c1ec21"
        },
        "item": {
          "id": "09301536-0635-4fbe-9265-a6e0adfe2d6d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4d5742bc-5fc7-46e5-a105-3edb3f6391f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850104b1-3c4d-489e-9eee-f80d5b0d2e59",
        "cursor": {
          "ref": "66b3844d-3116-44b5-8a5b-2f6f21117ee7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7ae736d0-8ee5-40aa-85d2-11fdf848986b"
        },
        "item": {
          "id": "850104b1-3c4d-489e-9eee-f80d5b0d2e59",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "189a3749-1f21-4665-bfdd-e35141b0cabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f029ece-5790-4b4d-b44d-7cda97431710",
        "cursor": {
          "ref": "cc12b364-b054-44bd-b36a-5af5639812b3",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a1f132a8-c718-4093-9a37-7c8057e86c89"
        },
        "item": {
          "id": "3f029ece-5790-4b4d-b44d-7cda97431710",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f5dd5dce-f7e2-4dde-a580-4fe2f187ee2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39963b9a-c728-4a24-9de0-ece84f9a6ea5",
        "cursor": {
          "ref": "9861372d-fa82-4bff-8c8d-10173ffa11d6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "10a45e72-7a6e-4abb-9021-81bb89a54ecf"
        },
        "item": {
          "id": "39963b9a-c728-4a24-9de0-ece84f9a6ea5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f7bcdcd9-7767-443b-95fc-7de39a00aaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a767fc-6f52-4279-bd2d-8b98f902180f",
        "cursor": {
          "ref": "2ec54f3f-b7d9-4e95-a0f5-cba682ce3842",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "29448de2-1047-4ba8-a523-7d11d00d43ea"
        },
        "item": {
          "id": "e9a767fc-6f52-4279-bd2d-8b98f902180f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ff7d42c1-6671-46c9-85e8-ea26320307fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3132d1-95cf-4dac-b966-8451287d1f16",
        "cursor": {
          "ref": "981d8377-01ce-4230-92bc-6cdf36a318d4",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f9e517ee-86dc-4bf7-82fa-14fe0001e8af"
        },
        "item": {
          "id": "7f3132d1-95cf-4dac-b966-8451287d1f16",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c7535e49-3fe9-41bc-8ba3-71b111a9ba72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255fd9cd-d577-4f7f-94de-1d5aa9f0ee8e",
        "cursor": {
          "ref": "1879a806-b574-4b0f-95dc-2541941207a8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b31d41ff-c896-4b6e-8643-002c1924ea4f"
        },
        "item": {
          "id": "255fd9cd-d577-4f7f-94de-1d5aa9f0ee8e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7e444f7e-f4ee-498c-ba21-ab21bda3cde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b133adf-829f-429c-8f18-228f286221c6",
        "cursor": {
          "ref": "16e20b22-cb9a-4eee-8674-459e22ffcd50",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8c10df2e-7b83-41ee-829e-4a363d55780f"
        },
        "item": {
          "id": "3b133adf-829f-429c-8f18-228f286221c6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ae08015c-3e7b-4470-98cd-071888274187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baa162e-0995-4864-85e9-525591279559",
        "cursor": {
          "ref": "d70c3113-2000-4ba4-994f-c715bf2d88d3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bde8b7d1-604a-4f0a-adf4-142e4b566712"
        },
        "item": {
          "id": "5baa162e-0995-4864-85e9-525591279559",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f94d779f-f095-4467-a407-d661d6036864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72768cb9-b688-4d56-a5b3-64a29da7c682",
        "cursor": {
          "ref": "05a219b2-65bf-4c04-8937-24970d2e886b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "142e37f9-5982-467e-bf51-00361445328f"
        },
        "item": {
          "id": "72768cb9-b688-4d56-a5b3-64a29da7c682",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "911f348a-b178-41ea-97b9-d9e2c5bb4fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e5e376-f2a5-432d-bc82-7cc1d70dc966",
        "cursor": {
          "ref": "1954253e-ec3e-4351-b5bf-9f5b7fc28c58",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "47e1de62-31ab-47d5-9e10-3c1dc54fbaa9"
        },
        "item": {
          "id": "74e5e376-f2a5-432d-bc82-7cc1d70dc966",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bd3433e0-3e51-47f6-8464-60e57fe2eb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8716d03a-2047-4c76-8210-c3536715669e",
        "cursor": {
          "ref": "d0f5d661-dcd2-4dc5-8108-299286a3e165",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "32bc7b23-c900-4e12-8d6c-dc771ec49148"
        },
        "item": {
          "id": "8716d03a-2047-4c76-8210-c3536715669e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d0e21d72-56b9-49f6-94f2-e78fae4aaff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaf75a9-4129-4b9c-91aa-96dc22d5daae",
        "cursor": {
          "ref": "8b5ce8c8-a2c8-46ef-bbae-09a3408588d1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8bebdbf4-a695-4f8a-9aa3-5748978420fe"
        },
        "item": {
          "id": "aeaf75a9-4129-4b9c-91aa-96dc22d5daae",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "053f962b-3079-4039-ab11-766ddddac223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68a1c88-431c-4ac4-b991-444022ad117c",
        "cursor": {
          "ref": "4d6bc382-c071-49a6-b8a0-f2c09afa3a12",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0a32a3a4-ff35-4f2a-8838-6388cd035131"
        },
        "item": {
          "id": "f68a1c88-431c-4ac4-b991-444022ad117c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5ce279c6-0088-4321-ab85-1155ea3f35f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a49cd3-b964-4858-9cd8-f05dac68455e",
        "cursor": {
          "ref": "2af29229-fe18-4176-9833-c89ea89685c9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5191dbd9-22c7-408c-bade-bb2cc779dcdc"
        },
        "item": {
          "id": "74a49cd3-b964-4858-9cd8-f05dac68455e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "57856660-6308-4191-a66b-c38694e739ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6cc7e2-d8b1-4661-b3e6-f69e418a4009",
        "cursor": {
          "ref": "29f3a4e5-9276-4f96-b395-3b384c52fc75",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9b7c74d4-563d-4734-82b3-179a866b44f0"
        },
        "item": {
          "id": "1f6cc7e2-d8b1-4661-b3e6-f69e418a4009",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b7586c45-baa2-4a25-949f-fa26035202a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44889cfa-366a-4e9d-8996-6fdda36c9240",
        "cursor": {
          "ref": "68a92b19-d2a1-4d7e-847b-ab28e80d923e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "22228116-c7ef-4161-a54c-7e7723ccb103"
        },
        "item": {
          "id": "44889cfa-366a-4e9d-8996-6fdda36c9240",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1c7c5783-ca06-4ad5-838d-322119086d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778e2a82-50cd-41e9-bc5b-18fb1cf4d063",
        "cursor": {
          "ref": "018b3d84-98e6-42fd-aa96-b34d4144b545",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b00f49b3-93fa-4223-9487-333e2fe80f94"
        },
        "item": {
          "id": "778e2a82-50cd-41e9-bc5b-18fb1cf4d063",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b692d2a5-9a8b-4d12-a4c5-ffa08e00af4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eed3d1-993b-433d-b14d-1e4781fcad36",
        "cursor": {
          "ref": "f72fc036-86bf-4ee1-a2cf-a0a72284cb6f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cee29274-5ff9-47e0-8086-eb10f8494b51"
        },
        "item": {
          "id": "f4eed3d1-993b-433d-b14d-1e4781fcad36",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0295bd51-47d7-458e-bcb2-0bb68199805e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d76bee1-1673-4ecd-8576-adbbc43828ac",
        "cursor": {
          "ref": "9124b4ee-b9f7-494a-a642-76595440801c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ea180d9e-d288-46d3-bf9a-4cfeaceef4f4"
        },
        "item": {
          "id": "6d76bee1-1673-4ecd-8576-adbbc43828ac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9d2182cc-8f01-4284-bdba-84c607245ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d75d68-ff8a-458d-b867-eb4e12293797",
        "cursor": {
          "ref": "1540f9fe-c363-4fc0-b6e6-fa8911fac583",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "03b58b09-f495-4f9c-9f18-a14c4de860d3"
        },
        "item": {
          "id": "b2d75d68-ff8a-458d-b867-eb4e12293797",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e662a80f-6e78-439c-9ce5-efa62210ccda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb3f76b-cbc8-40a0-b8c7-8b6ba229e69e",
        "cursor": {
          "ref": "a4d6bdda-4688-4560-b1cd-2512c914c443",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "42792bc8-0edb-4f17-b921-b941140d743e"
        },
        "item": {
          "id": "9fb3f76b-cbc8-40a0-b8c7-8b6ba229e69e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "213165ad-799f-4d1f-9916-f64e7fff25d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f5296d-a449-4340-8cd4-dcd3bfcf88d4",
        "cursor": {
          "ref": "04701cc1-70a1-4e4b-bca1-20a1f8e84fd6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "552c6379-c750-4335-8038-03c3954def70"
        },
        "item": {
          "id": "44f5296d-a449-4340-8cd4-dcd3bfcf88d4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "895872ca-ecbe-4ea4-826b-affe81da11ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1ff8c8-340c-4dbb-a59f-62b0c0bd707b",
        "cursor": {
          "ref": "b06b9281-a6a3-4580-be52-477536648a2c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "06fa86c6-e322-4880-b357-9f750c4f3e99"
        },
        "item": {
          "id": "0e1ff8c8-340c-4dbb-a59f-62b0c0bd707b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7b7e5847-db06-446f-9afc-fbfca66ed0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc7cdfa-127e-434b-bf19-8c7ace3c9862",
        "cursor": {
          "ref": "2ec6c875-dce1-4496-baad-069a14458040",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6fae679d-143b-4d09-941b-cba123323a59"
        },
        "item": {
          "id": "7bc7cdfa-127e-434b-bf19-8c7ace3c9862",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a2139720-4aba-49ef-88ce-ddb79aca5410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b384ab08-dd5e-4713-9378-18349dc4c430",
        "cursor": {
          "ref": "9ed8016d-72ea-4fa2-9e3f-ac24555b68b4",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0a6c22b9-57ad-4bb8-a2b1-f44b44aef5c1"
        },
        "item": {
          "id": "b384ab08-dd5e-4713-9378-18349dc4c430",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8cb2d92c-4399-428b-8aa7-2a346f86fc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eec61c-1807-43e1-bfba-53f9eaa4337e",
        "cursor": {
          "ref": "bbd856ba-3547-406d-9cbd-c0b39756d096",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4b6cf9a4-ba9c-478b-9eda-3a8561e193f2"
        },
        "item": {
          "id": "90eec61c-1807-43e1-bfba-53f9eaa4337e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "af1f97a6-3104-40c9-b971-b17c16436f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e366e295-b80f-40e8-a012-c283af51ac73",
        "cursor": {
          "ref": "db653e28-29e5-493d-851f-ec455f4d69db",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7db71be6-5eaa-48c1-8791-44d78e3153f8"
        },
        "item": {
          "id": "e366e295-b80f-40e8-a012-c283af51ac73",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "46812ac8-c315-4359-9bb5-4386441bb67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc49b52-c73b-4e4a-b312-89bd2f4fb3df",
        "cursor": {
          "ref": "fd5ca8b6-13ac-487d-b9a4-5a5edb5f2be0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0ae5e0b9-82a8-4ecb-aab3-41f533f40623"
        },
        "item": {
          "id": "2cc49b52-c73b-4e4a-b312-89bd2f4fb3df",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8fc3fe88-7df7-448b-820a-3698d9b15d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27036673-3df2-412c-94fe-67687f6a4c71",
        "cursor": {
          "ref": "ae57fd4f-963d-4232-b081-066ca66c7496",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "86827279-afbd-422b-b8a8-1a37fc51b26f"
        },
        "item": {
          "id": "27036673-3df2-412c-94fe-67687f6a4c71",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab62beb2-8c3f-4ae3-9ee4-bff351684e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d3c991-1937-49cd-a520-b3fa4e0f3d91",
        "cursor": {
          "ref": "8346269e-a2c5-48a8-b024-ae2e97ef532b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7bdb3393-19ac-4858-bd2c-025a321a5f13"
        },
        "item": {
          "id": "15d3c991-1937-49cd-a520-b3fa4e0f3d91",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "58c49228-c482-402d-90a4-e41bad73de0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d494d4-ca0f-42ed-93d2-a70b07000253",
        "cursor": {
          "ref": "9b376d0d-4c67-4bbb-afec-c761d255e269",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f91216b1-ccb5-4824-aa5d-6a32f4f8656a"
        },
        "item": {
          "id": "b8d494d4-ca0f-42ed-93d2-a70b07000253",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bcd74be0-8e7b-459e-9107-e74abf09ef3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b1f40d-d10b-4dc5-b9d4-627ea7fbdb86",
        "cursor": {
          "ref": "46311526-d978-4461-9100-9479ae724e25",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3b7d7597-544f-4b03-990a-1441d02b86e2"
        },
        "item": {
          "id": "91b1f40d-d10b-4dc5-b9d4-627ea7fbdb86",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "059f4e3d-3360-4b28-88e1-80e35f12df5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f3c891-74f3-4fc8-aeb2-3fff089207c4",
        "cursor": {
          "ref": "bef155b9-efb1-4321-b83b-b90bb4776746",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c7e84ef7-5a78-48ec-8374-c5388014fbca"
        },
        "item": {
          "id": "d0f3c891-74f3-4fc8-aeb2-3fff089207c4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f4bba2b3-0e2c-4752-9e3d-dd9395e35563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0d6a68-7c2f-4254-b878-026da7bf74cd",
        "cursor": {
          "ref": "75849145-2639-4c51-9f6a-ffd0e26512d0",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8eeed610-fa9f-4be2-a75f-c029c8005fa6"
        },
        "item": {
          "id": "df0d6a68-7c2f-4254-b878-026da7bf74cd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "de305a7f-88c1-4339-851f-b16f705bc555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10890b53-a3d6-4db1-b359-270a76e19bf0",
        "cursor": {
          "ref": "ccc8927d-1646-41d8-9a9e-552558da90f5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dff2ccba-7782-4a70-b3d2-f26002a3bb9a"
        },
        "item": {
          "id": "10890b53-a3d6-4db1-b359-270a76e19bf0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3a2814e5-c47f-44e4-a8fb-73854630bdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8c0514-abcd-45f4-b796-d29998e1fbe8",
        "cursor": {
          "ref": "33fe4724-7944-4f11-966e-d39195b91a0d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c73cd110-b16a-4214-9530-a6424bc8b5ba"
        },
        "item": {
          "id": "0e8c0514-abcd-45f4-b796-d29998e1fbe8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "935776ae-af1f-4dc2-9d1e-5840f9da14c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80706a7b-ecb8-4245-b951-ea57d77b9d96",
        "cursor": {
          "ref": "9b3b4f8e-edca-4641-b1b5-e41de8163d6b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5a75f50d-d0ec-46ac-976a-cde94337a441"
        },
        "item": {
          "id": "80706a7b-ecb8-4245-b951-ea57d77b9d96",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ecc7a801-90d3-40d3-9da0-2631924c072f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a5ab80-9d8e-4c09-bc66-86b122482008",
        "cursor": {
          "ref": "72f8eba4-5fe3-466c-8a4a-f597774dada4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6f3a2873-fc20-4e40-b713-2ce5e830403c"
        },
        "item": {
          "id": "63a5ab80-9d8e-4c09-bc66-86b122482008",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "35f0f8c3-fe49-45ef-93d0-ecd66dcee89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ec0210-49ca-44e1-a13f-e13f92544026",
        "cursor": {
          "ref": "426eff4f-4f60-4915-950f-173a45e1565a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f6e5ed7b-1e27-4f54-93bc-772642b369d3"
        },
        "item": {
          "id": "16ec0210-49ca-44e1-a13f-e13f92544026",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "72dcaf73-f506-4ced-af7b-7aa81d6324aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a7d822-8082-4c0c-88bd-a2f019df1476",
        "cursor": {
          "ref": "7ce17b43-4388-4038-9e47-d6f920fbc033",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9bb6b30a-6b75-4156-bd78-5e7b345ba3f5"
        },
        "item": {
          "id": "30a7d822-8082-4c0c-88bd-a2f019df1476",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a10ddc40-80ef-4607-9501-1837b14cee28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59ae19b-6704-4504-9184-0b792a562396",
        "cursor": {
          "ref": "eae7db90-6ee8-4df2-af08-1d87a31e7713",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e12a1750-4af0-4040-94cd-81dbd25c974e"
        },
        "item": {
          "id": "e59ae19b-6704-4504-9184-0b792a562396",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "46767199-ebf6-4e3f-a0ad-bda1bada234e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a851c112-201c-47cc-9a3d-3ed49132dc96",
        "cursor": {
          "ref": "13482a13-1215-4141-b590-bd5e83dea011",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fca0183f-3bd3-49d1-9a60-925326dfdd8f"
        },
        "item": {
          "id": "a851c112-201c-47cc-9a3d-3ed49132dc96",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "69e4d080-991c-4ef5-b370-0bd5011a9974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417e0be9-5aef-4a75-bd2b-44230830c431",
        "cursor": {
          "ref": "ab69a928-314b-4511-8883-3bc92739ad9b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a179628d-40e5-4b11-856f-51af79389cdd"
        },
        "item": {
          "id": "417e0be9-5aef-4a75-bd2b-44230830c431",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "96f10c89-335d-4c25-b853-49f3a4ad0f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc9ffbd-35fa-4099-a9d0-a859965c4842",
        "cursor": {
          "ref": "1d923c2f-506c-4561-8e78-c36f09094cb7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c71355d7-ddea-4a36-9c61-0540a675b5f9"
        },
        "item": {
          "id": "4bc9ffbd-35fa-4099-a9d0-a859965c4842",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3378ef0a-ae7a-48c0-b180-fa770a579ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5e666a-e4df-4438-a36b-8c483c3b6190",
        "cursor": {
          "ref": "69617e62-1236-46a9-9201-a97c1f41c27f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "67285a77-9d1f-4498-8389-54d75aa10ed9"
        },
        "item": {
          "id": "4d5e666a-e4df-4438-a36b-8c483c3b6190",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "286b396f-a25d-4333-a35c-9916a87d8e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f963bf-c253-4e91-91be-54cd40f5d271",
        "cursor": {
          "ref": "7b58b0f7-b33c-42dd-bf59-d9fdc7d7f11e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "205259a8-e5cc-4d2b-b8e0-40582f9bf285"
        },
        "item": {
          "id": "d2f963bf-c253-4e91-91be-54cd40f5d271",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4146e616-4a5f-44e3-984c-439057660fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf579ab7-f92a-461a-947a-afec9590e238",
        "cursor": {
          "ref": "f0c43ea3-3e24-4329-97f7-cb5ca8b7fd0c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5e1fb7e2-787c-4566-ae65-5d13a5ba6958"
        },
        "item": {
          "id": "cf579ab7-f92a-461a-947a-afec9590e238",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d759a7b9-fd6a-4df1-8603-20eec37eacea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05545e1c-8839-4853-bec3-81caaa6a3037",
        "cursor": {
          "ref": "53fc7574-05b8-4cc6-a5ea-2342039d5555",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d897555b-f4da-4503-a3d6-de289a7fc750"
        },
        "item": {
          "id": "05545e1c-8839-4853-bec3-81caaa6a3037",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8aa96b26-c57a-4aa6-9a56-aa8bb90ed0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a023b9ca-c368-420e-8932-cc6638af94c3",
        "cursor": {
          "ref": "d1690003-b565-4cec-b291-ab702d2a1e0e",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f55429c9-32c9-4c01-8370-d0778fcd9db5"
        },
        "item": {
          "id": "a023b9ca-c368-420e-8932-cc6638af94c3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e837a9a0-a5ba-4af6-9ea4-d6c07a5d3b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5a54c3-16fd-4a14-84b3-4d4f359cfeab",
        "cursor": {
          "ref": "bfc81923-9418-401c-9a05-87d84193c9b0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "eff52076-c841-4c80-8f68-69b84c06d660"
        },
        "item": {
          "id": "2b5a54c3-16fd-4a14-84b3-4d4f359cfeab",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2167ddbe-7052-47ce-8c6b-2cb558ec2bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910088b5-d127-4182-8c4b-10320897cc35",
        "cursor": {
          "ref": "ffe2e63a-f3da-47e5-bbc8-2aae51621422",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b03b33b6-57d8-4e9b-a838-d9b239fbfc0e"
        },
        "item": {
          "id": "910088b5-d127-4182-8c4b-10320897cc35",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "609f5cc9-bd14-441f-a47f-93976b22c0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246d311f-b689-4ff1-a947-a168a68e58f4",
        "cursor": {
          "ref": "3524c96d-ebd3-4455-870c-a58d20a84da4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c5e6c5a6-1dd3-4ec8-9050-8ef83393dc72"
        },
        "item": {
          "id": "246d311f-b689-4ff1-a947-a168a68e58f4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c435fc4a-9ffb-40d3-b533-bed565286f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d6b2bb-205c-49a4-89ae-3747144b4f19",
        "cursor": {
          "ref": "35d2c90d-89ab-46f0-afe1-77cac1db677c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b2399829-a54c-4dcb-a0f1-98b5c10367a4"
        },
        "item": {
          "id": "57d6b2bb-205c-49a4-89ae-3747144b4f19",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ffa85ac1-4a29-42ea-bebf-19ea628c8953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736bd857-de8a-4beb-a0a2-529b6042518d",
        "cursor": {
          "ref": "833fb29c-a681-4a73-90be-89471c471bfd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "08adc70e-d319-4855-a4c4-b1e7ecd42204"
        },
        "item": {
          "id": "736bd857-de8a-4beb-a0a2-529b6042518d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d4a19965-e605-4ffc-a7d9-0757ee3aa772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e277ae3-2bd6-4142-9ca5-621154844b0c",
        "cursor": {
          "ref": "4f542093-e0c9-4ded-b5ce-ce2b9bc2b1be",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "521361b6-002f-4cf6-8a9c-b5ae40003f65"
        },
        "item": {
          "id": "0e277ae3-2bd6-4142-9ca5-621154844b0c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "928fadac-1917-42f7-b5ac-91229447e6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e852031-d706-4e0b-85bc-7d30e415b154",
        "cursor": {
          "ref": "3be65db5-dc78-4400-8b31-351541d3c7b4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "22fe7090-1202-41ef-a9fa-de1d4c0ebe2a"
        },
        "item": {
          "id": "8e852031-d706-4e0b-85bc-7d30e415b154",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9ff45cc8-4e6b-4177-8d25-385c78b675f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f824ad-89dd-473b-91ed-e186895ec24d",
        "cursor": {
          "ref": "adf54396-9c2f-4dc6-830a-4ba59d5b01b6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "23db3bf0-71ed-4630-a900-3f5605dc011b"
        },
        "item": {
          "id": "59f824ad-89dd-473b-91ed-e186895ec24d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "668ff553-5709-40df-884e-a5b408aed766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c771b0d-f923-4c4d-8f42-cd1a27df6eca",
        "cursor": {
          "ref": "51c5d952-73d0-41f6-9d9f-893b90d5ec1c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "edcecf49-13a2-4ebc-8416-e3ffce74c5a5"
        },
        "item": {
          "id": "5c771b0d-f923-4c4d-8f42-cd1a27df6eca",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cb86d2b3-81ba-4d48-8135-cd3e7df466ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f245efb8-124c-4213-bcbc-349b7c730939",
        "cursor": {
          "ref": "738b2820-feb3-4982-8ff3-dcf2b7343203",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9a6db5f6-b103-460d-9ba6-2eabd5d51620"
        },
        "item": {
          "id": "f245efb8-124c-4213-bcbc-349b7c730939",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4f71be2b-ef3a-4398-b62b-56910ed21b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cdd6a9-e630-4000-9486-ea2d0af25282",
        "cursor": {
          "ref": "70efff39-04a4-494e-a039-c4022793858d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ad084c54-936b-48bb-a1c8-0aa120cb9350"
        },
        "item": {
          "id": "e7cdd6a9-e630-4000-9486-ea2d0af25282",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "66ce2a27-0082-4b2e-8ceb-7fe834de4ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab05d82a-9ed7-4ab2-bcab-ed086990efaf",
        "cursor": {
          "ref": "2fcfef4a-7b7c-405a-a829-accc4d26614b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "49c692c6-1cc9-4667-8643-bd2db8ed4e6d"
        },
        "item": {
          "id": "ab05d82a-9ed7-4ab2-bcab-ed086990efaf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ecfe8df0-8d27-44a4-8beb-db3a9cd191f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cefdfe9-22f7-4bd1-b9b3-d42211fb457a",
        "cursor": {
          "ref": "5ac851fb-5116-44dc-8ad5-18b6e234dc2d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bdaa775c-6fd2-41fe-85a3-6f6300d787c6"
        },
        "item": {
          "id": "0cefdfe9-22f7-4bd1-b9b3-d42211fb457a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0d55d2c4-8c61-42c1-8097-f2a527876f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b31a6f-c380-4178-bbb6-f160a92b27a6",
        "cursor": {
          "ref": "b18bdba9-a7de-4f07-90e7-124677dc7af8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9ae9799a-5f9a-4328-8075-fb1289b9c764"
        },
        "item": {
          "id": "57b31a6f-c380-4178-bbb6-f160a92b27a6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "46c15068-f041-4c2a-8773-720ba569b97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102a7b0b-42d5-4a06-a54c-d35092bdbff1",
        "cursor": {
          "ref": "83be8936-30ec-46d2-b6be-734b7d6dea54",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5dc88391-9b2d-44dd-a8e4-be726bee2589"
        },
        "item": {
          "id": "102a7b0b-42d5-4a06-a54c-d35092bdbff1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "47900696-47d3-476e-a9f3-55679da80567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cfe2f9-a853-4dd8-a5b5-3b53e1e4855a",
        "cursor": {
          "ref": "35578b3a-7824-4b4e-8ed4-45f5b9e76e18",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19d390be-c061-40a5-a941-95e7c6e2b7e5"
        },
        "item": {
          "id": "c1cfe2f9-a853-4dd8-a5b5-3b53e1e4855a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f05a5c42-aa09-42ec-8320-b8ab9c418ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5e2d99-0498-4eed-b3f3-7c22ebdf8992",
        "cursor": {
          "ref": "88036a06-ca26-47f8-9924-2eb2286685ff",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d108aab7-c3c1-4eb1-a7d8-7512523b4899"
        },
        "item": {
          "id": "2d5e2d99-0498-4eed-b3f3-7c22ebdf8992",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f1f21e1-60b5-47d5-8f7e-e26eef68c985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85be9ac5-f3d7-4143-96c9-cc669425c4e1",
        "cursor": {
          "ref": "2112f390-1de3-4019-ad52-e4f62a0b78d3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e11e77a9-26d2-4bdd-83c0-6535c92839cd"
        },
        "item": {
          "id": "85be9ac5-f3d7-4143-96c9-cc669425c4e1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0034b65a-bd68-4fc2-8eab-e04658dfb85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2ee147-b809-4a1e-82ab-af484266e521",
        "cursor": {
          "ref": "f670ddbd-163b-4eaa-b739-57cd846e9a69",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "91ca1376-a83e-43fe-8dc5-ee382e5fbfe4"
        },
        "item": {
          "id": "bd2ee147-b809-4a1e-82ab-af484266e521",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a1ceef36-f4ff-45c0-9be0-a991cbed5dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a70e78-cd6c-40cc-8c1f-9d73e5acf44d",
        "cursor": {
          "ref": "809dd699-dcd2-42f6-8b52-4394c759ef8a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1e861315-bbad-4fe0-ba44-f80f2c4dd9ad"
        },
        "item": {
          "id": "e7a70e78-cd6c-40cc-8c1f-9d73e5acf44d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "36d118d6-fa0f-4b6d-ac57-c876eda7563a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08ad609-d6f4-4716-86e1-ec0e0da898a1",
        "cursor": {
          "ref": "e6777fcd-5a4e-4689-8c48-b860464f6f9f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4299fad5-b787-48fe-a693-ceb45efd3370"
        },
        "item": {
          "id": "d08ad609-d6f4-4716-86e1-ec0e0da898a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2eb063ab-6f2c-48e5-b8a3-5c2830f5046f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed7f3eb-8fff-4e64-a9b9-6c88acd814bf",
        "cursor": {
          "ref": "1307ac9b-6732-4c06-9d12-7b16b85782b1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "722246a1-9f31-4e73-953e-b3492840cdb1"
        },
        "item": {
          "id": "6ed7f3eb-8fff-4e64-a9b9-6c88acd814bf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1545094a-9f87-4d08-9067-fa79291ed3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7070d16-5e47-4535-b89b-e4f9131d29a4",
        "cursor": {
          "ref": "21c5887f-cc61-43ca-854e-26cb30381222",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "807f366f-d254-45f1-8f74-9bb3d3a999c0"
        },
        "item": {
          "id": "d7070d16-5e47-4535-b89b-e4f9131d29a4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c6377662-8ad2-4d8e-9bcb-284356be9367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dd46f2-af06-4bf9-964e-56b5e0b3dbb7",
        "cursor": {
          "ref": "2099243e-024d-47dd-a63c-55c3c9bcb1a2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "abafe9b1-a9b7-47fe-b613-8469120e8eed"
        },
        "item": {
          "id": "15dd46f2-af06-4bf9-964e-56b5e0b3dbb7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "013aa68d-4f8f-4631-aaf0-812763b30e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea35331-b568-4536-91ad-9a58094c1ca4",
        "cursor": {
          "ref": "01c920c9-9173-4829-a56b-41e7f112c531",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7402d783-8e27-48d7-b3fe-66643aac2db1"
        },
        "item": {
          "id": "2ea35331-b568-4536-91ad-9a58094c1ca4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "98443138-67dc-44e8-992f-5d65bcda813e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12669225-6585-49dd-8341-61f3f4fbf54b",
        "cursor": {
          "ref": "5bba3196-10b7-4652-b6cb-5e93e9b932fb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d28f585b-dd1c-4615-9b61-454ad3e49fdb"
        },
        "item": {
          "id": "12669225-6585-49dd-8341-61f3f4fbf54b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e2ec3f85-e4b3-4395-9947-fd53425b108f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a751a0b6-0780-4a04-a176-e694dfc27327",
        "cursor": {
          "ref": "8ea54871-a1d5-4147-a5f4-8078bddcd4c7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9632a4ba-942c-4be2-a1d6-f5216417fed7"
        },
        "item": {
          "id": "a751a0b6-0780-4a04-a176-e694dfc27327",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "40abc541-67dc-4117-9977-cd4c12a8e0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3b623c-9573-484f-802d-ae0f7ec931a9",
        "cursor": {
          "ref": "cff91abc-3cd7-4e03-89fc-808edcdd5fcf",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "281d0452-f44d-48e5-84fe-5afe3c3a76b8"
        },
        "item": {
          "id": "dc3b623c-9573-484f-802d-ae0f7ec931a9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7676c44-d3fa-4ee7-bb28-7566ddc8f701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e93a540-c573-4cea-b136-c4ba6c4f41a9",
        "cursor": {
          "ref": "c365dc18-a041-4503-bfbd-0b815da43dfb",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f5e8f5b4-8e8f-4aac-abd5-4a47f03ed27c"
        },
        "item": {
          "id": "4e93a540-c573-4cea-b136-c4ba6c4f41a9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9d09a6e8-fe48-4954-af72-aff410def335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5570a91f-8cb4-484c-8c19-9a26b058fa8b",
        "cursor": {
          "ref": "55c08923-adfe-4464-a54e-348ab726b8d9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2ff99cd2-b019-42de-8c07-f2e5d400da52"
        },
        "item": {
          "id": "5570a91f-8cb4-484c-8c19-9a26b058fa8b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2698b6dc-afa3-4b68-8eb9-b62d672d1412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565df47d-55fa-45ca-959a-1c83303c8fd4",
        "cursor": {
          "ref": "4ed0fe9d-ae4d-47f8-8ec7-d1c90979288a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5bc3d546-4834-4c07-a96e-255d21f6f365"
        },
        "item": {
          "id": "565df47d-55fa-45ca-959a-1c83303c8fd4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "606de996-d28c-475f-8af2-d94a8e13241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22d2dc5-fcd8-43fd-9610-d686c929343f",
        "cursor": {
          "ref": "2c2c4967-15ca-4078-977e-54c439a4fb40",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2e729f49-1290-4573-9f89-26d8d2f3662a"
        },
        "item": {
          "id": "a22d2dc5-fcd8-43fd-9610-d686c929343f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d78fa7d8-ff8b-414d-a563-b4034cb22bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec52656f-4570-4508-8070-44202faf3c2b",
        "cursor": {
          "ref": "5a575ef2-4c56-448f-ab70-e3c9b583f708",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "79d86abb-736e-4721-a8f3-00333f30c128"
        },
        "item": {
          "id": "ec52656f-4570-4508-8070-44202faf3c2b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "647c2ceb-a353-45ee-a9c9-95e025332095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5947270e-5a00-45e5-8e74-69a6c24cf2f3",
        "cursor": {
          "ref": "dd4ccaf0-9570-427d-a864-9d8efdd98ca8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e70f46a5-fa26-411b-8fbd-dbb390020af3"
        },
        "item": {
          "id": "5947270e-5a00-45e5-8e74-69a6c24cf2f3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "85051bfb-80dc-4db0-b8c1-e35b89d52d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb50e28-889d-44cc-82ab-edb6f8949d49",
        "cursor": {
          "ref": "107d6f86-53d0-41cc-8bff-f651c30b0a21",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ef8b86a8-88c5-43fc-ba33-79a73703e97f"
        },
        "item": {
          "id": "1fb50e28-889d-44cc-82ab-edb6f8949d49",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5a33998d-91a4-4962-b5b2-d52930242fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6e0370-4f84-47cf-8903-96eaf79830ea",
        "cursor": {
          "ref": "e3444600-1243-4dee-b130-cdbbc62daaa1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "73a7fd76-c194-4cd3-a489-1475cdb15033"
        },
        "item": {
          "id": "6d6e0370-4f84-47cf-8903-96eaf79830ea",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ae6acd7f-269b-45b6-b988-89c9483290a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae31d194-d5b4-45c6-a3c3-821799d422d8",
        "cursor": {
          "ref": "e9ebb58c-edbb-409e-98e0-605bcecddcfc",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "19b07b28-1c1b-4811-8289-a6b5b18eddd9"
        },
        "item": {
          "id": "ae31d194-d5b4-45c6-a3c3-821799d422d8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6e43f678-fab9-4b46-9b23-4e663d6a16e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94f2cce-bedb-43a0-9c6b-59ddd2ab8ac4",
        "cursor": {
          "ref": "62dbd677-1bcc-40c0-9c8e-0536a50209e7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a092b7e8-6d2f-43ce-a17e-b707b5df5731"
        },
        "item": {
          "id": "a94f2cce-bedb-43a0-9c6b-59ddd2ab8ac4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2f344dea-bbce-4661-993f-05143420378a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee907dab-250b-48cb-84fc-c1808f8797c5",
        "cursor": {
          "ref": "305e818e-1230-45ed-8439-702a071ea761",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "748c1f08-8437-4f70-afae-66945e49c58d"
        },
        "item": {
          "id": "ee907dab-250b-48cb-84fc-c1808f8797c5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "31a5133a-8a25-4d5a-8fe8-49d7932debb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd91400c-9190-4b3b-9b3b-a1f33826f7f8",
        "cursor": {
          "ref": "941feb83-7ff3-4008-bdc1-ba4dfd85c91a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6f832279-5715-4b7d-8c0b-aeaa7a2c7fd3"
        },
        "item": {
          "id": "dd91400c-9190-4b3b-9b3b-a1f33826f7f8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "aaebadbd-4530-4405-be89-450a2680def1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcef9cdd-b4c5-40ff-92bd-427ee72bbe88",
        "cursor": {
          "ref": "c13f818c-939a-48cf-a412-d8bd8c7c6d05",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7cc065f9-3766-4779-8f18-1c1c12fc4286"
        },
        "item": {
          "id": "bcef9cdd-b4c5-40ff-92bd-427ee72bbe88",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5b688fad-62f1-4f83-bbad-0d34fe71937c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0117fcc7-fb3b-4dff-8c42-e391cbc0294a",
        "cursor": {
          "ref": "7a9a39f3-1b1f-4ea6-9dce-9806f866a305",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "030fbbe0-73e2-4cc7-93f1-0d1743bbe588"
        },
        "item": {
          "id": "0117fcc7-fb3b-4dff-8c42-e391cbc0294a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3530dc04-ccdf-40c7-b395-83a7aa34e81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69112b64-89b7-4753-b89f-bc9f164b34b6",
        "cursor": {
          "ref": "cce50a7f-89fd-43d9-9bbf-71b946eebd8a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "53d3e48f-2ece-4072-b4a9-4f84222a90f1"
        },
        "item": {
          "id": "69112b64-89b7-4753-b89f-bc9f164b34b6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5b4b5a4d-37a9-4a1f-82a4-ade884ca4611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87427d65-6286-41a5-85e1-ef212b2d4c76",
        "cursor": {
          "ref": "175ca334-a849-43e4-be3f-001abd48e246",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4ca420fd-5dc8-4ea1-9f37-d9dc1317cb88"
        },
        "item": {
          "id": "87427d65-6286-41a5-85e1-ef212b2d4c76",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e5b34263-c53a-4a3a-bdaa-1236a167882c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b575e9e6-0b51-4135-a608-135b49e19ffc",
        "cursor": {
          "ref": "69a09136-b572-4d7b-a81d-63bfc98409d6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aad44a88-ce0c-4b36-a431-26fd9e95695f"
        },
        "item": {
          "id": "b575e9e6-0b51-4135-a608-135b49e19ffc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "04468d00-3031-4a13-b484-41b827135ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f05ffe-7c38-447a-9969-f7504fea3fc7",
        "cursor": {
          "ref": "5eb17220-91e0-456c-a4b1-26263140157e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e223ff6d-43bd-4fc1-930b-f3b2350e73d0"
        },
        "item": {
          "id": "a5f05ffe-7c38-447a-9969-f7504fea3fc7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fd415e9d-5325-476a-95da-57244e19bcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f421b48c-c363-443a-84dd-082b1a483706",
        "cursor": {
          "ref": "48c2f6b7-5356-41f7-84bb-ca03bfb18f8f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ccca3382-b57e-4ace-a801-92f6a2c8b6c3"
        },
        "item": {
          "id": "f421b48c-c363-443a-84dd-082b1a483706",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "51056934-1483-403a-8a7e-da399ad98c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79c5993-ac8f-46ad-b252-1f59d5fe2f5a",
        "cursor": {
          "ref": "e05bb697-6ee5-45e4-afd8-26e6e057162e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5eb2dab5-bce5-4852-b60e-2fae5fcac89f"
        },
        "item": {
          "id": "c79c5993-ac8f-46ad-b252-1f59d5fe2f5a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "55ae7962-1abf-4905-833d-97db6532b61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c1f3cb-2a73-457e-bce7-c3c5fd298105",
        "cursor": {
          "ref": "7d0f3ac9-de35-4c1e-b6b2-5d24dba8e480",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9b99ec2e-2039-4d99-b76c-fa7a3e30249e"
        },
        "item": {
          "id": "76c1f3cb-2a73-457e-bce7-c3c5fd298105",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "688800b9-8271-4c8c-8266-1f42733c6bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e937f4d-078d-46ab-93d7-d162cab0dc6c",
        "cursor": {
          "ref": "13562121-fd3d-4eac-b237-b16aa7cdaf5f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ba4793cb-684d-4918-b6ad-6537b4449b47"
        },
        "item": {
          "id": "9e937f4d-078d-46ab-93d7-d162cab0dc6c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d3436ff8-ac9f-489e-8ad9-c79dbfd5a020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f668b328-bc63-46fe-8c18-36c1cbbea86b",
        "cursor": {
          "ref": "296c2f7d-bbdd-4f40-9a70-869ece54993f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a67022b9-c60d-46c7-ad58-65fbf42b1d15"
        },
        "item": {
          "id": "f668b328-bc63-46fe-8c18-36c1cbbea86b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1edd99e6-139c-4a26-b756-9fae61682364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3783717-98c4-4fb9-ac73-094eaaa3f6b6",
        "cursor": {
          "ref": "f7126223-d639-4496-ba71-49a0d417f93f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3168aaf1-feae-4866-9e11-dece7d3e41a4"
        },
        "item": {
          "id": "d3783717-98c4-4fb9-ac73-094eaaa3f6b6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "15107b13-372d-436b-836e-639309a35d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c114a6-d0e3-40eb-a5ab-336ed427361d",
        "cursor": {
          "ref": "2cc87ca4-d234-47d0-bf85-79ad12840936",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2b18bcd0-8d84-42ae-b444-c3bd5d3a5acf"
        },
        "item": {
          "id": "46c114a6-d0e3-40eb-a5ab-336ed427361d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "baa54c86-1830-4dc1-a8a2-a07a1da59f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c9e5f3-ac27-4ef6-b793-8311e8d95830",
        "cursor": {
          "ref": "1092722b-5645-4fd6-a200-151bb5cf15de",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eaec8d17-3667-471b-91ce-3e95e2368518"
        },
        "item": {
          "id": "47c9e5f3-ac27-4ef6-b793-8311e8d95830",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "70f52892-d738-42a2-9120-08ca6b01435e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bfaec1-88e4-4996-a045-de2b24df5757",
        "cursor": {
          "ref": "8f7d66ac-a80a-4e39-a262-7549eb6d9c46",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "890ef1cb-a781-4d9f-9412-bbda2117d56c"
        },
        "item": {
          "id": "b0bfaec1-88e4-4996-a045-de2b24df5757",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b18fd4ba-1def-43e3-bbf2-2bef28232c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687b572b-9e69-4818-8d9b-5cc13b77c04b",
        "cursor": {
          "ref": "7044e913-9858-47a8-8d65-30f9eae11dae",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a856a311-bfaf-41d8-95ac-d9aef91f2938"
        },
        "item": {
          "id": "687b572b-9e69-4818-8d9b-5cc13b77c04b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "762f9d46-9174-4217-a1df-af4958e35e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3667f6-943f-433c-9570-80ccb938edcd",
        "cursor": {
          "ref": "ac52b6e0-6920-4eaa-bfd0-7095aff44c22",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "572f1fb9-ee7c-47ff-9139-d5d9801de88d"
        },
        "item": {
          "id": "aa3667f6-943f-433c-9570-80ccb938edcd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b355a32e-4a3c-4778-b627-f851d14dbc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ce2cb2-5ae4-4cb1-b211-c7bbeab13cbe",
        "cursor": {
          "ref": "1a340a9f-9e01-4b7e-843d-3dd0ec674ee9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d756db68-7bc0-446d-8db8-54b1e9f43759"
        },
        "item": {
          "id": "78ce2cb2-5ae4-4cb1-b211-c7bbeab13cbe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8f10e099-721d-4f0b-a9ee-dbc61e2e6c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5552c8c-a9ca-43d9-8416-184a4fb26857",
        "cursor": {
          "ref": "16e1ebfd-4eef-4422-b6d5-5f923cae5b75",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ecb2da34-189d-4207-bed9-9108c6da43cd"
        },
        "item": {
          "id": "a5552c8c-a9ca-43d9-8416-184a4fb26857",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4373822e-b065-4af4-ad40-e7c67aad8ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6666e9b2-32a8-46b5-9943-868c517be500",
        "cursor": {
          "ref": "98631033-0980-4287-9f66-4eca238deee8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "046aa7a8-327b-4363-84a2-e1901b582b37"
        },
        "item": {
          "id": "6666e9b2-32a8-46b5-9943-868c517be500",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aef91844-9e34-4d32-a3ad-dd4e1092a000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e003a8c0-e362-433e-b861-18b2396e4f7c",
        "cursor": {
          "ref": "b4ce5f8d-061b-4ddd-96e5-c59beae338ef",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "62124bf5-fad6-44d5-b5a8-ceeed779fca3"
        },
        "item": {
          "id": "e003a8c0-e362-433e-b861-18b2396e4f7c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0373d263-ddff-4bf7-9480-f6e402ba4e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e8d7b5-0a7b-4042-89b7-4b73a317fe97",
        "cursor": {
          "ref": "2cd28a3c-2631-4a2e-a386-512ff0ae5670",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b0508f6d-b77a-4af7-9911-5e6c695ac245"
        },
        "item": {
          "id": "e1e8d7b5-0a7b-4042-89b7-4b73a317fe97",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a4b70564-953f-4d50-9127-4aea5e5c49aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4783c-aa22-4a73-ae11-2a947bf007f8",
        "cursor": {
          "ref": "6deb7422-c208-430e-95e0-f27f63284f31",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1590e2d0-5ad4-4a75-affe-9736a847b0e4"
        },
        "item": {
          "id": "86b4783c-aa22-4a73-ae11-2a947bf007f8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a716012c-b8ed-48fa-9485-4f822ff7a1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139b7c72-9b12-431b-9d21-eb0966558df9",
        "cursor": {
          "ref": "0f969825-123d-4202-a33a-4a1867a44e04",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c48da425-cb64-424f-a7ba-be2cda844c19"
        },
        "item": {
          "id": "139b7c72-9b12-431b-9d21-eb0966558df9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "59d0f53c-4f5e-4f7c-954e-d97294c4cdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39094475-d66a-4258-a69f-c142b5dd8694",
        "cursor": {
          "ref": "2f4b6597-7db9-43be-afaf-bce226ff2e76",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "128c229b-4edb-4e7e-9393-c9471a409997"
        },
        "item": {
          "id": "39094475-d66a-4258-a69f-c142b5dd8694",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "34cb59b8-447e-43f3-92ee-310234d2d221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba71f069-16a8-4099-ac52-aefcc282b6e2",
        "cursor": {
          "ref": "20be416e-3147-4b77-8800-1c8443a64469",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "073e6a9e-f733-48d1-9a5c-25bea5b73cbc"
        },
        "item": {
          "id": "ba71f069-16a8-4099-ac52-aefcc282b6e2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a38065bd-d95f-4dbb-94d0-aa4f45b73375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1af6a44-b994-47a0-8e14-886289537098",
        "cursor": {
          "ref": "b101ba41-9ed9-46c3-b757-5a1488c3eec0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cec7888c-d9c2-4ad1-b8b0-3bf3c5bfa1df"
        },
        "item": {
          "id": "e1af6a44-b994-47a0-8e14-886289537098",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a7902a72-0a33-4cca-85af-33b8e18927c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58c2625-f656-4657-809e-48733f44d2a8",
        "cursor": {
          "ref": "b7b1bccd-8cb5-4748-9a27-b28907a61345",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f3d16eec-b3b6-41df-bbfb-fb070529e634"
        },
        "item": {
          "id": "b58c2625-f656-4657-809e-48733f44d2a8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c3fdf85b-ac2a-4d88-98e5-6d02c5a23a94",
          "status": "OK",
          "code": 200,
          "responseTime": 2336,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "86795156-a4c3-4cb7-a9df-96abe36848a1",
        "cursor": {
          "ref": "059ca79d-acb0-44f9-a8ff-00e06e794f51",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "795f944a-5f18-4bd2-8928-246a8ecfca1c"
        },
        "item": {
          "id": "86795156-a4c3-4cb7-a9df-96abe36848a1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dabb13fc-ae9f-44a8-8ac5-3776a1156040",
          "status": "OK",
          "code": 200,
          "responseTime": 3113,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08771d4-d1e3-4670-9c40-242ef6996b22",
        "cursor": {
          "ref": "c80d6276-85f5-4d01-8f03-9e432483d4d1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "57647efd-44f9-4d77-bf14-fd1819b3b595"
        },
        "item": {
          "id": "a08771d4-d1e3-4670-9c40-242ef6996b22",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c4a76194-dc11-4f15-9e0b-d2251bec3a7c",
          "status": "OK",
          "code": 200,
          "responseTime": 2646,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef3874a-99c6-452b-b5ed-4e75a38031b2",
        "cursor": {
          "ref": "6b6982bd-8931-4ac9-91c3-7868397b1198",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fd2b0f6f-d89b-4ee8-a046-8466c0d2278e"
        },
        "item": {
          "id": "8ef3874a-99c6-452b-b5ed-4e75a38031b2",
          "name": "presentations:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:248)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:248)"
            }
          }
        ]
      },
      {
        "id": "eb1ce006-ee01-458c-936e-195cb589991e",
        "cursor": {
          "ref": "177591fd-2a4b-4a6c-9c31-3b8ca0c99203",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "341a854b-78be-4448-b5e0-186ac6a060c2"
        },
        "item": {
          "id": "eb1ce006-ee01-458c-936e-195cb589991e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:249)"
            }
          }
        ]
      },
      {
        "id": "2fca1978-08b8-4a2c-83e6-3076d9dcc093",
        "cursor": {
          "ref": "913b24e8-2721-4818-a9b8-b22040f9ae55",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "10cef98d-0b19-41ea-887d-0cf6e209a75b"
        },
        "item": {
          "id": "2fca1978-08b8-4a2c-83e6-3076d9dcc093",
          "name": "presentations_verify:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:250)"
            }
          }
        ]
      }
    ]
  }
}