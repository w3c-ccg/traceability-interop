{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2682767a-57e5-4705-bfd7-1a7ab56818ce",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9f0628df-7a48-48f4-bbdd-7c09af809882",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "521a5e3c-17d6-48ff-a6fa-a02df8a45cd0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb1b1f21-5ff8-42ee-ac5a-210726c751e4"
                }
              }
            ]
          },
          {
            "id": "52a6892d-d4ef-4cc0-bd10-13eb370f0090",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3e70e6a-c4db-42a2-99a1-9417ec7d184a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bd1a5602-029f-4589-aca9-b48a6ba37d8d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d0110c91-da47-4040-b702-964bce813f29",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f1b7f617-b2fb-426b-a5be-72df60e9cb63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e335f966-8137-4f88-8c5d-09e308440c27",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a963781-a832-4eef-be3a-1f794214403a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15aa6b80-c100-4152-8512-e746823ce499"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f30f9c7-53a3-4661-a511-0dfb736b515d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3d7dafb-a287-4f14-8923-69a8632ac79e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "44402f28-aaf6-4525-83cb-afe43f70d406",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c9be553-334f-4a9f-9d7b-30a51954fcca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d6b3f04-35c0-4072-a6bb-5f2ca12aa5bb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "82827a66-5080-4e92-bf8f-67dfe9620583"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afd2482d-34c2-4ba6-b90e-71b6865509a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41aeb225-46dc-481a-a2e9-eae1e79100fe"
            }
          }
        ]
      },
      {
        "id": "9c6aa835-8022-4b8b-8b30-c52987e00ff8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "de229706-0a12-4f4f-80c0-12056218d389",
            "name": "Negative Testing",
            "item": [
              {
                "id": "217a7693-9193-4e09-a613-dd52bb617631",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81939ab7-cad8-4424-82c2-8aac841b7350",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e94d803-19b0-4d03-9394-e5b9d09a6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d18a60f0-7bbb-46cb-bf8f-4080abfeff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4929f2c9-da34-4488-9257-95f711157587",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0366ec24-3ceb-445d-a8fd-55c49f5fad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "720665c9-4af4-4d07-b303-33fc25d6ea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90094ea-f6d5-4d97-9b2e-322d01bc13ef",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806c3b11-07ad-40b8-bab7-712c01c8adfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ea4b732-613a-4727-86b3-57336a77cbcc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93b27304-aa0c-4a16-8c29-28e6b2b6e6e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63fb3753-12ad-4081-bc43-a04fb3a54904",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35228882-6c97-4774-8949-47c256383ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "008164cc-75cc-4a68-8f55-0e16293ae433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b38a3-92af-454c-9f77-e43ef157e452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d416b3-d727-4c07-8e5e-a8bc3c60758f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d62ebec-4607-4288-bd79-c7be631561d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7405b38a-c2ea-4218-9d3a-052529fee6d2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ce7dfab-1d45-4c7a-bf71-d929260399ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "43f22aa5-c834-4843-b179-ff7b1ea9670a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d900e579-5b19-4830-9441-8e4282de6051",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3b3e0688-ff44-4ca2-880e-d0ecfee52827"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1c09f8f-5baf-47a1-94ed-00afc8683774",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d95922a-a157-483a-87f0-68d7ef059936"
            }
          }
        ]
      },
      {
        "id": "3d406f3d-ba87-4cd8-9795-1cf07be9752f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a21f2f2c-5cca-4e59-88e2-98be9689503b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22ef47cf-fda6-48c1-a205-156f96cd94d2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c8394a44-dbab-4257-a61a-7ce7feae2e6d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088e2ba6-0ce0-43bb-958a-dfa807d57162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0fb107-19ef-4491-8781-3ab2620cad0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0059cd4d-6f4e-4bd7-8338-08f129ab3086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31457a33-24cd-431d-9346-7bff995798aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e60feb1-e36b-4818-845c-c2e7ecc54f67",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738dac62-5e62-4267-919d-65aff254aa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff771e6-e923-4b00-a819-361379e09bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c168afe-95fa-465a-a743-347589fe477c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9a0bb8a-e24b-42d7-b9d1-b174bb6111c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb26d39-ad32-43b0-bf37-045eeccde8bb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7abd82-288a-4f2a-81e5-4c49ffc0a7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6118f0-6cbc-401b-9ea4-8942cfca45f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34af487-c9a7-4982-89c6-a582d40ee4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50434431-28b6-4112-bcd0-00569df98255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ef94a5-f9f6-40d4-a64b-c412bd890e93",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c328f70-0493-44a7-893e-7abf0c0b61db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bf2e95-d74f-43bc-969c-3710d59a935d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be27d9c1-7e37-44c9-aeaf-a500fcad6747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23821913-a169-402e-8d88-b32400111fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7db547-9599-4a70-87ee-799554073338",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1897d8-e7c9-434e-beb1-a056993c75b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6046a1d-b462-4696-a6d3-ee891dcacee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd540d06-4558-4cb0-b338-ca9543aed70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9311136-99e8-4ea2-bad5-df8671ce0172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01699e1b-893f-4882-87b6-160e0dbbee79",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caead636-5f8c-4530-b3f2-8a4e27e8b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe8d3f1-fb01-4309-8ec6-a66492bef151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1691937f-6a8c-4718-a2de-db408138ead3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcf88907-81b0-43b8-b35d-1e134a287821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f249db-2d0c-4548-bdd5-5ccf37078518",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bf6368-cf00-418e-801c-f940013f645c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6e52c8-57a6-4e0c-9593-5b2fc74e04a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb42b4c-a5bb-4d03-b558-a28eb449d129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11acd7fd-498e-43d7-ba0e-9fb4bc62fb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebb8c1c-2903-4916-9632-dd03408e9f3d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e8b675-b70a-4534-95c9-1e263b1aa7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f812ff74-349b-4cbd-916f-a51e3eac1c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3e23e4-de86-4547-99e3-6ce5d87284b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46a7f9e8-f7c4-4c88-8e54-6e887e11c5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c6b239-5447-4f4f-93f9-2df2e4f477d2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71b1a8e-f9e6-44ac-996c-571fc98cd1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4991cb1-4c21-41af-bcea-f74bcece7e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284d8347-e2ad-4b3b-b45c-768bb7796f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23da6f45-5969-401a-afb7-733a0f3d4774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5acaf89-2ef8-4b3d-bb23-47bcba808372",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdf22ea-88e7-4bc0-9a2d-ce7fdeed5150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfda76c-5096-4fa0-a301-af6e2c177aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aa9166-464c-48d1-b751-acd9cad8d0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abc99227-830f-49a0-9b0b-5293dbf08213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d87a44-0f93-46e6-a4f0-1369746a38c5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bfa7a5-e95b-445a-a885-ea5fffa48e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786dd7cd-bd8e-49fc-83de-01b6210cbb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11ef6d2-476a-429d-bccb-85d82bc7f48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c5f83f5-b285-4bf1-a358-c1415024423f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17575482-b99b-4804-b817-b650641029be",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff67ac0-34af-4692-88d4-92bb7cabda21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd883190-0261-4a7e-a1c9-b819e2529a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6054294-3b56-497b-bb3f-8a2cb7b7decc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c99254dd-e0b1-4de4-bbe1-aa8e42c2cb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea98c52-40f9-4a52-8b00-c0c45bc7a958",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa4af51-8b8b-484c-aa5a-6a7a99a1812d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5328ea-ab41-4c8b-be69-aed0e80379e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48627a17-1727-4305-9196-3c5df6c4ce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c73bfd7-0e28-4908-8dab-0533b527f3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597a205f-2948-43e2-b80c-a948edc17c05",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381426e9-130d-4b90-81ca-1cb3028b8b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf5b3d1-ab56-4e5f-a0d4-bec180e2ebeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344a8ecc-c488-4657-97fa-308de54df9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c849162e-b520-4d0c-8959-f5985e7f8404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022b689c-cf05-4909-bf8b-1c8ec23b18e4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63d6d40-b8e9-4b0e-b6ac-0f5ab3ba0c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddae209-714e-4d92-8806-d3c9518bdbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b424965d-379c-4c62-85fc-c1bec44537d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7702cea-2584-4cfe-aebc-21803e15e5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7d9555-6f0c-4954-b037-0d32d803207d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c25fb1d-7318-4cab-ab10-45ee824e8564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aeb379f-034f-406b-9cac-d6efc1e579e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d88bd47-f417-421a-83d5-d7fa242b9627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d1b312c-8a18-475c-bb3c-869a9a5287bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba199f1-5df3-4e34-9244-0229d39d179e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf5057-6042-4cc5-a0ea-a0d6256062da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba742e8-d86a-49e8-9c1f-68aefd9250e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6551f4-4f8e-4934-82cc-72adfa231097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e301ccd8-d86f-4e16-898c-cdf15c8e8dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc16c2d-cc50-4615-9604-3644fee675a4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e20bf26-67bd-458c-a2a2-3a11493246a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93e7bed-f6f3-41e4-877d-9ffbe0d410ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aeb35c6-f790-45b0-8949-235313dbedbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db3ab63-20d3-415f-a88b-447813c75ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bf49e0-310c-40e7-aae9-41003f2e7392",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d4c39a-4186-42e8-8ef8-fd4ed571e071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf62ae5e-ccf2-473e-b816-a75dd357bb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4587fd-b0b1-48ad-9a17-fb73fb73694e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b22f1e50-1f1d-4fdf-8f49-0518106bb14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ee2ad4-7dd2-4153-b9b5-c4b06eaac1ab",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff62e5d-0f45-4887-b67a-5e1745b36d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee8378a-1a67-44b5-9d94-44c23700b8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124df399-f87b-4dee-931d-203147b21dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d804f45c-c0ed-4e76-b4aa-ac8883b9dda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3e8557-7422-4bf5-829e-387367f93565",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48be00ed-c010-4c31-b4fc-01f278bafe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3cfc26-4bca-405d-b7b3-cec0a5453e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04388a75-b780-48d8-9edc-818d797f32eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4517dc5d-3b33-4e4b-ac35-47f392ac4a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b6ebd7-8699-4ee2-a464-d8a50192ca84",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9324a33-7614-495a-b095-6a4973c4acdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1caf2e47-6d9f-48fd-b3ab-97b426dcb4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a1b640-fba3-4d9d-9ef5-55b259eb9acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "753c178a-13e9-488f-ad25-115e4746eb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeba1de-1c83-4a63-b8d3-91e30df26b27",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73759bad-19ae-4e5f-82c2-b288a6bc4e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a67213-e657-42b0-9ed1-f1ffd290ed5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4e76af-a9a4-4893-bfc2-a4c68de1ebab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e20c9816-ec2a-4457-9264-a995be6913b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e8480b-3728-47ef-a85d-123427e6e60f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cd0220-2894-4049-a8cf-c5dcfede6cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf89f70-1bf6-45db-8587-185b235d9cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d02a33-49a5-419d-9959-e8ed67b82a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd66bfc-6b4d-4d99-b9d7-2437e1f6ea4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48444688-660b-4c1a-8fb9-8b1544a23e9d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65938233-e88e-4cf9-acd5-bfd5cd6132ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f882f0-8ed9-4b65-90fe-fda6d1440f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787dff0a-fe9d-49f9-891f-a78dcf539c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd875ef-3406-4b41-83b0-857e7cae47c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762711c9-1447-4b55-a4ec-363354150cb9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2226879-5c62-4013-b0eb-6e230aaa22fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9ac244-e869-4841-926d-3b124fe6dc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598690be-f8d3-4e88-a4c6-c6ba670c23e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1faec537-a6f9-427c-91cb-bff721d204f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183f6305-1fe2-418f-af3e-a253dafdafa1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eb997d-6d04-47d7-8c18-a9761eae2695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde159e8-c539-4f6a-bb5a-df9c58022973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ef4edc-f733-458b-b030-e06615345069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f237645-86cf-4224-8ee4-762f91355e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71a844e-2993-4830-a00b-cb0a37f158a2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf84b8f9-e7c3-4db0-bafe-145d18b455de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bdda8d-8556-41ac-a1a7-206225c01e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc57491f-48d7-4d8b-95b6-187ee0ab685a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b96d177-8201-4250-8434-476dd584b7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09944285-b80e-4478-959f-59e61cc51981",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21abdd5-805a-4c8d-880d-f2851508a552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6363989-dcce-4227-aa70-e7e285088fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b8bd7a-01ce-43e5-ac34-82b2da5d4c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9803f687-7ee6-4e2d-9fb8-2ff1bd6f2500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf801b47-43d2-4f85-9418-673fee58618c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b046c7-f5a1-46ba-865d-fffeb02d5bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e04b43-08fa-459c-92e8-a69e4955ab1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e79a01-5118-4e5b-a57a-e3b17f252f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e55051b-d525-43fc-a862-61f6e74601cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebcb785-8042-47e8-844c-c8be81ea9b53",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729514f8-b58b-4ab2-82ea-a90889a4da2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b098c74-9f4e-4a53-9fe8-d8fc821dc8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1309cdb-a11b-426f-bb0f-575139eec2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8c34eb-99fa-4612-8f5c-fa28b664dc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d821463c-8427-4a4a-8d01-f0eb945cf3a7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84486177-72fa-4ec4-ae4e-f9e5a29bdfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1678be-7582-46f1-8994-b8ff43dca7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1057adb-31f5-44b4-9914-c0ff39aece2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c13faea-06ac-4ce6-8adc-74bf4bbf259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cee747-703c-44e7-b229-191d5d954360",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e738a12-ee42-40be-8c92-6fe72534f53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062817f7-9aa5-450c-8ad0-f53ac36b7aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6f0a91-2925-499a-ac54-8fdbcb6c6dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c11459d0-fa8c-4a90-b4ac-b06d44a0246d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdc1d81-7e75-41e6-8f82-9229780ce7b8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4880c148-44a2-4188-80a1-849033ae6c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98f706b-74e1-4af2-8270-aed5064ffa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213753d0-6656-4de2-a0f6-26341637abe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec5c1a4-6c29-4cad-a650-477d62681a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01462db3-de7e-4065-9827-833c01e1d3f1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8585236-800e-4443-a494-b3d6502e1b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dc07b3-2817-41d5-aa1b-9f99bdb41e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3a9ab9-af09-443e-adb8-08ece19b5794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5501b4c1-c82f-4f38-a1aa-5fa63a9d5dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d9a94f-623e-410b-9647-2b25a4165485",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c2c2c8-cb9b-41b1-9149-495addd1ce09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "074328b9-fe1b-4ab5-bd20-dcefc78ab386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fed625-ae63-4b3e-8e99-91886bb310ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dccfdad-758a-488d-a29a-c2fc80c29b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eafc887-df89-460d-8502-ab6d628fc7ec",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04532c78-715a-4f4c-8ecf-270608d62fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001d349a-6cac-476d-a73b-f1c15516a5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48af192-68ad-46c9-b44a-1287ab7f6680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d05e073a-bad7-4e1e-9090-6d519ac555f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2802b507-5541-4aff-bc49-2e8f4a2e5f99",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406150cc-4207-44bd-9276-94ca5b4f8d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79e119b-444b-43d8-8cf7-10f62efe0f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6f2b18-e2b8-4467-8aeb-676742af8895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d698145-3ee6-4d67-ac7d-c2a43517a6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f814633c-f400-4b86-972f-f1c340bc24e9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c21ac1d-03d5-4ff3-b659-60f8c2983313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8519f9a-32b3-4070-b0f1-7bf334edbe19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6cde53-67ec-4c15-9c8e-31c13a3173ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e01c432d-9cd5-4f3a-a6b0-946a1e72f19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38356935-c32b-407d-8776-350d2efa4c29",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b82fbc9-f05a-4e5c-b4e0-4022e2129406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3c0a44-7699-464e-ad87-a47dece33473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cf29b8-ec9f-45ec-88ac-d60bcc5d37ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3759331e-7b7d-4f72-9a67-d43eafa0d8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62da998f-b89a-404e-8222-3ec8ffef0a66",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84222cff-776f-4ef4-a80b-32bc5e542451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d6d6d6-10d2-464c-b3ba-9caba1233e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94100375-c95f-4db9-a602-901214edceae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc702a6-a474-4d51-8577-4da2e86df7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca95016-4a13-4880-96e4-34cda4a3318f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a309faa-2c4f-41e3-b4c5-fc63dace0139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994e1804-02e0-4bdc-afa6-56327463d69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3b5c75-17e2-4333-859a-0e903725b957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4f79c45a-2248-4a07-a146-8814ae3950e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c84a4b-b3fc-4945-9667-fd9660d00d81",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dc3819-1327-4b7f-adff-344fec5fc9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0139572-ab0e-40a0-a305-ab449ce93184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc667833-c125-42c5-8f30-51f9c096e7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0275eae5-4581-4aad-a7ee-6b0bbea75448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f32aecd-fe35-43f7-9a00-b5787864ec1d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdef4af-77f2-4954-9bb6-b9f442f5fab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f7bc7d-f3b3-4849-aebb-6278a4fc7f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256b345d-c5a4-45a2-b803-14a1fea22dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55037f1-8722-4056-afc8-44bc9c57f5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78226b79-5b55-4145-919e-53af44c5564c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4f1e1c-f91d-4139-8e29-cfb8351898b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdebbab-1ea9-4ef8-bd97-1f78fee0b2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2407eb0-c3ad-427b-82cd-050e9e1b242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8061266f-1743-4be6-b1ca-ad33f95948f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962b446e-4920-40f1-a29c-e620de85b6fa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0aea7d-084b-4d0c-a760-2feb130d6aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dd29ab-ecd9-40d8-bdba-796f7773f770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bc69fd-bde1-4a2a-aff0-a9101932a9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6abccf17-df93-4f10-b0d7-3395e19c7f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1407dc8f-3a63-4a69-951e-9e4e9102d4b9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb103c4-9b9b-45f7-857d-4998933ac15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eabbc4-2fe5-4c27-86d7-79852bd0fe8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2773f882-114b-46d7-a8c6-e61a4045b5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2665be-3a44-4a75-bb31-4836b1633630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044c91f8-85b4-4a50-847d-b3402b6f6272",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0965d804-d9d6-470d-8f6e-ae1021e1edf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20edab64-00b2-4e77-ab19-c3f11291c33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0ced65-bf58-4d78-8e31-5e576de875b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ad3f0a-79c4-4e32-a60d-3d3fa616cde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a98933-bf5a-457b-ad82-fac0b751e66e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4275d864-70a7-4d6c-a3e3-e119525c383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc46f47-2e3a-4acf-a277-8750dbe5bacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec84826-0cbe-419e-8eaf-e22776de2c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f25c7a-2a9d-4f8a-a511-3d7f9234f7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43d11f9-527b-4249-864c-fd8b997d31ab",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7216bbb-4655-456e-ba54-3bdd80627f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7a54b9-c4d2-46ec-a818-96e52df0f2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6fbcb5-7e83-4224-9f46-1d24fafc4f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdbf3b5-6737-428d-8011-16199cde15e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9a5e9f-ff12-4dee-a082-0ad3a46f14fa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f449a30-5d38-4176-b88f-8d68ba3ff4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcd94fa-74a4-499b-b8e9-928fb1c5698f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e10d09d-d53d-4596-9105-eb8351cf8614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "136ad90d-0fdf-4603-9dfa-a45a506cdd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d995176-caa4-4b1c-9a45-6da98175d38d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d9359f-8a41-4fbf-b882-082fc625b9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3b4630-1346-4bb4-9c35-f30bb7e12132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece6af38-e7da-440c-9012-e5cb000acd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d72122-138f-4dbb-bacd-639845527bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a74fdb-e02a-4ae9-92ac-fe4446923055",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58456d21-0db7-440a-92b6-5c6c996174f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec377ee-2f5d-4e4a-a0ac-07d7b7c5ab1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8de07b-ee49-4f02-bd0c-b2cbce09b5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06fa259f-b5f5-4188-b850-3040f833ee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9eea4a8-b71b-44ee-8a39-d64123e36a27",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82551108-b5dd-4127-a916-acc7241e4f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4f0c32-2262-4c55-a339-6da7799790ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe261890-3281-436d-8d35-432919b5576e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07b86a0-f396-43b5-9289-9e651dda509c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7612b9-da8e-4fcb-a771-0ebf269d41e7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a04f24a-0eaf-400e-82ed-fc8e301c0988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd359b15-6eaa-4fdc-9108-b557bd2587f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a36232-3b17-4138-8855-1c002fcb1b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8938bef-2bee-4132-a88d-9867d177a226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d4c15d-79b8-45fa-a33b-1aeec9d52561",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ffd683-4010-440e-bbd1-79a86d874965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9839d2-262d-49e7-b469-d968ea52b31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0b493d-91cf-41b4-a0c8-2ca399ebc7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d2b47d-ace8-42e7-b212-215aaea15a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab2f979-dd17-42a5-b447-1e81f1789812",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e230fed-c7e5-45a5-b6df-8ce8c1e7f0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b831abee-03db-43c0-b2cf-ccb35309ecf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4276b819-9219-4ea1-96a3-ad4f02fa1ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de915799-70a1-4753-a50a-06ca5cbacb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908818e8-0ca4-4b67-92c3-c0884d7a426f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd37a26d-a078-4c3b-be85-3aa7747286db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52230cb0-dbc8-429c-89b7-79fa931b6f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4256f57b-792d-4abd-85a2-283acb20f02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "247449e8-cd90-48fd-bae2-d16b1ca31abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff0de25-a767-4019-b76c-46a6c46beeb2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc04fd5-2a79-4f91-a952-ff10c33f83e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2adffca-5a2f-40de-8693-1301d5a2628e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aaca62-424c-4b2c-b1b4-0de72703d365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c38d4a70-357f-43d1-96f4-47b3207a834d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3384325e-087b-49c2-b8d8-1a88e67ebd1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba38aa04-eb58-4476-9318-62fb08263fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f616f35-a8e6-4901-8184-c6adbe9f2c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a1f43c-2209-45e3-9bbf-b6e8354004ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "756c08be-ae1d-4699-976c-d37e2325c0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0493010a-e360-4951-9ec9-6b1b530b8ebb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5750f9-beaf-4dd1-9e10-b4ec86f97f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ef110c-6b13-414c-a431-b64a78be2b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d00ccb-b26f-4f59-9d99-e1a04b26b3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6aff674-33e0-4915-9d61-21b6deb33c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ef1529-ffbe-4d3a-a1d4-686ab9aade0d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a53309d-6565-4aee-b8bb-74eac58ba4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8deccc2-af50-4be9-b96d-cf4fe1baef38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6592ab9e-698d-41bf-a19c-c46d60189713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d420c93-1963-4394-8439-15cf2ca61339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79dd57d-09f6-495d-b702-793f5ad3a3b9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a4901-d037-49a1-aff5-fcd2e0510638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be233f2-19ec-40f3-8e94-1f15f3988e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110b0d0a-8b89-4b69-be6e-8c7ec897b1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b28a7a-3e36-447f-97e9-030811ee5563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37435336-b5b5-43ba-bb56-80386d807b38",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c2570b-9863-45b3-81c0-c578f7b77115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34981597-0d1c-4fa5-9e96-a0266d8844ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ac8a8c-038f-410a-a5ba-ea81bb1972e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df59eee5-9e70-4d27-9081-053ebfff27c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0d1401-5743-4a48-aafe-87b936dbc09c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6403992b-6340-4d1d-ac7b-91bec36fa263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdf57ad-28f6-4377-8d12-e07b9f4e0c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70638c49-63e8-42ce-a0a6-c5a04a926c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48cb12f9-4937-47bc-996a-b141eace4c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc71338-03f6-4f91-900a-2b2750fceb0a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b76814-9b46-4313-bad5-f8b066e4b8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e44325-330b-4df6-9326-77167c7a441a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec65cee-fb67-41b8-aa33-d6ba6dd72153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0719169-d9df-4da4-a2ac-5c633889c764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8767ab73-902f-48b9-9d92-d9ca26c39401",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70c9682-416a-4d66-9406-68c9e4b43a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b8b52f-53c9-4f93-baff-4145efec4750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da87a091-8c0b-432c-b16b-74fa754fd7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2966a65-9287-4d4a-a94d-e40e493d09a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e904a5-af9d-474b-9b22-74384047cbb3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc03af91-09bf-46ff-a207-37683f42368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be903064-a9f1-4c9c-87f8-fc3a295b08e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da031958-0ec8-480e-aad5-7f2c849d1d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b80796f0-6153-4b1b-a58d-aee1f0a4b878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c20d92-c2f7-46ad-8f49-eb833a11c0f2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c5bed1-20c9-4a82-9d13-eed8aa0dc60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5fa932-1b07-4696-b576-250b0cc7b313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b61b00b-ae1a-4c2d-a145-afa4f5f6ac99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "449b8fef-7c15-4e7a-ac6d-6518f63b08d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e838d7d1-6efb-4c8c-ad7b-e016ed15ec19",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad8f841-ab60-434d-b4f9-4ba6237f28c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec47a92-2bde-417f-a7cc-5cc756f9203b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f858099c-5495-4074-84b6-81cc4c4570f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df2fbb3a-0607-4049-ada3-ad6eba852379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df77fb07-4e9b-4d38-ad6f-1ed04d92a416",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef0e47d-8f3d-430b-a340-231378a40296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb92a177-3f63-4b01-935d-c2590186c0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee072c3b-117c-4d8d-95f8-09bba9bc7b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8b6e3a-d389-4331-a214-c8ac4d2e2388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eebd78b-d48b-475a-a37c-8a1b86bf8fd5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9774e2f9-c1f3-4e21-8a8d-5b3b3ae6bc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7887aa80-5158-461e-ab90-8119d9c506d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0023cf4e-2215-4bca-8a54-c2470226e928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0b76b4-8b5d-432b-b913-6f1e79e79db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d48f301-73db-4671-970d-1f87a44b55cb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7288a1-eebd-4733-be55-bc0ea9d1ae98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605dbd6d-b10e-4af9-a4a6-988f7050543b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603d0778-2d90-43fa-916a-3db937507304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f00431bc-72b2-4c08-89e1-01ea25a686b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7f09f5-7b28-4631-9c25-8cd46505b711",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056acc0d-f91b-49a5-a6c5-5f1bf16d3353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3d8287-e116-4479-8262-97cb96f3cdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09825f48-df70-412a-bc13-8891ba3ef016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82ab2002-a180-4f0d-a86c-f0656073842e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17da910c-8f0a-41e0-9f2b-b1fd253d8cf9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e789047-b7ec-470d-b727-9df937140358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e2d37d-44a7-4258-b8c8-69ee538a4990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd371c51-e271-43e2-8234-64bc4e025b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6967b9-50b8-4b0d-9494-79368a33531c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae8c5db-da82-4439-aa94-ed3a0a66d315",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af5677e-7fef-46c5-95ac-1f74e08acad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e956a6d2-1f12-4aeb-8a4f-ed6b357bbde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7abf7d-5ed6-49fa-b036-377b3a6723ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8756c542-9047-4d9f-b0af-dda4e4b0f62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2e92a4-40bf-4693-806a-8cb686822995",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47e646e-c672-4cec-bde8-e79e40060789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c2e122-9a4e-4deb-afad-7c251d8f25c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a490113-89c9-4d2c-9a35-8422ee0d5fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b651145f-f00d-4ec8-9afa-e277f783326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987c4b11-6449-4a5f-b29c-4521416bbeb6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eeba23-9bb2-4ee5-867c-01da6b067966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707f5d97-423d-4bf0-9feb-73cc40006be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2605d45c-f332-4c3e-ba56-246959c6668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e09966d-680a-424b-acd8-a85818e717ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756ed975-94dc-42a4-be1a-9a64921400bd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d70a82f-6a06-4b6b-86e1-ca64be385a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e06018e-b488-4c2e-91b8-ad6713588146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67e8d40-24ac-413e-8e38-35d0b1c4706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5326c4c4-687e-4f1b-80d1-89d62da29c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55363bc9-828a-450c-a8d8-92c5112245dc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ebc055-6459-413c-aa96-3bc402616f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9e8080-c196-4d9b-8b2a-66e3ed3cb31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56411ae-c1a9-4e92-a694-f87cdbdf287e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d15334a8-d704-4000-86ee-075395fbbcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acb928f-13b9-4ff9-af89-2e400f5b8155",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57958b0-f7eb-4f95-84d0-6e61baee71c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34753e01-7f6c-415c-90d9-b4aa5969304c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0690bf0-e3c6-4e6d-b33c-f01ed87e2b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c19d2f9-73be-4222-9f9e-e0d163d9d203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a4ab29-bd21-4ade-a984-112b695d9dc7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622bd5f6-325e-4451-8aa2-3fba61a9cc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca7f09c-eef3-4325-86a5-ba367e247a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4439c73-cafa-42fa-af3e-6e3adc95d3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f4be86-b33c-4b38-ab03-ea2da6aa55e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309e5b3f-586a-4539-8859-348d1c3e60d2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d863c80-aac1-4395-847d-f5741643bca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7363d171-3509-4bf0-b05c-bb9330812740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f223ac-37d1-415b-9afe-3c34b0dcaca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db8612b-e9e7-4a9c-9149-de38d0ba6ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fb4579-33d1-417b-b86a-24ce393952ec",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7060f0d-ef9a-4357-9a89-678d974b74f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c844efd5-fd8a-488d-8e4a-1d891330f3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73e0721-a5c5-4217-b8da-93068133e081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d83616-ae73-4364-85d4-0e717c061840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2008969-9f6f-4e45-bb80-7af8950b9870",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beef517-5a90-411d-80ac-ddc072f2286b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7f6113-e86e-4e23-93f2-3f73f67ee371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a19c53-84b1-4bc7-acf8-dfb6076972f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2c2aef-c833-45ad-9660-72f0c709282a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9756a898-bf59-4ae2-a0ef-13dfdeec9d88",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49f6d5e-f19c-4e44-ba44-7329b73b6054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8296d2-219c-4345-b0e4-a483c4cd2e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2c3b4c-214a-4292-bf10-f776b30066cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1dae6b-6299-4900-b32e-c722591172a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054e8e9f-a1e4-4878-9d84-01fa431f3c31",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac5b954-35c4-4f96-9b1b-8955b167ebfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d505ab-fc73-4f42-8079-08c22dc5a5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffc83db-2b55-44af-b2b5-d0b9a8e47a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f91219c0-5f51-45f8-8298-ce76033f8fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576590d6-15c8-4e1d-b686-147ef64b63b4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e471cc48-46aa-4a9b-b1e2-8585ad8a13d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e15456b-ece3-4a1b-ac3d-565b7a821d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a5fee3-4b09-4aa1-819d-eafb58edd0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db740c9f-d385-490a-918c-460013d0dfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51573738-b7dd-483a-a170-900ac11264c6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7296853-79e6-4561-a2aa-e9ddd1529f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054f9500-89cb-46bf-bcf0-84eda8d48921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e43e260-994b-4c2e-a668-5902e88842a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20c84e19-7ec2-4dd6-bcf7-93e39977532a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379dea44-391a-44e8-9345-7448a6f64e84",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56727db-bb5c-4f96-8384-737be6fc4bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63181b64-207f-40d9-aefa-5abf166d317f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e6b61c-e59a-40de-9f6e-aa9cf1f98589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71a7d719-89c0-4de0-98d2-9a6203fa7e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de730aa-5da0-4580-a239-30bd8309ebb3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e6bcd1-31a7-4cdd-a4ec-8ef4ff2a45df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a0851f-10fc-41dc-8bba-81a57c168ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc39e49b-6737-4e1f-a152-e0dd18af5ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f279ec78-ca11-445f-aa4e-e73594c1115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6124c27-bd3a-41d2-b5c5-c54b92103cf6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806b53ce-3a61-4c0b-b9e4-270ed89bb552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dd0f73f2-8113-4855-a6b4-5236db8fbce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce64e516-73ed-4984-bb5e-742ccd33995d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6346b659-6101-4151-9ee3-0a45a92a0d0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c35d0ee3-75c0-4682-bb61-b9378ca0479d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24668ff9-ab57-465d-bb69-729ca559a5b8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcb7542-8c09-4db6-a617-14422a1cbabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "405957c5-3aac-4f86-8baa-e06a2d283a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72eb1f2-c0f7-4404-8e11-1bc229514c52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "990fb16d-b556-42dc-9c2b-1982c670035f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c861368-ac44-4073-b58a-afd525de238e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c08de25-992f-4e3a-b414-84853d7a684a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a52a87e-5f2b-42a5-9a58-39d010ff9d6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9dc8664-fb21-40d8-bf72-43559207716c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd431fff-9562-408f-8325-d29e9132124e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "062b6761-0154-47d7-aaf0-74818ec96106"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "97fd3756-1ab9-47ce-a13d-433c4705d733",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4880828-4c08-4290-95e0-d6c2272ab134"
                }
              }
            ]
          },
          {
            "id": "2711fac5-3335-48ad-93ef-33f1bd8cf83c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b9f0735-2b0f-40fa-aef4-4dfba680d275",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f8271879-80f0-4438-9d1b-035984f69b8c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc0bf2e-9786-4d8e-ac38-489bbc74d83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "057eab0a-205b-4e79-9d31-41ae56ced608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da0ff34-a4a0-41ca-9a98-74dc4d49e5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b945d9d0-292e-48d7-9de1-118fbe6826ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8dfa313b-97ec-453c-9ebe-9ecd449b7eaf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72af77bc-00d4-49c4-b2bd-0b5b32eaf905",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83fbee47-2bda-468d-a6c0-8cd169958286"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74ea9c4d-1cc5-489e-b7f1-a3fd45378a1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41bcf594-9d57-4dcd-8802-c160ef95f170"
                    }
                  }
                ]
              },
              {
                "id": "a518c9ab-a31b-4f5a-914b-4c66e8315f74",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "902122ee-ab4a-4f3d-a1a6-96f3f19dfd7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d0756fd-2703-4379-a53a-0d6349862c6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7446ae5-2d2c-401b-971d-84e22aeaaf4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56284bc1-f8d2-4fe1-9ea4-918cafd6d0fb"
                    }
                  }
                ]
              },
              {
                "id": "9123d683-7e64-40dd-8a32-3c80575faaf6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ce61c05-84b7-4e70-b5d2-fc7701fa618a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdbcb4e3-0020-43ff-b5ee-a45c4fcd15f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96a6849e-f7cf-475a-9164-c6ddd3dd9ff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec6e4408-07b9-44a7-a125-f899eba04d9d"
                    }
                  }
                ]
              },
              {
                "id": "c4961df7-5b6d-4b46-8130-425f1feabb0d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c870298-7314-4744-a546-826a4147d519",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02d75f1d-38bf-4adf-a199-5a9efe59fd67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bca8c0c-d654-4000-be4f-0f5206aa6a3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "50a55417-06e3-45ef-afa8-31e1b94abc1b"
                    }
                  }
                ]
              },
              {
                "id": "f3a1e21f-a025-4315-88fc-e169ed3cf114",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df90f389-f404-41c9-a54e-00fed1a6f6cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b5ebb45-1633-41c0-b667-be4f45a7f55e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04ddbeb1-1bfb-4dcc-b219-cd3d5252850a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "40e8153d-0a32-4140-bbb3-a4c57c22f765"
                    }
                  }
                ]
              },
              {
                "id": "c70187f1-81b8-4219-8dc3-0eb2fc580bf9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f683a0a-011e-4874-854d-ddfb8aa8a716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2763025f-40c7-4ea5-a64a-95d8f94875bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "818a21d5-706f-4d0d-97d2-f792deebfd46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0e083f5-ca71-492e-979c-b76b1ebdace0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7b494b3-e557-4a8c-9bfe-7750fe4480da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3307bd3c-2137-475f-970c-e54f90229496"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5f027233-6964-466b-aa7f-7b3c0075e74c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "323a3ba0-bb71-42fe-85a6-c699de35eb5a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9da69ab4-2cad-4445-ad74-e24b8ffff93c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0de90db8-02c2-4454-a5b0-d6778790fb41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "959c8b01-21a6-4aa0-ace1-7efde998a0f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f69728ca-940a-40fc-b645-8dea53a5d75e"
            }
          }
        ]
      },
      {
        "id": "76107504-b72a-4fa7-8ba6-1e83dcc883ed",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5a7bef7d-3c83-4317-a323-1c5bbde6cfe7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bc95d1a-5b8a-4015-8150-7d7c1b1fa98d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10937fb8-9632-443b-8679-80372a849af5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe41e92-4a62-4e49-8d05-396380bf601f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57039729-902d-49cc-b9b3-a274a22a8fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95a68dc-e33a-49c3-8f3c-8d060f055799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d5face-306d-4263-b165-a75b568e7aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb6ffee-bb45-4062-a830-f7fb8dd1ef76",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868d5602-0acb-4068-bf49-f2be145f9708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cedd1d2-8eb4-4c6f-9dc6-a92d35329d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9427a-eca7-4a40-86da-064a49920b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8438677-6759-464e-a51d-53c7671fe02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cf73c6-590e-46cb-a70c-983e447a57c0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35447667-fbe6-4664-b0c5-cf09b302883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033e7ceb-ec31-479a-8f4c-bdc5346b77d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec93726-97fb-4a0c-9362-63e8cb79d5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce4baee-b611-4e54-9693-2692ae4dd1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad2f578-7ba6-42b2-8d00-b052125974cc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a5493d-0741-4e1d-8064-3c2255bd8877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1e6bc5-395e-418c-96b0-c3059e24964c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bb1563-355d-4624-b422-d3ace7f2161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "091e708e-d0e7-4189-b4e4-32a4133a613d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6f028a-af77-4949-9758-137e34871a71",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d9a7b7-470d-4bad-95ba-8dde5d8e5577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a55752-185c-4b60-93df-2d8c5031bc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ffbc4b-38e7-4ee6-a794-50c35de19b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad6997-e3f8-41ea-a997-8202d3c61ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b449236-6cca-495f-ac6c-4f9cab9704ea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be89f9d8-b504-4506-898b-ca68dda6c0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d399f932-a939-45c0-9c5d-9b122e55fed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e5fc4b-9375-40d5-82f6-ccd9cef65f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9ae9f4-a2ae-4374-8bdc-3cc3e26951cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64c5ab3-3b62-4a30-b88e-4eab313d4602",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dacd11b-ef64-4d11-a7c4-47b6c98a6329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385a7bc1-dcfb-41be-8416-13f3172ccea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3fb493-0dc5-4b6f-b0d6-b3492fdeb817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2cf94f-6c87-4046-ae8d-a74c49dab8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b06c2ac-eb9c-44c0-a2d1-1946721a5f60",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdcaeeb-056b-458f-80f4-1418ae7babd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b43b4a-5a02-4a2f-afd2-f2c15992c09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9617f16b-4823-4355-adbb-4d73e7fbff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db0b3d0-15cb-4a6f-8605-ed48372512cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3bdfe7-30d4-4425-8783-54eb9af30a31",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1a5b2d-32fb-47d2-98fe-82e6dafb2943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f87501-de24-49f2-a858-9454bb9dac8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ff743f-5e24-450b-8d98-ea82724a08e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd3811f-b82a-45e0-b9e3-66f46d0e00e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d0d1a3-bc3c-4740-ba1c-6a460a811236",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9398818d-9e0e-433d-93d6-8b0851fd2329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05df9e69-4fff-49a2-9945-a2b985c0d29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65aa9f8-96b0-4a98-a343-22ad9ae8b2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e63472ad-3b9e-4f04-815b-8ffbb6a28a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85473a14-2e7d-4cfc-a35e-7f040cd89a38",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561ff22a-09ab-4246-b257-3d947bc12d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10bc328-0432-440f-9241-6184960ba7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48664511-ec5d-4054-8419-55f98b1a708e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9277201c-c7b8-44b9-a0de-3ff1f714bd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab45452-39a2-4d8b-9eae-31cace044717",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d12a0e-42b6-41e0-85e2-4cc662c60d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e26c7c-127f-40a1-8a64-d7961619dc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8538ac8-d200-4b38-8bff-da61fb015336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad87cba8-b1bb-452b-ad6b-8880dde70160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9288c506-afc3-4ec6-927c-53a193d46820",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ba046b-d455-4779-aa7f-148c70321e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39eb382d-1cb6-4cf5-a43e-a50cdfa6b818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ca9e7a-c57a-437e-9e3c-91c55581101f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7469bd66-e211-4bc4-bc8b-f6c95a8de368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af08d6c9-5294-4f6a-9233-9f7d74da82eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db92bdd1-8db5-4392-b397-5f55622198d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b5e9d3-1ece-4bb2-a030-fb5766bb5e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf14904-95b0-4e7c-8674-8f24e17cc85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7b5f5e-c02b-4353-9325-d57a194c8e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f954ce-0314-470a-85b6-dee7aa8bad45",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d088ff3-56cd-4770-8c54-4e1096ba87a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7796f223-a5e9-4c80-b30d-9a06bae784d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25e7baf-2bf5-4092-a631-7df36094ba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa62483-bbd8-4eae-a885-9fb7edd69353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3c49ce-713f-4dd2-9266-10c6cac50bb0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9122cf2c-544a-4a68-a399-ec84d00f30b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7197a357-b9dc-4d9e-b5cc-078204cdc071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baca980c-a5fe-434a-9a03-475c9e65522c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef98a18-2b02-431e-af54-64826119d450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9db8775-b21e-421f-a2cc-3659e1e070ba",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f414fd-3721-4641-9efc-9343ff09d62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40869cc6-709d-4611-9aa9-ebae07c314b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a164db3-c839-42f3-803d-c2fc1ebac614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d6a33d-d8ce-42e1-9147-d89b8816cc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6014deb-fdfb-47ec-a2b0-ad849ea58cc9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e369e5f4-c8fb-4d59-8304-a968dc608a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b1da21-0e8e-4031-bef4-06d3826b63c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd00f11-c3a9-41b5-96fd-e5b28440be23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41c92449-3478-411f-be45-372a275caab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096e11cc-a38d-4985-9544-e73e5cb2704b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fde7aa-b07b-472a-acc3-f29d16c53626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e04ffa-867f-4970-956b-67990ee03d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d471f0-1480-4353-acbb-03cc7a8e4c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9411526e-702d-4903-a34d-2ced27187462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275bde29-a690-45ea-909a-fbca7c4a235d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5a05e4-be2b-4788-92a9-44f2ab9a9518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee532bbd-c45a-46c2-9df0-8330fc544421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4f9ad2-bf21-4b2f-a2d7-55028548be3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eead02f-44c4-4995-bb8f-b79f6d2ffa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261472e7-6455-4a6a-ae00-5c4263405877",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dad88fa-2102-4b39-a9ff-c52a70554c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8508231f-80ab-4ba6-a0eb-f1e9fef05d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905d54d3-916c-40bf-978c-9af8e0887483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25794c15-b833-40f7-8d61-c603b3a55979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f3f97e-f4eb-4240-9339-435db64bb174",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291c6d44-d179-47cf-aabe-fdd92cc4f3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3a8a3b-60fa-47af-9616-30af7227fa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01cf38f-8b52-4ebe-92e3-33d1ac94191c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3349a77a-d0ce-4a42-ac65-5e1e6f7dd356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736215e2-fd76-4584-81cc-ab175e647a6c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698c152f-d572-455c-8f49-b704eeba88a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98873aa6-c049-4118-9009-88ea446c325a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7ea110-c5e9-4f64-ae24-bd13cdfe5f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d27dd92-91f7-46e0-8250-cd02fc2955ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c0b971-8991-4686-b17e-875acf4e8e61",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b556541a-72d3-4ded-9112-2462a2bb9620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258bcbf6-f9f6-4a43-a08e-310cfcb5c4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e312199d-8bcf-434d-b767-a9c681369640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0141c891-7393-481e-aa11-e80cbe02a129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a832b32-6ac5-4d3b-8c14-0ec863ec520d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc07b125-0593-44d1-bcba-3af1b4e684e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004b4877-6e51-4cdc-804a-7b610c948129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a3cf43-5d00-4478-a231-06e431b9466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "821f9c1f-a0c1-44c4-bbf4-359b35fd018b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1354c016-a3ee-4a8f-93b4-2381c2fd39ea",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2dd732-a6c6-45f1-970b-0de49773ea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac23d7e-4e40-405b-8e9c-f43251263617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029eb0c7-264c-420d-ad2f-3365a5807578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e5bd72-7ef7-45aa-bc69-ad7a9c83d633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3137d888-95af-4b3e-bb18-367b0449fa35",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c6f299-f39b-468d-a159-25253b6c3e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035198e1-2bb3-4fbd-8a5c-340b89985ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5b2a4c-df77-4b38-9aff-94b4d589c3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ec60e7-2a4c-4145-8d44-0753ae1adbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d870fc00-c891-4858-b2e6-f8a45bf46158",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254ddc9d-5664-42f5-a867-ff421c0f11b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc10fe4-ee70-479e-9164-e3ca1f61f2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86c0446-370a-4923-8200-78fddfaaed51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "780028b4-0b13-4235-99c6-ebf31ccc1838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ee60d8-4386-411f-a3d5-e485900c24bc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62e63d8-a2f5-4855-b567-c34adec6be1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3323f3ef-92b1-4f0e-b956-a27581835350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b685bec-90b8-4f80-aa55-3aa40d6d6ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1615d88b-c53f-4b17-bb6e-5f4b5a6f3b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df24ee4-5f39-4dcf-9ec1-0bed92af315f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab626bb-a51e-4b50-ae14-919c46fab7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0cd58b-9cd1-4727-ad99-94fc70d84353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a7a12e-4deb-49b7-8018-870d47654584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35922f0e-3757-4cf5-a1f8-3069e24343de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b66ee4-890a-455b-85f5-2c9122823bd2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adea22c-4437-4e61-8893-9fc6fde9fa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ebcf0f-a137-468c-be2e-9d3232576fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f45d8b-f566-4139-b1b9-55ad0970780c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "880e4da3-3eb6-4306-95ec-57d011132990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc521a7-b67f-4a46-9056-97064189d17b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0eebcf-7b0a-4e36-8446-be9244155988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd458045-a628-448d-8bcf-a7cda3fb1b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f4f5d2-5dd5-4fcd-b916-4247d054a409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd33784c-a2e7-4ff2-b65c-51dee072948b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "882afec1-1065-4f8e-a99d-6d3b35ba7755",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b8b380e-2266-4a89-aba4-ee52bd115158",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d2520-635d-4ffc-9ab2-a4e3f8d7cc44",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "959d7256-09aa-4858-be51-88225da26455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f871e3a-dfb9-4d77-b8f1-fa1b4d801bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edff829e-6437-4b5e-a1ce-94cec8db1b6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b1369be-c0a3-4af2-a985-d7ec36694e8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bf41f20-63b4-451f-84ff-455df24930bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b074916-de23-4f68-afc1-5c2f86ed270f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5110a504-e185-4862-8107-c20c395a6a7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "373ce8f1-5856-4134-8515-f9435e876638",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60b4401d-0624-4e66-8fe7-bf85a737c760"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1a0923c-7f90-4573-9153-64732fddeeee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0d1f509-8b00-40b8-bde0-f299b1cc042a"
            }
          }
        ]
      },
      {
        "id": "4913bba7-3f02-4917-8d62-20894b50a156",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "efc01055-8c52-4feb-945c-88dd939121ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5b6085e-51d3-48e5-ae43-8af122274130",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c544e616-0a66-4caa-a24a-38fb9662913b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2272c076-4f17-4fb9-a632-7923f63bfda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6cbb49-20d4-4317-ac93-e4657003df09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba21125-dad6-4b81-bb87-a83f90bc746e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0a003c-e40f-459c-bb06-04fb050ac729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785d5bbe-ae16-4eb2-84a0-35f14ef57ead",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf21c719-958d-400b-949d-da4df9aa66ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611d5a6c-1fa6-4b3f-9d2f-6f75ee3234c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d9198a-23fe-4d0e-92aa-123aadb5492c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46db5b3e-b790-4121-99cc-d6e71c8cb91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3445a5-11fc-4261-b141-74bf2cf4e57b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17926a0e-9122-41a4-9a5e-303eab175e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d49f0d-8fa7-4ea8-ab8f-015fd6e08371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0451f55b-f5ee-47ff-b212-3c5a16a17da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b5db92-6f21-458b-bdad-68b5b957d9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e946790a-326c-4802-998d-b33feeb3ed25",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ddd7c-4c01-487c-8dfb-80c79b8dc45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239f9a8f-eca5-440d-85bc-4031832dbee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f89382f-ef46-489d-99de-2710561a0ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58de8efe-661d-4146-97e1-00c23e5be39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425bb130-7ba1-4895-bddb-b10bf04d3270",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257ffc1d-decb-4cb9-a2f8-f83ab827aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c695db36-7269-4ab3-8a52-d898413c01a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f749ab-5818-43f1-a8bd-da81d4cbb951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54890c67-5d12-48bc-bc6f-9e3325ca1b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0956f736-3395-42a8-95ca-b5c24419f68f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3c75fd-ea7f-45bf-a815-96938900d6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654be93f-b155-43ee-9c4d-786c30037e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61622f29-8e5a-4b2f-99fa-718ff1c1a167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab34180-f6d3-48b4-bdb1-5c9494688344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8617ad3-baea-46e3-8ba6-4c798ceca422",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65084ba5-de3b-4534-bd58-9044c8155c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a532357c-4214-46c2-849d-a97cabd7af4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1aa514-7425-401d-9811-b1a33adf1057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad0fc60-dea3-4a77-8d47-ce5600653b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a89e73-67f7-47b0-9f35-b0739d8b13b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa75a35-aa23-4132-aa56-bd08ba2d65fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b84a232-f48d-4152-bb43-97e0815fc291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba7722b-7acb-4576-bc76-bcc5a54b61db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df025ab7-5d35-4077-829a-31ac1d30f054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3263c1e-c3ce-425b-8c1b-6c0551f45bd8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaa9f82-aab1-4867-aca7-c6e4c9bf13b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2979e0e4-6116-4722-98e2-c1d244f03696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9c9339-0f78-4d9a-b858-b61c84a62fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a09e8cdc-b344-4cf1-8e7e-ddd4295876b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e704fb3-cb15-47b1-a0b6-4b56a62d992a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7b294e-12ba-41a7-8079-4da935a362d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70c9101-a246-4649-b4d1-399fc505638c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a9690c-6b0e-445e-a77a-fea03bce26d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b74669-6b91-4a6a-8d49-8babe869f1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2208106-2044-4ae6-95e0-72f2e4bd4993",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0331b4b-bf0e-4de4-8644-52a1a9a2d82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8839d300-1664-4614-858a-52652ed51853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7dc3b8-4bfb-404d-a374-f51c89f081c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "661ed7a9-4412-437d-ba1f-cd47990dab7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd16ed1-49c8-4a6b-bcc4-1ba2f019fb49",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83af7cc6-efb3-4e90-aa15-922aed8d1a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef766e1-13b3-4c0f-80ea-a37f394f0ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c835ac0c-1540-4e07-8d06-959b9ca301c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca59a47-f873-40e4-a163-0a107f8e2936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc37bc92-20b9-4023-b2d5-89b69b93e142",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3932a433-a7b5-43c3-8f71-191799cd1a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaabc92-fe5a-4d06-bd1f-6d400b03acbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf34e71-dedc-44e0-8b78-a0db6b36c2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfd1b8d-1506-4dc5-92a6-eb802b0a40c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af9c193-4abe-4bbf-b630-4e3177420a18",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a6731e-0783-4b22-89fc-6f3e5059e215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e77594-2ec8-4b76-8232-8818d7077ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b34d73-775d-440b-bccb-e392e3897a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a688ae-f2c0-4f1f-ac4e-699b6269ff3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6ca8d3-4c45-4103-bad6-ee7379b4b8e1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d60a154-9970-4dd6-bc44-abd2109e35bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9742794b-0ebc-4a57-8e02-d1cbd580c57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3075fdf-f5ff-4d73-b8c1-e824b50cec81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "10818749-951e-424c-9d14-2e0ac7ad4957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0abdd64-1a96-4a09-999f-6363867d231a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66f3029-4f5c-466a-a378-e58b9bf8d328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af40571a-b102-408d-b424-7359a76301bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a3e8f6-4c0e-4b62-bdd8-cea6bfda9a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "61063d96-5d07-48a8-b9a1-ab329d126409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0d8fb1-0cb4-4eac-8f71-de4ddd88053b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fbda97-6946-4b29-bbec-a52257e24701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e62b10-482a-4ce0-828c-5c0dd774d7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e7281e-5805-4593-8d78-eb52c0b9a8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c75e226e-9f87-441c-8666-9b82908064f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e42f19-a60e-4a1d-ac73-2df0ba0f2237",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feefa274-5c5d-4007-a35a-b913af4b93d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552b6da0-543a-4b9c-8851-6e50d5d1e992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a8f533-7b64-4dcb-8abc-dfe0d2fefc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9155571b-c8ae-4640-b42a-920a46fca62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ae94af-4a6a-4af9-b23c-8130f681db2d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51219f7-cf55-4c6b-824e-c5742a420ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c68d114-3fc0-4c28-b90c-b8dc36d00378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0001aded-4fc6-430d-b485-83ce0d128cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcfd360-c797-4ef5-9974-fc33ea0b70eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3fdec6-477f-47cc-ad2d-b2bd1838fc57",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55d6ceb-6488-4609-8efe-ec06b396c813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4ab59d-441e-4191-b9d1-2b987af56716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84563bb1-445c-439e-81c0-8f718467bfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c570053e-09c3-4378-bc44-f87c2127ef05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd996754-7a27-4d3e-bd44-3925ae9f7aa7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db408d1-a961-4a24-8408-139a5ee0eaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a93dd5e-fdcd-418c-a87c-295abdf5397f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d147b010-7b64-4aa5-9991-663ecbfb0ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7150d36a-01e5-47c8-8e5d-fb45018dbd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179d8be7-1d8c-4e55-bb1e-973bc7426e1a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4b9e01-b594-4c31-97de-065429ddd3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd09c882-e65f-46ed-8f17-d447e910ab2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb434e7-0478-4481-a63a-26dcfeb6f697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d6c2ea-69eb-4826-bf3d-a8c3b0f0a29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bae8dd8-e106-4c41-9512-c946f74120c0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b01a2aa-1d32-4d93-ade7-6f8d40ac90d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76269431-38eb-4853-a5f8-162e424c1610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae39de-d87b-4ba0-9184-793a2a46de12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "123039c7-4ca3-4c55-9961-f6b2a79857a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319b336f-27c9-4ff4-b739-c02eae43750a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3584f02-d8e8-46d8-9e31-63d6468eaa9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f8f091-9ed7-4ccc-b29d-42b6d39723a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc882384-0b30-4489-8297-0e6a12738cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d70b134-7018-47ad-9b69-30e716374432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec0757c-673a-408e-8af8-d2188469492a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641205d4-e8e6-40d8-8bcb-2df6e92e6c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f444be6-5d81-458c-9598-ea4fb8613a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611ed70f-dca3-45ca-98f2-ddac903a618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a96800a-d30d-41fc-8689-946607a7cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b456f1d1-26f9-404f-a530-6e559f03d168",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8119e54-6654-4ab0-aa44-30a7f08277c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497447ba-25e5-4365-bccc-4f79591dbbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897a548d-b251-41ac-a3de-78d069a70945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e68dda8-7296-4065-8f53-a8fb73613679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bc4e64-1de9-48b4-810d-15b4d19b5643",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f938a6-f09f-483e-b624-7b31f1588b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b212966-8529-4b8d-8e26-58e3088c552f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e15f15-ebe6-4d37-87f6-fd54e068c24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b475bb94-91e2-40e2-ba07-3df3a29b47ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1b652c-b756-45af-aa17-6254f5182ee4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fb63ee-98cd-4c37-aae5-06aa2a0d6a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8742ce57-4660-4657-bcf4-b54c5e94a08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945e886a-573c-4e37-8352-2b2a397b036e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b652f4-6e92-40c3-9012-1c8171ffe474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd96d1e6-5b32-4edf-a57f-017a69b3115a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6dbef0-6f34-476b-a379-d7e81123c18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c00f9a2-f3c8-4e9e-932b-0b96f8816fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1572ae-4b43-4cf8-aab4-76a52cbfcd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8c9d13-7ef1-4902-8779-b798d5962f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae1e954-8a50-400d-9da4-98816442e91a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d703b6c-3bb4-417c-b47a-91f0e75ca196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9481be1b-4ad6-43ae-887e-131f8adbef48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c4d68c-7153-47a0-b30e-f29fecab99d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75b672a-da09-43f2-aa1e-8d6321abe65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b082b788-9161-4974-a97d-1a871e6785fa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a39fdd-6abc-45f5-85c8-c74b39f99285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0271d663-ea6a-4f09-9d9c-223fc89731ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed194935-6364-416e-b012-950c56f84abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b32c12-80eb-4c02-bdda-db407d4865b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024b26ab-aaa2-4139-80b9-c781506f53d4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406054d8-a60c-40a9-be82-5820149ed18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7f8399-b14c-41af-9d5d-f0b11bb794b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8e52f1-0603-4495-97ac-7cfa55d471e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c14573-df8e-400f-92b2-adbb9152f9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f409ddfd-07b4-48cf-b89a-7b0b62bc5373",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefa4a2c-359c-4f26-a14b-f697186262ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efec4f1f-1f48-4cca-aea1-5e906d9e5bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b43823f-f5b0-4aaf-ae69-6e9b7c3a678c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9b0b80-3954-4a53-88da-f120258bd19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09ae054-984d-4596-831a-72a0b07ffd71",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0c697f-c476-494e-9415-871d6e75265e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3335467-90c0-41e4-b34d-0329f75b26ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497ccdfa-1f48-44e3-b733-3a7071547ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75476df0-73f8-4e23-9a1b-5662cc340d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e53bc93-a5a3-4d13-b7a4-8b5b363a78e0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdc3387-559c-4098-99bb-ed34ede9f36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e970fcab-34f0-44d6-b0d9-54945cb05a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ffe662-5034-4a18-a8f4-cc85bc707f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d71f3ae4-e93c-4a0c-9bc8-2199ad881d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a270b4-1696-46f5-a2f4-14589ca7bb6b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43db7c90-3313-46a4-bd74-dbb23f737801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fe103b-12a3-488d-8d8e-891822c062d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ee271d-f107-4069-897a-828bd1d2455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd23363c-6126-4779-bc8c-59e543300ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c560360-4250-4d37-b788-021b6ecaa0d4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14481d6-2839-4f72-92be-592d48bd87c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76b17c9-dee4-45f8-b774-657fbe719ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227d9042-4384-4f4d-b88a-4d7f527469ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08540847-805a-489d-9475-d0fb06b18f3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab52c380-cf9e-4e51-b364-f746ea446f13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86ffa131-3e3c-4a39-936b-e7f750e317f5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83d6485-f146-46b3-926b-011c5753675a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32e44492-3e42-40c2-ba8e-b785f7c1e0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c79a31a-eb58-48fc-a649-9f32e36791c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5165bb4e-ded5-493a-aa9d-84070ca30265"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4a2f4af-3cde-4abc-b4c0-43e6735aaa5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "554d8ded-d7d9-4fb7-bdf6-ea7d165de592"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f06e1e81-08a4-4f61-b43b-d1ee6ba9454b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cfbccb2-97dc-41c4-b599-b03fe9d5131a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d93ad8ea-85f7-431c-bc58-726cbda6fe0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc37b31a-1376-4095-a277-894620b61d82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b685987-335e-4747-9e37-47b645dc450a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55794c99-8a18-48a9-8f1f-9f0a52e0fa61"
            }
          }
        ]
      },
      {
        "id": "e2795910-99c1-4b3d-9746-0abe2b3d319c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "79cb977d-e030-4c33-9fbb-255133e270eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb3dd3f0-2b68-40f4-8d7b-5a53e622026b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d0fd90b-dd2a-4147-b474-7acf44466db5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd10ca19-92d9-4d7c-a34c-26c963559767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2979a564-92b4-4a34-b311-1b180431b877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43171ab3-f90c-4398-852a-71d5de5bbfc9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc86462-340e-49b6-ba9a-5881a1eeb6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f11ec4e-e568-45f6-b126-7f96d941b527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570add3a-6753-419d-9fe5-e4d7114e1d95",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b650aee5-b916-4635-a290-8b04ad6c1605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a9ba1f-b569-481f-9639-7a429de41640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9d1837-7c21-4785-bdfa-4b19a535bb8a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95624eed-d51c-4547-beec-2c67a6dad995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5178f1-92b0-42c5-b661-dd5b95c201a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdec1e16-e48a-4e3d-aff0-57bb74f1228c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d4ac8e-51d2-45be-81fd-28f64d013be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b313bb9e-5af5-4172-a072-26d091d844e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011ee50f-72ef-4f1d-9587-850655a7b66f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940fdd7c-ffe3-4ac3-8aaf-9108d2d3252e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8a5587-5b48-42ff-a940-cfe0da9b911a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a290e5-382a-42ec-9ce7-e33afa9aa60b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ccbcfa-9ae6-4eda-92cd-171985a301ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb8c575-ddc0-4447-a0ee-4f0cce51667b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa1423b-5596-4539-bd36-6b4e71778033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1091205-144f-40c4-9385-efe7ecb39ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f06d446-7c61-4f87-929d-0e2f12d80a88",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d6a7f8-09d2-4274-990a-f500bf7f0cfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6903c4a5-ba65-49f8-aba3-29e0dd27eb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61eee61-8239-48c2-ac70-ed73ece7316c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5246a5-4a54-42e1-b57d-505f3ca33b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec070be0-c886-4d69-9188-61229c410a90",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e548b2c8-b6ea-4836-8d7a-4daf8241f61f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "586fe0f0-4401-419d-a748-1ce0022011a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59279c1-93d4-4de3-bf7f-5e78227fad82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3305e7e-60c1-4615-a5a6-e493dd8e5c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e967e0-f8bf-410f-95d0-a489f6599d80",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7051f3-1d5f-42c3-8d5f-7b754d3abbb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ea7d77-9bf7-42d7-b753-31dd4684a3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166a71a2-73ba-41e2-8a55-43c8f9acf8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38be6a90-4882-4cc2-8c1e-0a13f9357d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21084b62-ec53-40fd-b7cf-3e8ad69533dd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e1d067-f629-440b-bb2b-28463075d1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3706833-779d-46dd-8a0f-3ee50202d0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d8f16d-9e16-4ecf-bee0-9edc9c709761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749886cb-86e6-411c-a8e9-93a37bdafa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804fe4c5-d72e-4ea3-a852-937591436ec5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a8edc2-34bc-48e8-b2c5-219d693619d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3325ed73-1eba-4c56-a12e-f1d56e3245b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3487ee65-dc91-43d0-9501-5c559a7a133c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae5451b-83b5-4f75-87c5-97f83f6f0230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c08bef-d2e1-48aa-9ca5-9974dddb0a78",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ef8efd-1dca-4ad0-89c7-50cd070b49ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eb35c33-a08d-41b0-92fa-482c206333a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65896090-3730-4fa7-9100-7d5384d54300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7fdcc0-f3e7-4a20-9e61-ae7231161975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afb5c3e-3a70-4416-ba36-febfdf27665f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355dd660-60d4-42b7-b678-e609d8901d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0395bbb-8180-43c9-9e3e-5cb7a4159a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22b744b-1b9b-465e-a72e-2bdc369ef6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1953c7b5-65bd-4058-9d18-c3b90e570edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada7c173-9272-4196-8892-1ab79495eef7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3398cd-1f40-4411-b3c8-8af036ebf343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d00ec8c-e6b2-4297-a507-428c93e65f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777aaf4f-4130-4d73-b355-cc01722026a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62673728-a527-4fda-851e-1270a6b0d611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a217ce-9e1b-44da-9b12-bf95d8607309",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b859f19-af19-437d-8720-9505ec1855a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a4a6be-f3c3-44d6-a04a-fd9d18e15142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09fa6c7-6f5c-4fa2-821b-c6e2fc0232fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec8098f-d2ef-4559-9a26-cd6957114efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc3d220-d4c7-4d22-9c5e-c6c85a917c4b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d974f0-dbac-4577-a27a-37b7f6076ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b8dbd3-9392-4eb1-aa04-e913ea7b120d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93d7a5a-d6e4-4bbb-a737-ecd715f166a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1514258d-33b1-43ae-815d-eb3bce5b7bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a08a5b8-9717-4ba6-8dcc-32bb85498e90",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c1eaad-5439-453c-832f-cc80d7153952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115296c6-813b-43b1-808b-7e3ba94bf881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc11166e-0bee-4471-a684-2362fad40bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cd7da2-eb05-4e5d-b296-54fcde7c0624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a58fc3-d42d-4d97-a3b9-a7702c00297a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f48572-98c8-4b91-85d0-45159980cb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080eda7c-3af3-4534-92b1-147a76de8b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b338f124-4f8f-4de6-8db1-479143d46856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b2734e-cdd4-4724-9888-c4d7f87a6dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361e3065-9f7c-4a8a-8af9-adc4d0e16901",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9bf88d-3015-4a2d-8d97-48537e457480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0563bd1d-bd48-4304-8d09-b94a27663cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0c61e6-ade3-4224-8b10-c280f3c8efee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffddb56-09fd-4738-b54d-9e6902dccf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a278b332-ad6e-4e05-8a63-88f10cbd7a57",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6dccc1-18a3-477b-bf92-3c7f13a171e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf18889-2b20-4d62-8065-ed3f2a157509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b94868c-4520-47a7-8592-e295be4f3d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b07c47-d54e-4445-bbb9-51424e703782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6114fa-f38e-468d-afd4-9c8dbd83c1b4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de6967f-b7c7-43d0-bda6-4a73d2fb87e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d642b1c8-33f3-41e8-9ec3-dc4960b90be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98338796-2421-4bc6-be4b-f10df22c335f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652cc7b8-292f-4db9-a45e-62c811376bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9aea3e-fa1a-42b2-9bfe-704da27a8267",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be197e57-7baa-45ec-8c92-20cd3b1c4105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5595fc19-868b-4678-b148-f2a713d74892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fee59b-29dd-462f-8631-b231b0affd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c093288-15a1-4eb2-b745-8a0fb5f0c3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6730c3ed-a5fc-4979-9584-32f62de8475f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb78447-25e1-49ee-bbd5-8956eb61bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1017a404-8aaf-4746-8aea-53f0c809cccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a8cbb6-d5ee-4c49-8e55-afe07e751186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf114fd-5120-4012-9973-e7ca44144274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaf6f1e-fd50-41dc-9242-17eac8f8f795",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9f7469-8cec-4060-a1bb-de0b4cbf97ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee1b701-5ca8-4f2f-828a-5906492aba7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46270ff-cf67-4051-bc7f-e9832175e9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97710a4-67a5-4018-ba03-9724c7686ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ae2fce-4cd8-470a-b7b0-a69c6bdeebc2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9282f6b-9ce9-4493-8eaa-69142045959f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8844699-cf49-4374-968e-d9d5beedfc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c15693-fbb9-4d96-a486-df5977fd57b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb1b871-6364-440b-8964-acb53d7d9ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff3d5af-afdb-4013-9616-78db2ac44330",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbddc50-d9e7-42d4-8735-2c574859937a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62920011-c77b-4f36-917c-a0ae7a82c650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a002d9d-2989-4157-9f9e-886dc40efba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49a005a-9f0a-4bfe-b680-8cef3b96ac31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f8b0f5-18cf-4bea-bcb8-e3c0a7a8fabf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aceba1-d2b7-48bc-8cfd-c9e1201c8473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63935012-a07f-48f4-9060-61edc2e55698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fedbf9-b4ba-4c6a-a4b5-88e88c5ec083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c693d0d9-ef5d-460f-b8b4-0fb9793043d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce56caf-91bf-4ce4-87b1-68cba398e227",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d2489e-66ea-4c06-b424-040480c0ebf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05239024-63c5-4a40-947e-49fd9e4e739a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ff25a1-1369-48ad-9141-482848f35d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb3c78d-acdd-41e1-bba6-11143bc52126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdae8063-0615-42a2-9120-04ffb2b305fd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6221f2ce-28e1-42ec-a726-e75c66be1cff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f641df3b-2b57-436e-8416-d7a92c3a65e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f3eac8-3a40-4c9b-9aab-fa94f6444595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ea169f-e4f4-433d-a3eb-d4a9756d22ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdf34c1-78dc-4529-8c5a-1c64be75c408",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e79bd4-4314-4b03-9a0c-72003b307fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb21c9c-a11e-46eb-9c42-b4b610564e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0cafaa-2eec-4727-8b73-521e2679f236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13f8319-795d-491d-8335-f1761a4f166a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33da0b2b-2f07-46e2-8914-e4e655f33d17",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b7c352-c702-4b08-b7d5-a0d11b6cdd98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26b54ad-df42-47b7-a1b7-eeb32d0f2a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d13a4cf-dc5f-4d32-ada6-1ea2422bf531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc64640-fb21-4a5a-aca9-9cf6bfd51a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56091d36-24b0-4570-b184-6e47da7c8dcd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d6d729-d7f5-4c06-985a-09e6622bdcbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cce99f6-2e90-4255-b8fd-62b8e12842db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38ca8d8-31a1-48ee-8e61-daa4e41f8969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfe6e05-889c-40d3-b0f9-119c4bc413c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b135fff-3f41-4507-b79e-5e36d19979b1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d424ce-b113-4516-9919-15a23a6f86d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cce1220-4da6-4f90-ad8b-2cb13a868adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d672ab42-2711-4f8c-a248-67c11b365663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3435aa7-6455-4a7f-af89-90d11d4f0b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3e2af2-e65e-46a1-8c70-fdea616e40be",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8169b0-b4e9-4086-8d99-6d89f2ac819e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621f2c65-d8d4-4e30-894d-21897f0c5a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2f5a51-c573-4973-ab71-fffbfedc6e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18187224-bca1-47c0-a210-2e85f68f11db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce37184-87bd-44cf-9da8-664db48cbe78",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783f1d1e-b0ba-4e3c-9c26-22a68f7b44e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf54ba0-adb4-4a21-aabf-3b0f4c525d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44803048-ff92-4a5f-80f3-9e81f899b94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0554895f-7181-42e3-a0de-9500bd3e26e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e833e3e0-464b-4018-8c65-00d42e014c0b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8394989-6a7d-499d-aa97-243a94b77b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9655e2-1d7d-4079-a834-fdd45ca5a9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fbe16e-eb2b-4dcd-b9c6-8026fc1e6bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f64f406-8e5f-47a5-97dd-ce67f98b3691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d032ee32-cb5f-47ff-85c4-f8f4ebbb40d5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3bfdcd-b98a-4544-961c-cfefe22c150a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813d4d4e-7753-40d4-af2a-59351880a78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57916859-a25b-4e7e-b750-ae2aff90fba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afea1ac6-50cf-419b-89b4-5c1e9f1f0fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba803960-86a7-4a7b-9c08-4907bbce6dbc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb975132-9cca-4468-b72c-ebba93c44885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11dec3e-8193-4246-9fee-fa40f3b79797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71fc0ab-9552-4eb5-8177-947188675a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878e0642-7684-4bd7-ac7f-d757833786aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4b1bec-e537-45ac-afc2-5776abc9cbcf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0014bb85-c7a6-45c6-8cc1-8124de0b0763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c664dd2e-4913-4510-8e96-f835a08ba351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2e1b2b-fbff-46d4-8075-a215378bf9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2179ef8-51ab-40f9-91f0-6795290a518c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eed594-a3d8-4925-a115-f5da3d603fa6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ddd50e-73a5-47a2-bf74-8c962865bd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef990c8-30fe-4082-88b9-4b1efea50167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beade025-4430-4d9c-91ad-4c44c6fbee5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28c6b71-252c-4f91-afd5-ad331a088e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b36f15-87d8-4f74-8592-a39e1dea88ff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7d02a1-ecec-41e1-9673-c9f00f6ae665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117fb798-758c-4137-8e88-1d7a7189e70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a84a7a2-cb48-4654-a2ed-e5ce18e9b23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec487f72-34a9-48ff-8962-f2fc45d8f511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fc51f7-7b0f-490e-8682-4f342acaf88d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91019c8-adec-4d53-8a0c-5404d3c347b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f88f83-274b-4e87-ad8a-5557fee88994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858245fa-29f9-4611-9f7b-a677aeeed7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7d97a2-dec8-44b5-94d2-9b3b6abf0fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dcbba9-6d40-455d-82a5-88a8196f7d15",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c0dba8-b8e5-4cdc-8256-d4a11ba9c339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ed5584-4f9d-498f-8719-b7fdf5276d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbd5762-44ea-4115-b961-68f89089b949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6870e722-3783-4dae-80b6-3be58d81a439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba22bb2d-4cf8-4467-af3b-69beb0fa692b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68956435-3a22-47ac-8b2e-1fcf19bbad2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4859f92c-037e-4e7e-be2a-f2ce81538fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ca4528-2297-4a28-9db2-dba4b561d60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e0816b-ff8c-4386-a2ac-25c6810e8c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d2788e-98a4-4a04-b1ec-72a2828af3f8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e81408-d390-457c-9e5d-91221d1fae24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e31b01-d6aa-4aa7-8a6c-c6e3e3fd273d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca9df58-0c54-4fa7-bc9f-cbe448de8822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86508820-2fb4-442e-a09b-0904f0509645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cb55e4-06ae-4813-b6df-8570d332c919",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef296aa-ac56-4942-9a91-429acc93ce15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f266b68-cdcd-4dd0-9a91-79fbb7604bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6400566-a80c-4da5-b663-f0fed88e3f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b36476a-a4db-4267-9623-583a30041cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83d7019-b18b-4806-8695-f072c7ce389b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c959c289-fd38-44c5-9614-d164d531dfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6626ae06-d851-455a-84d3-34da9c6b1213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6987760-aaa7-417c-8328-eff1d008314a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a8ed9f-90f4-4d34-bb01-09c7003bd9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd47f90-3635-4756-b79e-34fc0c0d07d9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced1fe8-4195-4d3e-9ce3-dc7ff2e5f44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6f9d94-9e8e-4296-84d8-c1d53ddc7101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a4c26b-07c4-40a1-80be-3d19e0d48e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4038480c-ef97-4f22-a939-d19e20f4b3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccf17bb-2816-4ee3-b1c4-7ee792982f29",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6c063a-ddf7-4329-a09c-4088b340abe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5da1a6-95b7-4c2e-b3e1-6c1d62e0250b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581537a0-3b25-4f34-bf1d-0d65cb49dba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f112945-0866-4594-8ead-d1cb285acc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88344bc-b7c9-4269-a78e-183662d1c906",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1005da66-4810-4147-b63e-b74c8621178f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e23d443-0463-4e37-a43b-74b9b70cb7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2b1ac5-50ee-4bde-9b0b-6f674ce2acaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d01a39-13cf-4627-90b7-f092f1bb28e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ad77b1-6e3d-47fb-969f-51be187d1d6d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904667a3-3468-4283-94f8-eaba2257229f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf7ba16-0688-44e4-ae0a-b312544e7c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d911979-a863-4c9b-b22f-e80a5650ff6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ec140e-0d0a-420e-8f9c-bbdfe140abe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388638fe-eeb0-4043-8b0a-120ddbe9cbee",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf56a52-68a7-4d94-adf0-3b6333f79216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e362869-fb2c-4cad-bb17-6a7699151677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0daacb-560b-48cb-aee3-f49ce12dfd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f7bdd2-8d8a-48ab-abd8-bda0c6e83276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c809f6-9fec-4acb-a39c-fd478e422d95",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7640f73b-a106-462e-91ea-1525ad0cb40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf7281b-22ea-4eed-8594-5a5b5e97221d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3627b749-b2bf-4504-bd01-38a6ad2c7485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af80977b-eb0f-4092-a69e-dad979182968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bee65d5-4a8b-4920-bccf-d9f490ba403f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadf7341-f71d-4b3e-9b82-5cbffb264fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0161d36-a82c-4046-a14a-0cda0c7b634f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1cd51f-c228-4194-bcc0-7c79000c69f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a9b329-2b84-4935-bb38-a519ae1f6666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e8f45c-85c8-4e79-809e-5e78d0f2c0db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be50dd9-477b-4667-a98b-43ca3f76c561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353c608e-d7b5-484f-83ce-3e91d8c9c62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9480a4-1d61-4729-b734-f025f96b6bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d247558-2b78-4f28-8fb0-51d54ab5bc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7f914f-8c85-4f26-896e-8a047078f201",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6851b416-f6b5-42a5-8779-46d79945e66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daef5470-8a0a-44e3-8a57-cf17fb7d82bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d88d1e-9916-4531-b1d3-2dfa4919255b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85df77f-45a1-435d-b49b-4961b86232a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56ba452-b0a4-4b06-964b-5a2560ae0576",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d364a9-f1d5-4a95-9a24-a51ffd52919a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2146202-5ea2-44ba-9c10-3c46ac5ecd9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2618dece-482f-4c54-a3d9-fd8df7d79333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c93194-0bb0-418d-ab9a-c0b9f45db057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c43fc8a-e360-47aa-81c5-3869aad76413",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc820568-ec15-4675-9816-49deadd4326a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2498f220-d1cd-4d15-a5fe-bb6b6798b59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45734b99-f327-4cfa-842f-f8dd2ec4bc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c0538f-c894-46ef-86a5-996c19a935b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bbc650-2a95-4ed3-b528-5032b2987260",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86e35ff-7787-419b-ac16-c6a0cf7deee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f51b40-003b-49d1-b0c8-2cceef866c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d488e3-bc06-42a9-8ca0-17d74a93550b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e473898-f3bf-45a9-9283-08edec2392b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47b3df4-9ab5-4326-8d34-f1edcd6d4354",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012300e9-b7af-40e7-9d3c-8691e35130f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3992a8-2a26-4904-bb68-72b473599db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b554fc-dd6c-4511-8381-111224db0c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f818a0d7-48a2-436d-ba69-1a79929b6caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc13277f-008d-4f15-9ab7-0c36317dfb70",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188f6e30-6574-40a2-8e65-4e4e3e291f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2a3707-1a56-4ffd-8658-a08b9d7c1605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1225b9c-e2bb-4e98-90c7-6a2363337878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f647c341-db21-4c85-9a4d-cfc48edbe6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20adefe9-e91f-4158-9419-8b1cb0c1f6d6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ab7d6c-a157-4363-a9a2-26ff2643acf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dbc052-3a41-40d2-9f2a-3860fb906ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a27201-9c3c-4327-a333-cbb7891aea25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b344e37-3dc2-410e-be1b-e2b36de6bdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d53785-7654-45cd-b8fc-006a4c0c57d8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b73f854-606a-4d52-baff-a8969e0dbd1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8783675-2595-48fa-9b5b-b279a816265b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9118cd75-a9dd-4c2e-86ae-aef4e0db6aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6275b992-1e5a-4280-b214-c609799d5bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be5f0fd-fc50-4908-a7ab-e82c31c6af63",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589bbf74-3e92-411b-97a8-32fb00fc5c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc50a4e-2b90-4c76-b134-d326713b2c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4ccfc7-dd3d-4c20-a6cf-50a83169346d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7b8fd1-e9d4-4407-b95a-ba84c1ca0ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddba6d8-fae5-4b7f-bb59-866bb3979ff6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279c2329-b83f-4f16-9fd0-a520328af931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfafdad-0c3f-4532-947e-54cc42538c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3a4408-292c-4ef6-8eb1-a820284d9c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a66dcd-8f78-4d5a-8519-c952276349b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75201a87-3bba-44c4-a8c1-f3111e830b24",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cef5c50-c2f0-4fc2-8063-66a714de13ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa509d8-5b1e-44d5-a19c-091990f2913d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41559dd1-4da7-4688-a9c7-f542731d0465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35036e07-6a44-4ec1-952c-78e1d749aa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617972b5-c929-44cd-b605-a23d53042ff2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3560d88f-4088-4fc3-93c9-82335f317e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1092e10f-90d9-465e-9834-6d1273053175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d827679a-1084-4fe2-adc5-d4acf46896ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50cec43-e318-44e0-a8dc-b9cacb0f0865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5c2c91-138e-4e99-ae55-dcd71bb9f0d3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bbcdef-24f3-4baa-a762-eca90f8e93ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d19a18-1a56-4895-b39d-96b25323d9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a033254c-a5fa-463d-a55f-ceff815dd121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c10c956-c9c5-49d6-b43c-1ea206982835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0f68c0-2fd5-417e-b0e5-a86d249cfea7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4d2d5b-fb63-4c7a-b9e1-f4c37b32ced8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23be4d46-dab6-4492-83a6-b41a6be461f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c237929-d728-4456-89e1-3c9b6f2a3b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ee9159-a8ae-47d6-a448-e704550a97f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba49b8c1-d7d1-4921-8cbc-aeced525bf8b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f531d306-aabf-45a4-8570-75689c1517d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b3a8ac-0cdd-4145-a353-5203ad2c5b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0266e779-542a-43cd-8153-1de5e83d273f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41affb4-7e37-4bf7-a552-98ad4131e641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2da6aae-cae2-4283-870b-5dd34ea13c35",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67335133-b760-4753-9247-9afc1a084f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bab4319-8dec-4ef1-984e-0933e3e036a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d9e026-decd-4aa4-8e64-30f1b56de673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57bc65e-5b97-4985-a190-4a5e623fcf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd37f0-86da-420b-8b8a-8a8c4c3f6730",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdda51c-d55b-4b55-a036-93f011d6f928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e00f9c-78a0-465f-8888-7bb35a5b1d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063c5ee3-062a-4651-8566-5a9aac7cab89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6089acc5-6381-4907-9173-7b21a52021ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee843694-fe4f-4e98-a69a-13a6c7e6c43d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1165c9-cd31-43d8-b50a-74a51d96dce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4128ec-b3a9-4677-a7d7-548b471a0879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad31859e-25fc-4eca-ba82-9707ff673b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40721a60-cb3c-40c7-b8c7-664c31c64246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d503e0a5-664b-4ef6-9d20-43d6580a147d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deee3ce3-510c-4ab7-9bbd-95c7b9c7dc3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcfbae6f-14b5-4858-a3ae-eb541029f50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af623bb7-cee9-42ce-9cce-decd2566c40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfa9a8d-b59d-4af2-8ca9-23c4b22cb156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e969cc65-bdbd-4f9a-9013-7a3630c11826",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acada511-d352-4864-80b3-fa09b407ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd1f198e-5f69-431c-b264-9f216d236d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd21ba7-13e7-4538-8846-a18e9e37b556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffeca766-c50a-40ff-8994-f68dbab1e29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef610454-f16b-4779-921f-1f3112a832d1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06124019-b956-46b3-8a56-11b33d82f0e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e788457c-d6a8-4ba8-a87e-89ac77435dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b188528a-8e66-4a1e-bc8b-bfde3be6706f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d987dd-9a38-43d7-a02b-6032667bd23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a3cb01-b0b6-4219-8065-d466a0d74475",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e7f6b4-1baa-4fd7-a67c-bb0c7e8d6178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a37fbc8-6235-4e95-b1e2-bd92bee51a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d33b068-c674-438b-8dc7-382e6a9f9183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffec3a4-6022-46b9-93bb-d0c169caac37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a87c18-8559-4d59-bd78-98ab7cfc4dd4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c891963-c291-4e95-b7ea-e9dc4d41ccb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1355bd7-16f6-4ac9-88e2-afbd15cc7bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2079de66-5af6-4f64-bebd-328f8c8e41c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5097b81-57da-45df-a260-aa7294a86894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0f7bb2-a711-48e7-bc2b-7ca47f71c79d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5004d84a-7d39-41f2-8983-b077812cfe85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa052945-49b4-49d0-8f89-4e6c024987f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf124949-a60c-4362-9536-a03a7dc3ebba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdce6d3-8ae0-4ede-ad5b-35698446494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98029d8c-2b42-4cd3-bc8d-070e0543df4c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0dab1e-0cfa-4814-bd63-51d53de5ce34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b084576e-62a1-4eda-bcb1-d03c45a7d49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e7ee84-ffff-4c15-957a-80992cbf361f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bef0e8-afbc-41ce-9714-4ee737bb1d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afdebf7-4a27-4a45-9895-26877838fcb7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895fc96c-47a4-4beb-8dd6-cad610186416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6132d4f2-1d95-4cd2-8080-aaa2527dd993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9af13e7-5969-490d-bc52-579bb6ca1041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1893de1d-e7e5-45a0-ad38-4fdac8c53d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af6a837-db2f-4f61-8104-3f30cec11ed8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc93b7a3-461f-4711-b017-3f6692d34e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9c0f14-5e0f-488d-9acf-daee7d78ae02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dbec7d-c0e5-4092-bf1d-5dd6dea4610d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e8efea-fa6c-4692-b6d3-ce552f8061a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93174bd-488b-435b-add7-38288d35deec",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c89486-950a-4c16-b914-d48f1a6818cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879149c2-7697-4254-be30-72e92e6df5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fb743b-bf36-415c-9593-1574758976e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c4f333-ba0f-43cd-8611-8a2916c59974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e54afd0-5bb1-45c1-aa30-8a2811458b77",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c941c8-5a9e-45e2-a1ae-78fc8af55fe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20185d58-0389-4496-a451-6bc6872acb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e5e8e-3d30-45c5-965f-0f604ceff2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9984f80a-fba6-4717-8b0d-d6b03544eed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7376e5-a82f-4bbf-887b-24a22a855c79",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12b5447-20e8-45d6-8bb4-02e786e9b926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22af958-d5ee-43a7-8124-0c88757b2511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c41990-5c41-4071-8c32-1848eccdf203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018019b8-698e-4902-bc60-a7c8d71b6f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca28159f-ea9b-442c-956a-39f94108bc43",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c224bdf7-5d6b-469b-86df-baf00a94571b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79fc7471-71ec-46af-9198-df4ab7c319d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d317fe1-48eb-46e9-bad0-a1215ee7e65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb8f1d7-aab6-4016-8c03-5ffd81963cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1939c24-b4ca-4acd-b288-2e61ca7ea353",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ded5f4-786f-475f-b783-3ed63a508f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58cc391f-4f03-4fe9-9276-1743f5e8bf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20621e8-7918-405e-9d60-d5d9d4a1ae9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb3314c-54d2-44dd-ba3b-885df457ff3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1d1e34-b89b-4e90-a860-a2871f8f867e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086b4bb8-e38d-4c73-9719-812f05789fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ddfc0d6-ea7d-4606-b56b-3c493c815393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed0e634-0c97-46b7-b794-13104ae624bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa310054-6391-458d-8d6b-9ca6ecae0737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34695a3e-29f0-423f-8541-7fee21e336d8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982f764b-31f8-4086-8edf-862da7e0011d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fffce140-7316-4942-a6e5-826c58456bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eafb75-cf40-4185-8a9f-7d3300254f49",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85318f19-8ca0-4b24-b6fe-06c27b11f719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa710c5-c430-48e9-ab11-9ae89cafe6c8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6a72a2-18f7-4173-a3b9-d52ee2f58098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c067e5a-30c5-43d5-875b-590b86383726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744a0ed3-e13d-4a78-94bc-97bbbb40d046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bffad7-8b4d-4e0d-b17d-d5a751612580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcd9ab6-f5bd-4c8b-b7fa-f981d1f533fa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2a973d-4da6-48cf-8710-029d8fc96a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3852968-1303-476f-beb0-a865413fca64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b412ad89-52ad-4ea0-a084-976fc87b4d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014247ce-6ba3-4bf3-8940-d05ede86aaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2419edb8-8981-46d1-ba20-f81002cdfc5c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b641bc-efb8-4bdb-8ee3-f5e39e5c57f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4db99fa-5fe3-4636-9c92-0bb5b47ecc11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a031e304-cf92-4862-80c5-229a67157153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b0c891-bf44-420f-9a5f-a64256ce9d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346cf47d-5793-45d5-a7bd-0d0c72d2e1b5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62caaa8-c374-4897-bd8c-7c0b9e4a1a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c89c627-24e4-46f3-b887-d1503488b9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef424483-c757-4441-95a7-1b758c03a14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb88c7f8-66c0-4c90-8e50-cff1512714e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5927739-5e8d-48ab-8e0d-7daccda0100f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95803bf-53b1-4010-bbf4-bae5ddc1badc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60eeb04b-fe8b-49f8-9fe4-91829baa99f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dc6f80-f6d6-4e62-a2f8-1fa8969794e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d7783d-26bc-416d-b850-4bd6c17f5fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff89bd9-d218-49dd-bd3f-4920e1aa1d8d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a92af5c-acb1-4806-a593-5e47ac64d744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17624f3e-bf73-4782-bb27-5c26e5bfb2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bd72dc-e514-4d03-892a-1a8e0d7e6f19",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfc8414-e587-42cd-94a5-a192e1954886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8bce6f-64d5-4004-b38d-7be95f3abe04",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be97f648-765b-44ac-9dc3-ec66d9b20917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639a250e-931a-4258-9234-83aac4889f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9b3f9b-3b60-4240-b0c0-5128b027897f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8553b67-9198-4166-a12d-f8bafdd92743"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41cb18ce-8bfa-4114-a9d3-05a13780ce28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0054bea2-d451-4467-b16f-a1ec6ec351ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "badbf4a3-3c46-4cae-bbe6-1f91d2742964",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c593709-f4ae-4105-b340-a41fdfb28c7e"
                    }
                  }
                ]
              },
              {
                "id": "21f45a96-3503-46b1-800a-b6a2461a7ff2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cace7d69-2477-4255-83d9-b96ed2d2228f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf0d4c1-4193-457d-be4e-b57b6bfd979f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6110cf02-aaef-4603-a789-022deba6b138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fd5039-8f6e-4c1f-846e-2052ad360b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87cce198-9eab-4c12-843a-f60eb8871780"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47016b79-d481-4554-9bfa-91e02316a357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47efdd47-0035-4bb1-bd6f-8a85f242c369"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6d497c0-11ef-45e4-8c47-12f93ae3abc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dd8d0f5-1fc0-4cdd-aaab-9c9280578dfc"
                    }
                  }
                ]
              },
              {
                "id": "8e8f5cd8-2ea1-4c04-b61f-043bfb353ef1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f464fa2-af01-4433-aa43-459b7aa95aa3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba1e3ea-4675-490f-9c68-56ce27c7ab1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8f92e647-9ec1-4d95-b8e7-07c37501991e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c11034-2ba3-4c4c-9bc7-9379675b8a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fec7d20-b01d-4cd7-ab71-99ff987817b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8edc7bda-ee00-4e5d-9523-1eba8177d4c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ec943cc-08ef-4291-b8a8-0465aec93914",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6a6ce8d-0558-42b0-94ff-4c5978686c7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4ba4d835-98ba-4be6-a465-47c5e8c9c89c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f1a3738-77b0-4f90-8ade-e13715b8e927",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "410f6c6b-342b-4992-8d70-2603ceb41df4"
                    }
                  }
                ]
              },
              {
                "id": "38447b82-e4b1-49e1-9667-b6b974711be4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f4d79b0-eadb-41a2-966f-d77311e38aaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dfbedc26-2c2b-4719-b445-392dddcbd757"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cf6837e-c31a-4a7d-ba6d-6b04665d7246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aec0dc5b-761e-4de2-8e87-3e0957e329ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a98ab426-4711-4bd2-9920-d2e32ab089c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d761040-6e20-4bf7-a4ae-0f04790dd3bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba556f8f-7e42-4baa-a045-885bc25e4a51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bea4636a-4d61-4cf6-8ac7-23664abeb6e3"
            }
          }
        ]
      },
      {
        "id": "1cd7cf0c-b249-49b0-8a42-4543fc7013fa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d9d4226c-bdd9-422f-8b05-6e517470e7a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "855d346c-8f2e-46e2-8e81-4cca583fa605",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84099d60-2ece-481b-bf2f-e5c8a8ffaf0d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62836a5d-e1c8-495f-a955-fe2718470436",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d88189fe-277b-484e-84c4-1bae5eb9f9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3f83fa-bbb9-4f61-90ee-a8ee84cd31ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "659402c1-d0fd-469e-9569-be5366399fa2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a56a59fe-f45c-4c30-a63b-626f1473d247",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "060c43ef-281a-4029-94ae-1535f459aea8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bcf5e07-e379-4c9e-9dce-3453ea224e3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "606ca1ec-b6e3-4b55-b104-cb306c050681"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e64230e-ab39-4cac-8be1-32213d989187",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9d5c0d17-7e39-4c78-a8cb-a6b9f8e8a38b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "937ec3f0-0b40-4625-82ff-3243cbc26c9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78e79381-eb43-4354-9476-52c5f9a8b2a3"
            }
          }
        ]
      },
      {
        "id": "80505f12-4614-474a-9620-dcc725f2c7ff",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2632ab9a-3be7-4aae-ba36-ed9bbad328d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "112f91fb-be65-4391-9b8d-cef90034a062",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c18a40c-5ba2-45d8-8149-b44e202c1082",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7812ec5e-c26a-4110-8fd0-3c6d3c4d9f59",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ef9e9bd-d84f-424b-a12b-ed2879b04361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e037e9e7-2b6d-4324-8ae0-244fff8e05b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46992cee-3feb-48a5-9e4b-c13bfe76a8aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26950273-7049-4e2b-b4a2-d0d7a6cad2be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "761b3df4-0ddc-4d8c-b0cb-0c76bf8200d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99daca70-f8de-4da8-bc9e-f844e3fcacc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00a9d987-8c5f-4984-bc1c-73f1795d0ee0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dc7effa-17c1-4f74-9585-9c04542aec06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d664eb15-570e-4ef5-badb-9a389560b992"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dcc273f-3540-4433-8898-5ff1367513f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6bc21a4-6033-4c49-846c-f120ee246790"
            }
          }
        ]
      },
      {
        "id": "9669e2b0-1cca-421d-b425-64cca8f7b9fe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dc4f6574-8204-4387-89b6-222f71c7a9f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa6b9aa2-2510-42b5-bd15-8952df85a1bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d117ca8-1732-4e72-b43a-11d3fdd3009d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a8dd62-8336-4bbc-bb9c-7b36ae6a85c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a85d79c-5d17-4bcf-a91c-498c1702ec5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b6d584-f879-436a-84e3-a9880fd7cc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad327df6-83bb-46c8-81bf-cb8764e051ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51268a1f-9824-498c-b616-97afb6e512a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5eefd46-455d-40e6-ab3c-a33bdb523810"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45d212d4-b9bf-4e64-af1d-e825837a8fb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b401787e-a363-40c6-8a72-2506f1e6fe33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a9ab23a-e637-411b-9a79-ab4b20f43443",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b5722cc-416c-49a6-97a5-7912da8733ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6340a71-5ee8-4762-b458-243f8fd3db2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9932fed8-108b-45e7-a4ec-fc3060d874f0"
            }
          }
        ]
      },
      {
        "id": "7b13dc89-4251-4634-9274-7d68776f4c4e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f8ae51e-4e34-4df2-a9c7-b533fb0400ae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "968dea13-8872-433e-8888-c5609db6aed9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8594d75f-9717-4d61-9255-4d64ff65f553",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "841c2cc3-d67b-4a6b-924d-5315d863fcb9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d340b635-82f5-4f01-9220-fbb331c1dc06",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 245.8315789473685,
      "responseMin": 5,
      "responseMax": 9662,
      "responseSd": 1190.0151376241824,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700354302668,
      "completed": 1700354382125
    },
    "executions": [
      {
        "id": "9f0628df-7a48-48f4-bbdd-7c09af809882",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0c091a1a-d315-4446-b764-0c6b7c58619a",
          "httpRequestId": "fbf7706c-2e17-4e5f-ba02-d3222b46d2fc"
        },
        "item": {
          "id": "9f0628df-7a48-48f4-bbdd-7c09af809882",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eb24cddd-cf9a-4bf1-ac5b-637e85c93be1",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "52a6892d-d4ef-4cc0-bd10-13eb370f0090",
        "cursor": {
          "ref": "18b55d8a-98d8-45fe-b67c-bce93ec5cd3b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d7d621eb-ddc5-4a52-bff7-0114797f8e68"
        },
        "item": {
          "id": "52a6892d-d4ef-4cc0-bd10-13eb370f0090",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f5668728-3cd7-4f53-8932-ecad711bca8e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e335f966-8137-4f88-8c5d-09e308440c27",
        "cursor": {
          "ref": "db3e134f-56e4-4f17-9f14-48ea9c0e374d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8ea30760-1083-42fa-838a-be89031a57d0"
        },
        "item": {
          "id": "e335f966-8137-4f88-8c5d-09e308440c27",
          "name": "did_json"
        },
        "response": {
          "id": "668f9d70-2889-41a3-86bc-fe3c5f03dfc8",
          "status": "OK",
          "code": 200,
          "responseTime": 1909,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81939ab7-cad8-4424-82c2-8aac841b7350",
        "cursor": {
          "ref": "9f6560cd-80bd-44f1-a0e8-ad0a3cabf6cd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "032259d6-6277-488e-9fd6-91162d4b37b7"
        },
        "item": {
          "id": "81939ab7-cad8-4424-82c2-8aac841b7350",
          "name": "did:invalid"
        },
        "response": {
          "id": "09a79512-73f5-4fb5-8296-79930b087c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81939ab7-cad8-4424-82c2-8aac841b7350",
        "cursor": {
          "ref": "9f6560cd-80bd-44f1-a0e8-ad0a3cabf6cd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "032259d6-6277-488e-9fd6-91162d4b37b7"
        },
        "item": {
          "id": "81939ab7-cad8-4424-82c2-8aac841b7350",
          "name": "did:invalid"
        },
        "response": {
          "id": "09a79512-73f5-4fb5-8296-79930b087c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4929f2c9-da34-4488-9257-95f711157587",
        "cursor": {
          "ref": "7ab4a9f3-b8b5-484d-8145-491b3e87d159",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ec8d5dce-62c3-402d-b156-36a7ce3f8e87"
        },
        "item": {
          "id": "4929f2c9-da34-4488-9257-95f711157587",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5e7e4303-321b-41f5-afda-5a38ff5fea37",
          "status": "Not Found",
          "code": 404,
          "responseTime": 359,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90094ea-f6d5-4d97-9b2e-322d01bc13ef",
        "cursor": {
          "ref": "9c6bd9b4-15c2-4098-8782-4fd71406b413",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cd215fb1-b5b4-48a5-b80a-4da5540d5faa"
        },
        "item": {
          "id": "a90094ea-f6d5-4d97-9b2e-322d01bc13ef",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1958bce9-2a22-489b-85a7-a9e12c332728",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fb3753-12ad-4081-bc43-a04fb3a54904",
        "cursor": {
          "ref": "c3f92bf4-e92f-487e-9b54-d5afa9e9d9d4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "03cbcb8c-8ffc-4658-bc74-2efa8cd0144b"
        },
        "item": {
          "id": "63fb3753-12ad-4081-bc43-a04fb3a54904",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5a72e9f9-5fd1-4419-9330-2b2bb80fcdb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7405b38a-c2ea-4218-9d3a-052529fee6d2",
        "cursor": {
          "ref": "79c96e9e-d196-4109-86b7-a9ab97b3c9d8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3a4e8a44-ed9e-4eba-a296-d08220f81416"
        },
        "item": {
          "id": "7405b38a-c2ea-4218-9d3a-052529fee6d2",
          "name": "identifiers"
        },
        "response": {
          "id": "59bd761d-bc5d-4ad8-84b5-36f92d802b5d",
          "status": "OK",
          "code": 200,
          "responseTime": 1278,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8394a44-dbab-4257-a61a-7ce7feae2e6d",
        "cursor": {
          "ref": "53d8dd7a-f974-4f74-a8c2-689bcfc66453",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9a6ac1b1-36b7-4164-9ac7-afa7370472c5"
        },
        "item": {
          "id": "c8394a44-dbab-4257-a61a-7ce7feae2e6d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7966db60-da4f-4cde-bc6a-aab0f38a24ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e60feb1-e36b-4818-845c-c2e7ecc54f67",
        "cursor": {
          "ref": "0cb2eab5-1a84-4057-b715-51d6c3384a04",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c9746388-eb8d-438f-8eb8-88e51ea75d39"
        },
        "item": {
          "id": "2e60feb1-e36b-4818-845c-c2e7ecc54f67",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "45441a42-0de6-447e-8224-522e3a989b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb26d39-ad32-43b0-bf37-045eeccde8bb",
        "cursor": {
          "ref": "1b887adb-5edc-4aba-b976-e0bb271c0664",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7479333e-531b-4103-a185-66fb9f80230f"
        },
        "item": {
          "id": "1fb26d39-ad32-43b0-bf37-045eeccde8bb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7306fd29-fc89-49f5-9371-a306acf65c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ef94a5-f9f6-40d4-a64b-c412bd890e93",
        "cursor": {
          "ref": "cd2fce2e-6379-44c3-a1de-9830d5c80e21",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cbca18b5-21b2-4757-9fd5-8707153b9475"
        },
        "item": {
          "id": "98ef94a5-f9f6-40d4-a64b-c412bd890e93",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ecad0ac2-da49-41fa-9b97-087437ffe831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7db547-9599-4a70-87ee-799554073338",
        "cursor": {
          "ref": "b6285925-57bd-4ad2-82ff-9a3222e2e4e9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f70e7658-c0d5-424d-9bbc-3b5930e96446"
        },
        "item": {
          "id": "6d7db547-9599-4a70-87ee-799554073338",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "af144e9f-35da-40d1-9eac-687e8525b856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01699e1b-893f-4882-87b6-160e0dbbee79",
        "cursor": {
          "ref": "5cbfdd82-fbde-409a-aaf8-8097fb8e045f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f7ce97af-2e0d-42e3-ba6b-8646b216b83d"
        },
        "item": {
          "id": "01699e1b-893f-4882-87b6-160e0dbbee79",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "23cded53-de9d-41b3-928b-ea96cd2b81fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f249db-2d0c-4548-bdd5-5ccf37078518",
        "cursor": {
          "ref": "fa45dafb-615d-4ed0-88c3-5b05fd69275f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6fd3e22e-2944-4a49-a27b-00ae191485c9"
        },
        "item": {
          "id": "b3f249db-2d0c-4548-bdd5-5ccf37078518",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bf899347-ef38-40a7-845a-dd020bd35540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebb8c1c-2903-4916-9632-dd03408e9f3d",
        "cursor": {
          "ref": "06f56970-2bfb-49f1-bb06-dfb5d1addce5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b1a25f57-206f-480e-9f53-bf325b1f3579"
        },
        "item": {
          "id": "4ebb8c1c-2903-4916-9632-dd03408e9f3d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2dba75a4-c2bd-4829-b02b-4153cda14b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c6b239-5447-4f4f-93f9-2df2e4f477d2",
        "cursor": {
          "ref": "87a68fd9-3f2a-4dd3-8a81-8c2449ae98b2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dbb8ea44-81a4-465d-8a0d-1f4bfe66794a"
        },
        "item": {
          "id": "f8c6b239-5447-4f4f-93f9-2df2e4f477d2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "48ac5ff6-4379-4874-b07a-efb4b7279c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5acaf89-2ef8-4b3d-bb23-47bcba808372",
        "cursor": {
          "ref": "5f28704c-aca2-4054-833f-f17a6a1810af",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "81ae69e8-0e1f-4442-baab-95f807591593"
        },
        "item": {
          "id": "a5acaf89-2ef8-4b3d-bb23-47bcba808372",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "30e39c66-7d2a-428b-b10d-4f51a6a5a834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d87a44-0f93-46e6-a4f0-1369746a38c5",
        "cursor": {
          "ref": "c1c15ddb-16ea-4806-8289-120fe3efc2fb",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4e978f08-6809-4c66-8e09-a8e4a1b2841b"
        },
        "item": {
          "id": "51d87a44-0f93-46e6-a4f0-1369746a38c5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f5619152-3825-48b1-9893-0f3d58afa460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17575482-b99b-4804-b817-b650641029be",
        "cursor": {
          "ref": "7bad450e-5e52-49a1-8760-0a4835eeff96",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b568422a-82fd-449b-98b3-457050bec5cb"
        },
        "item": {
          "id": "17575482-b99b-4804-b817-b650641029be",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a3350d2a-758b-4dda-a683-a7a181a4cab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea98c52-40f9-4a52-8b00-c0c45bc7a958",
        "cursor": {
          "ref": "813cf9d3-9ec1-4a90-a87b-cde0951a93d5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "be6b0ddb-8331-46b7-96d8-2e0b21a7dc2e"
        },
        "item": {
          "id": "3ea98c52-40f9-4a52-8b00-c0c45bc7a958",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "895e7d8c-2900-4bed-a0ae-e34df0551fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597a205f-2948-43e2-b80c-a948edc17c05",
        "cursor": {
          "ref": "2f6e2ef0-c2bf-4c4b-a1cf-34a4c96f60c3",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9ce8888c-cec1-4e6e-96e7-9f2df87d5654"
        },
        "item": {
          "id": "597a205f-2948-43e2-b80c-a948edc17c05",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "99ac2ce2-0af7-4d32-8a41-e93c473b00c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022b689c-cf05-4909-bf8b-1c8ec23b18e4",
        "cursor": {
          "ref": "c889322a-e6ed-448e-b597-1abf3b6f1edf",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "64edc6bc-bcbe-4c46-ab1c-c21e1529255d"
        },
        "item": {
          "id": "022b689c-cf05-4909-bf8b-1c8ec23b18e4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e6456cb3-0894-451e-a9ec-d063e506becc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7d9555-6f0c-4954-b037-0d32d803207d",
        "cursor": {
          "ref": "9b4926fb-058b-4f01-877e-7398487c7f6d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7ede8f1c-c8b4-48e9-9d84-24b18b0eae4a"
        },
        "item": {
          "id": "dc7d9555-6f0c-4954-b037-0d32d803207d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f34447fa-ccc1-4dfe-a607-e78f2da7319e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba199f1-5df3-4e34-9244-0229d39d179e",
        "cursor": {
          "ref": "3e5007df-d4e5-40dd-9a23-eaeccfa6474f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8ca15dac-6b0c-47fc-acca-35133ceaff89"
        },
        "item": {
          "id": "bba199f1-5df3-4e34-9244-0229d39d179e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4d7753e5-c069-4591-b016-467af07e01e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc16c2d-cc50-4615-9604-3644fee675a4",
        "cursor": {
          "ref": "fde9a4cc-df6b-449d-a9b8-7dcb4991ab6e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "188eea26-abc8-4f15-a6d7-15ca7ed6e472"
        },
        "item": {
          "id": "2fc16c2d-cc50-4615-9604-3644fee675a4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "60b63f29-8e41-4930-874f-9b72a167d8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bf49e0-310c-40e7-aae9-41003f2e7392",
        "cursor": {
          "ref": "65307443-277a-4a23-b753-58d4dd1a03fb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0e3c2368-d8d5-4813-bc60-4851da53d1a0"
        },
        "item": {
          "id": "99bf49e0-310c-40e7-aae9-41003f2e7392",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "53cafda5-a9cd-440d-ba3b-fb79a2856a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ee2ad4-7dd2-4153-b9b5-c4b06eaac1ab",
        "cursor": {
          "ref": "2602e9d9-2a76-4f59-a581-62f33bf1f258",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1669d9f0-1d3c-4670-910f-2551804ddeaf"
        },
        "item": {
          "id": "b1ee2ad4-7dd2-4153-b9b5-c4b06eaac1ab",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d28f6010-c191-4436-9936-bb70f6aba647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3e8557-7422-4bf5-829e-387367f93565",
        "cursor": {
          "ref": "e9c1ce2d-6f5e-4dc0-bb90-520726fd42c3",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ad74a299-dd8f-4715-bc75-bd60aa0d256a"
        },
        "item": {
          "id": "1f3e8557-7422-4bf5-829e-387367f93565",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1ede0034-742a-4115-81f0-bf57236b4c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b6ebd7-8699-4ee2-a464-d8a50192ca84",
        "cursor": {
          "ref": "b5331ff7-c8a6-4831-9cc1-d1aa77252458",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "858a4076-3681-4c2e-8a94-d9b896c4af04"
        },
        "item": {
          "id": "29b6ebd7-8699-4ee2-a464-d8a50192ca84",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4b60e59f-52aa-47a3-8581-65d34e0c320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeba1de-1c83-4a63-b8d3-91e30df26b27",
        "cursor": {
          "ref": "05b0987c-f56f-4337-9e10-8f6eab709d33",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e3910d2b-b8ec-40d4-9d23-a0daf0ab43e5"
        },
        "item": {
          "id": "7eeba1de-1c83-4a63-b8d3-91e30df26b27",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "48ca1fe9-9a64-4320-9d41-b9022dcc0aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e8480b-3728-47ef-a85d-123427e6e60f",
        "cursor": {
          "ref": "c1cf38a7-a3d0-460e-8dde-58a502910b54",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fb47829b-4849-4759-acbc-4a7453ce48eb"
        },
        "item": {
          "id": "39e8480b-3728-47ef-a85d-123427e6e60f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0aef14db-1cb9-4b3c-9d57-31b519ec7aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48444688-660b-4c1a-8fb9-8b1544a23e9d",
        "cursor": {
          "ref": "c992eaa3-3946-4779-a041-47d7ac465986",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a0e7846e-d1a9-43ef-9771-656742356ee9"
        },
        "item": {
          "id": "48444688-660b-4c1a-8fb9-8b1544a23e9d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5b9580b3-bd22-456b-b48b-8f564ac65f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762711c9-1447-4b55-a4ec-363354150cb9",
        "cursor": {
          "ref": "e50da268-416b-4b08-8892-5c3742811c82",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3aa5a0bf-2eaf-404d-89d4-9cbc53573eb6"
        },
        "item": {
          "id": "762711c9-1447-4b55-a4ec-363354150cb9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aea3993d-ddd5-4bb6-816c-247a95b49716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183f6305-1fe2-418f-af3e-a253dafdafa1",
        "cursor": {
          "ref": "a08c0b8e-9a08-4fe0-bbc0-9019cb4dbf08",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5c1888c3-cd89-4969-a00b-ae5491a89413"
        },
        "item": {
          "id": "183f6305-1fe2-418f-af3e-a253dafdafa1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8cb1ea75-c542-4c67-833f-9288db96ee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71a844e-2993-4830-a00b-cb0a37f158a2",
        "cursor": {
          "ref": "58384ea4-853a-4d30-ac73-ea2ac2e1b9e9",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "99e73c3c-f286-4dba-a73c-f77e7bbec901"
        },
        "item": {
          "id": "e71a844e-2993-4830-a00b-cb0a37f158a2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c2213685-1052-4dcf-a29b-774d27007213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09944285-b80e-4478-959f-59e61cc51981",
        "cursor": {
          "ref": "f0de5115-4664-410e-9c59-3d071e0f5536",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2d64ffbc-18d9-4e93-9321-b9a38f968d2f"
        },
        "item": {
          "id": "09944285-b80e-4478-959f-59e61cc51981",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5d53467c-c548-4ed9-b15f-f4c57487be75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf801b47-43d2-4f85-9418-673fee58618c",
        "cursor": {
          "ref": "92a25a34-afe0-4935-920d-5df05eb7c4c5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c204b10c-616a-4450-ba92-b86c3a5b9f86"
        },
        "item": {
          "id": "bf801b47-43d2-4f85-9418-673fee58618c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c9657ba1-4c7e-46bf-acb8-f187fd5979ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebcb785-8042-47e8-844c-c8be81ea9b53",
        "cursor": {
          "ref": "245aad1a-0408-46bc-a6c5-f3829f83b31c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "99dcd545-618c-4a96-bee3-b54405a9ce9b"
        },
        "item": {
          "id": "5ebcb785-8042-47e8-844c-c8be81ea9b53",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5f5c22f8-304b-4a52-ae34-7193aa845340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d821463c-8427-4a4a-8d01-f0eb945cf3a7",
        "cursor": {
          "ref": "04b23bbb-d84f-4c0a-83ab-228a252e108b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "76f18f29-bb0f-4e1f-a607-cfd25345629f"
        },
        "item": {
          "id": "d821463c-8427-4a4a-8d01-f0eb945cf3a7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0fe3f89c-4008-45e4-8963-10500dc23a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cee747-703c-44e7-b229-191d5d954360",
        "cursor": {
          "ref": "3cc2749b-9efd-4a79-ac26-46efad74500c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0c8b2b7a-17e5-4fa8-8357-b7dddeae40cf"
        },
        "item": {
          "id": "16cee747-703c-44e7-b229-191d5d954360",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "632d677f-06ca-45cc-a7f1-fa6db1689bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdc1d81-7e75-41e6-8f82-9229780ce7b8",
        "cursor": {
          "ref": "1e2b3b2f-03f9-4b7c-b21b-b9f360d073ba",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f5f276f5-7dc8-493d-ac89-96671d0e4e38"
        },
        "item": {
          "id": "7bdc1d81-7e75-41e6-8f82-9229780ce7b8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7f80650e-8d6b-4628-ab33-cf90e8e5da01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01462db3-de7e-4065-9827-833c01e1d3f1",
        "cursor": {
          "ref": "5e4c9d93-83c3-45e7-9e4c-6ffb1822ee1c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "62ce9616-95af-47aa-9629-201a67599a56"
        },
        "item": {
          "id": "01462db3-de7e-4065-9827-833c01e1d3f1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5c244bf6-7795-4a4a-b470-5f0f5c564e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d9a94f-623e-410b-9647-2b25a4165485",
        "cursor": {
          "ref": "44c8c936-f2cf-4cc1-b487-c259b348e076",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8eb639ae-8a0e-4f6d-a2aa-b08c2a4abc87"
        },
        "item": {
          "id": "c0d9a94f-623e-410b-9647-2b25a4165485",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "96f4299b-b25f-4a63-8204-9d55b46c0324",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1540,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eafc887-df89-460d-8502-ab6d628fc7ec",
        "cursor": {
          "ref": "00e5c104-bef3-49ba-8427-ff9d472f8105",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ee0c3d61-c786-44ab-ae1b-05a994ae06fe"
        },
        "item": {
          "id": "6eafc887-df89-460d-8502-ab6d628fc7ec",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "70d6987f-084d-4165-bf61-48713b074d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2802b507-5541-4aff-bc49-2e8f4a2e5f99",
        "cursor": {
          "ref": "31c678b7-3a4a-4ba9-bfc5-87369575a20c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "86abfbe8-9b10-4438-8101-87e76fbe4bca"
        },
        "item": {
          "id": "2802b507-5541-4aff-bc49-2e8f4a2e5f99",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b28a2057-9d34-44d5-a3e3-99956e59474c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f814633c-f400-4b86-972f-f1c340bc24e9",
        "cursor": {
          "ref": "0f29ef3e-8167-4db0-8c0a-ce1433d07006",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0d867d8a-f1bc-49ae-b133-4094a656e362"
        },
        "item": {
          "id": "f814633c-f400-4b86-972f-f1c340bc24e9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c5f6ef17-bcb9-44a2-871d-5ece09f5567a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38356935-c32b-407d-8776-350d2efa4c29",
        "cursor": {
          "ref": "d30ecbbe-fcf8-4474-97bb-5b39959abb01",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1602ad88-2ad9-44f7-9c9e-5c0a54d570eb"
        },
        "item": {
          "id": "38356935-c32b-407d-8776-350d2efa4c29",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c99d1972-5779-48bf-b8df-c1a482394ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62da998f-b89a-404e-8222-3ec8ffef0a66",
        "cursor": {
          "ref": "12eb2af5-2a8b-41a9-befd-afe8ff98c0f4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "68b9c4da-7ced-44e5-b36a-6795e7dffa35"
        },
        "item": {
          "id": "62da998f-b89a-404e-8222-3ec8ffef0a66",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "22119241-9775-4ac6-b399-bd9787a2a2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca95016-4a13-4880-96e4-34cda4a3318f",
        "cursor": {
          "ref": "c52ebe45-5790-4ddd-8f1f-34e11832bf04",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "afbf0960-ff53-4a8b-90df-070cce2302b0"
        },
        "item": {
          "id": "7ca95016-4a13-4880-96e4-34cda4a3318f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "37100299-27dc-4a5b-99ee-6340cb350931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c84a4b-b3fc-4945-9667-fd9660d00d81",
        "cursor": {
          "ref": "3f6eb6df-4989-4d39-a9d5-95a2ba44dd65",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5f6d955a-b353-4ac1-876c-372fb6a434e2"
        },
        "item": {
          "id": "d4c84a4b-b3fc-4945-9667-fd9660d00d81",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "39a1d82f-d36d-4a19-854a-4817ae9b6baf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1573,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f32aecd-fe35-43f7-9a00-b5787864ec1d",
        "cursor": {
          "ref": "9fc9b802-482a-4cd0-91d9-912f4bd93851",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e505a0f9-1410-414a-9638-ea7eba28b7d5"
        },
        "item": {
          "id": "3f32aecd-fe35-43f7-9a00-b5787864ec1d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "276cd298-1700-4dea-a6b0-6c2164b058a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78226b79-5b55-4145-919e-53af44c5564c",
        "cursor": {
          "ref": "7ca6491a-3fae-4bd6-80cb-1fac64d5dfcc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "22d241c8-18e5-44e4-ba64-d76d49e5ad85"
        },
        "item": {
          "id": "78226b79-5b55-4145-919e-53af44c5564c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "99db4add-29ed-4a64-8b8a-c4ad3b555367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962b446e-4920-40f1-a29c-e620de85b6fa",
        "cursor": {
          "ref": "c0e44064-1b25-41a4-98a6-e23df60df5be",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "21710824-f03d-4489-86ed-e22f39590b3f"
        },
        "item": {
          "id": "962b446e-4920-40f1-a29c-e620de85b6fa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8317d1d7-ce44-4bb2-b6fa-4cfa3492ca98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1407dc8f-3a63-4a69-951e-9e4e9102d4b9",
        "cursor": {
          "ref": "a269c7f5-2881-470d-a632-43f25ac9f1bd",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "46bc76d0-b91d-40be-af15-74fe2496d749"
        },
        "item": {
          "id": "1407dc8f-3a63-4a69-951e-9e4e9102d4b9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "acf91467-91c0-487c-ada2-132b96503e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044c91f8-85b4-4a50-847d-b3402b6f6272",
        "cursor": {
          "ref": "a39e22de-9879-4cf8-a0f1-52d02f8a76aa",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "98b83b63-8498-4243-8c02-c9239dbf6d42"
        },
        "item": {
          "id": "044c91f8-85b4-4a50-847d-b3402b6f6272",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6eb0c1dd-c26f-47d7-9853-6d10b3222c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a98933-bf5a-457b-ad82-fac0b751e66e",
        "cursor": {
          "ref": "350d5ffa-4cfc-4f32-8fc9-70d10b0ecd62",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1c913536-3f8b-45f3-a7fc-01a7686d431f"
        },
        "item": {
          "id": "41a98933-bf5a-457b-ad82-fac0b751e66e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "49e84ae5-bfe0-4191-af45-4d3ebd7e0471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43d11f9-527b-4249-864c-fd8b997d31ab",
        "cursor": {
          "ref": "7cced31d-451b-4f90-8389-d87eea98d73e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4c9ea78c-e95d-43d5-8136-fb622a9790af"
        },
        "item": {
          "id": "d43d11f9-527b-4249-864c-fd8b997d31ab",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7e61138f-2082-42fb-bd22-81ac5711659f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9a5e9f-ff12-4dee-a082-0ad3a46f14fa",
        "cursor": {
          "ref": "ff584de5-9f91-4cd1-b340-5ee3a2da72ea",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0a690268-1215-4f6c-97a9-e3c31b91b624"
        },
        "item": {
          "id": "0b9a5e9f-ff12-4dee-a082-0ad3a46f14fa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7180afc8-9de5-47fc-9c7a-743e90f3b540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d995176-caa4-4b1c-9a45-6da98175d38d",
        "cursor": {
          "ref": "b56cfc29-bc33-4240-b643-622f3388e106",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f83f87af-b0e0-4744-b912-efea20e5b067"
        },
        "item": {
          "id": "1d995176-caa4-4b1c-9a45-6da98175d38d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d802f9fa-80a7-4812-a01a-3866a6de740d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a74fdb-e02a-4ae9-92ac-fe4446923055",
        "cursor": {
          "ref": "b99ebc7d-9209-45e7-9914-1e9b7d0d989c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c84d36d5-60a4-41e1-a5ae-2c398ee51eeb"
        },
        "item": {
          "id": "38a74fdb-e02a-4ae9-92ac-fe4446923055",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "47c084ea-09fb-4c09-bf50-7fbfe9e7f542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9eea4a8-b71b-44ee-8a39-d64123e36a27",
        "cursor": {
          "ref": "e1ab53ad-ac90-4652-94c4-f00cc8e60532",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5f3a4ab3-bab2-4e11-b091-32a13e7714ea"
        },
        "item": {
          "id": "d9eea4a8-b71b-44ee-8a39-d64123e36a27",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "da6b3396-4351-45f4-b42f-dd5e1f476b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7612b9-da8e-4fcb-a771-0ebf269d41e7",
        "cursor": {
          "ref": "b541d146-bd66-4b32-b1ee-85f103b6df25",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a74b5f53-6b81-402f-9744-c0695e9f87ef"
        },
        "item": {
          "id": "ab7612b9-da8e-4fcb-a771-0ebf269d41e7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7bd3d974-fe6e-417d-9052-9d5a5e50eab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d4c15d-79b8-45fa-a33b-1aeec9d52561",
        "cursor": {
          "ref": "99e5c3ee-62c3-4bf9-8b88-3a38815fb5fb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce416d8e-f1ca-4842-bbfd-c53b3ca2f94a"
        },
        "item": {
          "id": "17d4c15d-79b8-45fa-a33b-1aeec9d52561",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9ebd1200-624b-45c6-81d7-3730c4e050ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab2f979-dd17-42a5-b447-1e81f1789812",
        "cursor": {
          "ref": "88bd6269-6753-4425-89ae-864a408f49ad",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "329cca41-5b3c-4a05-a8df-294c7a0d6b78"
        },
        "item": {
          "id": "0ab2f979-dd17-42a5-b447-1e81f1789812",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ee7f4d35-795d-40c5-9675-958f8f779c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908818e8-0ca4-4b67-92c3-c0884d7a426f",
        "cursor": {
          "ref": "45fedaf1-b77f-467c-abb0-927928e3139f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "372ae200-8eb2-42d5-b71a-471b4f9f45b8"
        },
        "item": {
          "id": "908818e8-0ca4-4b67-92c3-c0884d7a426f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "eab9c80a-e84c-4730-b544-587152b2db89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff0de25-a767-4019-b76c-46a6c46beeb2",
        "cursor": {
          "ref": "5ad3c0f0-f5a8-4852-9213-51a0c79714c8",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a45a61b6-1a9e-49c0-a874-a12359a1273f"
        },
        "item": {
          "id": "6ff0de25-a767-4019-b76c-46a6c46beeb2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8ca64c74-03e8-4d0b-b4ae-21d4f35cece7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3384325e-087b-49c2-b8d8-1a88e67ebd1f",
        "cursor": {
          "ref": "8f8f1c9f-9686-4bd3-aa64-2dd9613fda5f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "67287347-9734-4a15-a8ba-fbc0bb5eedf8"
        },
        "item": {
          "id": "3384325e-087b-49c2-b8d8-1a88e67ebd1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0a2bf421-698b-4e91-89e0-54ef96d11057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0493010a-e360-4951-9ec9-6b1b530b8ebb",
        "cursor": {
          "ref": "b99d0a06-fca6-4e2c-ac59-444468ad2986",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "deb39700-a145-4e8a-86b5-77f39a79d4a6"
        },
        "item": {
          "id": "0493010a-e360-4951-9ec9-6b1b530b8ebb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7497b5fd-46ec-4226-a8eb-901d3c98835c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ef1529-ffbe-4d3a-a1d4-686ab9aade0d",
        "cursor": {
          "ref": "908de45a-60f7-470c-a6fa-2ba43e469733",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0862bca7-b34d-491c-9c05-948af1c0e9fe"
        },
        "item": {
          "id": "19ef1529-ffbe-4d3a-a1d4-686ab9aade0d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2abc64da-d355-4e2f-a846-0298c00a1ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79dd57d-09f6-495d-b702-793f5ad3a3b9",
        "cursor": {
          "ref": "3e793dbe-90f9-4b58-8daa-6a0e0c097c94",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cdaccd4e-91eb-4682-80b5-bc2f947abe46"
        },
        "item": {
          "id": "c79dd57d-09f6-495d-b702-793f5ad3a3b9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a38e9e0a-eb93-41f4-b86c-0bcf9d3edf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37435336-b5b5-43ba-bb56-80386d807b38",
        "cursor": {
          "ref": "21935f4a-d136-415a-9cab-af56cf04b257",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b27974ba-0d15-4717-995f-dcbd2e793062"
        },
        "item": {
          "id": "37435336-b5b5-43ba-bb56-80386d807b38",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "40607b0a-2342-4f46-90b9-29477bcab93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0d1401-5743-4a48-aafe-87b936dbc09c",
        "cursor": {
          "ref": "f1d25641-a66d-467c-9013-587736dad881",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ecc70bba-131c-414a-9d33-d263d0516470"
        },
        "item": {
          "id": "1b0d1401-5743-4a48-aafe-87b936dbc09c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "21f0723f-30a7-4a57-9e90-ef620c7f898b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc71338-03f6-4f91-900a-2b2750fceb0a",
        "cursor": {
          "ref": "72d77cb9-cb1c-489b-88fc-1049e1f66a14",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6523e18c-1029-417d-bdd6-1b18514b0ffb"
        },
        "item": {
          "id": "8dc71338-03f6-4f91-900a-2b2750fceb0a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ce2ffc6b-c4f2-4585-9de9-12deff992d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8767ab73-902f-48b9-9d92-d9ca26c39401",
        "cursor": {
          "ref": "8f6b5162-7f35-4543-ac84-4f94b7648d3b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "599903b9-23f9-4245-8859-b7516bc71cf2"
        },
        "item": {
          "id": "8767ab73-902f-48b9-9d92-d9ca26c39401",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "140c20f3-2fa5-415a-b41e-cc3047eea0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e904a5-af9d-474b-9b22-74384047cbb3",
        "cursor": {
          "ref": "6152aa9e-ba8b-494e-b2c4-85d6e96aa488",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "99e28e1e-efdc-4157-92f9-975de5d9bc49"
        },
        "item": {
          "id": "77e904a5-af9d-474b-9b22-74384047cbb3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "560d2141-bbb8-41a0-ad84-4bbda1a4de27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c20d92-c2f7-46ad-8f49-eb833a11c0f2",
        "cursor": {
          "ref": "1a768f11-807f-423c-bf78-bb995798ace3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b0201ef9-b115-48b1-acd7-b9fffaec8877"
        },
        "item": {
          "id": "75c20d92-c2f7-46ad-8f49-eb833a11c0f2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "40936943-1667-4615-8699-587de8a9888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e838d7d1-6efb-4c8c-ad7b-e016ed15ec19",
        "cursor": {
          "ref": "aa6eb9f6-fe16-4c68-98ba-68079bdf3681",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "99e19785-0372-4910-bf39-14a6481033fd"
        },
        "item": {
          "id": "e838d7d1-6efb-4c8c-ad7b-e016ed15ec19",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0f2d0fb7-50b9-41ef-b30b-bee81607fdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df77fb07-4e9b-4d38-ad6f-1ed04d92a416",
        "cursor": {
          "ref": "72b3ad15-b7dd-4dd1-96b9-5582afd575b8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b1f3e135-7be1-454d-b44a-37ddb9213273"
        },
        "item": {
          "id": "df77fb07-4e9b-4d38-ad6f-1ed04d92a416",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2ab2a2b3-de26-4438-b699-4034a93b26d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eebd78b-d48b-475a-a37c-8a1b86bf8fd5",
        "cursor": {
          "ref": "1ece72e2-1721-47f7-aa72-67196a7d68d4",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a6b3f854-c819-465d-91e9-7aa2e0973dc8"
        },
        "item": {
          "id": "1eebd78b-d48b-475a-a37c-8a1b86bf8fd5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "abac151d-fbd5-492d-bdbf-a11b2c1ea0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48f301-73db-4671-970d-1f87a44b55cb",
        "cursor": {
          "ref": "4a95fbff-fef5-4a45-8a21-2a07c2d04f7a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6cf80f73-80ac-4ffa-a657-c1b0f1cda744"
        },
        "item": {
          "id": "3d48f301-73db-4671-970d-1f87a44b55cb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4483e853-0cda-413a-bdbf-9ef1b737b622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7f09f5-7b28-4631-9c25-8cd46505b711",
        "cursor": {
          "ref": "3a8f0fc8-1d87-4900-96ee-639b7a2312a1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fc40e7ec-4b1c-4666-8c6e-81276a9c37f0"
        },
        "item": {
          "id": "9a7f09f5-7b28-4631-9c25-8cd46505b711",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5a729120-012f-417c-a4ef-b10eb1cdf7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17da910c-8f0a-41e0-9f2b-b1fd253d8cf9",
        "cursor": {
          "ref": "f5247910-2be3-4c67-9f5b-126262a2442e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6a8b90a3-9e35-48a2-bcd9-d6863b309750"
        },
        "item": {
          "id": "17da910c-8f0a-41e0-9f2b-b1fd253d8cf9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "55dc5540-ebab-493a-a158-e3816a14dc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae8c5db-da82-4439-aa94-ed3a0a66d315",
        "cursor": {
          "ref": "6abd76a8-cf95-4375-84c0-7ead6979ce5b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0dc70394-5b7f-42b2-b8e0-6e7dd38b74fe"
        },
        "item": {
          "id": "2ae8c5db-da82-4439-aa94-ed3a0a66d315",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fdae5053-c273-406c-809f-3e4546f11807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2e92a4-40bf-4693-806a-8cb686822995",
        "cursor": {
          "ref": "1872854e-f052-4e93-a267-64049f0f5503",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "067a4895-fb95-4a91-beef-d820fb15d5b3"
        },
        "item": {
          "id": "9d2e92a4-40bf-4693-806a-8cb686822995",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7be2de64-3bde-4fe1-a4f6-13d0c04a1e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987c4b11-6449-4a5f-b29c-4521416bbeb6",
        "cursor": {
          "ref": "5ea84759-ecf6-46c0-8b4e-cae8d88fa07f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "91151c84-52e7-42e5-869f-3e52c2d6d96a"
        },
        "item": {
          "id": "987c4b11-6449-4a5f-b29c-4521416bbeb6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1628675e-aaa4-4cd7-90a3-3ed989c9e7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756ed975-94dc-42a4-be1a-9a64921400bd",
        "cursor": {
          "ref": "dd5467e0-556d-4110-ae29-f94565699b23",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4602b97a-d4dd-470a-ba6b-84cf691662bd"
        },
        "item": {
          "id": "756ed975-94dc-42a4-be1a-9a64921400bd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1c18f394-1f95-4581-a654-c520680b87be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55363bc9-828a-450c-a8d8-92c5112245dc",
        "cursor": {
          "ref": "492355e3-2b59-4d73-95a9-06a6a822b7f6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6250c0f2-4d4d-4400-ab16-eea3f15070d1"
        },
        "item": {
          "id": "55363bc9-828a-450c-a8d8-92c5112245dc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9e3ef230-f9b2-45ac-9622-f7b6ba63bebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acb928f-13b9-4ff9-af89-2e400f5b8155",
        "cursor": {
          "ref": "01f0c1c9-7368-49f5-8b74-c800ee389136",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b4eeb2a5-509b-461a-a859-a78364c85ec7"
        },
        "item": {
          "id": "4acb928f-13b9-4ff9-af89-2e400f5b8155",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8049cd06-3a1e-43e9-a4a7-d7def76a6ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a4ab29-bd21-4ade-a984-112b695d9dc7",
        "cursor": {
          "ref": "9f77863b-31cb-48ca-ba57-d0aa48e15a93",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b8dfdee7-4923-4498-a603-c2f196e1facd"
        },
        "item": {
          "id": "49a4ab29-bd21-4ade-a984-112b695d9dc7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a46870b2-f360-4355-9e7b-9e526f875aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309e5b3f-586a-4539-8859-348d1c3e60d2",
        "cursor": {
          "ref": "2def9fce-4a29-41dd-9c58-d6c2f4c8d367",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a17e46e7-4b8b-4776-b585-485121074acb"
        },
        "item": {
          "id": "309e5b3f-586a-4539-8859-348d1c3e60d2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a73f2f9f-bde2-44d7-8ded-3b5af4acb2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fb4579-33d1-417b-b86a-24ce393952ec",
        "cursor": {
          "ref": "5d29f62b-a679-4a31-ab32-ad8f1fe782c8",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d818a079-4fef-4a95-a0b7-bdf55e0abfb2"
        },
        "item": {
          "id": "07fb4579-33d1-417b-b86a-24ce393952ec",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "90bbbbd3-1833-449b-81c5-d87776d34c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2008969-9f6f-4e45-bb80-7af8950b9870",
        "cursor": {
          "ref": "6ec4a96d-3426-4293-b3eb-b44ad1d52a33",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "269b63a6-6294-4f58-b914-af846d6a0156"
        },
        "item": {
          "id": "f2008969-9f6f-4e45-bb80-7af8950b9870",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cd200d76-3e03-4c83-b81a-481f70855f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9756a898-bf59-4ae2-a0ef-13dfdeec9d88",
        "cursor": {
          "ref": "8d47f647-7c34-4893-969c-83d91155d3cc",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "028d1b05-34d7-48b2-8072-09eb82b38fd4"
        },
        "item": {
          "id": "9756a898-bf59-4ae2-a0ef-13dfdeec9d88",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "23aaa0db-f8d4-4f5a-8657-cbdcbc47a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054e8e9f-a1e4-4878-9d84-01fa431f3c31",
        "cursor": {
          "ref": "02e03c4d-06d5-4ff2-9046-424f9872d16e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "84f0115a-6fce-40ae-a04c-929087b234ad"
        },
        "item": {
          "id": "054e8e9f-a1e4-4878-9d84-01fa431f3c31",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5c7dd9c2-6e7b-4879-9c19-a55f5cd095ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576590d6-15c8-4e1d-b686-147ef64b63b4",
        "cursor": {
          "ref": "8f8783a3-bdf8-4c26-ae33-0424487d6ac1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1f0063a1-9d6d-48a6-bbc3-9aa9701afaa6"
        },
        "item": {
          "id": "576590d6-15c8-4e1d-b686-147ef64b63b4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "831b6f25-5a1d-431a-aad5-8c3b92427c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51573738-b7dd-483a-a170-900ac11264c6",
        "cursor": {
          "ref": "242bd742-db7b-49c8-b645-7d258249c7b6",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "25529653-b322-4625-91ba-54c4a493c51a"
        },
        "item": {
          "id": "51573738-b7dd-483a-a170-900ac11264c6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "13f69d6b-e546-45c1-ac2f-83398f60a037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379dea44-391a-44e8-9345-7448a6f64e84",
        "cursor": {
          "ref": "c9fa6401-f9e0-4333-903a-9148d6db2be2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2169a3e0-0fb5-4deb-9cb8-0c1a0c626736"
        },
        "item": {
          "id": "379dea44-391a-44e8-9345-7448a6f64e84",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "57683ed9-8e10-45ba-aea2-c090b3ddc37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de730aa-5da0-4580-a239-30bd8309ebb3",
        "cursor": {
          "ref": "d4afd3ff-f8e6-4fcd-9b61-47558046d40e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e60c49d0-d7de-431e-b48a-46c80cbe2b79"
        },
        "item": {
          "id": "6de730aa-5da0-4580-a239-30bd8309ebb3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "72494b82-b7ec-4842-a2ff-4e4b82e2bcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6124c27-bd3a-41d2-b5c5-c54b92103cf6",
        "cursor": {
          "ref": "1d98a59d-47ab-45a1-a7d0-15cef9e84534",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "30d960bc-b93d-47a2-a3f6-13ced9b0cd53"
        },
        "item": {
          "id": "f6124c27-bd3a-41d2-b5c5-c54b92103cf6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "30ea1f0c-0817-4099-b441-cb2f34f69d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24668ff9-ab57-465d-bb69-729ca559a5b8",
        "cursor": {
          "ref": "14177c1f-1806-43c7-9e2b-72f7133ce22b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f10ffa07-3502-404d-b48b-37b8ce1a2021"
        },
        "item": {
          "id": "24668ff9-ab57-465d-bb69-729ca559a5b8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b21eaf54-e74b-42e6-a380-25875f85007b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8271879-80f0-4438-9d1b-035984f69b8c",
        "cursor": {
          "ref": "4060eba7-79c8-478b-bfc2-6050340646b7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bc459be3-5633-47b8-9478-8a1b05c4b959"
        },
        "item": {
          "id": "f8271879-80f0-4438-9d1b-035984f69b8c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4fcef686-11a1-44e1-96b2-26f9273a7cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8dfa313b-97ec-453c-9ebe-9ecd449b7eaf",
        "cursor": {
          "ref": "88f7bf72-7c97-4e17-935a-1f10e46d24f1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "62e2207f-2756-4981-ad98-51c19d0efd0a"
        },
        "item": {
          "id": "8dfa313b-97ec-453c-9ebe-9ecd449b7eaf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "11a28608-c510-4012-96d7-d781c2fe2fbd",
          "status": "Created",
          "code": 201,
          "responseTime": 9336,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a518c9ab-a31b-4f5a-914b-4c66e8315f74",
        "cursor": {
          "ref": "94a84bd7-7a48-4759-b2da-aadb7e81056c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "da9aa44c-6265-472f-92a1-89ac07f156be"
        },
        "item": {
          "id": "a518c9ab-a31b-4f5a-914b-4c66e8315f74",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "57444d2a-a98b-483a-8d5f-0c7991d788c2",
          "status": "Created",
          "code": 201,
          "responseTime": 9662,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9123d683-7e64-40dd-8a32-3c80575faaf6",
        "cursor": {
          "ref": "fb62ba86-b5e2-46e6-8af2-a1838abf80f4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "45f167cf-9946-44f2-a4be-97c96405357e"
        },
        "item": {
          "id": "9123d683-7e64-40dd-8a32-3c80575faaf6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c630cf0e-2aae-471b-8c31-a204752d3d73",
          "status": "Created",
          "code": 201,
          "responseTime": 8590,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4961df7-5b6d-4b46-8130-425f1feabb0d",
        "cursor": {
          "ref": "9beb19a9-8a2b-4a61-a489-5784345c6e79",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "eac7526f-f57e-48bb-98eb-12adbf702a6f"
        },
        "item": {
          "id": "c4961df7-5b6d-4b46-8130-425f1feabb0d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3eba78ba-28cb-4097-9954-5a7064d6e9c0",
          "status": "Created",
          "code": 201,
          "responseTime": 8787,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a1e21f-a025-4315-88fc-e169ed3cf114",
        "cursor": {
          "ref": "3597e69b-4505-4fe8-850b-def76bc8544e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c9be00ba-26af-4df2-8b00-b89dfa34686e"
        },
        "item": {
          "id": "f3a1e21f-a025-4315-88fc-e169ed3cf114",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d9ad4ebf-0611-4ee2-a216-aca91d1587bf",
          "status": "Created",
          "code": 201,
          "responseTime": 8491,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70187f1-81b8-4219-8dc3-0eb2fc580bf9",
        "cursor": {
          "ref": "e20636dc-393e-419a-a1ff-b21c2e74ce01",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "33ce6039-219d-4d6e-9c46-fdc4cf5f4005"
        },
        "item": {
          "id": "c70187f1-81b8-4219-8dc3-0eb2fc580bf9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "486fa9b2-4101-4961-87d7-7bad5227223c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "10937fb8-9632-443b-8679-80372a849af5",
        "cursor": {
          "ref": "a63672f4-1555-4777-91ff-0d3df5f4dabc",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e514cf9b-c7c7-438b-b258-250a2a449850"
        },
        "item": {
          "id": "10937fb8-9632-443b-8679-80372a849af5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "590d694f-67a0-464f-9cfc-3ce6f97d62cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb6ffee-bb45-4062-a830-f7fb8dd1ef76",
        "cursor": {
          "ref": "a00306f3-8493-441d-9d74-8fd6c8f2101a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "45b67a65-cbc6-4be2-b7b2-f2d575109bbd"
        },
        "item": {
          "id": "3cb6ffee-bb45-4062-a830-f7fb8dd1ef76",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fb2cef19-585b-4ee0-93f0-4455c7a966ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cf73c6-590e-46cb-a70c-983e447a57c0",
        "cursor": {
          "ref": "bd5da213-1ab6-4921-b6ec-2ee95df48a68",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "63549074-0e4e-4a11-9b6d-d5cb60e9a501"
        },
        "item": {
          "id": "c6cf73c6-590e-46cb-a70c-983e447a57c0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c68f4296-5fe5-48cf-8aaa-ca949b0d816b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad2f578-7ba6-42b2-8d00-b052125974cc",
        "cursor": {
          "ref": "fc8a25d0-d9d2-4c74-a6cd-2c5dc719f4a4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "99d1e9d1-deb1-4bd7-81cc-4402cfb2b74b"
        },
        "item": {
          "id": "7ad2f578-7ba6-42b2-8d00-b052125974cc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5c559006-0e94-4230-bde1-8b0e5cd6ae9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6f028a-af77-4949-9758-137e34871a71",
        "cursor": {
          "ref": "7ef85cac-d638-4165-9523-0707e9c18cf9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5e1ea8c-95ed-4b41-b8e8-6f8cab20fcd6"
        },
        "item": {
          "id": "2b6f028a-af77-4949-9758-137e34871a71",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b34240b8-dbca-42cf-af24-e8e7cc8c102b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b449236-6cca-495f-ac6c-4f9cab9704ea",
        "cursor": {
          "ref": "cb4b2426-6852-49d1-9d6c-bee2e39cda51",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "aed8debe-4889-42f4-ba27-368f069bcb44"
        },
        "item": {
          "id": "5b449236-6cca-495f-ac6c-4f9cab9704ea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30dc359c-161e-4a63-9516-1cc1351eb3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64c5ab3-3b62-4a30-b88e-4eab313d4602",
        "cursor": {
          "ref": "4f47b502-fd81-43a4-89b9-2ddd28753925",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d4669e5f-2295-43d5-8f12-b6f468f5f8cb"
        },
        "item": {
          "id": "b64c5ab3-3b62-4a30-b88e-4eab313d4602",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "29e33374-cc1e-444b-9520-d7806908c18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b06c2ac-eb9c-44c0-a2d1-1946721a5f60",
        "cursor": {
          "ref": "cb50b5c9-9cbd-429d-89ee-c56ca7e47dcb",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "083f034e-d798-4473-950c-8e00c3eadbbe"
        },
        "item": {
          "id": "8b06c2ac-eb9c-44c0-a2d1-1946721a5f60",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "162c8b79-5188-4684-b277-73ef6e668379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3bdfe7-30d4-4425-8783-54eb9af30a31",
        "cursor": {
          "ref": "a4bc5d26-ec7c-419b-ad82-d99980cf1eb2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "917105e3-b654-4d2e-9a86-1326db2e588d"
        },
        "item": {
          "id": "5a3bdfe7-30d4-4425-8783-54eb9af30a31",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "626de182-ae1b-4aa7-996e-eddaf49bcf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d0d1a3-bc3c-4740-ba1c-6a460a811236",
        "cursor": {
          "ref": "1ffd3660-b83f-4f10-a796-3111771b0a3e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "013a5483-6bc0-4ee2-8fe6-839b71150b73"
        },
        "item": {
          "id": "22d0d1a3-bc3c-4740-ba1c-6a460a811236",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a369dbd4-9e44-4632-ab3e-d9b9158d4246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85473a14-2e7d-4cfc-a35e-7f040cd89a38",
        "cursor": {
          "ref": "23aa0500-2689-4207-aa63-6d7f2f440f1b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aea1d5b9-b38e-41cb-9cd1-6023d465451b"
        },
        "item": {
          "id": "85473a14-2e7d-4cfc-a35e-7f040cd89a38",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "27a726f2-204c-4e97-9890-c232b3186e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab45452-39a2-4d8b-9eae-31cace044717",
        "cursor": {
          "ref": "d0523134-3df1-4d67-9064-be5e004c8c36",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "648d6132-f433-41bd-8f22-89b673a12729"
        },
        "item": {
          "id": "aab45452-39a2-4d8b-9eae-31cace044717",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0af68fba-f691-4164-97e5-bbb236ba95e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9288c506-afc3-4ec6-927c-53a193d46820",
        "cursor": {
          "ref": "784a7409-f0fc-455f-9775-02844f4ffcfd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d7e30546-dfb8-4e6a-9714-a237b469d4ca"
        },
        "item": {
          "id": "9288c506-afc3-4ec6-927c-53a193d46820",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "88c7ac92-e2d9-451a-946e-59e10145c036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af08d6c9-5294-4f6a-9233-9f7d74da82eb",
        "cursor": {
          "ref": "fc6b6632-270d-413f-b0a4-9fd62033a9af",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "473e7ad1-2c65-4eba-bfe6-bc6f6abb7a8e"
        },
        "item": {
          "id": "af08d6c9-5294-4f6a-9233-9f7d74da82eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0eb2329-38cb-4eb5-a982-951e3b21e6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f954ce-0314-470a-85b6-dee7aa8bad45",
        "cursor": {
          "ref": "a29a7ced-54e0-419a-a8d9-1eb37f2f6ef5",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1a236b18-c806-41c3-a72f-4b4c018f0e34"
        },
        "item": {
          "id": "67f954ce-0314-470a-85b6-dee7aa8bad45",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "03f5b319-5854-40de-92a5-13b4abafc6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3c49ce-713f-4dd2-9266-10c6cac50bb0",
        "cursor": {
          "ref": "a4561dac-f14c-4e85-9341-999976e58211",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5efae573-2a09-4076-9551-1eef0cff34b7"
        },
        "item": {
          "id": "6a3c49ce-713f-4dd2-9266-10c6cac50bb0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ab3561f8-4b6e-401a-9819-86c7e9b00415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9db8775-b21e-421f-a2cc-3659e1e070ba",
        "cursor": {
          "ref": "237a65ac-acf2-4bdd-b0ba-958ac8d748a1",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "654ea4e8-9a18-4790-bc3e-9b551628ad2d"
        },
        "item": {
          "id": "a9db8775-b21e-421f-a2cc-3659e1e070ba",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4ae938a4-fb37-4bae-ad76-2d051f5251a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6014deb-fdfb-47ec-a2b0-ad849ea58cc9",
        "cursor": {
          "ref": "a19aa5a0-9818-4513-9b58-78649dd691a1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cfa5ffa6-9ce6-42f6-8bf6-d87ef48801b5"
        },
        "item": {
          "id": "a6014deb-fdfb-47ec-a2b0-ad849ea58cc9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "86fb595e-d576-49df-aa27-c762d33313f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096e11cc-a38d-4985-9544-e73e5cb2704b",
        "cursor": {
          "ref": "a48f104f-24a9-4cc7-8220-6c6bb9dc1874",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b61aad8f-7b61-4a88-9b70-8e76df536f3a"
        },
        "item": {
          "id": "096e11cc-a38d-4985-9544-e73e5cb2704b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "754b3254-939f-43c3-b7ae-5f5d2cde9a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275bde29-a690-45ea-909a-fbca7c4a235d",
        "cursor": {
          "ref": "2355b747-1404-4967-a4f4-eedc10851640",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "792950eb-d8df-4267-b030-05c5aa1b7347"
        },
        "item": {
          "id": "275bde29-a690-45ea-909a-fbca7c4a235d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "db450853-b4e4-4062-bc9e-cc65defede3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261472e7-6455-4a6a-ae00-5c4263405877",
        "cursor": {
          "ref": "3401b47d-b1e5-48f1-9dd3-5e017c29fafa",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "eed8b5be-e6e3-428a-aaae-7f4ca1980d80"
        },
        "item": {
          "id": "261472e7-6455-4a6a-ae00-5c4263405877",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9cf26c19-9ecf-40e5-ad9f-b3f39aee553c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f3f97e-f4eb-4240-9339-435db64bb174",
        "cursor": {
          "ref": "58742476-2557-4e73-a0ad-28582959169c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0ba76db1-0f30-4027-b18f-f39129128eec"
        },
        "item": {
          "id": "53f3f97e-f4eb-4240-9339-435db64bb174",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d8d995fa-709f-40ed-9777-1051e52ad41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736215e2-fd76-4584-81cc-ab175e647a6c",
        "cursor": {
          "ref": "f8df4b5f-c9f9-47b2-9229-7b3beb0cd6de",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ea764532-e319-420a-bb8b-33b3b9508f16"
        },
        "item": {
          "id": "736215e2-fd76-4584-81cc-ab175e647a6c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1d5d6564-94b7-4b13-8b1c-0148c7d14437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c0b971-8991-4686-b17e-875acf4e8e61",
        "cursor": {
          "ref": "4165fb35-8993-4bad-a076-1845a64acc4e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ce86b898-9d4e-40c8-88eb-418f28eb6cf5"
        },
        "item": {
          "id": "37c0b971-8991-4686-b17e-875acf4e8e61",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3bbadf94-8cc2-4f4c-a8e7-9e410d9af9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a832b32-6ac5-4d3b-8c14-0ec863ec520d",
        "cursor": {
          "ref": "b656b1ce-2189-4440-880b-3d3d6d1a205f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "90dc1e70-6a1d-4097-89b8-bc8d25347660"
        },
        "item": {
          "id": "5a832b32-6ac5-4d3b-8c14-0ec863ec520d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3581a38f-e13b-4675-9068-07c12b7364b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1354c016-a3ee-4a8f-93b4-2381c2fd39ea",
        "cursor": {
          "ref": "7dd7c025-9ef4-4d5f-96cf-3a5466e5f8c5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e2344b1f-fba6-457f-abef-4818f75132ce"
        },
        "item": {
          "id": "1354c016-a3ee-4a8f-93b4-2381c2fd39ea",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2e05dd4c-1c97-4afe-a39e-9a02d5a230f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3137d888-95af-4b3e-bb18-367b0449fa35",
        "cursor": {
          "ref": "74766036-c39e-47ef-9a48-749a227efdd7",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "47408abf-3aee-4551-a3d3-d747ed5d0e43"
        },
        "item": {
          "id": "3137d888-95af-4b3e-bb18-367b0449fa35",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4901cfe0-d59f-4db8-875d-4cc67023eae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d870fc00-c891-4858-b2e6-f8a45bf46158",
        "cursor": {
          "ref": "6e83bb7f-d783-4201-a001-c181c530be35",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "04745254-34d9-4aa9-a924-7221794e6b6c"
        },
        "item": {
          "id": "d870fc00-c891-4858-b2e6-f8a45bf46158",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2d427599-be1f-499c-beca-8affac5a5272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ee60d8-4386-411f-a3d5-e485900c24bc",
        "cursor": {
          "ref": "d2989d92-b99c-4e2c-9030-632c77f213b8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "039275e3-8ffa-4354-b180-58598bb09965"
        },
        "item": {
          "id": "85ee60d8-4386-411f-a3d5-e485900c24bc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a1d6b90e-c072-40f4-be43-aa5586f1fa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df24ee4-5f39-4dcf-9ec1-0bed92af315f",
        "cursor": {
          "ref": "8708c7bf-327b-483f-87a3-c8a49f85f36a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ded56559-faa8-4690-896a-6622334a5d19"
        },
        "item": {
          "id": "9df24ee4-5f39-4dcf-9ec1-0bed92af315f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5b58792c-b7a8-4084-bc3d-7b170d824dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b66ee4-890a-455b-85f5-2c9122823bd2",
        "cursor": {
          "ref": "d20ac00b-a5ae-4049-a57c-b6935cad1653",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e5206883-5199-4413-a990-f57ebdbcab60"
        },
        "item": {
          "id": "05b66ee4-890a-455b-85f5-2c9122823bd2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2ea6df98-9d61-413d-acc1-d951a69f4366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc521a7-b67f-4a46-9056-97064189d17b",
        "cursor": {
          "ref": "e1afb004-347b-42f9-85d7-b6264360c2c9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5821b2a6-b483-4af4-8413-02229a87c3fe"
        },
        "item": {
          "id": "dfc521a7-b67f-4a46-9056-97064189d17b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f2503365-b1a6-45a9-b2c0-84d48be2a830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8b380e-2266-4a89-aba4-ee52bd115158",
        "cursor": {
          "ref": "56594112-2712-4f32-af07-ebc5ecdfbb4a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "89b0fb26-1e70-496c-b19a-5794f00529f6"
        },
        "item": {
          "id": "6b8b380e-2266-4a89-aba4-ee52bd115158",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96e6a249-074a-4397-910b-3b1af74cb818",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c544e616-0a66-4caa-a24a-38fb9662913b",
        "cursor": {
          "ref": "f1f5f7b9-da11-481e-84c5-521086a38e44",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ea04f8fb-8d68-40e7-ac39-62e41af6ab11"
        },
        "item": {
          "id": "c544e616-0a66-4caa-a24a-38fb9662913b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc719826-2d53-43f9-9e32-c6b7ce77c714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785d5bbe-ae16-4eb2-84a0-35f14ef57ead",
        "cursor": {
          "ref": "daa39448-ca26-4434-9ff0-138e57524c81",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "db055565-6aa9-45d9-b75b-edc4c7c1ed9a"
        },
        "item": {
          "id": "785d5bbe-ae16-4eb2-84a0-35f14ef57ead",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "33e89e7e-25aa-4fb0-8ac7-b4b2a832d137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3445a5-11fc-4261-b141-74bf2cf4e57b",
        "cursor": {
          "ref": "0fccee63-7147-4e82-bc5f-80633039cd13",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "99bfa0b0-c844-4447-b27d-66aa9f78c089"
        },
        "item": {
          "id": "6b3445a5-11fc-4261-b141-74bf2cf4e57b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "01f56541-8ae9-4279-97d0-da1c1f0051a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e946790a-326c-4802-998d-b33feeb3ed25",
        "cursor": {
          "ref": "3f3e25d6-f0a1-4f43-9e60-7dc6eabaca65",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c8ce309d-5f0b-4c7c-8a2f-3d0c6ff425a3"
        },
        "item": {
          "id": "e946790a-326c-4802-998d-b33feeb3ed25",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6685664b-fa51-45c9-b209-d856e5cab3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425bb130-7ba1-4895-bddb-b10bf04d3270",
        "cursor": {
          "ref": "017b4a57-f9b0-4a41-8efb-5052e5368658",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "61459a55-1d8d-4ae1-95ae-34674bd729a0"
        },
        "item": {
          "id": "425bb130-7ba1-4895-bddb-b10bf04d3270",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c472472a-2401-41bc-9c40-9b7bbe091c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0956f736-3395-42a8-95ca-b5c24419f68f",
        "cursor": {
          "ref": "ebcd6382-40bd-4627-a600-a3960464fbbf",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49837dea-8be9-4d11-ace2-f02239add36e"
        },
        "item": {
          "id": "0956f736-3395-42a8-95ca-b5c24419f68f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0cedacd8-2bd0-4399-9792-6df52232d775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8617ad3-baea-46e3-8ba6-4c798ceca422",
        "cursor": {
          "ref": "4347a99a-0b76-4b70-9dbe-33cfdca9df4e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d3049f7f-32a8-4c26-a559-aa0381e8312b"
        },
        "item": {
          "id": "d8617ad3-baea-46e3-8ba6-4c798ceca422",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9b5cbab5-e277-45eb-b8a5-6348a4d89844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a89e73-67f7-47b0-9f35-b0739d8b13b1",
        "cursor": {
          "ref": "6b109261-cb49-4383-b93b-017a43cc61da",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6ab2aef5-ad69-4ccb-a324-d2bc1711c894"
        },
        "item": {
          "id": "b5a89e73-67f7-47b0-9f35-b0739d8b13b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "916be0ff-bbfe-46d9-a4d8-2e336091bfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3263c1e-c3ce-425b-8c1b-6c0551f45bd8",
        "cursor": {
          "ref": "c4c3c890-19fb-496e-9a32-18eec2d98d4f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "78d80e6c-4d79-4769-bddb-16bee9ddbc43"
        },
        "item": {
          "id": "f3263c1e-c3ce-425b-8c1b-6c0551f45bd8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cf3c90d3-e508-455a-bd56-c0ab5cbb3159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e704fb3-cb15-47b1-a0b6-4b56a62d992a",
        "cursor": {
          "ref": "122d123a-6adb-4c9f-86eb-06496943519a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "64614e10-b39b-4cc2-85e6-992acd75cf69"
        },
        "item": {
          "id": "8e704fb3-cb15-47b1-a0b6-4b56a62d992a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7a583947-5969-4fda-b736-de947f88a49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2208106-2044-4ae6-95e0-72f2e4bd4993",
        "cursor": {
          "ref": "fa1c2c4f-254f-4f67-a797-8094cf1c35b6",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41f3cc30-4dfb-4c5d-954f-e29261655e4a"
        },
        "item": {
          "id": "c2208106-2044-4ae6-95e0-72f2e4bd4993",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ef56f1f0-9f16-4ed5-adf2-4eb5ee774180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd16ed1-49c8-4a6b-bcc4-1ba2f019fb49",
        "cursor": {
          "ref": "01361a1a-2504-49bf-a7cd-cf1b0da836d8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d3cfd3aa-e535-4a4c-a6b7-83c1e998b0c6"
        },
        "item": {
          "id": "9dd16ed1-49c8-4a6b-bcc4-1ba2f019fb49",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "853eafe3-00f8-4632-b4c0-c911c2fdca1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc37bc92-20b9-4023-b2d5-89b69b93e142",
        "cursor": {
          "ref": "bc668114-c030-4ec1-96ce-8b90493d8040",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "942378e3-5b32-4e45-81e8-62a0b4da9b31"
        },
        "item": {
          "id": "bc37bc92-20b9-4023-b2d5-89b69b93e142",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4db57f73-4d9a-4160-a6f1-90b8421a77c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af9c193-4abe-4bbf-b630-4e3177420a18",
        "cursor": {
          "ref": "36ccb260-185c-4c14-a557-f415c8080bc9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5fa2e13-84a2-4661-928c-79c710c2b4a7"
        },
        "item": {
          "id": "9af9c193-4abe-4bbf-b630-4e3177420a18",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea7d40a2-fb7b-4407-bcc0-4bbdbe8bdab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ca8d3-4c45-4103-bad6-ee7379b4b8e1",
        "cursor": {
          "ref": "d301ed3e-cf11-4da4-af08-e7ee10f962d7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c2273452-c660-47be-a760-245dafc98bdc"
        },
        "item": {
          "id": "6e6ca8d3-4c45-4103-bad6-ee7379b4b8e1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d99a62ef-cb0b-43bd-9053-77234c009196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0abdd64-1a96-4a09-999f-6363867d231a",
        "cursor": {
          "ref": "77ddfa1f-18f9-4c49-9c5b-2a51d9c63f73",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0c4fa31e-0be3-445d-8306-be23eb1b2a0c"
        },
        "item": {
          "id": "a0abdd64-1a96-4a09-999f-6363867d231a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9910e630-5000-43fc-857f-d4254a47ebc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0d8fb1-0cb4-4eac-8f71-de4ddd88053b",
        "cursor": {
          "ref": "1935dd49-83ba-40df-87d0-f7ce468f8068",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c401d89-50f6-44c0-a28d-734262128279"
        },
        "item": {
          "id": "ad0d8fb1-0cb4-4eac-8f71-de4ddd88053b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b11e5ad7-3535-4a0e-af46-dac08a9236f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e42f19-a60e-4a1d-ac73-2df0ba0f2237",
        "cursor": {
          "ref": "c268fe96-8b0a-4a1d-bea1-a91107180cb3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8495a02f-47c3-4976-80f4-c2ded50c167c"
        },
        "item": {
          "id": "94e42f19-a60e-4a1d-ac73-2df0ba0f2237",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "761e1800-912e-4122-8e60-1e5be6ed1e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ae94af-4a6a-4af9-b23c-8130f681db2d",
        "cursor": {
          "ref": "fd41e4d2-d82f-4e60-9586-311669db067c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "487f5565-4bdc-45eb-8726-21c38b2171a3"
        },
        "item": {
          "id": "04ae94af-4a6a-4af9-b23c-8130f681db2d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a101122e-e88d-4aa9-b873-4bccebdfb309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3fdec6-477f-47cc-ad2d-b2bd1838fc57",
        "cursor": {
          "ref": "cca883a9-2fe6-4f70-9695-700694264683",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eef10800-8f8b-4304-b67e-165360014de7"
        },
        "item": {
          "id": "bd3fdec6-477f-47cc-ad2d-b2bd1838fc57",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a3e20be8-c777-4482-a5ef-2aca3c7a6b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd996754-7a27-4d3e-bd44-3925ae9f7aa7",
        "cursor": {
          "ref": "c38a93ec-b559-47f2-a756-3cb48a77c7d4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9a2fb37a-5d35-49c5-be24-c4a006181778"
        },
        "item": {
          "id": "fd996754-7a27-4d3e-bd44-3925ae9f7aa7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e5492771-439c-4806-b1c4-a6cd6f0b7aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179d8be7-1d8c-4e55-bb1e-973bc7426e1a",
        "cursor": {
          "ref": "8341ca8f-e3a7-438c-9e1c-9370a783f5e8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c238dedd-d8f0-45d5-b7d4-8d99c19dff3e"
        },
        "item": {
          "id": "179d8be7-1d8c-4e55-bb1e-973bc7426e1a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aa4517df-2afa-4c35-a9e2-0cafc8d3437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bae8dd8-e106-4c41-9512-c946f74120c0",
        "cursor": {
          "ref": "fe977049-7e77-43c3-8988-9e7a090a7e01",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1f49c687-0ca2-42ad-985d-c34955ad208b"
        },
        "item": {
          "id": "3bae8dd8-e106-4c41-9512-c946f74120c0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8c70d8ee-ef23-4dcc-91d6-77a12e53e4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319b336f-27c9-4ff4-b739-c02eae43750a",
        "cursor": {
          "ref": "b61582fe-c623-491b-86a6-c35d77e613b0",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e287afd3-f3b1-4a21-be13-682db2241fdc"
        },
        "item": {
          "id": "319b336f-27c9-4ff4-b739-c02eae43750a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dcac8887-8c64-41bb-98dc-d37c017467e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec0757c-673a-408e-8af8-d2188469492a",
        "cursor": {
          "ref": "1e6a9146-c7bf-4d47-bea7-0d87a193205f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "181a1478-933e-48eb-8325-6c22036d1532"
        },
        "item": {
          "id": "0ec0757c-673a-408e-8af8-d2188469492a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a83730da-5a8d-4d5c-84a6-e2804ab58d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b456f1d1-26f9-404f-a530-6e559f03d168",
        "cursor": {
          "ref": "4a8413d4-d8fb-4016-b87e-362ab50f6174",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1628953c-ff4e-413b-8451-0d6510895447"
        },
        "item": {
          "id": "b456f1d1-26f9-404f-a530-6e559f03d168",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "70ea4ca3-a8a9-4ba5-bd47-10358b11140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bc4e64-1de9-48b4-810d-15b4d19b5643",
        "cursor": {
          "ref": "0d8d95fd-4205-45bc-8fe8-36d821139daa",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1ee006ca-5463-4969-8d42-5c35fafcd27e"
        },
        "item": {
          "id": "b5bc4e64-1de9-48b4-810d-15b4d19b5643",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2f2346e9-2d20-48a5-9001-e7c3c8a52f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1b652c-b756-45af-aa17-6254f5182ee4",
        "cursor": {
          "ref": "86326b89-712f-4b2b-91b5-65e6e42bdcf6",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9f8ed111-f18f-4f42-a45f-1492798e4525"
        },
        "item": {
          "id": "7f1b652c-b756-45af-aa17-6254f5182ee4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "db728649-3523-4cf1-840b-16061acdd199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd96d1e6-5b32-4edf-a57f-017a69b3115a",
        "cursor": {
          "ref": "f423a4b8-6482-4019-9483-3c389356ecbb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7e6ca09a-eff4-4b91-872e-4e89807d2158"
        },
        "item": {
          "id": "dd96d1e6-5b32-4edf-a57f-017a69b3115a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "18c0e7ac-5052-4a79-b445-71b397031f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae1e954-8a50-400d-9da4-98816442e91a",
        "cursor": {
          "ref": "43ef27ff-ca45-4619-b87d-5e70c160a0b3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f0c05b5a-2da8-4735-b717-d72486c4e1de"
        },
        "item": {
          "id": "6ae1e954-8a50-400d-9da4-98816442e91a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "02d62ee8-761b-4b24-b998-cc1ec74f7014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b082b788-9161-4974-a97d-1a871e6785fa",
        "cursor": {
          "ref": "97f4f9d9-549d-485b-8b9f-7538fb9a5061",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c7762224-8314-44cd-a505-17aec1e9d33e"
        },
        "item": {
          "id": "b082b788-9161-4974-a97d-1a871e6785fa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0a11d4f8-251b-4d79-96ed-eaad7467ff52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024b26ab-aaa2-4139-80b9-c781506f53d4",
        "cursor": {
          "ref": "371e4261-2022-4ee1-a7ae-4fe3052cf75d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "01df9f85-7262-460b-8c01-5808ab46fd4c"
        },
        "item": {
          "id": "024b26ab-aaa2-4139-80b9-c781506f53d4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0ac04fb6-32b6-48ad-acec-b4c89c3afcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f409ddfd-07b4-48cf-b89a-7b0b62bc5373",
        "cursor": {
          "ref": "0d31b6aa-70f0-42dd-9338-8c74c10ef2bd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5f2f49bc-6705-4f2e-a331-13874fb9611c"
        },
        "item": {
          "id": "f409ddfd-07b4-48cf-b89a-7b0b62bc5373",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0722c3f7-284d-45a7-8a64-45d2e4226d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09ae054-984d-4596-831a-72a0b07ffd71",
        "cursor": {
          "ref": "1320c8c5-3d53-49c2-8ce3-573a6cfdbffc",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "faaf5d89-11b6-4b84-977c-2d99e1fc57a5"
        },
        "item": {
          "id": "b09ae054-984d-4596-831a-72a0b07ffd71",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0e141681-0905-4394-8930-028df225cc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e53bc93-a5a3-4d13-b7a4-8b5b363a78e0",
        "cursor": {
          "ref": "94fd0113-6d56-48b9-9d72-c811c87dfc42",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0085dd44-abd9-4a3f-a61a-2e6679c29eb2"
        },
        "item": {
          "id": "3e53bc93-a5a3-4d13-b7a4-8b5b363a78e0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cc7dee22-2903-47cc-bf85-e3a9c7948a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a270b4-1696-46f5-a2f4-14589ca7bb6b",
        "cursor": {
          "ref": "ada7f089-6dc8-42d0-a005-5d74f12fa806",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "411a9056-eccb-43e5-813e-b43486530a52"
        },
        "item": {
          "id": "90a270b4-1696-46f5-a2f4-14589ca7bb6b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c146f548-eb48-4939-b506-b17df963dad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c560360-4250-4d37-b788-021b6ecaa0d4",
        "cursor": {
          "ref": "18f91d46-8138-4521-afb3-b49143168aa7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "df94e3a8-735d-4258-9b24-9d91357b9849"
        },
        "item": {
          "id": "3c560360-4250-4d37-b788-021b6ecaa0d4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "88f23127-9a3e-475a-8d27-60fa83ce07ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ffa131-3e3c-4a39-936b-e7f750e317f5",
        "cursor": {
          "ref": "cfa7812b-b08a-43d2-bb99-e1c4ff3953cf",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06b32475-04c8-4584-95c1-3ea0fcd12cab"
        },
        "item": {
          "id": "86ffa131-3e3c-4a39-936b-e7f750e317f5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8141af6a-6275-41ec-88be-981514d0ec66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0fd90b-dd2a-4147-b474-7acf44466db5",
        "cursor": {
          "ref": "16e06c12-4653-4dfe-b9a8-9d663a3a55de",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "648e4e57-4167-4b21-8fc2-2f4ba4d4c7db"
        },
        "item": {
          "id": "9d0fd90b-dd2a-4147-b474-7acf44466db5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "93d226a0-2908-47a1-ab41-8fe7c72be91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43171ab3-f90c-4398-852a-71d5de5bbfc9",
        "cursor": {
          "ref": "5a1aa107-fbef-48ef-82e4-4ed3ee5a699d",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "81ae8019-8577-4044-8d5f-3a4d187c8104"
        },
        "item": {
          "id": "43171ab3-f90c-4398-852a-71d5de5bbfc9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "03d8e9ee-be35-4fb9-8a90-9370b2da1f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570add3a-6753-419d-9fe5-e4d7114e1d95",
        "cursor": {
          "ref": "118a84ea-25d7-4bd0-a92b-9c95fc4c0383",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8b250679-550f-4afa-a445-a6025f7de792"
        },
        "item": {
          "id": "570add3a-6753-419d-9fe5-e4d7114e1d95",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "78ca8d3c-7a02-4a11-a7fd-89315e4fe6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9d1837-7c21-4785-bdfa-4b19a535bb8a",
        "cursor": {
          "ref": "b34fbfea-b62b-49b3-93b7-3f0488cd5d0e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2f1ad0fa-9b15-4047-9170-44a74787dd67"
        },
        "item": {
          "id": "cc9d1837-7c21-4785-bdfa-4b19a535bb8a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "64e755b5-d608-419b-a3d7-f3a33936d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdec1e16-e48a-4e3d-aff0-57bb74f1228c",
        "cursor": {
          "ref": "60ec0244-9b87-478c-b4b2-ca0d50a85485",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "17be46d9-9637-4a2c-a88b-232091d4f04e"
        },
        "item": {
          "id": "cdec1e16-e48a-4e3d-aff0-57bb74f1228c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e6245c4f-1940-4c89-9550-6d92d542cf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011ee50f-72ef-4f1d-9587-850655a7b66f",
        "cursor": {
          "ref": "8dc11b9a-f952-4188-befa-bed55852d922",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "30633231-a384-4e4d-a7eb-3d2be9b71cdf"
        },
        "item": {
          "id": "011ee50f-72ef-4f1d-9587-850655a7b66f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "08218c7e-cc6b-4c45-b573-f481a037ef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a290e5-382a-42ec-9ce7-e33afa9aa60b",
        "cursor": {
          "ref": "4d18d40f-349d-4840-b2ad-92296e68c9b6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7f6195ad-4ed3-4a29-8141-7714cdc3e756"
        },
        "item": {
          "id": "52a290e5-382a-42ec-9ce7-e33afa9aa60b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d4786da7-0008-4a62-87f1-3698c76db52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f06d446-7c61-4f87-929d-0e2f12d80a88",
        "cursor": {
          "ref": "26767027-cfcc-4e8b-b962-260578205361",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e6bb8452-8054-4bbb-84bf-b165dafac3d8"
        },
        "item": {
          "id": "8f06d446-7c61-4f87-929d-0e2f12d80a88",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0907a389-be39-444a-a6a8-6f3b4089ac56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec070be0-c886-4d69-9188-61229c410a90",
        "cursor": {
          "ref": "61fe8183-d16b-419a-b6ad-7db9ab01478e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b2081005-ea09-4d39-a799-1b5e5f2290f6"
        },
        "item": {
          "id": "ec070be0-c886-4d69-9188-61229c410a90",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "53dcd473-b297-4c8c-86c1-e9f8aa11d17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e967e0-f8bf-410f-95d0-a489f6599d80",
        "cursor": {
          "ref": "a3715a67-a380-4dea-b221-c700aadac3fd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "735eaa07-e052-41da-b35b-aee577b693be"
        },
        "item": {
          "id": "26e967e0-f8bf-410f-95d0-a489f6599d80",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3f5a8dbd-27f6-4327-b910-22ab99eef608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21084b62-ec53-40fd-b7cf-3e8ad69533dd",
        "cursor": {
          "ref": "d8cca23d-6441-4d02-81f8-d292e6c1886e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "68bb6b6d-7886-42f9-8f6e-0ce9716f5d9c"
        },
        "item": {
          "id": "21084b62-ec53-40fd-b7cf-3e8ad69533dd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c27347e0-307e-43f8-a448-e88c9d8bdfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804fe4c5-d72e-4ea3-a852-937591436ec5",
        "cursor": {
          "ref": "9ca045f2-843d-4189-8582-2566df0dfbbf",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "26bb7724-f342-4f77-a054-e6a512324c20"
        },
        "item": {
          "id": "804fe4c5-d72e-4ea3-a852-937591436ec5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "421c4a00-9bce-4b84-8d15-ca4f7fa0f2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c08bef-d2e1-48aa-9ca5-9974dddb0a78",
        "cursor": {
          "ref": "fb1986ee-95ca-4979-a962-998f4eb3cf78",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c6d24923-e5c8-47b4-8d8c-32dcf1a5d0bc"
        },
        "item": {
          "id": "a2c08bef-d2e1-48aa-9ca5-9974dddb0a78",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a03e931f-b4ed-49de-a8d8-c7ffe5bd96d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afb5c3e-3a70-4416-ba36-febfdf27665f",
        "cursor": {
          "ref": "7aa47e39-9b24-4618-b666-e52577bf5ace",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a1f6e2e-7fab-4e57-b749-44beedbb6601"
        },
        "item": {
          "id": "4afb5c3e-3a70-4416-ba36-febfdf27665f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "711716ab-d72a-441d-ab5c-097578f2c1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada7c173-9272-4196-8892-1ab79495eef7",
        "cursor": {
          "ref": "a3b954c1-97de-482a-9a27-ae7739af7f08",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a6e43f8b-8f9a-4362-8109-ebbb45578c20"
        },
        "item": {
          "id": "ada7c173-9272-4196-8892-1ab79495eef7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0993dad9-77e9-4a1b-8382-c356128f74a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a217ce-9e1b-44da-9b12-bf95d8607309",
        "cursor": {
          "ref": "a9583382-b579-4e7d-a889-c25628cf6a99",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aff866d0-ac42-4935-968b-a9e4fb488587"
        },
        "item": {
          "id": "b9a217ce-9e1b-44da-9b12-bf95d8607309",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "acc854e1-132d-4045-8aa9-ef3dc6573fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc3d220-d4c7-4d22-9c5e-c6c85a917c4b",
        "cursor": {
          "ref": "ae9d9972-224e-49df-b1c9-776e1e7760df",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "306c4755-c979-482e-b713-4dd870f02ac0"
        },
        "item": {
          "id": "dcc3d220-d4c7-4d22-9c5e-c6c85a917c4b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9f1ff5e7-e632-4118-82cc-cafde52aa44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a08a5b8-9717-4ba6-8dcc-32bb85498e90",
        "cursor": {
          "ref": "42596877-27df-4bf6-8d62-00114363f624",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cbd33f86-8361-4c17-a05f-ee4dee69529c"
        },
        "item": {
          "id": "6a08a5b8-9717-4ba6-8dcc-32bb85498e90",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5d69cb94-eb38-40a2-92b9-4d667b5c65bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a58fc3-d42d-4d97-a3b9-a7702c00297a",
        "cursor": {
          "ref": "ff56521f-5855-46d2-aefb-44ab8510ba7c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fdf56d10-5dd3-4171-8d8a-070533a56081"
        },
        "item": {
          "id": "03a58fc3-d42d-4d97-a3b9-a7702c00297a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d75fd16e-1a17-4965-84d5-77fd166f1688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361e3065-9f7c-4a8a-8af9-adc4d0e16901",
        "cursor": {
          "ref": "df7c0dfd-4a22-4394-8dc5-3807bfecf7c6",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "46e8aa8d-9f88-4d3b-a8ca-ef23ae4b9e02"
        },
        "item": {
          "id": "361e3065-9f7c-4a8a-8af9-adc4d0e16901",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "74ccb40b-1c48-4052-8bb6-9f6f8ba2dd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a278b332-ad6e-4e05-8a63-88f10cbd7a57",
        "cursor": {
          "ref": "17dc4d2c-3b7c-4f2f-8f41-a787716eed97",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "db074770-5ea0-4102-9d8e-59afd615519a"
        },
        "item": {
          "id": "a278b332-ad6e-4e05-8a63-88f10cbd7a57",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a795dad5-3c14-4bc2-8c60-fe1eec79c267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6114fa-f38e-468d-afd4-9c8dbd83c1b4",
        "cursor": {
          "ref": "dc35cfe9-6538-42ba-929b-24239af0c704",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "371623cc-84c4-4715-ab52-c22ec5486a41"
        },
        "item": {
          "id": "6f6114fa-f38e-468d-afd4-9c8dbd83c1b4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3e1b6036-4d7c-44d5-bcba-03c42af88470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9aea3e-fa1a-42b2-9bfe-704da27a8267",
        "cursor": {
          "ref": "236c8c95-eba3-4d9b-9893-d90167fe1be6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ff526551-0962-4480-8edd-aba79a881f3e"
        },
        "item": {
          "id": "0f9aea3e-fa1a-42b2-9bfe-704da27a8267",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1e572a2f-0b63-4fef-8e8d-047cd18fa71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6730c3ed-a5fc-4979-9584-32f62de8475f",
        "cursor": {
          "ref": "9f60d5ec-7c28-4244-845f-fc0b7299b906",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "059697b7-5de3-48c3-98c0-f9e731df4256"
        },
        "item": {
          "id": "6730c3ed-a5fc-4979-9584-32f62de8475f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "42b1a20f-7a25-44b8-bef5-3ba182c7fbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaf6f1e-fd50-41dc-9242-17eac8f8f795",
        "cursor": {
          "ref": "72a51323-4753-4779-b9a7-9d6579d5e74f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "810e63ab-8370-4765-8823-8910bf6628c1"
        },
        "item": {
          "id": "abaf6f1e-fd50-41dc-9242-17eac8f8f795",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5a98b334-d48a-4598-8b05-51ab5a42f788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ae2fce-4cd8-470a-b7b0-a69c6bdeebc2",
        "cursor": {
          "ref": "33686712-ed1d-4911-bd4b-d20038b4297a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eee67d93-8b10-43e2-8176-c66a486805e4"
        },
        "item": {
          "id": "78ae2fce-4cd8-470a-b7b0-a69c6bdeebc2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d6118c51-9c0e-4fbd-a3ad-5720b46d3870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff3d5af-afdb-4013-9616-78db2ac44330",
        "cursor": {
          "ref": "619c2aa1-87eb-4613-9f30-cc92aed8c683",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a164437e-3b8a-43de-a9c6-055cd2cf5c1b"
        },
        "item": {
          "id": "4ff3d5af-afdb-4013-9616-78db2ac44330",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c75a31dd-b09d-41e2-a2dc-c6ea6b9bb8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f8b0f5-18cf-4bea-bcb8-e3c0a7a8fabf",
        "cursor": {
          "ref": "068eea60-b8e8-417c-abd9-6ff6349acb72",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "50586b9f-4f36-4341-a744-d81877b6aaff"
        },
        "item": {
          "id": "96f8b0f5-18cf-4bea-bcb8-e3c0a7a8fabf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0e830b01-ebde-4b83-b833-b95bee15e5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce56caf-91bf-4ce4-87b1-68cba398e227",
        "cursor": {
          "ref": "8d130fa5-7b5d-484c-80dc-167682300b73",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5624ab02-8601-4988-9f77-0f209cb0e8ed"
        },
        "item": {
          "id": "0ce56caf-91bf-4ce4-87b1-68cba398e227",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "228bf019-ca10-4ac8-a669-422b0ffcd6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdae8063-0615-42a2-9120-04ffb2b305fd",
        "cursor": {
          "ref": "8da8145b-49fc-40ad-a53b-1296cba3835e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d2358859-f9bc-4b49-8289-e233832e87d9"
        },
        "item": {
          "id": "bdae8063-0615-42a2-9120-04ffb2b305fd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c20ff0a7-fc79-40f1-9da5-0978fd046bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdf34c1-78dc-4529-8c5a-1c64be75c408",
        "cursor": {
          "ref": "558cfd89-e126-461e-a659-94e600bb665f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fb75e247-aa34-457f-b6de-da96fb07b68d"
        },
        "item": {
          "id": "ffdf34c1-78dc-4529-8c5a-1c64be75c408",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2129459b-4742-421e-9a06-3445b7168cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33da0b2b-2f07-46e2-8914-e4e655f33d17",
        "cursor": {
          "ref": "031d1bbe-af95-498d-94e2-861b4c306275",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "34a70dbc-ca9e-4b36-b094-9333218eeb4c"
        },
        "item": {
          "id": "33da0b2b-2f07-46e2-8914-e4e655f33d17",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1ca32b16-dc21-44a0-893d-b310c51b41a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56091d36-24b0-4570-b184-6e47da7c8dcd",
        "cursor": {
          "ref": "a863885e-f885-4e41-aa94-04a866caeb9d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e4dae35d-aed5-436a-9c86-8883c3fe1958"
        },
        "item": {
          "id": "56091d36-24b0-4570-b184-6e47da7c8dcd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f9134c0e-062b-4fba-b2d4-ab24f539df59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b135fff-3f41-4507-b79e-5e36d19979b1",
        "cursor": {
          "ref": "3f08b390-e960-4be9-99b7-ab51531e7b37",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6fb5de73-e8ad-4bb5-8265-db814f104a42"
        },
        "item": {
          "id": "0b135fff-3f41-4507-b79e-5e36d19979b1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8f188cd1-487c-4b4c-bbd6-5c368e35e25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3e2af2-e65e-46a1-8c70-fdea616e40be",
        "cursor": {
          "ref": "fe81a413-4be9-44a6-acaf-5b05a14201cf",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "805b9843-cb1b-410b-aed4-433849deb366"
        },
        "item": {
          "id": "0a3e2af2-e65e-46a1-8c70-fdea616e40be",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6182c572-1204-4c6b-b40d-1de033618596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce37184-87bd-44cf-9da8-664db48cbe78",
        "cursor": {
          "ref": "d7c3663d-afad-47ce-ba0e-d9c104102964",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c51a4b75-1389-4236-b83d-3d6d5efbb433"
        },
        "item": {
          "id": "4ce37184-87bd-44cf-9da8-664db48cbe78",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d376262d-a62a-4ad5-b46f-cbcd250dea22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e833e3e0-464b-4018-8c65-00d42e014c0b",
        "cursor": {
          "ref": "9e460032-8064-4870-a843-1986e1ed1756",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8deb39d6-e95e-49bd-8466-13761852b8bc"
        },
        "item": {
          "id": "e833e3e0-464b-4018-8c65-00d42e014c0b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "37e10b33-1e89-42c9-8088-1d6556098118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d032ee32-cb5f-47ff-85c4-f8f4ebbb40d5",
        "cursor": {
          "ref": "0c2f67e1-c976-4c22-b1fc-4f79d946f7d2",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0621905b-3ac0-464b-b49f-0b535cdb4cba"
        },
        "item": {
          "id": "d032ee32-cb5f-47ff-85c4-f8f4ebbb40d5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1e76cc23-4bc4-437c-b05b-096235c4863e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba803960-86a7-4a7b-9c08-4907bbce6dbc",
        "cursor": {
          "ref": "0ba7d7f6-3707-4ea3-bbcd-471e2c453ebe",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "85b8805f-153a-42f9-8c9c-3159e95000f9"
        },
        "item": {
          "id": "ba803960-86a7-4a7b-9c08-4907bbce6dbc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ca79ef3f-b0cd-4b61-9b8d-8b5ea9093f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4b1bec-e537-45ac-afc2-5776abc9cbcf",
        "cursor": {
          "ref": "e9be7714-c214-4334-9e26-20828f64e1b6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a26f5223-99cb-4011-b2aa-a4096581dc5b"
        },
        "item": {
          "id": "8f4b1bec-e537-45ac-afc2-5776abc9cbcf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "780f7288-7c89-4116-899c-ed6ecacc8fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eed594-a3d8-4925-a115-f5da3d603fa6",
        "cursor": {
          "ref": "d556a4e6-f623-4e6f-9ad9-3b8a9c5bf8aa",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6e344ff0-4644-4a4c-b1b7-32e52ec75596"
        },
        "item": {
          "id": "65eed594-a3d8-4925-a115-f5da3d603fa6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "10e2e83e-9117-49ca-9e32-182e49817eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b36f15-87d8-4f74-8592-a39e1dea88ff",
        "cursor": {
          "ref": "5746707a-95ea-4838-b714-f46d92e187c9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "97f2b1bd-5e36-467b-919e-932e4250f2d1"
        },
        "item": {
          "id": "26b36f15-87d8-4f74-8592-a39e1dea88ff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "04edae8b-9094-4524-8d82-1129e5b72e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fc51f7-7b0f-490e-8682-4f342acaf88d",
        "cursor": {
          "ref": "49fc1bb4-727f-4c3b-9177-87cffa273abe",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ce933fda-ffe3-4a5b-84ae-0114c84729d0"
        },
        "item": {
          "id": "46fc51f7-7b0f-490e-8682-4f342acaf88d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "24eb4318-14d7-40bf-9904-0c33ff6a1bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dcbba9-6d40-455d-82a5-88a8196f7d15",
        "cursor": {
          "ref": "15ac1834-d348-48b8-bbd7-bcee5eb25a01",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "02844259-493d-43d1-a813-69cc1785acb5"
        },
        "item": {
          "id": "83dcbba9-6d40-455d-82a5-88a8196f7d15",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d15fb1b5-39e2-4ee0-9ce0-7e5da68c3238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22bb2d-4cf8-4467-af3b-69beb0fa692b",
        "cursor": {
          "ref": "a4f3b73e-03f7-48fb-950c-8381132395d3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "54443792-657f-4874-af4e-13ca08463742"
        },
        "item": {
          "id": "ba22bb2d-4cf8-4467-af3b-69beb0fa692b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "19ab0359-f15c-4f53-9012-97adfc1dfc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d2788e-98a4-4a04-b1ec-72a2828af3f8",
        "cursor": {
          "ref": "f5a56486-8639-41c4-8dfb-abba32c514b6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ee82f50f-238f-45e3-bfec-200c60a1f139"
        },
        "item": {
          "id": "58d2788e-98a4-4a04-b1ec-72a2828af3f8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fb611b39-e832-40eb-9312-f7a6101470bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cb55e4-06ae-4813-b6df-8570d332c919",
        "cursor": {
          "ref": "11770aeb-b481-4d96-bb7f-76443beb976d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3dab4e01-ee0b-4fc8-bcd2-16cd062a20af"
        },
        "item": {
          "id": "24cb55e4-06ae-4813-b6df-8570d332c919",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bbc2d969-c2d7-4a78-8559-c05c863e360f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83d7019-b18b-4806-8695-f072c7ce389b",
        "cursor": {
          "ref": "1b3a5077-cb56-414d-98f3-8c58b71d758e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bde62859-4da9-4098-b90e-4b966da70106"
        },
        "item": {
          "id": "c83d7019-b18b-4806-8695-f072c7ce389b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a94bf726-efd0-4736-a317-afa979dabce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd47f90-3635-4756-b79e-34fc0c0d07d9",
        "cursor": {
          "ref": "5a2c93c4-7819-4a76-861c-33150d5dae7c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "65cc241c-f61b-483f-8e18-b9c86b9d0572"
        },
        "item": {
          "id": "cfd47f90-3635-4756-b79e-34fc0c0d07d9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ea31e6d6-325b-49ca-b65c-ddfca39ee52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccf17bb-2816-4ee3-b1c4-7ee792982f29",
        "cursor": {
          "ref": "2c48400d-033d-41ad-a7bd-2cf4a4a28bcf",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cecb131c-a647-4795-9c16-e74631b5d57b"
        },
        "item": {
          "id": "fccf17bb-2816-4ee3-b1c4-7ee792982f29",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a797987c-b105-4daf-8da1-ab7bba5ac532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88344bc-b7c9-4269-a78e-183662d1c906",
        "cursor": {
          "ref": "97ac8a12-9267-4e74-849e-a349d2e47825",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "36a6d3e4-7b66-4d1b-acc7-0394c8fd5c79"
        },
        "item": {
          "id": "a88344bc-b7c9-4269-a78e-183662d1c906",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e78a5c24-389c-4988-9ac2-9209b41d971b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ad77b1-6e3d-47fb-969f-51be187d1d6d",
        "cursor": {
          "ref": "5ee9699e-9765-40ab-9816-5a295e5c34e9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a4887fdb-fc0f-424f-95a5-7a2deebaf7da"
        },
        "item": {
          "id": "f1ad77b1-6e3d-47fb-969f-51be187d1d6d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6559a94f-35bc-4b5c-aae3-9ee85fc94fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388638fe-eeb0-4043-8b0a-120ddbe9cbee",
        "cursor": {
          "ref": "ee3683d2-ba1e-446f-b70f-f727067887bc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8ccc979d-ceaf-4150-8aef-4f7353020dea"
        },
        "item": {
          "id": "388638fe-eeb0-4043-8b0a-120ddbe9cbee",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ef5f7735-3bb2-41c1-b38c-b2bdfc3755fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c809f6-9fec-4acb-a39c-fd478e422d95",
        "cursor": {
          "ref": "1ce43c1c-0415-4893-ae34-b43f5ad77abd",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "255e6fe4-e4c6-4a77-a809-9426aaec3e20"
        },
        "item": {
          "id": "38c809f6-9fec-4acb-a39c-fd478e422d95",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fd1157bd-cda0-4472-9a6a-55f709f6d485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bee65d5-4a8b-4920-bccf-d9f490ba403f",
        "cursor": {
          "ref": "011c8506-9c85-4c1b-aca6-a65bb41ae1f8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bb9c8034-83cb-49fd-9dff-b01a467c09a0"
        },
        "item": {
          "id": "6bee65d5-4a8b-4920-bccf-d9f490ba403f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e8673152-6b1f-4a41-9de8-25964e92e8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e8f45c-85c8-4e79-809e-5e78d0f2c0db",
        "cursor": {
          "ref": "133390ca-a7e6-436c-9f76-a0d594384527",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e9a25357-3f74-4840-869a-adddf86a1704"
        },
        "item": {
          "id": "a7e8f45c-85c8-4e79-809e-5e78d0f2c0db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "114026b9-7d4c-45b8-9fe8-50c08bd7f148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7f914f-8c85-4f26-896e-8a047078f201",
        "cursor": {
          "ref": "aeb877b5-3dd3-4d54-a907-a6d25826c7bc",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2f9d402b-9901-497b-ba6c-04290e248961"
        },
        "item": {
          "id": "bf7f914f-8c85-4f26-896e-8a047078f201",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "59b6bef3-6332-4453-b683-4c8a995e8c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56ba452-b0a4-4b06-964b-5a2560ae0576",
        "cursor": {
          "ref": "674cb43e-afb1-46c3-b9eb-1630fb0c1b63",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "54d1bc41-4948-4afd-8284-73cddfe87a4b"
        },
        "item": {
          "id": "b56ba452-b0a4-4b06-964b-5a2560ae0576",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2205c32c-ae34-43d7-89b2-677d92b9a831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c43fc8a-e360-47aa-81c5-3869aad76413",
        "cursor": {
          "ref": "146fde0e-1a89-426c-8fd7-8a84df933605",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9bd7b2d7-6ce5-4bbb-8fd8-cca5a9fbd16b"
        },
        "item": {
          "id": "0c43fc8a-e360-47aa-81c5-3869aad76413",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "01e10e65-21fd-496f-800d-1d3f8237cc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bbc650-2a95-4ed3-b528-5032b2987260",
        "cursor": {
          "ref": "59ebf15e-4e86-48c8-a058-f9f830ce28e3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2582f42a-64e8-44dd-ad3f-ea5432305511"
        },
        "item": {
          "id": "c3bbc650-2a95-4ed3-b528-5032b2987260",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eb99d542-a646-48dd-bd51-2f36340d2a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47b3df4-9ab5-4326-8d34-f1edcd6d4354",
        "cursor": {
          "ref": "230be417-52d0-4534-83f0-3f4e7fd57ca5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "173ef2aa-ef26-4d86-a2d0-2e943f92b664"
        },
        "item": {
          "id": "f47b3df4-9ab5-4326-8d34-f1edcd6d4354",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9e2c3db5-865f-4097-8634-4e4e7eae8a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc13277f-008d-4f15-9ab7-0c36317dfb70",
        "cursor": {
          "ref": "95623706-a4bc-4b19-8834-f4f049f3098a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "14263b6a-a035-48c7-aa6e-14b91c5caf67"
        },
        "item": {
          "id": "bc13277f-008d-4f15-9ab7-0c36317dfb70",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "eba87dd9-a50a-4984-9ab2-561dae97a846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20adefe9-e91f-4158-9419-8b1cb0c1f6d6",
        "cursor": {
          "ref": "2ab040e3-622d-4e24-be54-feece9c78d00",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "78d22c6f-e0eb-4839-9452-ca8c9e586fa3"
        },
        "item": {
          "id": "20adefe9-e91f-4158-9419-8b1cb0c1f6d6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8ab8525a-e061-4d8d-9058-00d990561a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d53785-7654-45cd-b8fc-006a4c0c57d8",
        "cursor": {
          "ref": "81073204-43ec-48b6-8d00-2ec17f3daa7a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "097ad14e-6e58-4fba-9486-bd43bc9f2334"
        },
        "item": {
          "id": "71d53785-7654-45cd-b8fc-006a4c0c57d8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "90ad77b1-d330-49e0-a9e0-77af53bf1773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be5f0fd-fc50-4908-a7ab-e82c31c6af63",
        "cursor": {
          "ref": "de850f22-9b65-4d97-8a30-b31babecdf1d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "804a621d-a0f2-4bfc-813a-687aba658c98"
        },
        "item": {
          "id": "9be5f0fd-fc50-4908-a7ab-e82c31c6af63",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c2e62321-49db-4b5e-9a94-87033d5aac42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddba6d8-fae5-4b7f-bb59-866bb3979ff6",
        "cursor": {
          "ref": "db3dee42-37cb-4458-a3ee-35f87e673080",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "92a7b4f7-d9e6-4e5a-b495-97c5326f3776"
        },
        "item": {
          "id": "0ddba6d8-fae5-4b7f-bb59-866bb3979ff6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6ce30f64-662f-431a-8e62-6f5c5801f6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75201a87-3bba-44c4-a8c1-f3111e830b24",
        "cursor": {
          "ref": "cb67d692-a598-423c-b2d7-9e717f0a9b81",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "65addd77-b8b6-4f91-8178-226d2d77c450"
        },
        "item": {
          "id": "75201a87-3bba-44c4-a8c1-f3111e830b24",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1ab2f799-1654-42bc-8cc1-e1c9f8df4c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617972b5-c929-44cd-b605-a23d53042ff2",
        "cursor": {
          "ref": "c3c0423c-b8e5-4f5d-8454-56afde03d33f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1310c23f-d0f8-4d1d-8ea7-cd2cbe38dbbb"
        },
        "item": {
          "id": "617972b5-c929-44cd-b605-a23d53042ff2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "19f5192f-e15b-4491-9a24-0b59af6bc1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5c2c91-138e-4e99-ae55-dcd71bb9f0d3",
        "cursor": {
          "ref": "1526d0cd-95a7-43ce-a547-0ea3ef8c555f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68071237-dd4f-41e7-be17-460adca3b07a"
        },
        "item": {
          "id": "1d5c2c91-138e-4e99-ae55-dcd71bb9f0d3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ccfe11d6-e242-4615-a470-f4a4dd3d5e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0f68c0-2fd5-417e-b0e5-a86d249cfea7",
        "cursor": {
          "ref": "776a4c6d-8376-48e9-9900-52935f86a75a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "95083539-663f-4921-803d-b946ff03e1b1"
        },
        "item": {
          "id": "bf0f68c0-2fd5-417e-b0e5-a86d249cfea7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dc7acfe6-98f9-4e34-81c2-4a2b37ad0f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba49b8c1-d7d1-4921-8cbc-aeced525bf8b",
        "cursor": {
          "ref": "f8f765d1-9ec2-4de9-a6dd-4ce2dcea3986",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "762c4b83-9186-4d8e-b060-01bab4ea1bb9"
        },
        "item": {
          "id": "ba49b8c1-d7d1-4921-8cbc-aeced525bf8b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f4e0c7d6-0f4f-49b4-b845-438a3031ad73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2da6aae-cae2-4283-870b-5dd34ea13c35",
        "cursor": {
          "ref": "397f0043-14f4-4ce4-bc1c-58e4065f0a08",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2ad33637-d3f2-4dcb-988b-ff2d04457546"
        },
        "item": {
          "id": "f2da6aae-cae2-4283-870b-5dd34ea13c35",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "413d1d5f-b38f-4738-a799-de4f155bfc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd37f0-86da-420b-8b8a-8a8c4c3f6730",
        "cursor": {
          "ref": "50a61f22-4fb5-4086-9160-6460fc4fe25f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "81ccad00-df3b-4ea6-a2c4-65ace40c8ed2"
        },
        "item": {
          "id": "65dd37f0-86da-420b-8b8a-8a8c4c3f6730",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "04903b3a-dfd8-4d4d-8c08-4bbc703448ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee843694-fe4f-4e98-a69a-13a6c7e6c43d",
        "cursor": {
          "ref": "dc6425a9-a465-48e8-8143-e11b518ae04c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e49b843d-9eaa-4960-93a0-078a34fe7a4b"
        },
        "item": {
          "id": "ee843694-fe4f-4e98-a69a-13a6c7e6c43d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "aee89de1-dc19-4acd-9719-12dd2ad526c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d503e0a5-664b-4ef6-9d20-43d6580a147d",
        "cursor": {
          "ref": "b920e972-b2e3-41e2-8f19-581e3e439369",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2f9e48b8-57fd-4374-8b80-5c1aaf6afcca"
        },
        "item": {
          "id": "d503e0a5-664b-4ef6-9d20-43d6580a147d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "58c39bff-3dbd-4ee0-ba21-00a53afb91ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e969cc65-bdbd-4f9a-9013-7a3630c11826",
        "cursor": {
          "ref": "36e930f4-7685-4492-a32e-9c0d8e0ab799",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "212650da-8457-4db4-ac16-64535e96d5c0"
        },
        "item": {
          "id": "e969cc65-bdbd-4f9a-9013-7a3630c11826",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6e289832-8904-46c8-965d-3bc128fee0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef610454-f16b-4779-921f-1f3112a832d1",
        "cursor": {
          "ref": "f8d55469-3279-4f05-b728-71495829af5d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d2de637d-87cb-4b4e-85cf-ea396bb90b41"
        },
        "item": {
          "id": "ef610454-f16b-4779-921f-1f3112a832d1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5dfda1d0-8719-437c-a990-04d412f8a1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a3cb01-b0b6-4219-8065-d466a0d74475",
        "cursor": {
          "ref": "69e6b711-26f6-46f3-8181-68aa66e3d3de",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5f398412-cc54-4652-a2ea-6777c545e4be"
        },
        "item": {
          "id": "91a3cb01-b0b6-4219-8065-d466a0d74475",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "345adfbd-9d14-4c55-b541-4284f0ad4c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a87c18-8559-4d59-bd78-98ab7cfc4dd4",
        "cursor": {
          "ref": "490fa8ce-3926-45d6-bda8-08fc21615c56",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "386bc020-e388-4f45-aeec-6d40b8183fa7"
        },
        "item": {
          "id": "f5a87c18-8559-4d59-bd78-98ab7cfc4dd4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "be140854-0f64-4c84-8b0a-ed69c2afab8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0f7bb2-a711-48e7-bc2b-7ca47f71c79d",
        "cursor": {
          "ref": "e6ba53fd-a070-451d-9e6e-b386d5b60df1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "94a9f596-29fa-4ee7-a0fc-db34e79c6d53"
        },
        "item": {
          "id": "8b0f7bb2-a711-48e7-bc2b-7ca47f71c79d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a49298c2-d966-491a-bc02-08c18dcfec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98029d8c-2b42-4cd3-bc8d-070e0543df4c",
        "cursor": {
          "ref": "e0e481f6-31b3-47ad-8905-03328a2fe998",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "500e9fdb-1f7f-4b4e-ad73-4fe9193bdb36"
        },
        "item": {
          "id": "98029d8c-2b42-4cd3-bc8d-070e0543df4c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c42db517-6dbb-4113-9184-581a3b4ce4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afdebf7-4a27-4a45-9895-26877838fcb7",
        "cursor": {
          "ref": "ab0586ae-34b5-472b-bb3e-2873887067b7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a0a1e207-5f4f-47f6-9ac5-adf67ec12cf9"
        },
        "item": {
          "id": "3afdebf7-4a27-4a45-9895-26877838fcb7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "819dc3e9-9ade-4d07-8d70-ef611e29bcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af6a837-db2f-4f61-8104-3f30cec11ed8",
        "cursor": {
          "ref": "617a83c4-e596-4a97-90f1-81fb83403ed8",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d012feb5-3615-4d58-89d8-85b938f507c2"
        },
        "item": {
          "id": "6af6a837-db2f-4f61-8104-3f30cec11ed8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "256a2e47-dd3e-4a25-a9a5-a00d6ed868ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93174bd-488b-435b-add7-38288d35deec",
        "cursor": {
          "ref": "82b529b0-6857-4435-bf88-92dbe568a45f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "07eb52c9-04c5-4338-b72b-fafbaa517574"
        },
        "item": {
          "id": "a93174bd-488b-435b-add7-38288d35deec",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f03e8eb4-fbad-413c-9807-ea56b50a7bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e54afd0-5bb1-45c1-aa30-8a2811458b77",
        "cursor": {
          "ref": "b99e5477-b50c-485a-b8be-7d9cf89f13b6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f3db9392-bdf3-4037-827e-87b5e857f9f4"
        },
        "item": {
          "id": "6e54afd0-5bb1-45c1-aa30-8a2811458b77",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bb48c4f5-9c8c-4f6d-9f8d-76280057f0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7376e5-a82f-4bbf-887b-24a22a855c79",
        "cursor": {
          "ref": "99361ef7-b9da-4450-b7e2-e02273cb0661",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b5eed708-d6ad-4f41-91e0-b0f270c4c5a1"
        },
        "item": {
          "id": "ad7376e5-a82f-4bbf-887b-24a22a855c79",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6d3ff8e6-81f7-447e-bc6c-e2ef5c667ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca28159f-ea9b-442c-956a-39f94108bc43",
        "cursor": {
          "ref": "91664557-3bc9-43df-802a-75e0f52b159b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "552f6e16-8179-4e89-9067-c8cb7c44efd5"
        },
        "item": {
          "id": "ca28159f-ea9b-442c-956a-39f94108bc43",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "06a08c78-1829-4ec6-bd61-06084cb84010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1939c24-b4ca-4acd-b288-2e61ca7ea353",
        "cursor": {
          "ref": "5807d360-0111-404d-96fa-a2d36ef2d74f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a4c25418-bf90-4bd6-9ad0-10fbe1ac5c08"
        },
        "item": {
          "id": "a1939c24-b4ca-4acd-b288-2e61ca7ea353",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8ca51985-c9fa-42a4-9eef-76f455d6d265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1d1e34-b89b-4e90-a860-a2871f8f867e",
        "cursor": {
          "ref": "9c77e802-77f6-4772-b8c6-affe1ab9746d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c40ff7e8-16c5-4f21-a70d-5847f630b067"
        },
        "item": {
          "id": "5d1d1e34-b89b-4e90-a860-a2871f8f867e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "225fe917-3a8a-4fd6-a56b-65d7255389f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34695a3e-29f0-423f-8541-7fee21e336d8",
        "cursor": {
          "ref": "8962f103-0ad4-4fcb-99ac-d8cd4fb62368",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7b9f4507-202f-4e13-a724-d11d5e81b0fa"
        },
        "item": {
          "id": "34695a3e-29f0-423f-8541-7fee21e336d8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f16f1b3b-5690-41ca-8971-7a5af65ce721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa710c5-c430-48e9-ab11-9ae89cafe6c8",
        "cursor": {
          "ref": "cea70a54-197e-4efc-8f86-9aa0f1a0b9b1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cbefa322-6085-4870-9081-2f0cef4b87ae"
        },
        "item": {
          "id": "7aa710c5-c430-48e9-ab11-9ae89cafe6c8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c30a6f7a-5277-4ca0-aee3-06ec3b6c9084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcd9ab6-f5bd-4c8b-b7fa-f981d1f533fa",
        "cursor": {
          "ref": "d76f7630-c8dd-4272-a927-643802939ff6",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "84beb57c-1b4a-4fd1-8ff6-be7f9e7a4b1d"
        },
        "item": {
          "id": "adcd9ab6-f5bd-4c8b-b7fa-f981d1f533fa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2866ef14-c845-462e-a3ee-9d3b6aedcbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2419edb8-8981-46d1-ba20-f81002cdfc5c",
        "cursor": {
          "ref": "dee44782-8d2c-415b-8df3-e6dcd1bcf475",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "89256897-9b8f-4817-bf57-31c8c464c03f"
        },
        "item": {
          "id": "2419edb8-8981-46d1-ba20-f81002cdfc5c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0bac556b-1348-4447-8995-f73ed7f2decc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346cf47d-5793-45d5-a7bd-0d0c72d2e1b5",
        "cursor": {
          "ref": "59d0891a-9808-4378-9e2c-c0ce4e529f16",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "58313b2c-2064-406d-8a2b-f19292d914ba"
        },
        "item": {
          "id": "346cf47d-5793-45d5-a7bd-0d0c72d2e1b5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b18d2d0f-e1ab-44aa-b44c-05b7544d4e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5927739-5e8d-48ab-8e0d-7daccda0100f",
        "cursor": {
          "ref": "ad86bb9c-ba8a-4ff6-9571-73a41cea181a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "566e224a-a4a9-4164-a0cf-f4a5cf180244"
        },
        "item": {
          "id": "e5927739-5e8d-48ab-8e0d-7daccda0100f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b95c6ce9-5ef7-4451-b89e-3f1488cf07b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff89bd9-d218-49dd-bd3f-4920e1aa1d8d",
        "cursor": {
          "ref": "54ee02d3-d5bf-44d5-8ce9-8eec6cac6694",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0c101882-7f48-475f-a296-1d8895dbadae"
        },
        "item": {
          "id": "3ff89bd9-d218-49dd-bd3f-4920e1aa1d8d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5e13ac04-4a77-4f84-8dd7-2d32abef3149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8bce6f-64d5-4004-b38d-7be95f3abe04",
        "cursor": {
          "ref": "643977fa-a48d-474a-9d7f-818f467345bf",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b69775a7-8b30-4e09-ba6b-cca75275aca0"
        },
        "item": {
          "id": "aa8bce6f-64d5-4004-b38d-7be95f3abe04",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "adacd1f6-fbda-428b-96d5-9a43acfa82bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cace7d69-2477-4255-83d9-b96ed2d2228f",
        "cursor": {
          "ref": "fddecb23-cf68-495f-b568-964436c7dc59",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "75cbdc0f-d663-4c57-b88c-de8aeb2235fc"
        },
        "item": {
          "id": "cace7d69-2477-4255-83d9-b96ed2d2228f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "93311687-39a9-4a1c-b331-ae600c1767c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f464fa2-af01-4433-aa43-459b7aa95aa3",
        "cursor": {
          "ref": "c18c8477-d95b-4f6a-9abf-89f35f5572c1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7206ceaf-fa5e-4d90-9a2c-e99f0aca73e7"
        },
        "item": {
          "id": "6f464fa2-af01-4433-aa43-459b7aa95aa3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c62910de-1237-4e9d-a7fb-ad7b64cd4197",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec943cc-08ef-4291-b8a8-0465aec93914",
        "cursor": {
          "ref": "48dfcfa3-674d-419f-aa05-855ceb17c747",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "880425a0-e434-4509-b4f6-ee2eca12619d"
        },
        "item": {
          "id": "3ec943cc-08ef-4291-b8a8-0465aec93914",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9ae54770-f4eb-4183-9036-203bd0de9586",
          "status": "OK",
          "code": 200,
          "responseTime": 1437,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38447b82-e4b1-49e1-9667-b6b974711be4",
        "cursor": {
          "ref": "1ffe68d4-d082-489e-81c2-0f6db15dadb2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6e5d1874-5cc7-4806-acc0-6a9d81a48dee"
        },
        "item": {
          "id": "38447b82-e4b1-49e1-9667-b6b974711be4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d70ece7a-0db4-44a3-90cc-2906ad3b353c",
          "status": "OK",
          "code": 200,
          "responseTime": 1499,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "84099d60-2ece-481b-bf2f-e5c8a8ffaf0d",
        "cursor": {
          "ref": "e134c3ec-c18b-4e5f-abd2-c0e54c61ff46",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "98a8f97a-4bae-47b1-ad0e-905ed1945395"
        },
        "item": {
          "id": "84099d60-2ece-481b-bf2f-e5c8a8ffaf0d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "225196c2-cf7e-4857-8134-b3b5e7145883",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84099d60-2ece-481b-bf2f-e5c8a8ffaf0d",
        "cursor": {
          "ref": "e134c3ec-c18b-4e5f-abd2-c0e54c61ff46",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "98a8f97a-4bae-47b1-ad0e-905ed1945395"
        },
        "item": {
          "id": "84099d60-2ece-481b-bf2f-e5c8a8ffaf0d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "225196c2-cf7e-4857-8134-b3b5e7145883",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c18a40c-5ba2-45d8-8149-b44e202c1082",
        "cursor": {
          "ref": "7705077f-44c4-4906-96bf-3767f68ae568",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c9f4e127-e3f8-4d16-a1b1-e70bef309c8b"
        },
        "item": {
          "id": "7c18a40c-5ba2-45d8-8149-b44e202c1082",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cdd0b722-ae60-4624-b3a7-039c4517af00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d117ca8-1732-4e72-b43a-11d3fdd3009d",
        "cursor": {
          "ref": "e7123f26-22ac-4e4d-b25b-08076ebf76ab",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7686f0de-4ef9-4739-80d4-8b945161df66"
        },
        "item": {
          "id": "0d117ca8-1732-4e72-b43a-11d3fdd3009d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "86c3fa49-f76f-4402-a333-f5266fde3cf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}